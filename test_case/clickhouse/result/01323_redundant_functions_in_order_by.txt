--Query--
SELECT groupArray(x) from (SELECT number as x FROM numbers(3) ORDER BY x, exp(x))
--Result--
[([0, 1, 2],)]
+--------------------+
--Query--
SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key
--Result--
[(0, 0, '0', 0.0), (0, 1, '1', 1.0), (2, 2, '2', 2.0), (3, 3, '3', 3.0), (4, 0, '', 0.0), (5, 0, '', 0.0)]
+--------------------+
--Query--
SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key SETTINGS allow_experimental_analyzer=1
--Result--
[(0, 0, '0', 0.0), (0, 1, '1', 1.0), (2, 2, '2', 2.0), (3, 3, '3', 3.0), (4, 0, '', 0.0), (5, 0, '', 0.0)]
+--------------------+
--Query--
SELECT key, a FROM test ORDER BY key, a, exp(key + a)
--Result--
[(0, 0), (1, 1), (2, 2), (3, 3)]
+--------------------+
--Query--
SELECT key, a FROM test ORDER BY key, a, exp(key + a) SETTINGS allow_experimental_analyzer=1
--Result--
[(0, 0), (1, 1), (2, 2), (3, 3)]
+--------------------+
--Query--
SELECT key, a FROM test ORDER BY key, exp(key + a) SETTINGS allow_experimental_analyzer=1
--Result--
[(0, 0), (1, 1), (2, 2), (3, 3)]
+--------------------+
--Query--
EXPLAIN SYNTAX SELECT groupArray(x) from (SELECT number as x FROM numbers(3) ORDER BY x, exp(x))
--Result--
[('SELECT groupArray(x)',), ('FROM',), ('(',), ('    SELECT number AS x',), ('    FROM numbers(3)',), ('    ORDER BY x ASC',), (')',)]
+--------------------+
--Query--
EXPLAIN SYNTAX SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key
--Result--
[('SELECT',), ('    key,',), ('    a,',), ('    b,',), ('    c',), ('FROM',), ('(',), ('    SELECT number + 2 AS key',), ('    FROM numbers(4)',), (') AS s',), ('ALL FULL OUTER JOIN test AS t USING (key)',), ('ORDER BY',), ('    key ASC,',), ('    t.key ASC',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE run_passes=1 SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key settings allow_experimental_analyzer=1
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    key UInt64',), ('    a UInt8',), ('    b String',), ('    c Float64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 4',), ('      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('      COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 5',), ('      COLUMN id: 6, column_name: b, result_type: String, source_id: 5',), ('      COLUMN id: 7, column_name: c, result_type: Float64, source_id: 5',), ('  JOIN TREE',), ('    JOIN id: 8, strictness: ALL, kind: FULL',), ('      LEFT TABLE EXPRESSION',), ('        QUERY id: 3, alias: __table1, is_subquery: 1',), ('          PROJECTION COLUMNS',), ('            key UInt64',), ('          PROJECTION',), ('            LIST id: 9, nodes: 1',), ('              FUNCTION id: 10, function_name: plus, function_type: ordinary, result_type: UInt64',), ('                ARGUMENTS',), ('                  LIST id: 11, nodes: 2',), ('                    COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 13',), ('                    CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8',), ('          JOIN TREE',), ('            TABLE_FUNCTION id: 13, alias: __table2, table_function_name: numbers',), ('              ARGUMENTS',), ('                LIST id: 15, nodes: 1',), ('                  CONSTANT id: 16, constant_value: UInt64_4, constant_value_type: UInt8',), ('      RIGHT TABLE EXPRESSION',), ('        TABLE id: 5, alias: __table3, table_name: test.test',), ('      JOIN EXPRESSION',), ('        LIST id: 17, nodes: 1',), ('          COLUMN id: 18, column_name: key, result_type: UInt64, source_id: 8',), ('            EXPRESSION',), ('              LIST id: 19, nodes: 2',), ('                COLUMN id: 20, column_name: key, result_type: UInt64, source_id: 3',), ('                COLUMN id: 21, column_name: key, result_type: UInt64, source_id: 5',), ('  ORDER BY',), ('    LIST id: 22, nodes: 2',), ('      SORT id: 23, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 24, column_name: key, result_type: UInt64, source_id: 3',), ('      SORT id: 25, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 26, column_name: key, result_type: UInt64, source_id: 5',), ('  SETTINGS allow_experimental_analyzer=1',)]
+--------------------+
--Query--
EXPLAIN SYNTAX SELECT key, a FROM test ORDER BY key, a, exp(key + a)
--Result--
[('SELECT',), ('    key,',), ('    a',), ('FROM test',), ('ORDER BY',), ('    key ASC,',), ('    a ASC',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE run_passes=1 SELECT key, a FROM test ORDER BY key, a, exp(key + a) settings allow_experimental_analyzer=1
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    key UInt64',), ('    a UInt8',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('      COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.test',), ('  ORDER BY',), ('    LIST id: 5, nodes: 2',), ('      SORT id: 6, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('      SORT id: 7, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3',), ('  SETTINGS allow_experimental_analyzer=1',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE run_passes=1 SELECT key, a FROM test ORDER BY key, exp(key + a) settings allow_experimental_analyzer=1
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    key UInt64',), ('    a UInt8',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('      COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.test',), ('  ORDER BY',), ('    LIST id: 5, nodes: 2',), ('      SORT id: 6, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('      SORT id: 7, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          FUNCTION id: 8, function_name: exp, function_type: ordinary, result_type: Float64',), ('            ARGUMENTS',), ('              LIST id: 9, nodes: 1',), ('                FUNCTION id: 10, function_name: plus, function_type: ordinary, result_type: UInt64',), ('                  ARGUMENTS',), ('                    LIST id: 11, nodes: 2',), ('                      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('                      COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3',), ('  SETTINGS allow_experimental_analyzer=1',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE run_passes=1 SELECT key FROM test GROUP BY key ORDER BY avg(a), key settings allow_experimental_analyzer=1
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    key UInt64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 1',), ('      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.test',), ('  GROUP BY',), ('    LIST id: 4, nodes: 1',), ('      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('  ORDER BY',), ('    LIST id: 5, nodes: 2',), ('      SORT id: 6, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          FUNCTION id: 7, function_name: avg, function_type: aggregate, result_type: Float64',), ('            ARGUMENTS',), ('              LIST id: 8, nodes: 1',), ('                COLUMN id: 9, column_name: a, result_type: UInt8, source_id: 3',), ('      SORT id: 10, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3',), ('  SETTINGS allow_experimental_analyzer=1',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE run_passes=1 SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id ORDER BY t1.id, t2.id settings allow_experimental_analyzer=1
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    t1.id UInt64',), ('    t2.id UInt64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: id, result_type: UInt64, source_id: 3',), ('      COLUMN id: 4, column_name: id, result_type: UInt64, source_id: 5',), ('  JOIN TREE',), ('    JOIN id: 6, strictness: ALL, kind: INNER',), ('      LEFT TABLE EXPRESSION',), ('        TABLE id: 3, alias: __table1, table_name: test.t1',), ('      RIGHT TABLE EXPRESSION',), ('        TABLE id: 5, alias: __table2, table_name: test.t2',), ('      JOIN EXPRESSION',), ('        FUNCTION id: 7, function_name: equals, function_type: ordinary, result_type: UInt8',), ('          ARGUMENTS',), ('            LIST id: 8, nodes: 2',), ('              COLUMN id: 9, column_name: id, result_type: UInt64, source_id: 3',), ('              COLUMN id: 10, column_name: id, result_type: UInt64, source_id: 5',), ('  ORDER BY',), ('    LIST id: 11, nodes: 2',), ('      SORT id: 12, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 13, column_name: id, result_type: UInt64, source_id: 3',), ('      SORT id: 14, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          COLUMN id: 15, column_name: id, result_type: UInt64, source_id: 5',), ('  SETTINGS allow_experimental_analyzer=1',)]
+--------------------+
--Query--
SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key
--Result--
[(0, 0, '0', 0.0), (0, 1, '1', 1.0), (2, 2, '2', 2.0), (3, 3, '3', 3.0), (4, 0, '', 0.0), (5, 0, '', 0.0)]
+--------------------+
--Query--
EXPLAIN SYNTAX SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key
--Result--
[('SELECT',), ('    key,',), ('    a,',), ('    b,',), ('    c',), ('FROM',), ('(',), ('    SELECT number + 2 AS key',), ('    FROM numbers(4)',), (') AS s',), ('ALL FULL OUTER JOIN test AS t USING (key)',), ('ORDER BY',), ('    key ASC,',), ('    t.key ASC',)]
+--------------------+
