--Query--
SELECT ignore(decrypt('aes-128-ofb', 'hello there', '1111111111111111'))
--Result--
[(0,)]
+--------------------+
--Query--
SELECT decrypt('aes-128-ctr', '', '1111111111111111') == ''
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 'MySQL-compatitable mode, with key folding, no length checks, etc.'
--Result--
[('MySQL-compatitable mode, with key folding, no length checks, etc.',)]
+--------------------+
--Query--
SELECT 'aes-128-cbc' as mode, aes_decrypt_mysql(mode, aes_encrypt_mysql(mode, input, key, iv), key, iv) == input FROM encryption_test
--Result--
[('aes-128-cbc', 1), ('aes-128-cbc', 1), ('aes-128-cbc', 1)]
+--------------------+
--Query--
SELECT 'Strict mode without key folding and proper key and iv lengths checks.'
--Result--
[('Strict mode without key folding and proper key and iv lengths checks.',)]
+--------------------+
--Query--
SELECT 'aes-128-cbc' as mode, decrypt(mode, encrypt(mode, input, key16, iv), key16, iv) == input FROM encryption_test
--Result--
[('aes-128-cbc', 1), ('aes-128-cbc', 1), ('aes-128-cbc', 1)]
+--------------------+
--Query--
SELECT 'GCM mode with IV'
--Result--
[('GCM mode with IV',)]
+--------------------+
--Query--
SELECT 'GCM mode with IV and AAD'
--Result--
[('GCM mode with IV and AAD',)]
+--------------------+
--Query--
WITH     unhex('eebc1f57487f51921c0465665f8ae6d1658bb26de6f8a069a3520293a572078f') as key,     unhex('67ba0510262ae487d737ee6298f77e0c') as tag,     unhex('99aa3e68ed8173a0eed06684') as iv,     unhex('f56e87055bc32d0eeb31b2eacc2bf2a5') as plaintext,     unhex('4d23c3cec334b49bdb370c437fec78de') as aad,     unhex('f7264413a84c0e7cd536867eb9f21736') as ciphertext SELECT     hex(decrypt('aes-256-gcm', concat(ciphertext, tag), key, iv, aad)) as plaintext_actual,     plaintext_actual = hex(plaintext)
--Result--
[('F56E87055BC32D0EEB31B2EACC2BF2A5', 1)]
+--------------------+
--Query--
SELECT dt, user_id FROM decrypt_null WHERE (user_id > 0) AND (tryDecrypt('aes-256-gcm', encrypted, 'keykeykeykeykeykeykeykeykeykey02', iv) = 'value2')
--Result--
[(datetime.datetime(2022, 9, 2, 0, 0), 2)]
+--------------------+
--Query--
SELECT dt, user_id, (tryDecrypt('aes-256-gcm', encrypted, 'keykeykeykeykeykeykeykeykeykey02', iv)) as value FROM decrypt_null ORDER BY user_id
--Result--
[(datetime.datetime(2022, 8, 2, 0, 0), 1, None), (datetime.datetime(2022, 9, 2, 0, 0), 2, 'value2'), (datetime.datetime(2022, 9, 2, 0, 0, 1), 3, None)]
+--------------------+
