--Query--
WITH     arrayJoin([1, 2, 3, nan, 4, 5]) AS data,     arrayJoin([nan, 1, 2, 3, 4]) AS data2,     arrayJoin([1, 2, 3, 4, nan]) AS data3,     arrayJoin([nan, nan, nan]) AS data4,     arrayJoin([nan, 1, 2, 3, nan]) AS data5 SELECT     min(data),     min(data2),     min(data3),     min(data4),     min(data5)
--Result--
[(1.0, nan, 1.0, nan, nan)]
+--------------------+
--Query--
WITH     arrayJoin([1, 2, 3, nan, 4, 5]) AS data,     arrayJoin([nan, 1, 2, 3, 4]) AS data2,     arrayJoin([1, 2, 3, 4, nan]) AS data3,     arrayJoin([nan, nan, nan]) AS data4,     arrayJoin([nan, 1, 2, 3, nan]) AS data5 SELECT     max(data),     max(data2),     max(data3),     max(data4),     max(data5)
--Result--
[(5.0, nan, 4.0, nan, nan)]
+--------------------+
--Query--
Select max(number) from numbers(100) settings max_threads=1, max_block_size=10
--Result--
[(99,)]
+--------------------+
--Query--
Select max(-number) from numbers(100)
--Result--
[(0,)]
+--------------------+
--Query--
Select min(number) from numbers(100) settings max_threads=1, max_block_size=10
--Result--
[(0,)]
+--------------------+
--Query--
Select min(-number) from numbers(100)
--Result--
[(-99,)]
+--------------------+
--Query--
SELECT minIf(number::String, number < 10) as number from numbers(10, 1000)
--Result--
[('',)]
+--------------------+
--Query--
SELECT maxIf(number::String, number % 3), maxIf(number::String, number % 5), minIf(number::String, number % 3), minIf(number::String, number > 10) from numbers(400)
--Result--
[('98', '99', '1', '100')]
+--------------------+
--Query--
SELECT argMax(number, now()) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=100
--Result--
[(10,)]
+--------------------+
--Query--
SELECT argMaxIf(number, now() + number, number % 10 < 20) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=100
--Result--
[(10009,)]
+--------------------+
--Query--
SELECT argMax(number, number::Float64) from numbers(2029)
--Result--
[(2028,)]
+--------------------+
--Query--
SELECT argMaxIf(number, number::Float64, number > 2030) from numbers(2029)
--Result--
[(0,)]
+--------------------+
--Query--
SELECT argMin(number, now()) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=100
--Result--
[(10,)]
+--------------------+
--Query--
SELECT argMinIf(number, now() + number, number % 10 < 20) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=100
--Result--
[(10,)]
+--------------------+
--Query--
SELECT argMin(number, number::Float64) from numbers(2029)
--Result--
[(0,)]
+--------------------+
--Query--
SELECT argMinIf(number, number::Float64, number > 2030) from numbers(2029)
--Result--
[(0,)]
+--------------------+
--Query--
Select argMax((n, n), n) t, toTypeName(t) FROM (Select if(number % 3 == 0, NULL, number) as n from numbers(10))
--Result--
[((8, 8), 'Tuple(Nullable(UInt64), Nullable(UInt64))')]
+--------------------+
