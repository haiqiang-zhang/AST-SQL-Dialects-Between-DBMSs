--Query--
SYSTEM STOP MERGES t_json_sparse
--Result--
[]
+--------------------+
--Query--
SELECT subcolumns.names, subcolumns.serializations, count() FROM system.parts_columns ARRAY JOIN subcolumns WHERE database = currentDatabase()     AND table = 't_json_sparse' AND column = 'data' AND active GROUP BY subcolumns.names, subcolumns.serializations ORDER BY subcolumns.names
--Result--
[('k1', 'Default', 2), ('k2.k3', 'Default', 1)]
+--------------------+
--Query--
SELECT '============='
--Result--
[('=============',)]
+--------------------+
--Query--
SYSTEM START MERGES t_json_sparse
--Result--
[]
+--------------------+
--Query--
OPTIMIZE TABLE t_json_sparse FINAL
--Result--
[]
+--------------------+
--Query--
SELECT '============='
--Result--
[('=============',)]
+--------------------+
--Query--
DETACH TABLE t_json_sparse
--Result--
[]
+--------------------+
--Query--
ATTACH TABLE t_json_sparse
--Result--
[]
+--------------------+
--Query--
SELECT '============='
--Result--
[('=============',)]
+--------------------+
--Query--
OPTIMIZE TABLE t_json_sparse FINAL
--Result--
[]
+--------------------+
--Query--
SELECT data.k1, count(), sum(data.k2.k3) FROM t_json_sparse GROUP BY data.k1 ORDER BY data.k1
--Result--
[(1, 1, 4), (2, 400000, 0)]
+--------------------+
