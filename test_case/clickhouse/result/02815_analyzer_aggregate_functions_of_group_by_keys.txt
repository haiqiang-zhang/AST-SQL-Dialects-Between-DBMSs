--Query--
SELECT 'set optimize_aggregators_of_group_by_keys = 1'
--Result--
[('set optimize_aggregators_of_group_by_keys = 1',)]
+--------------------+
--Query--
SELECT min(number % 2) AS a, max(number % 3) AS b FROM numbers(10000000) GROUP BY number % 2, number % 3 ORDER BY a, b
--Result--
[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2)]
+--------------------+
--Query--
SELECT foo FROM (SELECT anyLast(number) AS foo FROM numbers(1) GROUP BY number)
--Result--
[(0,)]
+--------------------+
--Query--
SELECT anyLast(number) FROM numbers(1) GROUP BY number
--Result--
[(0,)]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT min(number % 2) AS a, max(number % 3) AS b FROM numbers(10000000) GROUP BY number % 2, number % 3 ORDER BY a, b
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a UInt8',), ('    b UInt8',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      FUNCTION id: 2, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('        ARGUMENTS',), ('          LIST id: 3, nodes: 2',), ('            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('            CONSTANT id: 6, constant_value: UInt64_2, constant_value_type: UInt8',), ('      FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('        ARGUMENTS',), ('          LIST id: 8, nodes: 2',), ('            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('            CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8',), ('  JOIN TREE',), ('    TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers',), ('      ARGUMENTS',), ('        LIST id: 10, nodes: 1',), ('          CONSTANT id: 11, constant_value: UInt64_10000000, constant_value_type: UInt32',), ('  GROUP BY',), ('    LIST id: 12, nodes: 2',), ('      FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('        ARGUMENTS',), ('          LIST id: 14, nodes: 2',), ('            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('            CONSTANT id: 15, constant_value: UInt64_2, constant_value_type: UInt8',), ('      FUNCTION id: 16, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('        ARGUMENTS',), ('          LIST id: 17, nodes: 2',), ('            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('            CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8',), ('  ORDER BY',), ('    LIST id: 19, nodes: 2',), ('      SORT id: 20, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          FUNCTION id: 2, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('            ARGUMENTS',), ('              LIST id: 3, nodes: 2',), ('                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('                CONSTANT id: 6, constant_value: UInt64_2, constant_value_type: UInt8',), ('      SORT id: 21, sort_direction: ASCENDING, with_fill: 0',), ('        EXPRESSION',), ('          FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('            ARGUMENTS',), ('              LIST id: 8, nodes: 2',), ('                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('                CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT foo FROM (SELECT anyLast(number) AS foo FROM numbers(1) GROUP BY number)
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    foo UInt64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 1',), ('      COLUMN id: 2, column_name: foo, result_type: UInt64, source_id: 3',), ('  JOIN TREE',), ('    QUERY id: 3, alias: __table1, is_subquery: 1',), ('      PROJECTION COLUMNS',), ('        foo UInt64',), ('      PROJECTION',), ('        LIST id: 4, nodes: 1',), ('          COLUMN id: 5, column_name: number, result_type: UInt64, source_id: 6',), ('      JOIN TREE',), ('        TABLE_FUNCTION id: 6, alias: __table2, table_function_name: numbers',), ('          ARGUMENTS',), ('            LIST id: 7, nodes: 1',), ('              CONSTANT id: 8, constant_value: UInt64_1, constant_value_type: UInt8',), ('      GROUP BY',), ('        LIST id: 9, nodes: 1',), ('          COLUMN id: 5, column_name: number, result_type: UInt64, source_id: 6',)]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT min(number) OVER (PARTITION BY number % 2) FROM numbers(3) GROUP BY number
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    min(number) OVER (PARTITION BY modulo(number, 2)) UInt64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 1',), ('      FUNCTION id: 2, function_name: min, function_type: window, result_type: UInt64',), ('        ARGUMENTS',), ('          LIST id: 3, nodes: 1',), ('            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('        WINDOW',), ('          WINDOW id: 6, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current',), ('            PARTITION BY',), ('              LIST id: 7, nodes: 1',), ('                FUNCTION id: 8, function_name: modulo, function_type: ordinary, result_type: UInt8',), ('                  ARGUMENTS',), ('                    LIST id: 9, nodes: 2',), ('                      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',), ('                      CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8',), ('  JOIN TREE',), ('    TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers',), ('      ARGUMENTS',), ('        LIST id: 11, nodes: 1',), ('          CONSTANT id: 12, constant_value: UInt64_3, constant_value_type: UInt8',), ('  GROUP BY',), ('    LIST id: 13, nodes: 1',), ('      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5',)]
+--------------------+
--Query--
SELECT 'set optimize_aggregators_of_group_by_keys = 0'
--Result--
[('set optimize_aggregators_of_group_by_keys = 0',)]
+--------------------+
--Query--
SELECT foo FROM (SELECT anyLast(number) AS foo FROM numbers(1) GROUP BY number)
--Result--
[(0,)]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT foo FROM (SELECT anyLast(number) AS foo FROM numbers(1) GROUP BY number)
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    foo UInt64',), ('  PROJECTION',), ('    LIST id: 1, nodes: 1',), ('      COLUMN id: 2, column_name: foo, result_type: UInt64, source_id: 3',), ('  JOIN TREE',), ('    QUERY id: 3, alias: __table1, is_subquery: 1',), ('      PROJECTION COLUMNS',), ('        foo UInt64',), ('      PROJECTION',), ('        LIST id: 4, nodes: 1',), ('          FUNCTION id: 5, function_name: anyLast, function_type: aggregate, result_type: UInt64',), ('            ARGUMENTS',), ('              LIST id: 6, nodes: 1',), ('                COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8',), ('      JOIN TREE',), ('        TABLE_FUNCTION id: 8, alias: __table2, table_function_name: numbers',), ('          ARGUMENTS',), ('            LIST id: 9, nodes: 1',), ('              CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8',), ('      GROUP BY',), ('        LIST id: 11, nodes: 1',), ('          COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8',)]
+--------------------+
