--Query--
SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 3 = a OR 1 = a
--Result--
[(1, 'test'), (3, 'another')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 3 = a OR 1 = a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: in, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          COLUMN id: 7, column_name: a, result_type: Int32, source_id: 3',), ('          CONSTANT id: 8, constant_value: Tuple_(UInt64_1, UInt64_3), constant_value_type: Tuple(UInt8, UInt8)',)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 1 = a
--Result--
[(1, 'test')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 1 = a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: equals, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          COLUMN id: 7, column_name: a, result_type: Int32, source_id: 3',), ('          CONSTANT id: 8, constant_value: UInt64_1, constant_value_type: UInt8',)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE a = 1 AND 2 = a
--Result--
[]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 1 AND 2 = a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    CONSTANT id: 5, constant_value: UInt64_0, constant_value_type: UInt8',)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE 3 = a AND b = 'another' AND a = 3
--Result--
[(3, 'another')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 3 AND b = 'another' AND a = 3
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: and, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          FUNCTION id: 7, function_name: equals, function_type: ordinary, result_type: UInt8',), ('            ARGUMENTS',), ('              LIST id: 8, nodes: 2',), ('                COLUMN id: 9, column_name: a, result_type: Int32, source_id: 3',), ('                CONSTANT id: 10, constant_value: UInt64_3, constant_value_type: UInt8',), ('          FUNCTION id: 11, function_name: equals, function_type: ordinary, result_type: LowCardinality(UInt8)',), ('            ARGUMENTS',), ('              LIST id: 12, nodes: 2',), ('                COLUMN id: 13, column_name: b, result_type: LowCardinality(String), source_id: 3',), ("                CONSTANT id: 14, constant_value: 'another', constant_value_type: String",)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE a = 2 AND 2 = a
--Result--
[(2, 'test2')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 2 AND 2 = a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: equals, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          COLUMN id: 7, column_name: a, result_type: Int32, source_id: 3',), ('          CONSTANT id: 8, constant_value: UInt64_2, constant_value_type: UInt8',)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE a <> 1 AND 3 <> a AND 1 <> a
--Result--
[(2, 'test2')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a <> 1 AND 3 <> a AND 1 <> a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: notIn, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          COLUMN id: 7, column_name: a, result_type: Int32, source_id: 3',), ('          CONSTANT id: 8, constant_value: Tuple_(UInt64_1, UInt64_3), constant_value_type: Tuple(UInt8, UInt8)',)]
+--------------------+
--Query--
SELECT * FROM 02668_logical_optimizer WHERE a <> 1 AND 1 <> a
--Result--
[(2, 'test2'), (3, 'another')]
+--------------------+
--Query--
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a <> 1 AND 1 <> a
--Result--
[('QUERY id: 0',), ('  PROJECTION COLUMNS',), ('    a Int32',), ('    b LowCardinality(String)',), ('  PROJECTION',), ('    LIST id: 1, nodes: 2',), ('      COLUMN id: 2, column_name: a, result_type: Int32, source_id: 3',), ('      COLUMN id: 4, column_name: b, result_type: LowCardinality(String), source_id: 3',), ('  JOIN TREE',), ('    TABLE id: 3, alias: __table1, table_name: test.02668_logical_optimizer',), ('  WHERE',), ('    FUNCTION id: 5, function_name: notEquals, function_type: ordinary, result_type: UInt8',), ('      ARGUMENTS',), ('        LIST id: 6, nodes: 2',), ('          COLUMN id: 7, column_name: a, result_type: Int32, source_id: 3',), ('          CONSTANT id: 8, constant_value: UInt64_1, constant_value_type: UInt8',)]
+--------------------+
--Query--
SELECT a FROM 02668_logical_optimizer WHERE (b = 'test') AND ('test' = b)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT (k = 3) OR ( (k = 1) OR (k = 2) OR ( (NULL OR 1) = k ) ) FROM ( SELECT materialize(1) AS k )
--Result--
[(1,)]
+--------------------+
