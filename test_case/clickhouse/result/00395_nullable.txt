--Query--
SELECT '----- NULL value -----'
--Result--
[('----- NULL value -----',)]
+--------------------+
--Query--
SELECT NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT 1 + NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT abs(NULL)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT NULL + NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT '----- MergeTree engine -----'
--Result--
[('----- MergeTree engine -----',)]
+--------------------+
--Query--
SELECT * FROM test1_00395 ORDER BY col1,col2,col3,col4,col5,col6,col7,col8 ASC
--Result--
[(1, 1, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [1], ['a'], [None], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [None], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', None, [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, None, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1))]
+--------------------+
--Query--
SELECT '----- Memory engine -----'
--Result--
[('----- Memory engine -----',)]
+--------------------+
--Query--
SELECT * FROM test1_00395 ORDER BY col1,col2,col3,col4,col5,col6,col7,col8 ASC
--Result--
[(1, 1, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [1], ['a'], [None], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [None], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', None, [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, None, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1))]
+--------------------+
--Query--
SELECT '----- TinyLog engine -----'
--Result--
[('----- TinyLog engine -----',)]
+--------------------+
--Query--
SELECT * FROM test1_00395 ORDER BY col1,col2,col3,col4,col5,col6,col7,col8 ASC
--Result--
[(1, 1, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [1], ['a'], [None], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [None], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', None, [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, None, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1))]
+--------------------+
--Query--
SELECT '----- Log engine -----'
--Result--
[('----- Log engine -----',)]
+--------------------+
--Query--
SELECT * FROM test1_00395 ORDER BY col1,col2,col3,col4,col5,col6,col7,col8 ASC
--Result--
[(1, 1, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [1], ['a'], [None], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [None], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', None, [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, None, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1))]
+--------------------+
--Query--
SELECT '----- StripeLog engine -----'
--Result--
[('----- StripeLog engine -----',)]
+--------------------+
--Query--
SELECT * FROM test1_00395 ORDER BY col1,col2,col3,col4,col5,col6,col7,col8 ASC
--Result--
[(1, 1, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [1], ['a'], [None], datetime.date(2000, 1, 1)), (1, 1, 'a', 'a', [1], [None], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, 1, 'a', None, [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1)), (1, None, 'a', 'a', [1], [1], ['a'], ['a'], datetime.date(2000, 1, 1))]
+--------------------+
--Query--
SELECT '----- Insert with expression -----'
--Result--
[('----- Insert with expression -----',)]
+--------------------+
--Query--
SELECT col1 FROM test1_00395 ORDER BY col1 ASC
--Result--
[([2],)]
+--------------------+
--Query--
SELECT '----- Insert. Source and target columns have same types up to nullability. -----'
--Result--
[('----- Insert. Source and target columns have same types up to nullability. -----',)]
+--------------------+
--Query--
SELECT col1,col2 FROM test2 ORDER BY col1,col2 ASC
--Result--
[(2, 7), (4, 3), (5, 1), (6, 9), (8, 2)]
+--------------------+
--Query--
SELECT '----- Apply functions and aggregate functions on columns that may contain null values -----'
--Result--
[('----- Apply functions and aggregate functions on columns that may contain null values -----',)]
+--------------------+
--Query--
SELECT col1, col2, col1 + col2, col1 * 7 FROM test1_00395 ORDER BY col1,col2 ASC
--Result--
[(2, 7, 9, 14), (5, 1, 6, 35), (9, None, None, 63), (42, 42, 84, 294), (None, 6, None, None), (None, None, None, None)]
+--------------------+
--Query--
SELECT sum(col1) FROM test1_00395
--Result--
[(58,)]
+--------------------+
--Query--
SELECT '----- isNull, isNotNull -----'
--Result--
[('----- isNull, isNotNull -----',)]
+--------------------+
--Query--
SELECT col1, col2, isNull(col1), isNotNull(col2) FROM test1_00395 ORDER BY col1,col2 ASC
--Result--
[(2, 7, 0, 1), (5, 1, 0, 1), (9, None, 0, 0), (42, 42, 0, 1), (None, 6, 1, 1), (None, None, 1, 0)]
+--------------------+
--Query--
SELECT '----- ifNull, nullIf -----'
--Result--
[('----- ifNull, nullIf -----',)]
+--------------------+
--Query--
SELECT col1, col2, ifNull(col1,col2) FROM test1_00395 ORDER BY col1,col2 ASC
--Result--
[(2, 7, 2), (5, 1, 5), (9, None, 9), (42, 42, 42), (None, 6, 6), (None, None, None)]
+--------------------+
--Query--
SELECT col1, col2, nullIf(col1,col2) FROM test1_00395 ORDER BY col1,col2 ASC
--Result--
[(2, 7, 2), (5, 1, 5), (9, None, 9), (42, 42, None), (None, 6, None), (None, None, None)]
+--------------------+
--Query--
SELECT '----- coalesce -----'
--Result--
[('----- coalesce -----',)]
+--------------------+
--Query--
SELECT coalesce(NULL)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT '----- assumeNotNull -----'
--Result--
[('----- assumeNotNull -----',)]
+--------------------+
--Query--
SELECT res FROM (SELECT col1, assumeNotNull(col1) AS res FROM test1_00395) WHERE col1 IS NOT NULL ORDER BY res ASC
--Result--
[(2,), (5,), (9,), (42,)]
+--------------------+
--Query--
SELECT '----- IS NULL, IS NOT NULL -----'
--Result--
[('----- IS NULL, IS NOT NULL -----',)]
+--------------------+
--Query--
SELECT col1 FROM test1_00395 WHERE col1 IS NOT NULL ORDER BY col1 ASC
--Result--
[(2,), (5,), (9,), (42,)]
+--------------------+
--Query--
SELECT col1 FROM test1_00395 WHERE col1 IS NULL
--Result--
[(None,), (None,)]
+--------------------+
--Query--
SELECT '----- if -----'
--Result--
[('----- if -----',)]
+--------------------+
--Query--
SELECT col1, if(col1 IN ('a' ,'b'), 1, 0) AS t, toTypeName(t) FROM test1_00395
--Result--
[('a', 1, 'UInt8'), ('b', 1, 'UInt8'), ('c', 0, 'UInt8'), (None, 0, 'UInt8')]
+--------------------+
--Query--
SELECT '----- case when -----'
--Result--
[('----- case when -----',)]
+--------------------+
--Query--
SELECT '----- multiIf -----'
--Result--
[('----- multiIf -----',)]
+--------------------+
--Query--
SELECT multiIf(1, NULL, 1, 3, 4)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT '----- Array functions -----'
--Result--
[('----- Array functions -----',)]
+--------------------+
--Query--
SELECT [NULL]
--Result--
[([None],)]
+--------------------+
--Query--
SELECT [NULL,NULL,NULL]
--Result--
[([None, None, None],)]
+--------------------+
--Query--
SELECT [NULL,2,3]
--Result--
[([None, 2, 3],)]
+--------------------+
--Query--
SELECT [1,NULL,3]
--Result--
[([1, None, 3],)]
+--------------------+
--Query--
SELECT [1,2,NULL]
--Result--
[([1, 2, None],)]
+--------------------+
--Query--
SELECT [NULL,'b','c']
--Result--
[([None, 'b', 'c'],)]
+--------------------+
--Query--
SELECT ['a',NULL,'c']
--Result--
[(['a', None, 'c'],)]
+--------------------+
--Query--
SELECT ['a','b',NULL]
--Result--
[(['a', 'b', None],)]
+--------------------+
--Query--
SELECT '----- arrayElement -----'
--Result--
[('----- arrayElement -----',)]
+--------------------+
--Query--
SELECT '----- constant arrays -----'
--Result--
[('----- constant arrays -----',)]
+--------------------+
--Query--
SELECT arrayElement([1,NULL,2,3], 1)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT '----- variable arrays -----'
--Result--
[('----- variable arrays -----',)]
+--------------------+
--Query--
SELECT '----- has -----'
--Result--
[('----- has -----',)]
+--------------------+
--Query--
SELECT '----- constant arrays -----'
--Result--
[('----- constant arrays -----',)]
+--------------------+
--Query--
SELECT has([1,NULL,2,3], 1)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT '----- variable arrays -----'
--Result--
[('----- variable arrays -----',)]
+--------------------+
--Query--
SELECT '----- Aggregation -----'
--Result--
[('----- Aggregation -----',)]
+--------------------+
--Query--
SELECT col1, col2, count() FROM test1_00395 GROUP BY col1, col2 ORDER BY col1, col2
--Result--
[('A', 0, 2), ('A', 1, 2), ('B', 1, 4), ('C', 1, 1), ('C', None, 3), (None, 1, 1), (None, None, 1)]
+--------------------+
