--Query--
SHOW CREATE TABLE prop_table
--Result--
[("CREATE TABLE test.prop_table\n(\n    `column_default` UInt64 DEFAULT 42,\n    `column_materialized` UInt64 MATERIALIZED column_default * 42,\n    `column_alias` UInt64 ALIAS column_default + 1,\n    `column_codec` String CODEC(ZSTD(10)),\n    `column_comment` Date COMMENT 'Some comment',\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192",)]
+--------------------+
--Query--
SYSTEM STOP TTL MERGES prop_table
--Result--
[]
+--------------------+
--Query--
SELECT column_default, column_materialized, column_alias, column_codec, column_comment, column_ttl FROM prop_table
--Result--
[(42, 1764, 43, 'str', datetime.date(2019, 10, 1), 1)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64 DEFAULT 42,\n    `column_materialized` UInt64 MATERIALIZED column_default * 42,\n    `column_alias` UInt64 ALIAS column_default + 1,\n    `column_codec` String CODEC(ZSTD(10)),\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64 DEFAULT 42,\n    `column_materialized` UInt64 MATERIALIZED column_default * 42,\n    `column_alias` UInt64 ALIAS column_default + 1,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SELECT column_default, column_materialized, column_alias, column_codec, column_comment, column_ttl FROM prop_table
--Result--
[(42, 1764, 0, 'str', datetime.date(2019, 10, 1), 1)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64 DEFAULT 42,\n    `column_materialized` UInt64 MATERIALIZED column_default * 42,\n    `column_alias` UInt64,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SELECT column_default, column_materialized, column_alias, column_codec, column_comment, column_ttl FROM prop_table ORDER BY column_ttl
--Result--
[(42, 1764, 0, 'str', datetime.date(2019, 10, 1), 1), (42, 1764, 33, 'trs', datetime.date(2020, 1, 1), 2)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64 DEFAULT 42,\n    `column_materialized` UInt64,\n    `column_alias` UInt64,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SELECT column_default, column_materialized, column_alias, column_codec, column_comment, column_ttl FROM prop_table ORDER BY column_ttl
--Result--
[(42, 1764, 0, 'str', datetime.date(2019, 10, 1), 1), (42, 1764, 33, 'trs', datetime.date(2020, 1, 1), 2), (42, 11, 44, 'rts', datetime.date(2020, 2, 1), 3)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64,\n    `column_materialized` UInt64,\n    `column_alias` UInt64,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL column_comment + toIntervalMonth(2)\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SELECT column_default, column_materialized, column_alias, column_codec, column_comment, column_ttl FROM prop_table ORDER BY column_ttl
--Result--
[(42, 1764, 0, 'str', datetime.date(2019, 10, 1), 1), (42, 1764, 33, 'trs', datetime.date(2020, 1, 1), 2), (42, 11, 44, 'rts', datetime.date(2020, 2, 1), 3), (0, 22, 55, 'tsr', datetime.date(2020, 3, 1), 4)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64,\n    `column_materialized` UInt64,\n    `column_alias` UInt64,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64 TTL column_comment + toIntervalMonth(1)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SHOW CREATE TABLE prop_table
--Result--
[('CREATE TABLE test.prop_table\n(\n    `column_default` UInt64,\n    `column_materialized` UInt64,\n    `column_alias` UInt64,\n    `column_codec` String,\n    `column_comment` Date,\n    `column_ttl` UInt64\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192',)]
+--------------------+
--Query--
SYSTEM START TTL MERGES prop_table
--Result--
[]
+--------------------+
--Query--
OPTIMIZE TABLE prop_table FINAL
--Result--
[]
+--------------------+
--Query--
SELECT COUNT() FROM prop_table
--Result--
[(4,)]
+--------------------+
