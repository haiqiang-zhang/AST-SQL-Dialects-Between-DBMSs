--Query--
SELECT oid, prsname FROM pg_ts_parser WHERE prsnamespace = 0 OR prsstart = 0 OR prstoken = 0 OR prsend = 0 OR       prslextype = 0
--Result--
[]
+--------------------+
--Query--
SELECT oid, dictname FROM pg_ts_dict WHERE dictnamespace = 0 OR dictowner = 0 OR dicttemplate = 0
--Result--
[]
+--------------------+
--Query--
SELECT oid, tmplname FROM pg_ts_template WHERE tmplnamespace = 0 OR tmpllexize = 0
--Result--
[]
+--------------------+
--Query--
SELECT oid, cfgname FROM pg_ts_config WHERE cfgnamespace = 0 OR cfgowner = 0 OR cfgparser = 0
--Result--
[]
+--------------------+
--Query--
SELECT mapcfg, maptokentype, mapseqno FROM pg_ts_config_map WHERE mapcfg = 0 OR mapdict = 0
--Result--
[]
+--------------------+
--Query--
SELECT * FROM   ( SELECT oid AS cfgid, (ts_token_type(cfgparser)).tokid AS tokid     FROM pg_ts_config ) AS tt RIGHT JOIN pg_ts_config_map AS m     ON (tt.cfgid=m.mapcfg AND tt.tokid=m.maptokentype) WHERE     tt.cfgid IS NULL OR tt.tokid IS NULL
--Result--
[]
+--------------------+
--Query--
ANALYZE test_tsvector
--Result--
[]
+--------------------+
--Query--
SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'
--Result--
[(0,)]
+--------------------+
--Query--
explain (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'
--Result--
[('Aggregate',), ('  ->  Index Scan using wowidx on test_tsvector',), ("        Index Cond: (a @@ '''wr'' | ''qh'''::tsquery)",)]
+--------------------+
--Query--
SELECT * FROM ts_stat('SELECT a FROM test_tsvector') ORDER BY ndoc DESC, nentry DESC, word LIMIT 10
--Result--
[('DFG', 1, 4), ('FGH', 1, 1)]
+--------------------+
--Query--
SELECT ts_lexize('english_stem', 'skies')
--Result--
[(['sky'],)]
+--------------------+
--Query--
SELECT * FROM ts_token_type('default')
--Result--
[(1, 'asciiword', 'Word, all ASCII'), (2, 'word', 'Word, all letters'), (3, 'numword', 'Word, letters and digits'), (4, 'email', 'Email address'), (5, 'url', 'URL'), (6, 'host', 'Host'), (7, 'sfloat', 'Scientific notation'), (8, 'version', 'Version number'), (9, 'hword_numpart', 'Hyphenated word part, letters and digits'), (10, 'hword_part', 'Hyphenated word part, all letters'), (11, 'hword_asciipart', 'Hyphenated word part, all ASCII'), (12, 'blank', 'Space symbols'), (13, 'tag', 'XML tag'), (14, 'protocol', 'Protocol head'), (15, 'numhword', 'Hyphenated word, letters and digits'), (16, 'asciihword', 'Hyphenated word, all ASCII'), (17, 'hword', 'Hyphenated word, all letters'), (18, 'url_path', 'URL path'), (19, 'file', 'File or path name'), (20, 'float', 'Decimal notation'), (21, 'int', 'Signed integer'), (22, 'uint', 'Unsigned integer'), (23, 'entity', 'XML entity')]
+--------------------+
--Query--
SELECT * FROM ts_parse('default', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href="qwe<qwe>"> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty')
--Result--
[(22, '345'), (12, ' '), (1, 'qwe'), (12, '@'), (19, 'efd.r'), (12, " ' "), (14, 'http://'), (6, 'www.com'), (12, '/ '), (14, 'http://'), (5, 'aew.werc.ewr/?ad=qwe&dw'), (6, 'aew.werc.ewr'), (18, '/?ad=qwe&dw'), (12, ' '), (5, '1aew.werc.ewr/?ad=qwe&dw'), (6, '1aew.werc.ewr'), (18, '/?ad=qwe&dw'), (12, ' '), (6, '2aew.werc.ewr'), (12, ' '), (14, 'http://'), (5, '3aew.werc.ewr/?ad=qwe&dw'), (6, '3aew.werc.ewr'), (18, '/?ad=qwe&dw'), (12, ' '), (14, 'http://'), (6, '4aew.werc.ewr'), (12, ' '), (14, 'http://'), (5, '5aew.werc.ewr:8100/?'), (6, '5aew.werc.ewr:8100'), (18, '/?'), (12, '  '), (1, 'ad'), (12, '='), (1, 'qwe'), (12, '&'), (1, 'dw'), (12, ' '), (5, '6aew.werc.ewr:8100/?ad=qwe&dw'), (6, '6aew.werc.ewr:8100'), (18, '/?ad=qwe&dw'), (12, ' '), (5, '7aew.werc.ewr:8100/?ad=qwe&dw=%20%32'), (6, '7aew.werc.ewr:8100'), (18, '/?ad=qwe&dw=%20%32'), (12, ' '), (7, '+4.0e-10'), (12, ' '), (1, 'qwe'), (12, ' '), (1, 'qwe'), (12, ' '), (1, 'qwqwe'), (12, ' '), (20, '234.435'), (12, ' '), (22, '455'), (12, ' '), (20, '5.005'), (12, ' '), (4, 'teodor@stack.net'), (12, ' '), (4, 'teodor@123-stack.net'), (12, ' '), (4, '123_teodor@stack.net'), (12, ' '), (4, '123-teodor@stack.net'), (12, ' '), (16, 'qwe-wer'), (11, 'qwe'), (12, '-'), (11, 'wer'), (12, ' '), (1, 'asdf'), (12, ' '), (13, '<fr>'), (1, 'qwer'), (12, ' '), (1, 'jf'), (12, ' '), (1, 'sdjk'), (12, '<'), (1, 'we'), (12, ' '), (1, 'hjwer'), (12, ' '), (13, '<werrwe>'), (12, ' '), (3, 'ewr1'), (12, '> '), (3, 'ewri2'), (12, ' '), (13, '<a href="qwe<qwe>">'), (12, '\n'), (19, '/usr/local/fff'), (12, ' '), (19, '/awdf/dwqe/4325'), (12, ' '), (19, 'rewt/ewr'), (12, ' '), (1, 'wefjn'), (12, ' '), (19, '/wqe-324/ewr'), (12, ' '), (19, 'gist.h'), (12, ' '), (19, 'gist.h.c'), (12, ' '), (19, 'gist.c'), (12, '. '), (1, 'readline'), (12, ' '), (20, '4.2'), (12, ' '), (20, '4.2'), (12, '. '), (20, '4.2'), (12, ', '), (1, 'readline'), (20, '-4.2'), (12, ' '), (1, 'readline'), (20, '-4.2'), (12, '. '), (22, '234'), (12, '\n'), (12, '<'), (1, 'i'), (12, ' '), (13, '<b>'), (12, ' '), (1, 'wow'), (12, '  '), (12, '< '), (1, 'jqw'), (12, ' '), (12, '<> '), (1, 'qwerty')]
+--------------------+
--Query--
SELECT to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href="qwe<qwe>"> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty')
--Result--
[("'+4.0e-10':28 '-4.2':63,65 '/?':18 '/?ad=qwe&dw':7,10,14,24 '/?ad=qwe&dw=%20%32':27 '/awdf/dwqe/4325':51 '/usr/local/fff':50 '/wqe-324/ewr':54 '123-teodor@stack.net':38 '123_teodor@stack.net':37 '1aew.werc.ewr':9 '1aew.werc.ewr/?ad=qwe&dw':8 '234':66 '234.435':32 '2aew.werc.ewr':11 '345':1 '3aew.werc.ewr':13 '3aew.werc.ewr/?ad=qwe&dw':12 '4.2':59,60,61 '455':33 '4aew.werc.ewr':15 '5.005':34 '5aew.werc.ewr:8100':17 '5aew.werc.ewr:8100/?':16 '6aew.werc.ewr:8100':23 '6aew.werc.ewr:8100/?ad=qwe&dw':22 '7aew.werc.ewr:8100':26 '7aew.werc.ewr:8100/?ad=qwe&dw=%20%32':25 'ad':19 'aew.werc.ewr':6 'aew.werc.ewr/?ad=qwe&dw':5 'asdf':42 'dw':21 'efd.r':3 'ewr1':48 'ewri2':49 'gist.c':57 'gist.h':55 'gist.h.c':56 'hjwer':47 'jf':44 'jqw':69 'qwe':2,20,29,30,40 'qwe-wer':39 'qwer':43 'qwerti':70 'qwqwe':31 'readlin':58,62,64 'rewt/ewr':52 'sdjk':45 'teodor@123-stack.net':36 'teodor@stack.net':35 'wefjn':53 'wer':41 'wow':68 'www.com':4",)]
+--------------------+
--Query--
SELECT length(to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href="qwe<qwe>"> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty'))
--Result--
[(56,)]
+--------------------+
--Query--
SELECT * from ts_debug('english', 'http://www.harewoodsolutions.co.uk/press.aspx</span>')
--Result--
[('protocol', 'Protocol head', 'http://', '{}', None, None), ('url', 'URL', 'www.harewoodsolutions.co.uk/press.aspx', '{simple}', 'simple', ['www.harewoodsolutions.co.uk/press.aspx']), ('host', 'Host', 'www.harewoodsolutions.co.uk', '{simple}', 'simple', ['www.harewoodsolutions.co.uk']), ('url_path', 'URL path', '/press.aspx', '{simple}', 'simple', ['/press.aspx']), ('tag', 'XML tag', '</span>', '{}', None, None)]
+--------------------+
--Query--
SELECT to_tsquery('english', 'qwe & sKies ')
--Result--
[("'qwe' & 'sky'",)]
+--------------------+
--Query--
SELECT plainto_tsquery('english', 'the and z 1))& fghj')
--Result--
[("'z' & '1' & 'fghj'",)]
+--------------------+
--Query--
SELECT plainto_tsquery('english', 'foo bar') && plainto_tsquery('english', 'asd')
--Result--
[("'foo' & 'bar' & 'asd'",)]
+--------------------+
--Query--
SELECT plainto_tsquery('english', 'foo bar') || plainto_tsquery('english', 'asd fg')
--Result--
[("'foo' & 'bar' | 'asd' & 'fg'",)]
+--------------------+
--Query--
SELECT plainto_tsquery('english', 'foo bar') && 'asd | fg'
--Result--
[("'foo' & 'bar' & ( 'asd' | 'fg' )",)]
+--------------------+
--Query--
SELECT phraseto_tsquery('english', 'PostgreSQL can be extended by the user in many ways')
--Result--
[("'postgresql' <3> 'extend' <3> 'user' <2> 'mani' <-> 'way'",)]
+--------------------+
--Query--
SELECT ts_rank_cd(strip(to_tsvector('both stripped')),                   to_tsquery('both & stripped'))
--Result--
[(0.0,)]
+--------------------+
--Query--
SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english','Lorem') && phraseto_tsquery('english','ullamcorper urna'), 'MaxWords=100, MinWords=1')
--Result--
[('<b>Lorem</b> ipsum <b>urna</b>.  Nullam nullam <b>ullamcorper</b> <b>urna</b>',)]
+--------------------+
--Query--
SELECT ts_rewrite('foo & bar & qq & new & york',  'new & york'::tsquery, 'big & apple | nyc | new & york & city')
--Result--
[("'foo' & 'bar' & 'qq' & ( 'city' & 'new' & 'york' | 'nyc' | 'big' & 'apple' )",)]
+--------------------+
--Query--
SELECT to_tsvector('foo bar') @@   ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz')
--Result--
[(False,)]
+--------------------+
--Query--
SELECT to_tsvector('bar baz') @@   ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz')
--Result--
[(True,)]
+--------------------+
--Query--
explain (costs off) select * from test_tsquery, to_tsquery('new') q where txtsample @@ q
--Result--
[('Nested Loop',), ('  Join Filter: (test_tsquery.txtsample @@ q.q)',), ('  ->  Function Scan on to_tsquery q',), ('  ->  Seq Scan on test_tsquery',)]
+--------------------+
--Query--
explain (costs off) select * from test_tsquery, to_tsquery('english', 'new') q where txtsample @@ q
--Result--
[('Seq Scan on test_tsquery',), ("  Filter: (txtsample @@ '''new'''::tsquery)",)]
+--------------------+
--Query--
select * from pendtest where 'ipsu:*'::tsquery @@ ts
--Result--
[("'ipsum':2 'lore':1",)]
+--------------------+
--Query--
select * from pendtest where 'ipsa:*'::tsquery @@ ts
--Result--
[("'ipsam':2 'lore':1",)]
+--------------------+
--Query--
select * from pendtest where 'ips:*'::tsquery @@ ts
--Result--
[("'ipsam':2 'lore':1",), ("'ipsum':2 'lore':1",)]
+--------------------+
--Query--
select * from pendtest where 'ipt:*'::tsquery @@ ts
--Result--
[]
+--------------------+
--Query--
select * from pendtest where 'ipi:*'::tsquery @@ ts
--Result--
[]
+--------------------+
--Query--
select * from phrase_index_test where fts @@ phraseto_tsquery('english', 'fat cat')
--Result--
[("'cat':3 'eaten':6 'fat':2 'rat':8",)]
+--------------------+
--Query--
select websearch_to_tsquery('simple', 'I have a fat:*ABCD cat')
--Result--
[("'i' & 'have' & 'a' & 'fat' & 'abcd' & 'cat'",)]
+--------------------+
--Query--
select to_tsvector('english', 'A fat cat ate a rat') @@ 	websearch_to_tsquery('english', '"a fat cat" ate a rat')
--Result--
[(True,)]
+--------------------+
--Query--
select to_tsvector('english', 'A fat grey cat ate a rat') @@ 	websearch_to_tsquery('english', '"a fat cat" ate a rat')
--Result--
[(False,)]
+--------------------+
