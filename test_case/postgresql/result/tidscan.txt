--Query--
SELECT ctid, * FROM tidscan
--Result--
[('(0,1)', 1), ('(0,2)', 2), ('(0,3)', 3)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)'
--Result--
[('Tid Scan on tidscan',), ("  TID Cond: (ctid = '(0,1)'::tid)",)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)'
--Result--
[('(0,1)', 1)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid
--Result--
[('Tid Scan on tidscan',), ("  TID Cond: ('(0,1)'::tid = ctid)",)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid
--Result--
[('(0,1)', 1)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid
--Result--
[('Tid Scan on tidscan',), ("  TID Cond: ((ctid = '(0,2)'::tid) OR ('(0,1)'::tid = ctid))",)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid
--Result--
[('(0,1)', 1), ('(0,2)', 2)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
--Result--
[('Tid Scan on tidscan',), ('  TID Cond: (ctid = ANY (\'{"(0,1)","(0,2)"}\'::tid[]))',)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
--Result--
[('(0,1)', 1), ('(0,2)', 2)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[])
--Result--
[('Seq Scan on tidscan',), ('  Filter: (ctid <> ANY (\'{"(0,1)","(0,2)"}\'::tid[]))',)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[])
--Result--
[('(0,1)', 1), ('(0,2)', 2), ('(0,3)', 3)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT ctid, * FROM tidscan WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1)
--Result--
[('Tid Scan on tidscan',), ('  TID Cond: ((ctid = ANY (\'{"(0,2)","(0,3)"}\'::tid[])) OR (ctid = \'(0,1)\'::tid))',), ('  Filter: (((id = 3) AND (ctid = ANY (\'{"(0,2)","(0,3)"}\'::tid[]))) OR ((ctid = \'(0,1)\'::tid) AND (id = 1)))',)]
+--------------------+
--Query--
SELECT ctid, * FROM tidscan WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1)
--Result--
[('(0,1)', 1), ('(0,3)', 3)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT t1.ctid, t1.*, t2.ctid, t2.* FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
--Result--
[('Nested Loop',), ('  ->  Seq Scan on tidscan t1',), ('        Filter: (id = 1)',), ('  ->  Tid Scan on tidscan t2',), ('        TID Cond: (t1.ctid = ctid)',)]
+--------------------+
--Query--
SELECT t1.ctid, t1.*, t2.ctid, t2.* FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
--Result--
[('(0,1)', 1, '(0,1)', 1)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT t1.ctid, t1.*, t2.ctid, t2.* FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
--Result--
[('Nested Loop Left Join',), ('  ->  Seq Scan on tidscan t1',), ('        Filter: (id = 1)',), ('  ->  Tid Scan on tidscan t2',), ('        TID Cond: (t1.ctid = ctid)',)]
+--------------------+
--Query--
SELECT t1.ctid, t1.*, t2.ctid, t2.* FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
--Result--
[('(0,1)', 1, '(0,1)', 1)]
+--------------------+
--Query--
DECLARE c CURSOR FOR SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
--Result--
[]
+--------------------+
--Query--
FETCH ALL FROM c
--Result--
[('(0,1)', 1), ('(0,2)', 2)]
+--------------------+
--Query--
FETCH BACKWARD 1 FROM c
--Result--
[('(0,2)', 2)]
+--------------------+
--Query--
FETCH FIRST FROM c
--Result--
[('(0,1)', 1)]
+--------------------+
--Query--
DECLARE c CURSOR FOR SELECT ctid, * FROM tidscan
--Result--
[]
+--------------------+
--Query--
FETCH NEXT FROM c
--Result--
[('(0,1)', 1)]
+--------------------+
--Query--
FETCH NEXT FROM c
--Result--
[('(0,2)', 2)]
+--------------------+
--Query--
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF) UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *
--Result--
[('Update on tidscan (actual rows=1 loops=1)',), ('  ->  Tid Scan on tidscan (actual rows=1 loops=1)',), ('        TID Cond: CURRENT OF c',)]
+--------------------+
--Query--
FETCH NEXT FROM c
--Result--
[('(0,3)', 3)]
+--------------------+
--Query--
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF) UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *
--Result--
[('Update on tidscan (actual rows=1 loops=1)',), ('  ->  Tid Scan on tidscan (actual rows=1 loops=1)',), ('        TID Cond: CURRENT OF c',)]
+--------------------+
--Query--
SELECT * FROM tidscan
--Result--
[(1,), (-2,), (-3,)]
+--------------------+
--Query--
FETCH NEXT FROM c
--Result--
[]
+--------------------+
--Query--
SELECT * FROM tidscan WHERE ctid = '(0,1)'
--Result--
[(1,)]
+--------------------+
--Query--
SELECT locktype, mode FROM pg_locks WHERE pid = pg_backend_pid() AND mode = 'SIReadLock'
--Result--
[('tuple', 'SIReadLock')]
+--------------------+
