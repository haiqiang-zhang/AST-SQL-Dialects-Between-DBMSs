--Query--
SELECT 'first line' ' - next line' 	' - third line' 	AS "Three lines to one"
--Result--
[('first line - next line - third line',)]
+--------------------+
--Query--
SELECT U&'d\0061t\+000061' AS U&"d\0061t\+000061"
--Result--
[('data',)]
+--------------------+
--Query--
SELECT U&'d!0061t\+000061' UESCAPE '!' AS U&"d*0061t\+000061" UESCAPE '*'
--Result--
[('dat\\+000061',)]
+--------------------+
--Query--
SELECT U&'a\\b' AS "a\b"
--Result--
[('a\\b',)]
+--------------------+
--Query--
SELECT U&' \' UESCAPE '!' AS "tricky"
--Result--
[(' \\',)]
+--------------------+
--Query--
SELECT 'tricky' AS U&"\" UESCAPE '!'
--Result--
[('tricky',)]
+--------------------+
--Query--
SELECT E'd\u0061t\U00000061' AS "data"
--Result--
[('data',)]
+--------------------+
--Query--
SELECT E'a\\b' AS "a\b"
--Result--
[('a\\b',)]
+--------------------+
--Query--
SELECT 'tricky' AS U&"\" UESCAPE '!'
--Result--
[('tricky',)]
+--------------------+
--Query--
SELECT pg_input_is_valid(E'\\xDeAdBeE', 'bytea')
--Result--
[(False,)]
+--------------------+
--Query--
SELECT * FROM pg_input_error_info(E'\\xDeAdBeE', 'bytea')
--Result--
[('invalid hexadecimal data: odd number of digits', None, None, '22023')]
+--------------------+
--Query--
SELECT CAST(name 'namefield' AS text) AS "text(name)"
--Result--
[('namefield',)]
+--------------------+
--Query--
SELECT CAST(name 'namefield' AS char(10)) AS "char(name)"
--Result--
[('namefield ',)]
+--------------------+
--Query--
SELECT CAST(name 'namefield' AS varchar) AS "varchar(name)"
--Result--
[('namefield',)]
+--------------------+
--Query--
SELECT TRIM(BOTH FROM '  bunch o blanks  ') = 'bunch o blanks' AS "bunch o blanks"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT TRIM(LEADING FROM '  bunch o blanks  ') = 'bunch o blanks  ' AS "bunch o blanks  "
--Result--
[(True,)]
+--------------------+
--Query--
SELECT TRIM(TRAILING FROM '  bunch o blanks  ') = '  bunch o blanks' AS "  bunch o blanks"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT TRIM(BOTH 'x' FROM 'xxxxxsome Xsxxxxx') = 'some Xs' AS "some Xs"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT SUBSTRING('1234567890' FROM 3) = '34567890' AS "34567890"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT SUBSTRING('1234567890' FROM 4 FOR 3) = '456' AS "456"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT SUBSTRING('string' FROM 2 FOR 2147483646) AS "tring"
--Result--
[('tring',)]
+--------------------+
--Query--
SELECT SUBSTRING('string' FROM -10 FOR 2147483646) AS "string"
--Result--
[('string',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a#"(b_d)#"%' ESCAPE '#') AS "bcd"
--Result--
[('bcd',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' FROM 'a#"(b_d)#"%' FOR '#') AS "bcd"
--Result--
[('bcd',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR '#"(b_d)#"%' ESCAPE '#') IS NULL AS "True"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a#"%#"g' ESCAPE '#') AS "bcdef"
--Result--
[('bcdef',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a*#"%#"g*' ESCAPE '#') AS "abcdefg"
--Result--
[('abcdefg',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a|b#"%#"g' ESCAPE '#') AS "bcdef"
--Result--
[('bcdef',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a#"%#"x|g' ESCAPE '#') AS "bcdef"
--Result--
[('bcdef',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a#"%|ab#"g' ESCAPE '#') AS "bcdef"
--Result--
[('bcdef',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a#"%g' ESCAPE '#') AS "bcdefg"
--Result--
[('bcdefg',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' SIMILAR 'a%g' ESCAPE '#') AS "abcdefg"
--Result--
[('abcdefg',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' FROM 'c.e') AS "cde"
--Result--
[('cde',)]
+--------------------+
--Query--
SELECT SUBSTRING('abcdefg' FROM 'b(.*)f') AS "cde"
--Result--
[('cde',)]
+--------------------+
--Query--
SELECT 'abcdefg' SIMILAR TO '_bcd%' AS true
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abcdefg' SIMILAR TO 'bcd%' AS false
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'abcdefg' SIMILAR TO '_bcd#%' ESCAPE '#' AS false
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'abcd%' SIMILAR TO '_bcd#%' ESCAPE '#' AS true
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abcdefg' SIMILAR TO '_bcd\%' AS false
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'abcd\efg' SIMILAR TO '_bcd\%' ESCAPE '' AS true
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abcdefg' SIMILAR TO '_bcd%' ESCAPE NULL AS null
--Result--
[(None,)]
+--------------------+
--Query--
SELECT regexp_replace('1112223333', E'(\\d{3})(\\d{3})(\\d{4})', E'(\\1) \\2-\\3')
--Result--
[('(111) 222-3333',)]
+--------------------+
--Query--
SELECT regexp_count('123123123123123', '(12)3')
--Result--
[(5,)]
+--------------------+
--Query--
SELECT regexp_like('Steven', '^Ste(v|ph)en$')
--Result--
[(True,)]
+--------------------+
--Query--
SELECT regexp_instr('abcdefghi', 'd.f')
--Result--
[(4,)]
+--------------------+
--Query--
SELECT regexp_substr('abcdefghi', 'd.f')
--Result--
[('def',)]
+--------------------+
--Query--
SELECT regexp_matches('foobarbequebaz', $re$(bar)(beque)$re$)
--Result--
[(['bar', 'beque'],)]
+--------------------+
--Query--
SELECT foo, length(foo) FROM regexp_split_to_table('the quick brown fox jumps over the lazy dog', $re$\s+$re$) AS foo
--Result--
[('the', 3), ('quick', 5), ('brown', 5), ('fox', 3), ('jumps', 5), ('over', 4), ('the', 3), ('lazy', 4), ('dog', 3)]
+--------------------+
--Query--
SELECT regexp_split_to_array('the quick brown fox jumps over the lazy dog', $re$\s+$re$)
--Result--
[(['the', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog'],)]
+--------------------+
--Query--
SELECT POSITION('4' IN '1234567890') = '4' AS "4"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT POSITION('5' IN '1234567890') = '5' AS "5"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT OVERLAY('abcdef' PLACING '45' FROM 4) AS "abc45f"
--Result--
[('abc45f',)]
+--------------------+
--Query--
SELECT OVERLAY('yabadoo' PLACING 'daba' FROM 5) AS "yabadaba"
--Result--
[('yabadaba',)]
+--------------------+
--Query--
SELECT OVERLAY('yabadoo' PLACING 'daba' FROM 5 FOR 0) AS "yabadabadoo"
--Result--
[('yabadabadoo',)]
+--------------------+
--Query--
SELECT OVERLAY('babosa' PLACING 'ubb' FROM 2 FOR 4) AS "bubba"
--Result--
[('bubba',)]
+--------------------+
--Query--
SELECT 'hawkeye' LIKE 'h%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT LIKE 'h%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' LIKE 'H%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT LIKE 'H%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' LIKE 'indio%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT LIKE 'indio%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' LIKE 'h%eye' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT LIKE 'h%eye' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' LIKE '_ndio' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'indio' NOT LIKE '_ndio' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' LIKE 'in__o' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'indio' NOT LIKE 'in__o' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' LIKE 'in_o' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' NOT LIKE 'in_o' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abc'::name LIKE '_b_' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abc'::name NOT LIKE '_b_' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'abc'::bytea LIKE '_b_'::bytea AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'abc'::bytea NOT LIKE '_b_'::bytea AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' LIKE 'h%' ESCAPE '#' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT LIKE 'h%' ESCAPE '#' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' LIKE 'ind_o' ESCAPE '$' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'indio' NOT LIKE 'ind_o' ESCAPE '$' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'h%' LIKE 'h#%' ESCAPE '#' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'h%' NOT LIKE 'h#%' ESCAPE '#' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'h%wkeye' LIKE 'h#%' ESCAPE '#' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'h%wkeye' NOT LIKE 'h#%' ESCAPE '#' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'h%wkeye' LIKE 'h#%%' ESCAPE '#' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'h%wkeye' NOT LIKE 'h#%%' ESCAPE '#' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'h%awkeye' LIKE 'h#%a%k%e' ESCAPE '#' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'h%awkeye' NOT LIKE 'h#%a%k%e' ESCAPE '#' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'indio' LIKE '_ndio' ESCAPE '$' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'indio' NOT LIKE '_ndio' ESCAPE '$' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'i_dio' LIKE 'i$_d_o' ESCAPE '$' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'i_dio' NOT LIKE 'i$_d_o' ESCAPE '$' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'i_dio' LIKE 'i$_nd_o' ESCAPE '$' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'i_dio' NOT LIKE 'i$_nd_o' ESCAPE '$' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'i_dio' LIKE 'i$_d%o' ESCAPE '$' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'i_dio' NOT LIKE 'i$_d%o' ESCAPE '$' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'a_c'::bytea LIKE 'a$__'::bytea ESCAPE '$'::bytea AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'a_c'::bytea NOT LIKE 'a$__'::bytea ESCAPE '$'::bytea AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'maca' LIKE 'm%aca' ESCAPE '%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'maca' NOT LIKE 'm%aca' ESCAPE '%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'ma%a' LIKE 'm%a%%a' ESCAPE '%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'ma%a' NOT LIKE 'm%a%%a' ESCAPE '%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'bear' LIKE 'b_ear' ESCAPE '_' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'bear' NOT LIKE 'b_ear' ESCAPE '_' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'be_r' LIKE 'b_e__r' ESCAPE '_' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'be_r' NOT LIKE 'b_e__r' ESCAPE '_' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'be_r' LIKE '__e__r' ESCAPE '_' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'be_r' NOT LIKE '__e__r' ESCAPE '_' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' ILIKE 'h%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT ILIKE 'h%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' ILIKE 'H%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT ILIKE 'H%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'hawkeye' ILIKE 'H%Eye' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'hawkeye' NOT ILIKE 'H%Eye' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'Hawkeye' ILIKE 'h%' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'Hawkeye' NOT ILIKE 'h%' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'ABC'::name ILIKE '_b_' AS "true"
--Result--
[(True,)]
+--------------------+
--Query--
SELECT 'ABC'::name NOT ILIKE '_b_' AS "false"
--Result--
[(False,)]
+--------------------+
--Query--
SELECT 'foo' LIKE '_%' as t, 'f' LIKE '_%' as t, '' LIKE '_%' as f
--Result--
[(True, True, False)]
+--------------------+
--Query--
SELECT 'foo' LIKE '%_' as t, 'f' LIKE '%_' as t, '' LIKE '%_' as f
--Result--
[(True, True, False)]
+--------------------+
--Query--
SELECT 'foo' LIKE '__%' as t, 'foo' LIKE '___%' as t, 'foo' LIKE '____%' as f
--Result--
[(True, True, False)]
+--------------------+
--Query--
SELECT 'foo' LIKE '%__' as t, 'foo' LIKE '%___' as t, 'foo' LIKE '%____' as f
--Result--
[(True, True, False)]
+--------------------+
--Query--
SELECT 'jack' LIKE '%____%' AS t
--Result--
[(True,)]
+--------------------+
--Query--
SELECT * FROM texttest WHERE a LIKE '%1%'
--Result--
[]
+--------------------+
--Query--
SELECT * FROM byteatest WHERE a LIKE '%1%'
--Result--
[]
+--------------------+
--Query--
SELECT 'unknown' || ' and unknown' AS "Concat unknown types"
--Result--
[('unknown and unknown',)]
+--------------------+
--Query--
SELECT text 'text' || ' and unknown' AS "Concat text to unknown type"
--Result--
[('text and unknown',)]
+--------------------+
--Query--
SELECT char(20) 'characters' || ' and text' AS "Concat char to unknown type"
--Result--
[('characters and text',)]
+--------------------+
--Query--
SELECT text 'text' || char(20) ' and characters' AS "Concat text to char"
--Result--
[('text and characters',)]
+--------------------+
--Query--
SELECT text 'text' || varchar ' and varchar' AS "Concat text to varchar"
--Result--
[('text and varchar',)]
+--------------------+
--Query--
SELECT substr(f1, -1, 5) from toasttest
--Result--
[('123',), ('123',), ('123',), ('123',)]
+--------------------+
--Query--
TRUNCATE TABLE toasttest
--Result--
[]
+--------------------+
--Query--
SELECT pg_relation_size(reltoastrelid) = 0 AS is_empty   FROM pg_class where relname = 'toasttest'
--Result--
[(False,)]
+--------------------+
--Query--
TRUNCATE TABLE toasttest
--Result--
[]
+--------------------+
--Query--
SELECT pg_relation_size(reltoastrelid) = 0 AS is_empty   FROM pg_class where relname = 'toasttest'
--Result--
[(True,)]
+--------------------+
--Query--
SELECT c FROM toasttest
--Result--
[('x
+--------------------+
--Query--
SELECT length('abcdef') AS "length_6"
--Result--
[(6,)]
+--------------------+
--Query--
SELECT strpos('abcdef', 'cd') AS "pos_3"
--Result--
[(3,)]
+--------------------+
--Query--
SELECT strpos('abcdef', 'xy') AS "pos_0"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT strpos('abcdef', '') AS "pos_1"
--Result--
[(1,)]
+--------------------+
--Query--
SELECT strpos('', 'xy') AS "pos_0"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT strpos('', '') AS "pos_1"
--Result--
[(1,)]
+--------------------+
--Query--
SELECT replace('abcdef', 'de', '45') AS "abc45f"
--Result--
[('abc45f',)]
+--------------------+
--Query--
SELECT replace('yabadabadoo', 'ba', '123') AS "ya123da123doo"
--Result--
[('ya123da123doo',)]
+--------------------+
--Query--
SELECT replace('yabadoo', 'bad', '') AS "yaoo"
--Result--
[('yaoo',)]
+--------------------+
--Query--
select split_part('','@',1) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('','@',-1) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','',1) AS "joeuser@mydatabase"
--Result--
[('joeuser@mydatabase',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','',2) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','',-1) AS "joeuser@mydatabase"
--Result--
[('joeuser@mydatabase',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','',-2) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@@',1) AS "joeuser@mydatabase"
--Result--
[('joeuser@mydatabase',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@@',2) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',1) AS "joeuser"
--Result--
[('joeuser',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',2) AS "mydatabase"
--Result--
[('mydatabase',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',3) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('@joeuser@mydatabase@','@',2) AS "joeuser"
--Result--
[('joeuser',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',-1) AS "mydatabase"
--Result--
[('mydatabase',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',-2) AS "joeuser"
--Result--
[('joeuser',)]
+--------------------+
--Query--
select split_part('joeuser@mydatabase','@',-3) AS "empty string"
--Result--
[('',)]
+--------------------+
--Query--
select split_part('@joeuser@mydatabase@','@',-2) AS "mydatabase"
--Result--
[('mydatabase',)]
+--------------------+
--Query--
select to_hex(-1234) AS "fffffb2e"
--Result--
[('fffffb2e',)]
+--------------------+
--Query--
select to_hex(-1234::bigint) AS "fffffffffffffb2e"
--Result--
[('fffffffffffffb2e',)]
+--------------------+
--Query--
select to_hex(256*256*256 - 1) AS "ffffff"
--Result--
[('ffffff',)]
+--------------------+
--Query--
select to_hex(256::bigint*256::bigint*256::bigint*256::bigint - 1) AS "ffffffff"
--Result--
[('ffffffff',)]
+--------------------+
--Query--
SELECT encode('\x1234567890abcdef00', 'hex')
--Result--
[('1234567890abcdef00',)]
+--------------------+
--Query--
SELECT get_bit('\x1234567890abcdef00'::bytea, 43)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT get_byte('\x1234567890abcdef00'::bytea, 3)
--Result--
[(120,)]
+--------------------+
--Query--
show escape_string_warning
--Result--
[('off',)]
+--------------------+
--Query--
show standard_conforming_strings
--Result--
[('off',)]
+--------------------+
--Query--
show escape_string_warning
--Result--
[('on',)]
+--------------------+
--Query--
show standard_conforming_strings
--Result--
[('on',)]
+--------------------+
--Query--
select 'a\bcd' as f1, 'a\b''cd' as f2, 'a\b''''cd' as f3, 'abcd\'   as f4, 'ab\''cd' as f5, '\\' as f6
--Result--
[('a\\bcd', "a\\b'cd", "a\\b''cd", 'abcd\\', "ab\\'cd", '\\\\')]
+--------------------+
--Query--
select 'a\\bcd' as f1, 'a\\b\'cd' as f2, 'a\\b\'''cd' as f3, 'abcd\\'   as f4, 'ab\\\'cd' as f5, '\\\\' as f6
--Result--
[('a\\bcd', "a\\b'cd", "a\\b''cd", 'abcd\\', "ab\\'cd", '\\\\')]
+--------------------+
--Query--
select 'a\bcd' as f1, 'a\b''cd' as f2, 'a\b''''cd' as f3, 'abcd\'   as f4, 'ab\''cd' as f5, '\\' as f6
--Result--
[('a\\bcd', "a\\b'cd", "a\\b''cd", 'abcd\\', "ab\\'cd", '\\\\')]
+--------------------+
--Query--
select 'a\\bcd' as f1, 'a\\b\'cd' as f2, 'a\\b\'''cd' as f3, 'abcd\\'   as f4, 'ab\\\'cd' as f5, '\\\\' as f6
--Result--
[('a\\bcd', "a\\b'cd", "a\\b''cd", 'abcd\\', "ab\\'cd", '\\\\')]
+--------------------+
--Query--
SELECT initcap('hi THOMAS')
--Result--
[('Hi Thomas',)]
+--------------------+
--Query--
SELECT lpad('hi', 5, 'xy')
--Result--
[('xyxhi',)]
+--------------------+
--Query--
SELECT rpad('hi', 5, 'xy')
--Result--
[('hixyx',)]
+--------------------+
--Query--
SELECT ltrim('zzzytrim', 'xyz')
--Result--
[('trim',)]
+--------------------+
--Query--
SELECT translate('', '14', 'ax')
--Result--
[('',)]
+--------------------+
--Query--
SELECT ascii('x')
--Result--
[(120,)]
+--------------------+
--Query--
SELECT chr(65)
--Result--
[('A',)]
+--------------------+
--Query--
SELECT repeat('Pg', 4)
--Result--
[('PgPgPgPg',)]
+--------------------+
--Query--
SELECT bit_count('\x1234567890'::bytea)
--Result--
[(15,)]
+--------------------+
--Query--
SELECT unistr('\0064at\+0000610')
--Result--
[('data0',)]
+--------------------+
