--Query--
SELECT * FROM update_test
--Result--
[(5, 10, 'foo'), (10, 15, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(10, None, 'foo'), (10, None, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(10, 10, 'foo'), (10, 10, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(10, 20, 'foo'), (10, 20, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(100, 20, 'foo'), (100, 20, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(100, 20, 'foo'), (100, 20, None), (100, 21, 'foo'), (100, 21, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(100, 20, None), (100, 21, None), (10, 31, 'bugle'), (10, 32, 'bugle')]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(100, 20, None), (100, 21, None), (11, 41, 'car'), (11, 42, 'car')]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(100, 21, None), (11, 41, 'car'), (11, 42, 'car'), (41, 11, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(21, 101, None), (41, 12, 'car'), (42, 12, 'car'), (11, 42, None)]
+--------------------+
--Query--
SELECT * FROM update_test
--Result--
[(21, 101, None), (41, 12, 'car'), (42, 12, 'car'), (None, None, None)]
+--------------------+
--Query--
SELECT a, b, char_length(c) FROM update_test
--Result--
[(None, None, None), (21, 100, None), (41, 12, 10000), (42, 12, 10000)]
+--------------------+
--Query--
EXPLAIN (VERBOSE, COSTS OFF) UPDATE update_test t   SET (a, b) = (SELECT b, a FROM update_test s WHERE s.a = t.a)   WHERE CURRENT_USER = SESSION_USER
--Result--
[('Update on public.update_test t',), ('  ->  Result',), ('        Output: $1, $2, (SubPlan 1 (returns $1,$2)), t.ctid',), ('        One-Time Filter: (CURRENT_USER = SESSION_USER)',), ('        ->  Seq Scan on public.update_test t',), ('              Output: t.a, t.ctid',), ('        SubPlan 1 (returns $1,$2)',), ('          ->  Seq Scan on public.update_test s',), ('                Output: s.b, s.a',), ('                Filter: (s.a = t.a)',)]
+--------------------+
--Query--
SELECT a, b, char_length(c) FROM update_test
--Result--
[(None, None, None), (100, 21, None), (12, 41, 10000), (12, 42, 10000)]
+--------------------+
--Query--
WITH aaa AS (SELECT 1 AS a, 'Foo' AS b) INSERT INTO upsert_test   VALUES (1, 'Bar') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b, a FROM aaa) RETURNING *
--Result--
[(1, 'Foo')]
+--------------------+
--Query--
WITH aaa AS (SELECT 1 AS a, 'Foo' AS b) INSERT INTO upsert_test   VALUES (1, 'Bar') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b, a FROM aaa) RETURNING *
--Result--
[(1, 'Foo')]
+--------------------+
--Query--
WITH aaa AS (SELECT 1 AS ctea, ' Foo' AS cteb) INSERT INTO upsert_test   VALUES (1, 'Bar'), (2, 'Baz') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT upsert_test.b||cteb, upsert_test.a FROM aaa) RETURNING *
--Result--
[(1, 'Foo Foo'), (2, 'Zoo Foo')]
+--------------------+
--Query--
EXPLAIN (costs off) UPDATE range_parted set c = c - 50 WHERE c > 97
--Result--
[('Update on range_parted',), ('  Update on part_a_1_a_10 range_parted_1',), ('  Update on part_a_10_a_20 range_parted_2',), ('  Update on part_b_1_b_10 range_parted_3',), ('  Update on part_c_1_100 range_parted_4',), ('  Update on part_d_1_15 range_parted_5',), ('  Update on part_d_15_20 range_parted_6',), ('  Update on part_b_20_b_30 range_parted_7',), ('  ->  Append',), ('        ->  Seq Scan on part_a_1_a_10 range_parted_1',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_a_10_a_20 range_parted_2',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_b_1_b_10 range_parted_3',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_c_1_100 range_parted_4',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_d_1_15 range_parted_5',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_d_15_20 range_parted_6',), ("              Filter: (c > '97'::numeric)",), ('        ->  Seq Scan on part_b_20_b_30 range_parted_7',), ("              Filter: (c > '97'::numeric)",)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted WHERE a = 2 ORDER BY 1
--Result--
[('list_part1', 2.0, 5, 50)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted WHERE a = 2 ORDER BY 1
--Result--
[('list_part1', 2.0, 52, 50)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4
--Result--
[('list_part1', 2.0, 52, 50), ('list_part1', 3.0, 6, 60), ('sub_part1', 1.0, 1, 60), ('sub_part2', 1.0, 2, 10)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4
--Result--
[('list_part1', 2.0, 52, 50), ('list_part1', 3.0, 6, 60), ('sub_part1', 1.0, 1, 70), ('sub_part2', 1.0, 2, 10)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4
--Result--
[('list_part1', 2.0, 52, 50), ('list_part1', 3.0, 6, 60), ('sub_part1', 1.0, 1, 70), ('sub_part2', 1.0, 2, 10)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4
--Result--
[('list_part1', 2.0, 52, 50), ('list_part1', 3.0, 6, 60), ('sub_part1', 1.0, 1, 70), ('sub_part2', 1.0, 2, 10)]
+--------------------+
--Query--
SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4
--Result--
[('list_part1', 2.0, 1, 70), ('list_part1', 2.0, 2, 10), ('list_part1', 2.0, 52, 50), ('list_part1', 3.0, 6, 60)]
+--------------------+
