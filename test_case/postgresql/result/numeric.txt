--Query--
VACUUM ANALYZE num_exp_add
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_sub
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_div
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_mul
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_sqrt
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_ln
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_log10
--Result--
[]
+--------------------+
--Query--
VACUUM ANALYZE num_exp_power_10_ln
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, t2.expected     FROM num_result t1, num_exp_add t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 10) as expected     FROM num_result t1, num_exp_add t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != round(t2.expected, 10)
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, t2.expected     FROM num_result t1, num_exp_sub t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 40)     FROM num_result t1, num_exp_sub t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != round(t2.expected, 40)
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, t2.expected     FROM num_result t1, num_exp_mul t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 30) as expected     FROM num_result t1, num_exp_mul t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != round(t2.expected, 30)
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, t2.expected     FROM num_result t1, num_exp_div t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 80) as expected     FROM num_result t1, num_exp_div t2     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2     AND t1.result != round(t2.expected, 80)
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.result, t2.expected     FROM num_result t1, num_exp_sqrt t2     WHERE t1.id1 = t2.id     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.result, t2.expected     FROM num_result t1, num_exp_ln t2     WHERE t1.id1 = t2.id     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.result, t2.expected     FROM num_result t1, num_exp_log10 t2     WHERE t1.id1 = t2.id     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
SELECT t1.id1, t1.result, t2.expected     FROM num_result t1, num_exp_power_10_ln t2     WHERE t1.id1 = t2.id     AND t1.result != t2.expected
--Result--
[]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('-1'),('4.2'),('inf'),('-inf'),('nan')) SELECT x1, x2,   x1 + x2 AS sum,   x1 - x2 AS diff,   x1 * x2 AS prod FROM v AS v1(x1), v AS v2(x2)
--Result--
[(0.0, 0.0, 0.0, 0.0, 0.0), (0.0, 1.0, 1.0, -1.0, 0.0), (0.0, -1.0, -1.0, 1.0, 0.0), (0.0, 4.2, 4.2, -4.2, 0.0), (0.0, inf, inf, -inf, nan), (0.0, -inf, -inf, inf, nan), (0.0, nan, nan, nan, nan), (1.0, 0.0, 1.0, 1.0, 0.0), (1.0, 1.0, 2.0, 0.0, 1.0), (1.0, -1.0, 0.0, 2.0, -1.0), (1.0, 4.2, 5.2, -3.2, 4.2), (1.0, inf, inf, -inf, inf), (1.0, -inf, -inf, inf, -inf), (1.0, nan, nan, nan, nan), (-1.0, 0.0, -1.0, -1.0, 0.0), (-1.0, 1.0, 0.0, -2.0, -1.0), (-1.0, -1.0, -2.0, 0.0, 1.0), (-1.0, 4.2, 3.2, -5.2, -4.2), (-1.0, inf, inf, -inf, -inf), (-1.0, -inf, -inf, inf, inf), (-1.0, nan, nan, nan, nan), (4.2, 0.0, 4.2, 4.2, 0.0), (4.2, 1.0, 5.2, 3.2, 4.2), (4.2, -1.0, 3.2, 5.2, -4.2), (4.2, 4.2, 8.4, 0.0, 17.64), (4.2, inf, inf, -inf, inf), (4.2, -inf, -inf, inf, -inf), (4.2, nan, nan, nan, nan), (inf, 0.0, inf, inf, nan), (inf, 1.0, inf, inf, inf), (inf, -1.0, inf, inf, -inf), (inf, 4.2, inf, inf, inf), (inf, inf, inf, nan, inf), (inf, -inf, nan, inf, -inf), (inf, nan, nan, nan, nan), (-inf, 0.0, -inf, -inf, nan), (-inf, 1.0, -inf, -inf, -inf), (-inf, -1.0, -inf, -inf, inf), (-inf, 4.2, -inf, -inf, -inf), (-inf, inf, nan, -inf, -inf), (-inf, -inf, -inf, nan, inf), (-inf, nan, nan, nan, nan), (nan, 0.0, nan, nan, nan), (nan, 1.0, nan, nan, nan), (nan, -1.0, nan, nan, nan), (nan, 4.2, nan, nan, nan), (nan, inf, nan, nan, nan), (nan, -inf, nan, nan, nan), (nan, nan, nan, nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('-1'),('4.2'),('inf'),('-inf'),('nan')) SELECT x1, x2,   x1 / x2 AS quot,   x1 % x2 AS mod,   div(x1, x2) AS div FROM v AS v1(x1), v AS v2(x2) WHERE x2 != 0
--Result--
[(0.0, 1.0, 0.0, 0.0, 0.0), (1.0, 1.0, 1.0, 0.0, 1.0), (-1.0, 1.0, -1.0, 0.0, -1.0), (4.2, 1.0, 4.2, 0.2, 4.0), (inf, 1.0, inf, nan, inf), (-inf, 1.0, -inf, nan, -inf), (nan, 1.0, nan, nan, nan), (0.0, -1.0, 0.0, 0.0, 0.0), (1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, -1.0, 1.0, 0.0, 1.0), (4.2, -1.0, -4.2, 0.2, -4.0), (inf, -1.0, -inf, nan, -inf), (-inf, -1.0, inf, nan, inf), (nan, -1.0, nan, nan, nan), (0.0, 4.2, 0.0, 0.0, 0.0), (1.0, 4.2, 0.23809523809523808, 1.0, 0.0), (-1.0, 4.2, -0.23809523809523808, -1.0, 0.0), (4.2, 4.2, 1.0, 0.0, 1.0), (inf, 4.2, inf, nan, inf), (-inf, 4.2, -inf, nan, -inf), (nan, 4.2, nan, nan, nan), (0.0, inf, 0.0, 0.0, 0.0), (1.0, inf, 0.0, 1.0, 0.0), (-1.0, inf, 0.0, -1.0, 0.0), (4.2, inf, 0.0, 4.2, 0.0), (inf, inf, nan, nan, nan), (-inf, inf, nan, nan, nan), (nan, inf, nan, nan, nan), (0.0, -inf, 0.0, 0.0, 0.0), (1.0, -inf, 0.0, 1.0, 0.0), (-1.0, -inf, 0.0, -1.0, 0.0), (4.2, -inf, 0.0, 4.2, 0.0), (inf, -inf, nan, nan, nan), (-inf, -inf, nan, nan, nan), (nan, -inf, nan, nan, nan), (0.0, nan, nan, nan, nan), (1.0, nan, nan, nan, nan), (-1.0, nan, nan, nan, nan), (4.2, nan, nan, nan, nan), (inf, nan, nan, nan, nan), (-inf, nan, nan, nan, nan), (nan, nan, nan, nan, nan)]
+--------------------+
--Query--
SELECT 'nan'::numeric / '0'
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT 'nan'::numeric % '0'
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT div('nan'::numeric, '0')
--Result--
[(nan,)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan')) SELECT x, -x as minusx, abs(x), floor(x), ceil(x), sign(x), numeric_inc(x) as inc FROM v
--Result--
[(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 2.0), (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 0.0), (4.2, -4.2, 4.2, 4.0, 5.0, 1.0, 5.2), (-7.777, 7.777, 7.777, -8.0, -7.0, -1.0, -6.777), (inf, -inf, inf, inf, inf, 1.0, inf), (-inf, inf, inf, -inf, -inf, -1.0, -inf), (nan, nan, nan, nan, nan, nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan')) SELECT x, round(x), round(x,1) as round1, trunc(x), trunc(x,1) as trunc1 FROM v
--Result--
[(0.0, 0.0, 0.0, 0.0, 0.0), (1.0, 1.0, 1.0, 1.0, 1.0), (-1.0, -1.0, -1.0, -1.0, -1.0), (4.2, 4.0, 4.2, 4.0, 4.2), (-7.777, -8.0, -7.8, -7.0, -7.7), (inf, inf, inf, inf, inf), (-inf, -inf, -inf, -inf, -inf), (nan, nan, nan, nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('1e340'),('-1e340'),          ('inf'),('-inf'),('nan'),          ('inf'),('-inf'),('nan')) SELECT substring(x::text, 1, 32) FROM v ORDER BY x
--Result--
[('-Infinity',), ('-Infinity',), ('-1000000000000000000000000000000',), ('-7.777',), ('-1',), ('0',), ('1',), ('4.2',), ('10000000000000000000000000000000',), ('Infinity',), ('Infinity',), ('NaN',), ('NaN',)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('4.2'),('inf'),('nan')) SELECT x, sqrt(x) FROM v
--Result--
[(0.0, 0.0), (1.0, 1.0), (4.2, 2.04939015319192), (inf, inf), (nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('1'::numeric),('4.2'),('inf'),('nan')) SELECT x,   log(x),   log10(x),   ln(x) FROM v
--Result--
[(1.0, 0.0, 0.0, 0.0), (4.2, 0.6232492903979004, 0.6232492903979004, 1.4350845252893225), (inf, inf, inf, inf), (nan, nan, nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('2'::numeric),('4.2'),('inf'),('nan')) SELECT x1, x2,   log(x1, x2) FROM v AS v1(x1), v AS v2(x2)
--Result--
[(2.0, 2.0, 1.0), (2.0, 4.2, 2.070389327891398), (2.0, inf, inf), (2.0, nan, nan), (4.2, 2.0, 0.483000944087389), (4.2, 4.2, 1.0), (4.2, inf, inf), (4.2, nan, nan), (inf, 2.0, 0.0), (inf, 4.2, 0.0), (inf, inf, nan), (inf, nan, nan), (nan, 2.0, nan), (nan, 4.2, nan), (nan, inf, nan), (nan, nan, nan)]
+--------------------+
--Query--
WITH v(x) AS   (VALUES('0'::numeric),('1'),('2'),('4.2'),('inf'),('nan')) SELECT x1, x2,   power(x1, x2) FROM v AS v1(x1), v AS v2(x2) WHERE x1 != 0 OR x2 >= 0
--Result--
[(0.0, 0.0, 1.0), (0.0, 1.0, 0.0), (0.0, 2.0, 0.0), (0.0, 4.2, 0.0), (0.0, inf, 0.0), (0.0, nan, nan), (1.0, 0.0, 1.0), (1.0, 1.0, 1.0), (1.0, 2.0, 1.0), (1.0, 4.2, 1.0), (1.0, inf, 1.0), (1.0, nan, 1.0), (2.0, 0.0, 1.0), (2.0, 1.0, 2.0), (2.0, 2.0, 4.0), (2.0, 4.2, 18.37917367995256), (2.0, inf, inf), (2.0, nan, nan), (4.2, 0.0, 1.0), (4.2, 1.0, 4.2), (4.2, 2.0, 17.64), (4.2, 4.2, 414.61691860129673), (4.2, inf, inf), (4.2, nan, nan), (inf, 0.0, 1.0), (inf, 1.0, inf), (inf, 2.0, inf), (inf, 4.2, inf), (inf, inf, inf), (inf, nan, nan), (nan, 0.0, 1.0), (nan, 1.0, nan), (nan, 2.0, nan), (nan, 4.2, nan), (nan, inf, nan), (nan, nan, nan)]
+--------------------+
--Query--
SELECT power('-1'::numeric, 'inf')
--Result--
[(1.0,)]
+--------------------+
--Query--
SELECT AVG(val) FROM num_data
--Result--
[(-13430913.592242321,)]
+--------------------+
--Query--
SELECT MAX(val) FROM num_data
--Result--
[(7799461.4119,)]
+--------------------+
--Query--
SELECT MIN(val) FROM num_data
--Result--
[(-83028485.0,)]
+--------------------+
--Query--
SELECT STDDEV(val) FROM num_data
--Result--
[(27791203.287588354,)]
+--------------------+
--Query--
SELECT VARIANCE(val) FROM num_data
--Result--
[(772350980172061.8,)]
+--------------------+
--Query--
SELECT * FROM fract_only
--Result--
[(1, 0.0), (2, 0.1), (4, -0.9999), (5, 0.9999), (7, 0.0), (8, 0.0002), (9, nan)]
+--------------------+
--Query--
SELECT (-9223372036854775808.4)::int8
--Result--
[(-9223372036854775808,)]
+--------------------+
--Query--
SELECT 9223372036854775807.4::int8
--Result--
[(9223372036854775807,)]
+--------------------+
--Query--
SELECT (-2147483648.4)::int4
--Result--
[(-2147483648,)]
+--------------------+
--Query--
SELECT 2147483647.4::int4
--Result--
[(2147483647,)]
+--------------------+
--Query--
SELECT (-32768.4)::int2
--Result--
[(-32768,)]
+--------------------+
--Query--
SELECT 32767.4::int2
--Result--
[(32767,)]
+--------------------+
--Query--
SELECT 'NaN'::float8::numeric
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT 'Infinity'::float8::numeric
--Result--
[(inf,)]
+--------------------+
--Query--
SELECT '-Infinity'::float8::numeric
--Result--
[(-inf,)]
+--------------------+
--Query--
SELECT 'NaN'::numeric::float8
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT 'Infinity'::numeric::float8
--Result--
[(inf,)]
+--------------------+
--Query--
SELECT '-Infinity'::numeric::float8
--Result--
[(-inf,)]
+--------------------+
--Query--
SELECT 'NaN'::float4::numeric
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT 'Infinity'::float4::numeric
--Result--
[(inf,)]
+--------------------+
--Query--
SELECT '-Infinity'::float4::numeric
--Result--
[(-inf,)]
+--------------------+
--Query--
SELECT 'NaN'::numeric::float4
--Result--
[(nan,)]
+--------------------+
--Query--
SELECT 'Infinity'::numeric::float4
--Result--
[(inf,)]
+--------------------+
--Query--
SELECT '-Infinity'::numeric::float4
--Result--
[(-inf,)]
+--------------------+
--Query--
SELECT '42'::int2::numeric
--Result--
[(42.0,)]
+--------------------+
--Query--
SELECT a, ceil(a), ceiling(a), floor(a), round(a) FROM ceil_floor_round
--Result--
[(-5.5, -5.0, -5.0, -6.0, -6.0), (-5.499999, -5.0, -5.0, -6.0, -5.0), (9.5, 10.0, 10.0, 9.0, 10.0), (9.4999999, 10.0, 10.0, 9.0, 9.0), (0.0, 0.0, 0.0, 0.0, 0.0), (1e-07, 1.0, 1.0, 0.0, 0.0), (-1e-06, 0.0, 0.0, -1.0, 0.0)]
+--------------------+
--Query--
SELECT     operand_num,     width_bucket(operand_num, 0, 10, 5) AS wb_1,     width_bucket(operand_f8, 0, 10, 5) AS wb_1f,     width_bucket(operand_num, 10, 0, 5) AS wb_2,     width_bucket(operand_f8, 10, 0, 5) AS wb_2f,     width_bucket(operand_num, 2, 8, 4) AS wb_3,     width_bucket(operand_f8, 2, 8, 4) AS wb_3f,     width_bucket(operand_num, 5.0, 5.5, 20) AS wb_4,     width_bucket(operand_f8, 5.0, 5.5, 20) AS wb_4f,     width_bucket(operand_num, -25, 25, 10) AS wb_5,     width_bucket(operand_f8, -25, 25, 10) AS wb_5f     FROM width_bucket_test
--Result--
[]
+--------------------+
--Query--
SELECT width_bucket('Infinity'::numeric, 1, 10, 10),        width_bucket('-Infinity'::numeric, 1, 10, 10)
--Result--
[(11, 0)]
+--------------------+
--Query--
SELECT x, width_bucket(x::float8, 10, 100, 9) as flt,        width_bucket(x::numeric, 10, 100, 9) as num FROM generate_series(0, 110, 10) x
--Result--
[(0, 0, 0), (10, 1, 1), (20, 2, 2), (30, 3, 3), (40, 4, 4), (50, 5, 5), (60, 6, 6), (70, 7, 7), (80, 8, 8), (90, 9, 9), (100, 10, 10), (110, 10, 10)]
+--------------------+
--Query--
SELECT x, width_bucket(x::float8, 100, 10, 9) as flt,        width_bucket(x::numeric, 100, 10, 9) as num FROM generate_series(0, 110, 10) x
--Result--
[(0, 10, 10), (10, 10, 10), (20, 9, 9), (30, 8, 8), (40, 7, 7), (50, 6, 6), (60, 5, 5), (70, 4, 4), (80, 3, 3), (90, 2, 2), (100, 1, 1), (110, 0, 0)]
+--------------------+
--Query--
SELECT to_char(val, '9G999G999G999G999G999') 	FROM num_data
--Result--
[('                     0',), ('                     0',), ('           -34,338,492',), ('                     4',), ('             7,799,461',), ('                16,397',), ('                93,902',), ('           -83,028,485',), ('                74,881',), ('           -24,926,804',)]
+--------------------+
--Query--
WITH v(val) AS   (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan')) SELECT val,   to_char(val, '9.999EEEE') as numeric,   to_char(val::float8, '9.999EEEE') as float8,   to_char(val::float4, '9.999EEEE') as float4 FROM v
--Result--
[(0.0, ' 0.000e+00', ' 0.000e+00', ' 0.000e+00'), (-4.2, '-4.200e+00', '-4.200e+00', '-4.200e+00'), (4200000000.0, ' 4.200e+09', ' 4.200e+09', ' 4.200e+09'), (1.2e-05, ' 1.200e-05', ' 1.200e-05', ' 1.200e-05'), (inf, ' #.#######', ' #.#######', ' #.#######'), (-inf, ' #.#######', ' #.#######', ' #.#######'), (nan, ' #.#######', ' #.#######', ' #.#######')]
+--------------------+
--Query--
WITH v(exp) AS   (VALUES(-16379),(-16378),(-1234),(-789),(-45),(-5),(-4),(-3),(-2),(-1),(0),          (1),(2),(3),(4),(5),(38),(275),(2345),(45678),(131070),(131071)) SELECT exp,   to_char(('1.2345e'||exp)::numeric, '9.999EEEE') as numeric FROM v
--Result--
[(-16379, ' 1.235e-16379'), (-16378, ' 1.235e-16378'), (-1234, ' 1.235e-1234'), (-789, ' 1.235e-789'), (-45, ' 1.235e-45'), (-5, ' 1.235e-05'), (-4, ' 1.235e-04'), (-3, ' 1.235e-03'), (-2, ' 1.235e-02'), (-1, ' 1.235e-01'), (0, ' 1.235e+00'), (1, ' 1.235e+01'), (2, ' 1.235e+02'), (3, ' 1.235e+03'), (4, ' 1.235e+04'), (5, ' 1.235e+05'), (38, ' 1.235e+38'), (275, ' 1.235e+275'), (2345, ' 1.235e+2345'), (45678, ' 1.235e+45678'), (131070, ' 1.235e+131070'), (131071, ' 1.235e+131071')]
+--------------------+
--Query--
WITH v(val) AS   (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan')) SELECT val,   to_char(val, 'MI9999999999.99') as numeric,   to_char(val::float8, 'MI9999999999.99') as float8,   to_char(val::float4, 'MI9999999999.99') as float4 FROM v
--Result--
[(0.0, '           .00', '           .00', '           .00'), (-4.2, '-         4.20', '-         4.20', '-         4.20'), (4200000000.0, ' 4200000000.00', ' 4200000000.00', ' 4200000000'), (1.2e-05, '           .00', '           .00', '           .00'), (inf, '   Infinity', '   Infinity', '   Infinity'), (-inf, '-  Infinity', '-  Infinity', '-  Infinity'), (nan, '        NaN', '        NaN', '        NaN')]
+--------------------+
--Query--
WITH v(val) AS   (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan')) SELECT val,   to_char(val, 'MI99.99') as numeric,   to_char(val::float8, 'MI99.99') as float8,   to_char(val::float4, 'MI99.99') as float4 FROM v
--Result--
[(0.0, '   .00', '   .00', '   .00'), (-4.2, '- 4.20', '- 4.20', '- 4.20'), (4200000000.0, ' ##.##', ' ##.##', ' ##.'), (1.2e-05, '   .00', '   .00', '   .00'), (inf, ' ##.##', ' ##.##', ' ##.'), (-inf, '-##.##', '-##.##', '-##.'), (nan, ' ##.##', ' ##.##', ' ##.##')]
+--------------------+
--Query--
SELECT to_number('-34,338,492', '99G999G999')
--Result--
[(-34338492.0,)]
+--------------------+
--Query--
SELECT * FROM num_input_test
--Result--
[(123.0,), (3245874.0,), (-93853.0,), (555.5,), (-555.5,), (nan,), (nan,), (inf,), (inf,), (-inf,), (inf,), (inf,), (-inf,), (12000000000.0,), (12000.123456,), (2.3,), (1.23,), (12.3,), (299792458.0,), (-1.2345678901234567e+19,), (9999999999.0,), (-1.2345678900987654e+19,), (-3735928559.0,), (9.87654321234568e+32,)]
+--------------------+
--Query--
SELECT pg_input_is_valid('34.5', 'numeric')
--Result--
[(True,)]
+--------------------+
--Query--
SELECT * FROM pg_input_error_info('1e400000', 'numeric')
--Result--
[('value overflows numeric format', None, None, '22003')]
+--------------------+
--Query--
SELECT scale(millions), * FROM num_typemod_test ORDER BY millions
--Result--
[(0, 0.0, 0.0, 0.0, 0.0, 0.0), (0, 1000000.0, 1000.0, 1.0, 0.001, 1e-06), (0, 2000000.0, 2000.0, 2.0, 0.002, 2e-06), (0, 8000000.0, 8000.0, 8.0, 0.008, 8e-06), (0, 12000000.0, 12000.0, 12.0, 0.012, 1.2e-05), (0, 88000000.0, 88000.0, 88.0, 0.088, 8.8e-05), (0, 123000000.0, 123000.0, 123.0, 0.123, 0.000123), (0, 988000000.0, 988000.0, 988.0, 0.988, 0.000988), (None, nan, nan, nan, nan, nan)]
+--------------------+
--Query--
select 4790999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
--Result--
[(4.791e+175,)]
+--------------------+
--Query--
select 4789999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
--Result--
[(4.79e+175,)]
+--------------------+
--Query--
select 4770999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
--Result--
[(4.771e+175,)]
+--------------------+
--Query--
select 4769999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
--Result--
[(4.77e+175,)]
+--------------------+
--Query--
select trim_scale((0.1 - 2e-16383) * (0.1 - 3e-16383))
--Result--
[(0.01,)]
+--------------------+
--Query--
select 999999999999999999999::numeric/1000000000000000000000
--Result--
[(1.0,)]
+--------------------+
--Query--
select mod(999999999999999999999::numeric,1000000000000000000000)
--Result--
[(1e+21,)]
+--------------------+
--Query--
select div(-9999999999999999999999::numeric,1000000000000000000000)*1000000000000000000000 + mod(-9999999999999999999999::numeric,1000000000000000000000)
--Result--
[(-1e+22,)]
+--------------------+
--Query--
select mod (70.0,70)
--Result--
[(0.0,)]
+--------------------+
--Query--
select div (70.0,70)
--Result--
[(1.0,)]
+--------------------+
--Query--
select 70.0 / 70
--Result--
[(1.0,)]
+--------------------+
--Query--
select 12345678901234567890 % 123
--Result--
[(78.0,)]
+--------------------+
--Query--
select 12345678901234567890 / 123
--Result--
[(1.0037137318076885e+17,)]
+--------------------+
--Query--
select div(12345678901234567890, 123) * 123 + 12345678901234567890 % 123
--Result--
[(1.2345678901234567e+19,)]
+--------------------+
--Query--
select sqrt(1.000000000000003::numeric)
--Result--
[(1.000000000000001,)]
+--------------------+
--Query--
select 10.0 ^ -2147483648 as rounds_to_zero
--Result--
[(0.0,)]
+--------------------+
--Query--
select 10.0 ^ -2147483647 as rounds_to_zero
--Result--
[(0.0,)]
+--------------------+
--Query--
select 3.789 ^ 21.0000000000000000
--Result--
[(1409343026052.8716,)]
+--------------------+
--Query--
select 3.789 ^ 35.0000000000000000
--Result--
[(1.7715816965051666e+20,)]
+--------------------+
--Query--
select 1.2 ^ 345
--Result--
[(2.0774466823273784e+27,)]
+--------------------+
--Query--
select 0.12 ^ (-20)
--Result--
[(2.6084053304588826e+18,)]
+--------------------+
--Query--
select 1.000000000123 ^ (-2147483648)
--Result--
[(0.7678656556403084,)]
+--------------------+
--Query--
select coalesce(nullif(0.9999999999 ^ 23300000000000, 0), 0) as rounds_to_zero
--Result--
[(0.0,)]
+--------------------+
--Query--
select 0.12 ^ (-25)
--Result--
[(1.0482596010396101e+23,)]
+--------------------+
--Query--
select 0.5678 ^ (-85)
--Result--
[(7.823336377407744e+20,)]
+--------------------+
--Query--
select coalesce(nullif(0.9999999999 ^ 70000000000000, 0), 0) as underflows
--Result--
[(0.0,)]
+--------------------+
--Query--
select (-1.0) ^ 2147483646
--Result--
[(1.0,)]
+--------------------+
--Query--
select (-1.0) ^ 2147483647
--Result--
[(-1.0,)]
+--------------------+
--Query--
select (-1.0) ^ 2147483648
--Result--
[(1.0,)]
+--------------------+
--Query--
select (-1.0) ^ 1000000000000000
--Result--
[(1.0,)]
+--------------------+
--Query--
select (-1.0) ^ 1000000000000001
--Result--
[(-1.0,)]
+--------------------+
--Query--
select n, 10.0 ^ n as "10^n", (10.0 ^ n) * (10.0 ^ (-n)) = 1 as ok from generate_series(-20, 20) n
--Result--
[(-20, 1e-20, True), (-19, 1e-19, True), (-18, 1e-18, True), (-17, 1e-17, True), (-16, 1e-16, True), (-15, 1e-15, True), (-14, 1e-14, True), (-13, 1e-13, True), (-12, 1e-12, True), (-11, 1e-11, True), (-10, 1e-10, True), (-9, 1e-09, True), (-8, 1e-08, True), (-7, 1e-07, True), (-6, 1e-06, True), (-5, 1e-05, True), (-4, 0.0001, True), (-3, 0.001, True), (-2, 0.01, True), (-1, 0.1, True), (0, 1.0, True), (1, 10.0, True), (2, 100.0, True), (3, 1000.0, True), (4, 10000.0, True), (5, 100000.0, True), (6, 1000000.0, True), (7, 10000000.0, True), (8, 100000000.0, True), (9, 1000000000.0, True), (10, 10000000000.0, True), (11, 100000000000.0, True), (12, 1000000000000.0, True), (13, 10000000000000.0, True), (14, 100000000000000.0, True), (15, 1000000000000000.0, True), (16, 1e+16, True), (17, 1e+17, True), (18, 1e+18, True), (19, 1e+19, True), (20, 1e+20, True)]
+--------------------+
--Query--
select 0.0 ^ 0.0
--Result--
[(1.0,)]
+--------------------+
--Query--
select (-12.34) ^ 0.0
--Result--
[(1.0,)]
+--------------------+
--Query--
select 12.34 ^ 0.0
--Result--
[(1.0,)]
+--------------------+
--Query--
select 0.0 ^ 12.34
--Result--
[(0.0,)]
+--------------------+
--Query--
select 'NaN'::numeric ^ 'NaN'::numeric
--Result--
[(nan,)]
+--------------------+
--Query--
select 'NaN'::numeric ^ 0
--Result--
[(1.0,)]
+--------------------+
--Query--
select 'NaN'::numeric ^ 1
--Result--
[(nan,)]
+--------------------+
--Query--
select 0 ^ 'NaN'::numeric
--Result--
[(nan,)]
+--------------------+
--Query--
select 1 ^ 'NaN'::numeric
--Result--
[(1.0,)]
+--------------------+
--Query--
select 32.1 ^ 9.8
--Result--
[(580429286790711.1,)]
+--------------------+
--Query--
select 32.1 ^ (-9.8)
--Result--
[(1.722862754788209e-15,)]
+--------------------+
--Query--
select 12.3 ^ 45.6
--Result--
[(5.00810103214928e+49,)]
+--------------------+
--Query--
select 12.3 ^ (-45.6)
--Result--
[(1.996764828785491e-50,)]
+--------------------+
--Query--
select 1.234 ^ 5678
--Result--
[(inf,)]
+--------------------+
--Query--
select exp(0.0)
--Result--
[(1.0,)]
+--------------------+
--Query--
select coalesce(nullif(exp(-5000::numeric), 0), 0) as rounds_to_zero
--Result--
[(0.0,)]
+--------------------+
--Query--
select coalesce(nullif(exp(-10000::numeric), 0), 0) as underflows
--Result--
[(0.0,)]
+--------------------+
--Query--
select * from generate_series(0.0::numeric, 4.0::numeric)
--Result--
[(0.0,), (1.0,), (2.0,), (3.0,), (4.0,)]
+--------------------+
--Query--
select (i / (10::numeric ^ 131071))::numeric(1,0) 	from generate_series(6 * (10::numeric ^ 131071), 			     9 * (10::numeric ^ 131071), 			     10::numeric ^ 131071) as a(i)
--Result--
[(6.0,), (7.0,), (8.0,), (9.0,)]
+--------------------+
--Query--
select * from generate_series(1::numeric, 3::numeric) i, generate_series(i,3) j
--Result--
[(1.0, 1.0), (1.0, 2.0), (1.0, 3.0), (2.0, 2.0), (2.0, 3.0), (3.0, 3.0)]
+--------------------+
--Query--
select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,i) j
--Result--
[(1.0, 1.0), (2.0, 1.0), (2.0, 2.0), (3.0, 1.0), (3.0, 2.0), (3.0, 3.0)]
+--------------------+
--Query--
select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,5,i) j
--Result--
[(1.0, 1.0), (1.0, 2.0), (1.0, 3.0), (1.0, 4.0), (1.0, 5.0), (2.0, 1.0), (2.0, 3.0), (2.0, 5.0), (3.0, 1.0), (3.0, 4.0)]
+--------------------+
--Query--
select ln(1.2345678e-28)
--Result--
[(-64.26166165451762,)]
+--------------------+
--Query--
select log(1.234567e-89)
--Result--
[(-88.90848533591374,)]
+--------------------+
--Query--
select min_scale(numeric 'NaN') is NULL
--Result--
[(True,)]
+--------------------+
--Query--
SELECT SUM(9999::numeric) FROM generate_series(1, 100000)
--Result--
[(999900000.0,)]
+--------------------+
--Query--
SELECT variance(a) FROM num_variance
--Result--
[(2.5,)]
+--------------------+
--Query--
SELECT a, b, gcd(a, b), gcd(a, -b), gcd(-b, a), gcd(-b, -a) FROM (VALUES (0::numeric, 0::numeric),              (0::numeric, numeric 'NaN'),              (0::numeric, 46375::numeric),              (433125::numeric, 46375::numeric),              (43312.5::numeric, 4637.5::numeric),              (4331.250::numeric, 463.75000::numeric),              ('inf', '0'),              ('inf', '42'),              ('inf', 'inf')      ) AS v(a, b)
--Result--
[(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, nan, nan, nan, nan, nan), (0.0, 46375.0, 46375.0, 46375.0, 46375.0, 46375.0), (433125.0, 46375.0, 875.0, 875.0, 875.0, 875.0), (43312.5, 4637.5, 87.5, 87.5, 87.5, 87.5), (4331.25, 463.75, 8.75, 8.75, 8.75, 8.75), (inf, 0.0, nan, nan, nan, nan), (inf, 42.0, nan, nan, nan, nan), (inf, inf, nan, nan, nan, nan)]
+--------------------+
--Query--
SELECT a,b, lcm(a, b), lcm(a, -b), lcm(-b, a), lcm(-b, -a) FROM (VALUES (0::numeric, 0::numeric),              (0::numeric, numeric 'NaN'),              (0::numeric, 13272::numeric),              (13272::numeric, 13272::numeric),              (423282::numeric, 13272::numeric),              (42328.2::numeric, 1327.2::numeric),              (4232.820::numeric, 132.72000::numeric),              ('inf', '0'),              ('inf', '42'),              ('inf', 'inf')      ) AS v(a, b)
--Result--
[(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, nan, nan, nan, nan, nan), (0.0, 13272.0, 0.0, 0.0, 0.0, 0.0), (13272.0, 13272.0, 13272.0, 13272.0, 13272.0, 13272.0), (423282.0, 13272.0, 11851896.0, 11851896.0, 11851896.0, 11851896.0), (42328.2, 1327.2, 1185189.6, 1185189.6, 1185189.6, 1185189.6), (4232.82, 132.72, 118518.96, 118518.96, 118518.96, 118518.96), (inf, 0.0, nan, nan, nan, nan), (inf, 42.0, nan, nan, nan, nan), (inf, inf, nan, nan, nan, nan)]
+--------------------+
--Query--
SELECT factorial(4)
--Result--
[(24.0,)]
+--------------------+
--Query--
SELECT pg_lsn(23783416::numeric)
--Result--
[('0/16AE7F8',)]
+--------------------+
