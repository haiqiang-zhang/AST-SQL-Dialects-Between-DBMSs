--Query--
SELECT pk, c_int, c_bpchar, c_text, c_date, c_timestamp,        c_timestamp_null, c_array, c_small, c_small_null,        c_big, c_num, c_time, c_interval,        c_hugetext = repeat('abcdefg',1000) as c_hugetext_origdef,        c_hugetext = repeat('poiuyt', 1000) as c_hugetext_newdef FROM T ORDER BY pk
--Result--
[(1, 1, 'hello', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (2, 1, 'hello', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (3, 2, 'hello', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (4, 2, 'hello', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (5, 2, 'dog  ', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (6, 2, 'dog  ', 'world', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (7, 2, 'dog  ', 'cat', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (8, 2, 'dog  ', 'cat', datetime.date(2016, 6, 2), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (9, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (10, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(2016, 9, 1, 12, 0), None, ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (11, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (12, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'the', 'real', 'world'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (13, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (14, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], -5, None, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (15, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (16, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, 180000000000018, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (17, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (18, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 1.00000000001, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (19, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (20, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(12, 0), datetime.timedelta(days=1), True, False), (21, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), datetime.timedelta(days=1), True, False), (22, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), datetime.timedelta(days=1), True, False), (23, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), datetime.timedelta(seconds=10800), True, False), (24, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), datetime.timedelta(seconds=10800), True, False), (25, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), None, False, True), (26, 2, 'dog  ', 'cat', datetime.date(2010, 1, 1), datetime.datetime(1970, 12, 31, 11, 12, 13), datetime.datetime(2016, 9, 29, 12, 0), ['This', 'is', 'no', 'fantasy'], 9, 13, -9999999999999999, 2.000000000000002, datetime.time(23, 59, 59), None, False, True), (27, 2, None, None, None, None, datetime.datetime(2016, 9, 29, 12, 0), None, None, 13, None, None, None, None, None, None), (28, 2, None, None, None, None, datetime.datetime(2016, 9, 29, 12, 0), None, None, 13, None, None, None, None, None, None)]
+--------------------+
--Query--
SELECT attname, atthasmissing, attmissingval FROM pg_attribute   WHERE attrelid = 't'::regclass AND attnum > 0   ORDER BY attnum
--Result--
[('pk', False, None), ('c1', False, None), ('c2', False, None), ('c3', False, None)]
+--------------------+
--Query--
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1
--Result--
[(-1, 'hello')]
+--------------------+
--Query--
EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1
--Result--
[('Limit',), ('  Output: c_bigint, c_text',), ('  ->  Seq Scan on fast_default.t',), ('        Output: c_bigint, c_text',), ("        Filter: (t.c_bigint = '-1'::integer)",)]
+--------------------+
--Query--
SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1
--Result--
[(-1, 'hello')]
+--------------------+
--Query--
EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1
--Result--
[('Limit',), ('  Output: c_bigint, c_text',), ('  ->  Seq Scan on fast_default.t',), ('        Output: c_bigint, c_text',), ("        Filter: (t.c_text = 'hello'::text)",)]
+--------------------+
--Query--
SELECT COALESCE(c_bigint, pk), COALESCE(c_text, pk::text) FROM T ORDER BY pk LIMIT 10
--Result--
[(-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello'), (-1, 'hello')]
+--------------------+
--Query--
SELECT SUM(c_bigint), MAX(c_text COLLATE "C" ), MIN(c_text COLLATE "C") FROM T
--Result--
[(200.0, 'hello', '31')]
+--------------------+
--Query--
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10
--Result--
[(1, -1, 'hello'), (2, -1, 'hello'), (3, -1, 'hello'), (4, -1, 'hello'), (5, -1, 'hello'), (6, -1, 'hello'), (7, -1, 'hello'), (8, -1, 'hello'), (9, -1, 'hello'), (10, -1, 'hello')]
+--------------------+
--Query--
EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10
--Result--
[('Limit',), ('  Output: pk, c_bigint, c_text',), ('  ->  Sort',), ('        Output: pk, c_bigint, c_text',), ('        Sort Key: t.c_bigint, t.c_text, t.pk',), ('        ->  Seq Scan on fast_default.t',), ('              Output: pk, c_bigint, c_text',)]
+--------------------+
--Query--
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10
--Result--
[(11, 1, 'hello'), (12, 2, 'hello'), (13, 3, 'hello'), (14, 4, 'hello'), (15, 5, 'hello'), (16, 6, 'hello'), (17, 7, 'hello'), (18, 8, 'hello'), (19, 9, 'hello'), (20, 10, 'hello')]
+--------------------+
--Query--
EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10
--Result--
[('Limit',), ('  Output: pk, c_bigint, c_text',), ('  ->  Sort',), ('        Output: pk, c_bigint, c_text',), ('        Sort Key: t.c_bigint, t.c_text, t.pk',), ('        ->  Seq Scan on fast_default.t',), ('              Output: pk, c_bigint, c_text',), ("              Filter: (t.c_bigint > '-1'::integer)",)]
+--------------------+
--Query--
EXPLAIN (VERBOSE TRUE, COSTS FALSE) DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *
--Result--
[('Delete on fast_default.t',), ('  Output: pk, c_bigint, c_text',), ('  ->  Bitmap Heap Scan on fast_default.t',), ('        Output: ctid',), ('        Recheck Cond: ((t.pk >= 10) AND (t.pk <= 20))',), ('        ->  Bitmap Index Scan on t_pkey',), ('              Index Cond: ((t.pk >= 10) AND (t.pk <= 20))',)]
+--------------------+
--Query--
SELECT * FROM T WHERE c_text LIKE '"%"' ORDER BY PK
--Result--
[(1, -1, '"hello"'), (2, -1, '"hello"'), (3, -1, '"hello"'), (4, -1, '"hello"'), (5, -1, '"hello"'), (6, -1, '"hello"'), (7, -1, '"hello"'), (8, -1, '"hello"'), (9, -1, '"hello"')]
+--------------------+
--Query--
SELECT * FROM T ORDER BY pk
--Result--
[(1, -1, 'Hello'), (2, -1, 'Hello'), (3, -1, 'Hello'), (4, -1, 'Hello'), (5, -1, 'Hello'), (6, -1, 'Hello'), (7, 1, 'world'), (8, 1, 'world')]
+--------------------+
--Query--
SELECT c_text FROM T WHERE c_int = -1
--Result--
[('Hello',), ('Hello',), ('Hello',), ('Hello',), ('Hello',), ('Hello',)]
+--------------------+
--Query--
SELECT a,        stddev(cast((SELECT sum(1) FROM generate_series(1,20) x) AS float4))           OVER (PARTITION BY a,b,c ORDER BY b)        AS z FROM t1
--Result--
[(1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, 4, 5)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, 4, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, 4, None)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, 4, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, None, 5)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, None, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, None, None)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, 3, None, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, 4, 5)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, 4, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, 4, None)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, 4, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, None, 5)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, None, 2)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, None, None)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(1, 1, 2, None, None, 2)]
+--------------------+
--Query--
SELECT * FROM vtype
--Result--
[(1, 0.2, True)]
+--------------------+
--Query--
SELECT * FROM vtype
--Result--
[(1, '0.2', 'true')]
+--------------------+
--Query--
SELECT * FROM vtype2
--Result--
[(1, 'xxx'), (2, 'yyy')]
+--------------------+
--Query--
SELECT * FROM t WHERE a IS NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t WHERE a IS NULL
--Result--
[(None,)]
+--------------------+
--Query--
table has_fast_default
--Result--
[(1, 42)]
+--------------------+
