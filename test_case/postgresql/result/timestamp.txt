--Query--
SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'today'
--Result--
[(1,)]
+--------------------+
--Query--
SELECT count(*) AS Three FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'tomorrow'
--Result--
[(3,)]
+--------------------+
--Query--
SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'yesterday'
--Result--
[(1,)]
+--------------------+
--Query--
SELECT pg_sleep(0.1)
--Result--
[('',)]
+--------------------+
--Query--
SELECT count(*) AS two FROM TIMESTAMP_TBL WHERE d1 = timestamp(2) without time zone 'now'
--Result--
[(2,)]
+--------------------+
--Query--
SELECT count(d1) AS three, count(DISTINCT d1) AS two FROM TIMESTAMP_TBL
--Result--
[(3, 2)]
+--------------------+
--Query--
TRUNCATE TIMESTAMP_TBL
--Result--
[]
+--------------------+
--Query--
SELECT timestamp 'infinity' = timestamp '+infinity' AS t
--Result--
[(True,)]
+--------------------+
--Query--
SELECT pg_input_is_valid('now', 'timestamp')
--Result--
[(True,)]
+--------------------+
--Query--
SELECT * FROM pg_input_error_info('garbage', 'timestamp')
--Result--
[('invalid input syntax for type timestamp: "garbage"', None, None, '22007')]
+--------------------+
--Query--
SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 > timestamp without time zone '1997-01-02'
--Result--
[(datetime.datetime(9999, 12, 31, 23, 59, 59, 999999),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 2),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 400000),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 500000),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 600000),), (datetime.datetime(1997, 1, 2, 3, 4, 5),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 6, 10, 17, 32, 1),), (datetime.datetime(2001, 9, 22, 18, 19, 20),), (datetime.datetime(2000, 3, 15, 8, 14, 1),), (datetime.datetime(2000, 3, 15, 13, 14, 2),), (datetime.datetime(2000, 3, 15, 12, 14, 3),), (datetime.datetime(2000, 3, 15, 3, 14, 4),), (datetime.datetime(2000, 3, 15, 2, 14, 5),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 6, 10, 18, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 11, 17, 32, 1),), (datetime.datetime(1997, 2, 12, 17, 32, 1),), (datetime.datetime(1997, 2, 13, 17, 32, 1),), (datetime.datetime(1997, 2, 14, 17, 32, 1),), (datetime.datetime(1997, 2, 15, 17, 32, 1),), (datetime.datetime(1997, 2, 16, 17, 32, 1),), (datetime.datetime(1997, 2, 16, 17, 32, 1),), (datetime.datetime(2097, 2, 16, 17, 32, 1),), (datetime.datetime(1997, 2, 28, 17, 32, 1),), (datetime.datetime(1997, 3, 1, 17, 32, 1),), (datetime.datetime(1997, 12, 30, 17, 32, 1),), (datetime.datetime(1997, 12, 31, 17, 32, 1),), (datetime.datetime(1999, 12, 31, 17, 32, 1),), (datetime.datetime(2000, 1, 1, 17, 32, 1),), (datetime.datetime(2000, 12, 31, 17, 32, 1),), (datetime.datetime(2001, 1, 1, 17, 32, 1),)]
+--------------------+
--Query--
SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 = timestamp without time zone '1997-01-02'
--Result--
[(datetime.datetime(1997, 1, 2, 0, 0),)]
+--------------------+
--Query--
SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 >= timestamp without time zone '1997-01-02'
--Result--
[(datetime.datetime(9999, 12, 31, 23, 59, 59, 999999),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 2),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 400000),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 500000),), (datetime.datetime(1997, 2, 10, 17, 32, 1, 600000),), (datetime.datetime(1997, 1, 2, 0, 0),), (datetime.datetime(1997, 1, 2, 3, 4, 5),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 6, 10, 17, 32, 1),), (datetime.datetime(2001, 9, 22, 18, 19, 20),), (datetime.datetime(2000, 3, 15, 8, 14, 1),), (datetime.datetime(2000, 3, 15, 13, 14, 2),), (datetime.datetime(2000, 3, 15, 12, 14, 3),), (datetime.datetime(2000, 3, 15, 3, 14, 4),), (datetime.datetime(2000, 3, 15, 2, 14, 5),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 6, 10, 18, 32, 1),), (datetime.datetime(1997, 2, 10, 17, 32, 1),), (datetime.datetime(1997, 2, 11, 17, 32, 1),), (datetime.datetime(1997, 2, 12, 17, 32, 1),), (datetime.datetime(1997, 2, 13, 17, 32, 1),), (datetime.datetime(1997, 2, 14, 17, 32, 1),), (datetime.datetime(1997, 2, 15, 17, 32, 1),), (datetime.datetime(1997, 2, 16, 17, 32, 1),), (datetime.datetime(1997, 2, 16, 17, 32, 1),), (datetime.datetime(2097, 2, 16, 17, 32, 1),), (datetime.datetime(1997, 2, 28, 17, 32, 1),), (datetime.datetime(1997, 3, 1, 17, 32, 1),), (datetime.datetime(1997, 12, 30, 17, 32, 1),), (datetime.datetime(1997, 12, 31, 17, 32, 1),), (datetime.datetime(1999, 12, 31, 17, 32, 1),), (datetime.datetime(2000, 1, 1, 17, 32, 1),), (datetime.datetime(2000, 12, 31, 17, 32, 1),), (datetime.datetime(2001, 1, 1, 17, 32, 1),)]
+--------------------+
--Query--
SELECT d1 - timestamp without time zone '1997-01-02' AS diff    FROM TIMESTAMP_TBL WHERE d1 BETWEEN '1902-01-01' AND '2038-01-01'
--Result--
[(datetime.timedelta(days=-9863),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63122),), (datetime.timedelta(days=39, seconds=63121, microseconds=400000),), (datetime.timedelta(days=39, seconds=63121, microseconds=500000),), (datetime.timedelta(days=39, seconds=63121, microseconds=600000),), (datetime.timedelta(0),), (datetime.timedelta(seconds=11045),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=159, seconds=63121),), (datetime.timedelta(days=1724, seconds=65960),), (datetime.timedelta(days=1168, seconds=29641),), (datetime.timedelta(days=1168, seconds=47642),), (datetime.timedelta(days=1168, seconds=44043),), (datetime.timedelta(days=1168, seconds=11644),), (datetime.timedelta(days=1168, seconds=8045),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63120),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=159, seconds=66721),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=40, seconds=63121),), (datetime.timedelta(days=41, seconds=63121),), (datetime.timedelta(days=42, seconds=63121),), (datetime.timedelta(days=43, seconds=63121),), (datetime.timedelta(days=44, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=-309, seconds=63121),), (datetime.timedelta(days=-308, seconds=63121),), (datetime.timedelta(days=-307, seconds=63121),), (datetime.timedelta(days=-3, seconds=63121),), (datetime.timedelta(days=-2, seconds=63121),), (datetime.timedelta(days=-1, seconds=63121),), (datetime.timedelta(days=57, seconds=63121),), (datetime.timedelta(days=58, seconds=63121),), (datetime.timedelta(days=362, seconds=63121),), (datetime.timedelta(days=363, seconds=63121),), (datetime.timedelta(days=1093, seconds=63121),), (datetime.timedelta(days=1094, seconds=63121),), (datetime.timedelta(days=1459, seconds=63121),), (datetime.timedelta(days=1460, seconds=63121),)]
+--------------------+
--Query--
SELECT date_trunc( 'week', timestamp '2004-02-29 15:44:17.71393' ) AS week_trunc
--Result--
[(datetime.datetime(2004, 2, 23, 0, 0),)]
+--------------------+
--Query--
SELECT   str,   interval,   date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2001-01-01') AS equal FROM (   VALUES   ('week', '7 d'),   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamp '2020-02-29 15:44:17.71393')) ts (ts)
--Result--
[('week', '7 d', True), ('day', '1 d', True), ('hour', '1 h', True), ('minute', '1 m', True), ('second', '1 s', True), ('millisecond', '1 ms', True), ('microsecond', '1 us', True)]
+--------------------+
--Query--
SELECT   interval,   ts,   origin,   date_bin(interval::interval, ts, origin) FROM (   VALUES   ('15 days'),   ('2 hours'),   ('1 hour 30 minutes'),   ('15 minutes'),   ('10 seconds'),   ('100 milliseconds'),   ('250 microseconds') ) intervals (interval), (VALUES (timestamp '2020-02-11 15:44:17.71393')) ts (ts), (VALUES (timestamp '2001-01-01')) origin (origin)
--Result--
[('15 days', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 6, 0, 0)), ('2 hours', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 14, 0)), ('1 hour 30 minutes', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 15, 0)), ('15 minutes', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 15, 30)), ('10 seconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 15, 44, 10)), ('100 milliseconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 15, 44, 17, 700000)), ('250 microseconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930), datetime.datetime(2001, 1, 1, 0, 0), datetime.datetime(2020, 2, 11, 15, 44, 17, 713750))]
+--------------------+
--Query--
SELECT date_bin('5 min'::interval, timestamp '2020-02-01 01:01:01', timestamp '2020-02-01 00:02:30')
--Result--
[(datetime.datetime(2020, 2, 1, 0, 57, 30),)]
+--------------------+
--Query--
SELECT d1 - timestamp without time zone '1997-01-02' AS diff   FROM TIMESTAMP_TBL   WHERE d1 BETWEEN timestamp without time zone '1902-01-01'    AND timestamp without time zone '2038-01-01'
--Result--
[(datetime.timedelta(days=-9863),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63122),), (datetime.timedelta(days=39, seconds=63121, microseconds=400000),), (datetime.timedelta(days=39, seconds=63121, microseconds=500000),), (datetime.timedelta(days=39, seconds=63121, microseconds=600000),), (datetime.timedelta(0),), (datetime.timedelta(seconds=11045),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=159, seconds=63121),), (datetime.timedelta(days=1724, seconds=65960),), (datetime.timedelta(days=1168, seconds=29641),), (datetime.timedelta(days=1168, seconds=47642),), (datetime.timedelta(days=1168, seconds=44043),), (datetime.timedelta(days=1168, seconds=11644),), (datetime.timedelta(days=1168, seconds=8045),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63120),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=159, seconds=66721),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=40, seconds=63121),), (datetime.timedelta(days=41, seconds=63121),), (datetime.timedelta(days=42, seconds=63121),), (datetime.timedelta(days=43, seconds=63121),), (datetime.timedelta(days=44, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=-309, seconds=63121),), (datetime.timedelta(days=-308, seconds=63121),), (datetime.timedelta(days=-307, seconds=63121),), (datetime.timedelta(days=-3, seconds=63121),), (datetime.timedelta(days=-2, seconds=63121),), (datetime.timedelta(days=-1, seconds=63121),), (datetime.timedelta(days=57, seconds=63121),), (datetime.timedelta(days=58, seconds=63121),), (datetime.timedelta(days=362, seconds=63121),), (datetime.timedelta(days=363, seconds=63121),), (datetime.timedelta(days=1093, seconds=63121),), (datetime.timedelta(days=1094, seconds=63121),), (datetime.timedelta(days=1459, seconds=63121),), (datetime.timedelta(days=1460, seconds=63121),)]
+--------------------+
--Query--
SELECT date_part('epoch', '294270-01-01 00:00:00'::timestamp)
--Result--
[(9224097091200.0,)]
+--------------------+
--Query--
SELECT extract(epoch from '294270-01-01 00:00:00'::timestamp)
--Result--
[(9224097091200.0,)]
+--------------------+
--Query--
SELECT timestamp '294276-12-31 23:59:59' - timestamp '1999-12-23 19:59:04.224193' AS ok
--Result--
[(datetime.timedelta(days=106751991, seconds=14454, microseconds=775807),)]
+--------------------+
--Query--
SELECT to_char(d1, 'DAY Day day DY Dy dy MONTH Month month RM MON Mon mon')    FROM TIMESTAMP_TBL
--Result--
[(None,), (None,), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue JUNE      June      june      VI   JUN Jun jun',), ('SATURDAY  Saturday  saturday  SAT Sat sat SEPTEMBER September september IX   SEP Sep sep',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue JUNE      June      june      VI   JUN Jun jun',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('WEDNESDAY Wednesday wednesday WED Wed wed FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('FRIDAY    Friday    friday    FRI Fri fri FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('SUNDAY    Sunday    sunday    SUN Sun sun FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SUNDAY    Sunday    sunday    SUN Sun sun FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('WEDNESDAY Wednesday wednesday WED Wed wed FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('FRIDAY    Friday    friday    FRI Fri fri MARCH     March     march     III  MAR Mar mar',), ('MONDAY    Monday    monday    MON Mon mon DECEMBER  December  december  XII  DEC Dec dec',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue DECEMBER  December  december  XII  DEC Dec dec',), ('WEDNESDAY Wednesday wednesday WED Wed wed JANUARY   January   january   I    JAN Jan jan',), ('FRIDAY    Friday    friday    FRI Fri fri FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat MARCH     March     march     III  MAR Mar mar',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue DECEMBER  December  december  XII  DEC Dec dec',), ('WEDNESDAY Wednesday wednesday WED Wed wed DECEMBER  December  december  XII  DEC Dec dec',), ('FRIDAY    Friday    friday    FRI Fri fri DECEMBER  December  december  XII  DEC Dec dec',), ('SATURDAY  Saturday  saturday  SAT Sat sat JANUARY   January   january   I    JAN Jan jan',), ('SUNDAY    Sunday    sunday    SUN Sun sun DECEMBER  December  december  XII  DEC Dec dec',), ('MONDAY    Monday    monday    MON Mon mon JANUARY   January   january   I    JAN Jan jan',)]
+--------------------+
--Query--
SELECT to_char(d, 'FF1 FF2 FF3 FF4 FF5 FF6  ff1 ff2 ff3 ff4 ff5 ff6  MS US')    FROM (VALUES        ('2018-11-02 12:34:56'::timestamp),        ('2018-11-02 12:34:56.78'),        ('2018-11-02 12:34:56.78901'),        ('2018-11-02 12:34:56.78901234')    ) d(d)
--Result--
[('0 00 000 0000 00000 000000  0 00 000 0000 00000 000000  000 000000',), ('7 78 780 7800 78000 780000  7 78 780 7800 78000 780000  780 780000',), ('7 78 789 7890 78901 789010  7 78 789 7890 78901 789010  789 789010',), ('7 78 789 7890 78901 789012  7 78 789 7890 78901 789012  789 789012',)]
+--------------------+
--Query--
SELECT make_timestamp(2014, 12, 28, 6, 30, 45.887)
--Result--
[(datetime.datetime(2014, 12, 28, 6, 30, 45, 887000),)]
+--------------------+
--Query--
select * from generate_series('2020-01-01 00:00'::timestamp,                               '2020-01-02 03:00'::timestamp,                               '1 hour'::interval)
--Result--
[(datetime.datetime(2020, 1, 1, 0, 0),), (datetime.datetime(2020, 1, 1, 1, 0),), (datetime.datetime(2020, 1, 1, 2, 0),), (datetime.datetime(2020, 1, 1, 3, 0),), (datetime.datetime(2020, 1, 1, 4, 0),), (datetime.datetime(2020, 1, 1, 5, 0),), (datetime.datetime(2020, 1, 1, 6, 0),), (datetime.datetime(2020, 1, 1, 7, 0),), (datetime.datetime(2020, 1, 1, 8, 0),), (datetime.datetime(2020, 1, 1, 9, 0),), (datetime.datetime(2020, 1, 1, 10, 0),), (datetime.datetime(2020, 1, 1, 11, 0),), (datetime.datetime(2020, 1, 1, 12, 0),), (datetime.datetime(2020, 1, 1, 13, 0),), (datetime.datetime(2020, 1, 1, 14, 0),), (datetime.datetime(2020, 1, 1, 15, 0),), (datetime.datetime(2020, 1, 1, 16, 0),), (datetime.datetime(2020, 1, 1, 17, 0),), (datetime.datetime(2020, 1, 1, 18, 0),), (datetime.datetime(2020, 1, 1, 19, 0),), (datetime.datetime(2020, 1, 1, 20, 0),), (datetime.datetime(2020, 1, 1, 21, 0),), (datetime.datetime(2020, 1, 1, 22, 0),), (datetime.datetime(2020, 1, 1, 23, 0),), (datetime.datetime(2020, 1, 2, 0, 0),), (datetime.datetime(2020, 1, 2, 1, 0),), (datetime.datetime(2020, 1, 2, 2, 0),), (datetime.datetime(2020, 1, 2, 3, 0),)]
+--------------------+
--Query--
select age(timestamp 'infinity')
--Result--
[(datetime.timedelta(days=-106672205, seconds=71945, microseconds=224193),)]
+--------------------+
