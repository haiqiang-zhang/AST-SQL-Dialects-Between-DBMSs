--Query--
SHOW track_counts
--Result--
[('on',)]
+--------------------+
--Query--
TRUNCATE trunc_stats_test
--Result--
[]
+--------------------+
--Query--
TRUNCATE trunc_stats_test1
--Result--
[]
+--------------------+
--Query--
SAVEPOINT p1
--Result--
[]
+--------------------+
--Query--
TRUNCATE trunc_stats_test2
--Result--
[]
+--------------------+
--Query--
RELEASE SAVEPOINT p1
--Result--
[]
+--------------------+
--Query--
SAVEPOINT p1
--Result--
[]
+--------------------+
--Query--
TRUNCATE trunc_stats_test3
--Result--
[]
+--------------------+
--Query--
TRUNCATE trunc_stats_test4
--Result--
[]
+--------------------+
--Query--
SELECT pg_stat_force_next_flush()
--Result--
[('',)]
+--------------------+
--Query--
SELECT relname, n_tup_ins, n_tup_upd, n_tup_del, n_live_tup, n_dead_tup   FROM pg_stat_user_tables  WHERE relname like 'trunc_stats_test%' order by relname
--Result--
[('trunc_stats_test', 3, 0, 0, 0, 0), ('trunc_stats_test1', 4, 2, 1, 1, 0), ('trunc_stats_test2', 1, 0, 0, 1, 0), ('trunc_stats_test3', 4, 0, 0, 2, 2), ('trunc_stats_test4', 2, 0, 0, 0, 2)]
+--------------------+
--Query--
SELECT st.seq_scan >= pr.seq_scan + 1,        st.seq_tup_read >= pr.seq_tup_read + cl.reltuples,        st.idx_scan >= pr.idx_scan + 1,        st.idx_tup_fetch >= pr.idx_tup_fetch + 1   FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr  WHERE st.relname='tenk2' AND cl.relname='tenk2'
--Result--
[]
+--------------------+
--Query--
SELECT st.heap_blks_read + st.heap_blks_hit >= pr.heap_blks + cl.relpages,        st.idx_blks_read + st.idx_blks_hit >= pr.idx_blks + 1   FROM pg_statio_user_tables AS st, pg_class AS cl, prevstats AS pr  WHERE st.relname='tenk2' AND cl.relname='tenk2'
--Result--
[]
+--------------------+
--Query--
SELECT pr.snap_ts < pg_stat_get_snapshot_timestamp() as snapshot_newer FROM prevstats AS pr
--Result--
[]
+--------------------+
--Query--
SAVEPOINT sp1
--Result--
[]
+--------------------+
--Query--
SAVEPOINT sp1
--Result--
[]
+--------------------+
--Query--
SELECT last_seq_scan, last_idx_scan FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass
--Result--
[(None, None)]
+--------------------+
--Query--
SELECT seq_scan, idx_scan FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass
--Result--
[(0, 0)]
+--------------------+
--Query--
EXPLAIN (COSTS off) SELECT count(*) FROM test_last_scan WHERE noidx_col = 1
--Result--
[('Aggregate',), ('  ->  Seq Scan on test_last_scan',), ('        Filter: (noidx_col = 1)',)]
+--------------------+
--Query--
SELECT count(*) FROM test_last_scan WHERE noidx_col = 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT (n_tup_ins + n_tup_upd) > 0 AS has_data FROM pg_stat_all_tables   WHERE relid = 'pg_shdescription'::regclass
--Result--
[(False,)]
+--------------------+
--Query--
SELECT (n_tup_ins + n_tup_upd) > 0 AS has_data FROM pg_stat_all_tables   WHERE relid = 'pg_shdescription'::regclass
--Result--
[(False,)]
+--------------------+
--Query--
SELECT (current_schemas(true))[1] = ('pg_temp_' || beid::text) AS match FROM pg_stat_get_backend_idset() beid WHERE pg_stat_get_backend_pid(beid) = pg_backend_pid()
--Result--
[(True,)]
+--------------------+
--Query--
SELECT pg_stat_get_snapshot_timestamp()
--Result--
[(None,)]
+--------------------+
--Query--
SELECT pg_stat_get_function_calls(0)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT pg_stat_get_snapshot_timestamp() >= NOW()
--Result--
[(True,)]
+--------------------+
--Query--
SELECT pg_stat_clear_snapshot()
--Result--
[('',)]
+--------------------+
--Query--
select a from stats_test_tab1 where a = 3
--Result--
[(3,)]
+--------------------+
--Query--
REINDEX index CONCURRENTLY stats_test_idx1
--Result--
[]
+--------------------+
--Query--
SELECT pg_stat_get_replication_slot(NULL)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT pg_stat_get_subscription_stats(NULL)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT pg_relation_size('test_io_local') / current_setting('block_size')::int8 > 100
--Result--
[(False,)]
+--------------------+
--Query--
SELECT pg_stat_get_tuples_hot_updated('brin_hot'::regclass::oid)
--Result--
[(0,)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT * FROM brin_hot_2 WHERE a = 2 AND b = 100
--Result--
[('Seq Scan on brin_hot_2',), ('  Filter: ((a = 2) AND (b = 100))',)]
+--------------------+
--Query--
SELECT COUNT(*) FROM brin_hot_2 WHERE a = 2 AND b = 100
--Result--
[(1,)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT * FROM brin_hot_2 WHERE a = 2 AND b = 100
--Result--
[('Bitmap Heap Scan on brin_hot_2',), ('  Recheck Cond: ((b = 100) AND (a = 2))',), ('  ->  Bitmap Index Scan on brin_hot_2_b_idx',), ('        Index Cond: (b = 100)',)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT * FROM brin_hot_3 WHERE a = 2
--Result--
[('Bitmap Heap Scan on brin_hot_3',), ('  Recheck Cond: (a = 2)',), ('  ->  Bitmap Index Scan on brin_hot_3_a_idx',), ('        Index Cond: (a = 2)',)]
+--------------------+
