--Query--
ANALYZE real_city
--Result--
[]
+--------------------+
--Query--
SELECT * FROM viewtest
--Result--
[]
+--------------------+
--Query--
SELECT * FROM viewtest
--Result--
[]
+--------------------+
--Query--
SELECT relname FROM pg_class     WHERE relname LIKE 'v_'     AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'temp_view_test')     ORDER BY relname
--Result--
[('v1',), ('v2',), ('v3',), ('v4',), ('v5',), ('v6',), ('v7',), ('v8',), ('v9',)]
+--------------------+
--Query--
SELECT relname FROM pg_class     WHERE relname LIKE 'v%'     AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')     ORDER BY relname
--Result--
[('v10_temp',), ('v11_temp',), ('v12_temp',), ('v13_temp',), ('v1_temp',), ('v2_temp',), ('v4_temp',), ('v5_temp',), ('v6_temp',), ('v7_temp',), ('v8_temp',), ('v9_temp',)]
+--------------------+
--Query--
SELECT relname FROM pg_class     WHERE relname LIKE 'nontemp%'     AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'testviewschm2')     ORDER BY relname
--Result--
[('nontemp1',), ('nontemp2',), ('nontemp3',), ('nontemp4',)]
+--------------------+
--Query--
SELECT relname FROM pg_class     WHERE relname LIKE 'temporal%'     AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')     ORDER BY relname
--Result--
[('temporal1',), ('temporal2',), ('temporal3',), ('temporal4',)]
+--------------------+
--Query--
SELECT count(*) FROM pg_class where relname = 'pubview' AND relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname = 'testviewschm2')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT count(*) FROM pg_class where relname LIKE 'mytempview' And relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname LIKE 'pg_temp%')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT relname, relkind, reloptions FROM pg_class        WHERE oid in ('mysecview1'::regclass, 'mysecview2'::regclass,                      'mysecview3'::regclass, 'mysecview4'::regclass,                      'mysecview7'::regclass, 'mysecview8'::regclass,                      'mysecview9'::regclass)        ORDER BY relname
--Result--
[('mysecview1', 'v', None), ('mysecview2', 'v', ['security_barrier=true']), ('mysecview3', 'v', ['security_barrier=false']), ('mysecview4', 'v', ['security_barrier=true']), ('mysecview7', 'v', ['security_invoker=true']), ('mysecview8', 'v', ['security_invoker=false', 'security_barrier=true']), ('mysecview9', 'v', ['security_invoker=true'])]
+--------------------+
--Query--
SELECT relname, relkind, reloptions FROM pg_class        WHERE oid in ('mysecview1'::regclass, 'mysecview2'::regclass,                      'mysecview3'::regclass, 'mysecview4'::regclass,                      'mysecview7'::regclass, 'mysecview8'::regclass,                      'mysecview9'::regclass)        ORDER BY relname
--Result--
[('mysecview1', 'v', None), ('mysecview2', 'v', None), ('mysecview3', 'v', ['security_barrier=true']), ('mysecview4', 'v', ['security_barrier=false']), ('mysecview7', 'v', None), ('mysecview8', 'v', ['security_invoker=true']), ('mysecview9', 'v', ['security_invoker=false', 'security_barrier=true'])]
+--------------------+
--Query--
SELECT * FROM unspecified_types
--Result--
[(42, 42.5, 'foo', 'foo', None)]
+--------------------+
--Query--
SELECT * FROM tt1
--Result--
[('abc', '0123456789', 42.0, 'abcd'), ('0123456789', 'abc', 42.12, 'abc')]
+--------------------+
--Query--
SELECT a::varchar(3) FROM tt1
--Result--
[('abc',), ('012',)]
+--------------------+
--Query--
select pg_get_viewdef('view_of_joins_2a', true)
--Result--
[(' SELECT tbl1.a,\n    tbl1.b,\n    tbl1a.c\n   FROM tbl1\n     JOIN tbl1a USING (a);',)]
+--------------------+
--Query--
select pg_get_viewdef('view_of_joins_2b', true)
--Result--
[(' SELECT tbl1.a,\n    tbl1.b,\n    tbl1a.c\n   FROM tbl1\n     JOIN tbl1a USING (a) AS x;',)]
+--------------------+
--Query--
select pg_get_viewdef('view_of_joins_2c', true)
--Result--
[(' SELECT y.a,\n    y.b,\n    y.c\n   FROM (tbl1\n     JOIN tbl1a USING (a)) y;',)]
+--------------------+
--Query--
select pg_get_viewdef('view_of_joins_2d', true)
--Result--
[(' SELECT y.a,\n    y.b,\n    y.c\n   FROM (tbl1\n     JOIN tbl1a USING (a) AS x) y;',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax\n   FROM (tt2\n     JOIN tt3 USING (b, c)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v2', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 USING (b, c)\n     JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax,\n    j.ay,\n    j.q\n   FROM (tt2\n     JOIN tt3 USING (b, c)\n     JOIN tt4 USING (b)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v3', true)
--Result--
[(' SELECT b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 USING (b, c)\n     FULL JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax\n   FROM (tt2\n     JOIN tt3 USING (b, c)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v2', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 USING (b, c)\n     JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax,\n    j.ay,\n    j.q\n   FROM (tt2\n     JOIN tt3 USING (b, c)\n     JOIN tt4 USING (b)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v3', true)
--Result--
[(' SELECT b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 USING (b, c)\n     FULL JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c) USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c) USING (b, c)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v2', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c) USING (b, c)\n     JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax,\n    j.ay,\n    j.q\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c) USING (b, c)\n     JOIN tt4 USING (b)) j;',)]
+--------------------+
--Query--
select pg_get_viewdef('v3', true)
--Result--
[(' SELECT b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c) USING (b, c)\n     FULL JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)) j(b, c, a, d, e, ax, c_1, e_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax,\n    j.ay,\n    j.q\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     JOIN tt4 USING (b)) j(b, c, a, d, e, ax, c_1, e_1, ay, q);',)]
+--------------------+
--Query--
select pg_get_viewdef('v3', true)
--Result--
[(' SELECT b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     FULL JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)) j(b, c, a, e, ax, c_1, e_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('v2a', true)
--Result--
[(' SELECT j.b,\n    j.c,\n    j.a,\n    j.ax,\n    j.ay,\n    j.q\n   FROM (tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     JOIN tt4 USING (b)) j(b, c, a, e, ax, c_1, e_1, ay, q);',)]
+--------------------+
--Query--
select pg_get_viewdef('v3', true)
--Result--
[(' SELECT b,\n    tt3.c,\n    tt2.a,\n    tt3.ax,\n    tt4.ay,\n    tt4.q\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c)\n     FULL JOIN tt4 USING (b);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv1', true)
--Result--
[(' SELECT j.aa,\n    j.bb,\n    j.cc,\n    j.dd\n   FROM (tt5\n     CROSS JOIN tt6) j(aa, bb, cc, dd);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv1', true)
--Result--
[(' SELECT j.aa,\n    j.bb,\n    j.cc,\n    j.dd\n   FROM (tt5\n     CROSS JOIN tt6) j(aa, bb, c, cc, dd);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv1', true)
--Result--
[(' SELECT j.aa,\n    j.bb,\n    j.cc,\n    j.dd\n   FROM (tt5\n     CROSS JOIN tt6) j(aa, bb, c, cc_1, cc, dd);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv1', true)
--Result--
[(' SELECT j.aa,\n    j.bb,\n    j.cc,\n    j.dd\n   FROM (tt5\n     CROSS JOIN tt6) j(aa, bb, cc_1, cc, dd);',)]
+--------------------+
--Query--
select pg_get_viewdef('v1', true)
--Result--
[(' SELECT tt2.b,\n    tt3.c,\n    tt2.a AS x,\n    tt3.ax\n   FROM tt2\n     JOIN tt3 tt3(ax, b, c, c_1, e) USING (b, c);',)]
+--------------------+
--Query--
select pg_get_viewdef('v4', true)
--Result--
[(' SELECT b,\n    c,\n    x AS a,\n    ax\n   FROM v1;',)]
+--------------------+
--Query--
select pg_get_viewdef('vv2', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.d,\n    v.e\n   FROM ( VALUES (1,2,3,4,5)) v(a, b, c, d, e)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    tt8x.x_1 AS d,\n    tt8x.z AS e\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt8 tt8x(x_1, z);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv3', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.x,\n    v.e,\n    v.f\n   FROM ( VALUES (1,2,3,4,5,6)) v(a, b, c, x, e, f)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    x_1 AS x,\n    tt7x.y AS e,\n    tt8x.z AS f\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt7 tt7x(x_1, y)\n     FULL JOIN tt8 tt8x(x_1, z) USING (x_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv4', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.x,\n    v.e,\n    v.f,\n    v.g\n   FROM ( VALUES (1,2,3,4,5,6,7)) v(a, b, c, x, e, f, g)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    x_1 AS x,\n    tt7x.y AS e,\n    tt8x.z AS f,\n    tt8y.z AS g\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt7 tt7x(x_1, y)\n     FULL JOIN tt8 tt8x(x_1, z) USING (x_1)\n     FULL JOIN tt8 tt8y(x_1, z) USING (x_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv2', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.d,\n    v.e\n   FROM ( VALUES (1,2,3,4,5)) v(a, b, c, d, e)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    tt8x.x_1 AS d,\n    tt8x.z AS e\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt8 tt8x(x_1, z, z2);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv3', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.x,\n    v.e,\n    v.f\n   FROM ( VALUES (1,2,3,4,5,6)) v(a, b, c, x, e, f)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    x_1 AS x,\n    tt7x.y AS e,\n    tt8x.z AS f\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt7 tt7x(x_1, y, z)\n     FULL JOIN tt8 tt8x(x_1, z, z2) USING (x_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv4', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.x,\n    v.e,\n    v.f,\n    v.g\n   FROM ( VALUES (1,2,3,4,5,6,7)) v(a, b, c, x, e, f, g)\nUNION ALL\n SELECT x AS a,\n    tt7.y AS b,\n    tt8.z AS c,\n    x_1 AS x,\n    tt7x.y AS e,\n    tt8x.z AS f,\n    tt8y.z AS g\n   FROM tt7\n     FULL JOIN tt8 USING (x),\n    tt7 tt7x(x_1, y, z)\n     FULL JOIN tt8 tt8x(x_1, z, z2) USING (x_1)\n     FULL JOIN tt8 tt8y(x_1, z, z2) USING (x_1);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv2a', true)
--Result--
[(' SELECT v.a,\n    v.b,\n    v.c,\n    v.d,\n    v.e\n   FROM ( VALUES (now(),2,3,now(),5)) v(a, b, c, d, e)\nUNION ALL\n SELECT x AS a,\n    tt7a.y AS b,\n    tt8a.z AS c,\n    tt8ax.x_1 AS d,\n    tt8ax.z AS e\n   FROM tt7a\n     LEFT JOIN tt8a USING (x),\n    tt8a tt8ax(x_1, z);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv5', true)
--Result--
[(' SELECT tt9.x,\n    tt9.y,\n    tt10.z\n   FROM tt9\n     JOIN tt10 USING (x);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv5', true)
--Result--
[(' SELECT tt9.x,\n    tt9.y,\n    tt10.z\n   FROM tt9\n     JOIN tt10 USING (x);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv6', true)
--Result--
[(' SELECT tt11.x,\n    tt11.y,\n    tt12.z,\n    tt13.q\n   FROM tt11\n     JOIN tt12 USING (x)\n     JOIN tt13 USING (z);',)]
+--------------------+
--Query--
select pg_get_viewdef('vv6', true)
--Result--
[(' SELECT tt11.x,\n    tt11.y,\n    tt12.z,\n    tt13.q\n   FROM tt11 tt11(x, y, z_1)\n     JOIN tt12 USING (x)\n     JOIN tt13 USING (z);',)]
+--------------------+
--Query--
select pg_get_viewdef('tt14v', true)
--Result--
[(' SELECT f1,\n    f3,\n    f4\n   FROM tt14f() t(f1, f3, f4);',)]
+--------------------+
--Query--
select * from tt14v
--Result--
[('foo', 'baz', '42')]
+--------------------+
--Query--
select pg_get_viewdef('tt14v', true)
--Result--
[(' SELECT f1,\n    f4\n   FROM tt14f() t(f1, f3, f4);',)]
+--------------------+
--Query--
select * from tt14v
--Result--
[('foo', '42')]
+--------------------+
--Query--
select pg_get_viewdef('tt14v', true)
--Result--
[(' SELECT f1,\n    f4\n   FROM tt14f() t(f1, f4);',)]
+--------------------+
--Query--
explain (verbose, costs off) select * from tt14v
--Result--
[('Function Scan on testviewschm2.tt14f t',), ('  Output: t.f1, t.f4',), ('  Function Call: tt14f()',)]
+--------------------+
--Query--
select * from tt14v
--Result--
[('foo', '42')]
+--------------------+
--Query--
select 'foo'::text = any(array['abc','def','foo']::text[])
--Result--
[(True,)]
+--------------------+
--Query--
select 'foo'::text = any((select array['abc','def','foo']::text[])::text[])
--Result--
[(True,)]
+--------------------+
--Query--
select pg_get_viewdef('tt19v', true)
--Result--
[(' SELECT \'foo\'::text = ANY (ARRAY[\'abc\'::text, \'def\'::text, \'foo\'::text]) AS c1,\n    \'foo\'::text = ANY ((( SELECT ARRAY[\'abc\'::text, \'def\'::text, \'foo\'::text] AS "array"))::text[]) AS c2;',)]
+--------------------+
--Query--
select pg_get_viewdef('tt20v', true)
--Result--
[(" SELECT c.c,\n    col.col,\n    d.d,\n    t.t,\n    i4.i4,\n    i8.i8\n   FROM COALESCE(1, 2) c(c),\n    COLLATION FOR ('x'::text) col(col),\n    CURRENT_DATE d(d),\n    LOCALTIMESTAMP(3) t(t),\n    CAST(1 + 2 AS integer) i4(i4),\n    CAST((1 + 2)::bigint AS bigint) i8(i8);",)]
+--------------------+
--Query--
select pg_get_viewdef('tt201v', true)
--Result--
[(' SELECT ((\'2022-12-01\'::date + \'1 day\'::interval) AT TIME ZONE \'UTC\'::text) AS atz,\n    EXTRACT(day FROM now()) AS extr,\n    ((now(), \'1 day\'::interval) OVERLAPS (CURRENT_TIMESTAMP(2), \'1 day\'::interval)) AS o,\n    (\'foo\'::text IS NORMALIZED) AS isn,\n    (\'foo\'::text IS NFKC NORMALIZED) AS isnn,\n    NORMALIZE(\'foo\'::text) AS n,\n    NORMALIZE(\'foo\'::text, NFKD) AS nfkd,\n    OVERLAY(\'foo\'::text PLACING \'bar\'::text FROM 2) AS ovl,\n    OVERLAY(\'foo\'::text PLACING \'bar\'::text FROM 2 FOR 3) AS ovl2,\n    POSITION((\'foo\'::text) IN (\'foobar\'::text)) AS p,\n    SUBSTRING(\'foo\'::text FROM 2 FOR 3) AS s,\n    SUBSTRING(\'foo\'::text SIMILAR \'f\'::text ESCAPE \'#\'::text) AS ss,\n    "substring"(\'foo\'::text, \'oo\'::text) AS ssf,\n    TRIM(BOTH \' \'::text FROM \' foo \'::text) AS bt,\n    TRIM(LEADING \' \'::text FROM \' foo \'::text) AS lt,\n    TRIM(TRAILING FROM \' foo \'::text) AS rt,\n    TRIM(BOTH \'\\x00\'::bytea FROM \'\\x00546f6d00\'::bytea) AS btb,\n    TRIM(LEADING \'\\x00\'::bytea FROM \'\\x00546f6d00\'::bytea) AS ltb,\n    TRIM(TRAILING \'\\x00\'::bytea FROM \'\\x00546f6d00\'::bytea) AS rtb,\n    CURRENT_DATE AS cd,\n    ( SELECT "current_date"."current_date"\n           FROM CURRENT_DATE "current_date"("current_date")) AS cd2,\n    CURRENT_TIME AS ct,\n    ( SELECT "current_time"."current_time"\n           FROM CURRENT_TIME "current_time"("current_time")) AS ct2,\n    CURRENT_TIME(1) AS ct3,\n    ( SELECT "current_time"."current_time"\n           FROM CURRENT_TIME(1) "current_time"("current_time")) AS ct4,\n    CURRENT_TIMESTAMP AS ct5,\n    ( SELECT "current_timestamp"."current_timestamp"\n           FROM CURRENT_TIMESTAMP "current_timestamp"("current_timestamp")) AS ct6,\n    CURRENT_TIMESTAMP(1) AS ct7,\n    ( SELECT "current_timestamp"."current_timestamp"\n           FROM CURRENT_TIMESTAMP(1) "current_timestamp"("current_timestamp")) AS ct8,\n    LOCALTIME AS lt1,\n    ( SELECT "localtime"."localtime"\n           FROM LOCALTIME "localtime"("localtime")) AS lt2,\n    LOCALTIME(1) AS lt3,\n    ( SELECT "localtime"."localtime"\n           FROM LOCALTIME(1) "localtime"("localtime")) AS lt4,\n    LOCALTIMESTAMP AS lt5,\n    ( SELECT "localtimestamp"."localtimestamp"\n           FROM LOCALTIMESTAMP "localtimestamp"("localtimestamp")) AS lt6,\n    LOCALTIMESTAMP(1) AS lt7,\n    ( SELECT "localtimestamp"."localtimestamp"\n           FROM LOCALTIMESTAMP(1) "localtimestamp"("localtimestamp")) AS lt8,\n    CURRENT_CATALOG AS ca,\n    ( SELECT "current_catalog"."current_catalog"\n           FROM CURRENT_CATALOG "current_catalog"("current_catalog")) AS ca2,\n    CURRENT_ROLE AS cr,\n    ( SELECT "current_role"."current_role"\n           FROM CURRENT_ROLE "current_role"("current_role")) AS cr2,\n    CURRENT_SCHEMA AS cs,\n    ( SELECT "current_schema"."current_schema"\n           FROM CURRENT_SCHEMA "current_schema"("current_schema")) AS cs2,\n    CURRENT_USER AS cu,\n    ( SELECT "current_user"."current_user"\n           FROM CURRENT_USER "current_user"("current_user")) AS cu2,\n    USER AS us,\n    ( SELECT "user"."user"\n           FROM USER "user"("user")) AS us2,\n    SESSION_USER AS seu,\n    ( SELECT "session_user"."session_user"\n           FROM SESSION_USER "session_user"("session_user")) AS seu2,\n    SYSTEM_USER AS su,\n    ( SELECT "system_user"."system_user"\n           FROM SYSTEM_USER "system_user"("system_user")) AS su2;',)]
+--------------------+
--Query--
select pg_get_viewdef('tt21v', true)
--Result--
[(' SELECT tt5.a,\n    tt5.b,\n    tt5.cc,\n    tt6.c,\n    tt6.d\n   FROM tt5\n     CROSS JOIN tt6;',)]
+--------------------+
--Query--
select pg_get_viewdef('tt22v', true)
--Result--
[(' SELECT tt5.a,\n    tt5.b,\n    tt5.cc,\n    tt6.c,\n    tt6.d\n   FROM tt5\n     LEFT JOIN tt6 ON TRUE;',)]
+--------------------+
--Query--
select pg_get_viewdef('tt24v', true)
--Result--
[(' WITH cte AS MATERIALIZED (\n         SELECT r.*::record AS r\n           FROM ( VALUES (1,2), (3,4)) r\n        )\n SELECT (cte.r).column2 AS col_a,\n    (ss.rr).column2 AS col_b\n   FROM cte\n     JOIN ( SELECT rr.*::record AS rr\n           FROM ( VALUES (1,7), (3,8)) rr\n         LIMIT 2) ss ON (cte.r).column1 = (ss.rr).column1;',)]
+--------------------+
--Query--
select pg_get_viewdef('tt25v', true)
--Result--
[(' WITH cte AS MATERIALIZED (\n         SELECT pg_get_keywords() AS k\n        )\n SELECT (k).word AS word\n   FROM cte;',)]
+--------------------+
--Query--
explain (verbose, costs off) select * from tt24v
--Result--
[('Hash Join',), ('  Output: (cte.r).column2, ((ROW("*VALUES*".column1, "*VALUES*".column2))).column2',), ('  Hash Cond: ((cte.r).column1 = ((ROW("*VALUES*".column1, "*VALUES*".column2))).column1)',), ('  CTE cte',), ('    ->  Values Scan on "*VALUES*_1"',), ('          Output: ROW("*VALUES*_1".column1, "*VALUES*_1".column2)',), ('  ->  CTE Scan on cte',), ('        Output: cte.r',), ('  ->  Hash',), ('        Output: (ROW("*VALUES*".column1, "*VALUES*".column2))',), ('        ->  Limit',), ('              Output: (ROW("*VALUES*".column1, "*VALUES*".column2))',), ('              ->  Values Scan on "*VALUES*"',), ('                    Output: ROW("*VALUES*".column1, "*VALUES*".column2)',)]
+--------------------+
--Query--
explain (verbose, costs off) select (r).column2 from (select r from (values(1,2),(3,4)) r limit 1) ss
--Result--
[('Subquery Scan on ss',), ('  Output: (ss.r).column2',), ('  ->  Limit',), ('        Output: (ROW("*VALUES*".column1, "*VALUES*".column2))',), ('        ->  Values Scan on "*VALUES*"',), ('              Output: ROW("*VALUES*".column1, "*VALUES*".column2)',)]
+--------------------+
--Query--
select pg_get_viewdef('tt26v', true)
--Result--
[(' SELECT x + y + z AS c1,\n    x * y + z AS c2,\n    x + y * z AS c3,\n    (x + y) * z AS c4,\n    x * (y + z) AS c5,\n    x + (y + z) AS c6,\n    x + (y # z) AS c7,\n    x > y AND (y > z OR x > z) AS c8,\n    x > y OR y > z AND NOT x > z AS c9,\n    ((x, y) <> ALL ( VALUES (1,2), (3,4))) AS c10,\n    ((x, y) <= ANY ( VALUES (1,2), (3,4))) AS c11\n   FROM ( VALUES (1,2,3)) v(x, y, z);',)]
+--------------------+
