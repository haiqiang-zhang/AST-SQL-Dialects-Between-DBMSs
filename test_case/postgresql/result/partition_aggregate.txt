--Query--
ANALYZE pagg_tab
--Result--
[]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT c, sum(a), avg(b), count(*), min(a), max(b) FROM pagg_tab GROUP BY c HAVING avg(d) < 15 ORDER BY 1, 2, 3
--Result--
[('Sort',), ('  Sort Key: pagg_tab.c, (sum(pagg_tab.a)), (avg(pagg_tab.b))',), ('  ->  Append',), ('        ->  HashAggregate',), ('              Group Key: pagg_tab.c',), ("              Filter: (avg(pagg_tab.d) < '15'::numeric)",), ('              ->  Seq Scan on pagg_tab_p1 pagg_tab',), ('        ->  HashAggregate',), ('              Group Key: pagg_tab_1.c',), ("              Filter: (avg(pagg_tab_1.d) < '15'::numeric)",), ('              ->  Seq Scan on pagg_tab_p2 pagg_tab_1',), ('        ->  HashAggregate',), ('              Group Key: pagg_tab_2.c',), ("              Filter: (avg(pagg_tab_2.d) < '15'::numeric)",), ('              ->  Seq Scan on pagg_tab_p3 pagg_tab_2',)]
+--------------------+
--Query--
SELECT c, sum(a), avg(b), count(*), min(a), max(b) FROM pagg_tab GROUP BY c HAVING avg(d) < 15 ORDER BY 1, 2, 3
--Result--
[('0000', 2000, 12.0, 250, 0, 24), ('0001', 2250, 13.0, 250, 1, 25), ('0002', 2500, 14.0, 250, 2, 26), ('0006', 2500, 12.0, 250, 2, 24), ('0007', 2750, 13.0, 250, 3, 25), ('0008', 2000, 14.0, 250, 0, 26)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT a, c, count(*) FROM pagg_tab GROUP BY a, c
--Result--
[('Append',), ('  ->  HashAggregate',), ('        Group Key: pagg_tab.a, pagg_tab.c',), ('        ->  Seq Scan on pagg_tab_p1 pagg_tab',), ('  ->  HashAggregate',), ('        Group Key: pagg_tab_1.a, pagg_tab_1.c',), ('        ->  Seq Scan on pagg_tab_p2 pagg_tab_1',), ('  ->  HashAggregate',), ('        Group Key: pagg_tab_2.a, pagg_tab_2.c',), ('        ->  Seq Scan on pagg_tab_p3 pagg_tab_2',)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT c, sum(a) FROM pagg_tab WHERE 1 = 2 GROUP BY c
--Result--
[('HashAggregate',), ('  Group Key: c',), ('  ->  Result',), ('        One-Time Filter: false',)]
+--------------------+
--Query--
SELECT c, sum(a) FROM pagg_tab WHERE 1 = 2 GROUP BY c
--Result--
[]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT c, sum(a), avg(b), count(*) FROM pagg_tab GROUP BY 1 HAVING avg(d) < 15 ORDER BY 1, 2, 3
--Result--
[('Sort',), ('  Sort Key: pagg_tab.c, (sum(pagg_tab.a)), (avg(pagg_tab.b))',), ('  ->  Append',), ('        ->  GroupAggregate',), ('              Group Key: pagg_tab.c',), ("              Filter: (avg(pagg_tab.d) < '15'::numeric)",), ('              ->  Sort',), ('                    Sort Key: pagg_tab.c',), ('                    ->  Seq Scan on pagg_tab_p1 pagg_tab',), ('        ->  GroupAggregate',), ('              Group Key: pagg_tab_1.c',), ("              Filter: (avg(pagg_tab_1.d) < '15'::numeric)",), ('              ->  Sort',), ('                    Sort Key: pagg_tab_1.c',), ('                    ->  Seq Scan on pagg_tab_p2 pagg_tab_1',), ('        ->  GroupAggregate',), ('              Group Key: pagg_tab_2.c',), ("              Filter: (avg(pagg_tab_2.d) < '15'::numeric)",), ('              ->  Sort',), ('                    Sort Key: pagg_tab_2.c',), ('                    ->  Seq Scan on pagg_tab_p3 pagg_tab_2',)]
+--------------------+
--Query--
SELECT c, sum(a), avg(b), count(*) FROM pagg_tab GROUP BY 1 HAVING avg(d) < 15 ORDER BY 1, 2, 3
--Result--
[('0000', 2000, 12.0, 250), ('0001', 2250, 13.0, 250), ('0002', 2500, 14.0, 250), ('0006', 2500, 12.0, 250), ('0007', 2750, 13.0, 250), ('0008', 2000, 14.0, 250)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT c FROM pagg_tab GROUP BY c ORDER BY 1
--Result--
[('Merge Append',), ('  Sort Key: pagg_tab.c',), ('  ->  Group',), ('        Group Key: pagg_tab.c',), ('        ->  Sort',), ('              Sort Key: pagg_tab.c',), ('              ->  Seq Scan on pagg_tab_p1 pagg_tab',), ('  ->  Group',), ('        Group Key: pagg_tab_1.c',), ('        ->  Sort',), ('              Sort Key: pagg_tab_1.c',), ('              ->  Seq Scan on pagg_tab_p2 pagg_tab_1',), ('  ->  Group',), ('        Group Key: pagg_tab_2.c',), ('        ->  Sort',), ('              Sort Key: pagg_tab_2.c',), ('              ->  Seq Scan on pagg_tab_p3 pagg_tab_2',)]
+--------------------+
--Query--
SELECT c FROM pagg_tab GROUP BY c ORDER BY 1
--Result--
[('0000',), ('0001',), ('0002',), ('0003',), ('0004',), ('0005',), ('0006',), ('0007',), ('0008',), ('0009',), ('0010',), ('0011',)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT a FROM pagg_tab WHERE a < 3 GROUP BY a ORDER BY 1
--Result--
[('Group',), ('  Group Key: pagg_tab.a',), ('  ->  Merge Append',), ('        Sort Key: pagg_tab.a',), ('        ->  Group',), ('              Group Key: pagg_tab.a',), ('              ->  Sort',), ('                    Sort Key: pagg_tab.a',), ('                    ->  Seq Scan on pagg_tab_p1 pagg_tab',), ('                          Filter: (a < 3)',), ('        ->  Group',), ('              Group Key: pagg_tab_1.a',), ('              ->  Sort',), ('                    Sort Key: pagg_tab_1.a',), ('                    ->  Seq Scan on pagg_tab_p2 pagg_tab_1',), ('                          Filter: (a < 3)',), ('        ->  Group',), ('              Group Key: pagg_tab_2.a',), ('              ->  Sort',), ('                    Sort Key: pagg_tab_2.a',), ('                    ->  Seq Scan on pagg_tab_p3 pagg_tab_2',), ('                          Filter: (a < 3)',)]
+--------------------+
--Query--
SELECT a FROM pagg_tab WHERE a < 3 GROUP BY a ORDER BY 1
--Result--
[(0,), (1,), (2,)]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT c, sum(a) FROM pagg_tab GROUP BY rollup(c) ORDER BY 1, 2
--Result--
[('Sort',), ('  Sort Key: pagg_tab.c, (sum(pagg_tab.a))',), ('  ->  MixedAggregate',), ('        Hash Key: pagg_tab.c',), ('        Group Key: ()',), ('        ->  Append',), ('              ->  Seq Scan on pagg_tab_p1 pagg_tab_1',), ('              ->  Seq Scan on pagg_tab_p2 pagg_tab_2',), ('              ->  Seq Scan on pagg_tab_p3 pagg_tab_3',)]
+--------------------+
--Query--
ANALYZE pagg_tab1
--Result--
[]
+--------------------+
--Query--
ANALYZE pagg_tab2
--Result--
[]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT t1.x, sum(t1.y), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3
--Result--
[('Sort',), ('  Sort Key: t1.x, (sum(t1.y)), (count(*))',), ('  ->  Append',), ('        ->  HashAggregate',), ('              Group Key: t1.x',), ('              ->  Hash Join',), ('                    Hash Cond: (t1.x = t2.y)',), ('                    ->  Seq Scan on pagg_tab1_p1 t1',), ('                    ->  Hash',), ('                          ->  Seq Scan on pagg_tab2_p1 t2',), ('        ->  HashAggregate',), ('              Group Key: t1_1.x',), ('              ->  Hash Join',), ('                    Hash Cond: (t1_1.x = t2_1.y)',), ('                    ->  Seq Scan on pagg_tab1_p2 t1_1',), ('                    ->  Hash',), ('                          ->  Seq Scan on pagg_tab2_p2 t2_1',), ('        ->  HashAggregate',), ('              Group Key: t1_2.x',), ('              ->  Hash Join',), ('                    Hash Cond: (t2_2.y = t1_2.x)',), ('                    ->  Seq Scan on pagg_tab2_p3 t2_2',), ('                    ->  Hash',), ('                          ->  Seq Scan on pagg_tab1_p3 t1_2',)]
+--------------------+
--Query--
SELECT t1.x, sum(t1.y), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3
--Result--
[(0, 500, 100), (6, 1100, 100), (12, 700, 100), (18, 1300, 100), (24, 900, 100)]
+--------------------+
--Query--
SELECT a.x, b.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x < 20) a LEFT JOIN (SELECT * FROM pagg_tab2 WHERE y > 10) b ON a.x = b.y WHERE a.x > 5 or b.y < 20  GROUP BY a.x, b.y ORDER BY 1, 2
--Result--
[(6, None, 10), (8, None, 10), (10, None, 10), (12, 12, 100), (14, None, 10), (16, None, 10), (18, 18, 100)]
+--------------------+
--Query--
ANALYZE pagg_tab_m
--Result--
[]
+--------------------+
--Query--
ANALYZE pagg_tab_ml
--Result--
[]
+--------------------+
--Query--
EXPLAIN (COSTS OFF) SELECT a, sum(b), array_agg(distinct c), count(*) FROM pagg_tab_ml GROUP BY a HAVING avg(b) < 3 ORDER BY 1, 2, 3
--Result--
[('Sort',), ('  Sort Key: pagg_tab_ml.a, (sum(pagg_tab_ml.b)), (array_agg(DISTINCT pagg_tab_ml.c))',), ('  ->  Gather',), ('        Workers Planned: 2',), ('        ->  Parallel Append',), ('              ->  GroupAggregate',), ('                    Group Key: pagg_tab_ml.a',), ("                    Filter: (avg(pagg_tab_ml.b) < '3'::numeric)",), ('                    ->  Sort',), ('                          Sort Key: pagg_tab_ml.a, pagg_tab_ml.c',), ('                          ->  Seq Scan on pagg_tab_ml_p1 pagg_tab_ml',), ('              ->  GroupAggregate',), ('                    Group Key: pagg_tab_ml_5.a',), ("                    Filter: (avg(pagg_tab_ml_5.b) < '3'::numeric)",), ('                    ->  Sort',), ('                          Sort Key: pagg_tab_ml_5.a, pagg_tab_ml_5.c',), ('                          ->  Append',), ('                                ->  Seq Scan on pagg_tab_ml_p3_s1 pagg_tab_ml_5',), ('                                ->  Seq Scan on pagg_tab_ml_p3_s2 pagg_tab_ml_6',), ('              ->  GroupAggregate',), ('                    Group Key: pagg_tab_ml_2.a',), ("                    Filter: (avg(pagg_tab_ml_2.b) < '3'::numeric)",), ('                    ->  Sort',), ('                          Sort Key: pagg_tab_ml_2.a, pagg_tab_ml_2.c',), ('                          ->  Append',), ('                                ->  Seq Scan on pagg_tab_ml_p2_s1 pagg_tab_ml_2',), ('                                ->  Seq Scan on pagg_tab_ml_p2_s2 pagg_tab_ml_3',)]
+--------------------+
--Query--
SELECT a, sum(b), array_agg(distinct c), count(*) FROM pagg_tab_ml GROUP BY a HAVING avg(b) < 3 ORDER BY 1, 2, 3
--Result--
[(0, 0, ['0000', '0002'], 1000), (1, 1000, ['0001', '0003'], 1000), (2, 2000, ['0000', '0002'], 1000), (10, 0, ['0000', '0002'], 1000), (11, 1000, ['0001', '0003'], 1000), (12, 2000, ['0000', '0002'], 1000), (20, 0, ['0000', '0002'], 1000), (21, 1000, ['0001', '0003'], 1000), (22, 2000, ['0000', '0002'], 1000)]
+--------------------+
--Query--
ANALYZE pagg_tab_para
--Result--
[]
+--------------------+
--Query--
ANALYZE pagg_tab_para
--Result--
[]
+--------------------+
--Query--
ANALYZE pagg_tab_para
--Result--
[]
+--------------------+
