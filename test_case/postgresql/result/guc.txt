--Query--
SHOW datestyle
--Result--
[('ISO, MDY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('50ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('SQL, YMD',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('60ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('German, DMY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, MDY',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SAVEPOINT first_sp
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('80100us',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('German, DMY',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, MDY',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SAVEPOINT second_sp
--Result--
[]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('SQL, YMD',)]
+--------------------+
--Query--
SAVEPOINT third_sp
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('100ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('Postgres, MDY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('900us',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('SQL, YMD',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('70ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, MDY',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SAVEPOINT sp
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('30ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('Postgres, MDY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SAVEPOINT sp
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('30ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('Postgres, MDY',)]
+--------------------+
--Query--
RELEASE SAVEPOINT sp
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('30ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('Postgres, MDY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('50ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('Postgres, MDY',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('40ms',)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, DMY',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, YMD',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW datestyle
--Result--
[('ISO, MDY',)]
+--------------------+
--Query--
SELECT '2006-08-13 12:34:56'::timestamptz
--Result--
[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]
+--------------------+
--Query--
SHOW custom.my_guc
--Result--
[('42',)]
+--------------------+
--Query--
SHOW custom.my_guc
--Result--
[('',)]
+--------------------+
--Query--
SHOW custom.my.qualified.guc
--Result--
[('foo',)]
+--------------------+
--Query--
SHOW plpgsql.extra_foo_warnings
--Result--
[('true',)]
+--------------------+
--Query--
SELECT relname FROM pg_class WHERE relname = 'reset_test'
--Result--
[('reset_test',)]
+--------------------+
--Query--
DISCARD TEMP
--Result--
[]
+--------------------+
--Query--
SELECT relname FROM pg_class WHERE relname = 'reset_test'
--Result--
[]
+--------------------+
--Query--
DECLARE foo CURSOR WITH HOLD FOR SELECT 1
--Result--
[]
+--------------------+
--Query--
PREPARE foo AS SELECT 1
--Result--
[]
+--------------------+
--Query--
LISTEN foo_event
--Result--
[]
+--------------------+
--Query--
SELECT pg_listening_channels()
--Result--
[('foo_event',)]
+--------------------+
--Query--
SELECT name FROM pg_prepared_statements
--Result--
[('foo',)]
+--------------------+
--Query--
SELECT name FROM pg_cursors
--Result--
[('foo',)]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('13ms',)]
+--------------------+
--Query--
SELECT relname from pg_class where relname = 'tmp_foo'
--Result--
[('tmp_foo',)]
+--------------------+
--Query--
SELECT current_user = 'regress_guc_user'
--Result--
[(False,)]
+--------------------+
--Query--
DISCARD ALL
--Result--
[]
+--------------------+
--Query--
SELECT pg_listening_channels()
--Result--
[]
+--------------------+
--Query--
SELECT name FROM pg_prepared_statements
--Result--
[]
+--------------------+
--Query--
SELECT name FROM pg_cursors
--Result--
[]
+--------------------+
--Query--
SHOW vacuum_cost_delay
--Result--
[('0',)]
+--------------------+
--Query--
SELECT relname from pg_class where relname = 'tmp_foo'
--Result--
[]
+--------------------+
--Query--
SELECT current_user = 'regress_guc_user'
--Result--
[(False,)]
+--------------------+
--Query--
select current_schemas(false)
--Result--
[(['public'],)]
+--------------------+
--Query--
select current_schemas(false)
--Result--
[(['public', 'not_there_initially'],)]
+--------------------+
--Query--
select current_schemas(false)
--Result--
[(['public'],)]
+--------------------+
--Query--
select report_guc('work_mem'), current_setting('work_mem')
--Result--
[('1MB', '3MB')]
+--------------------+
--Query--
select report_guc('work_mem'), current_setting('work_mem')
--Result--
[('2MB', '3MB')]
+--------------------+
--Query--
select report_guc('work_mem'), current_setting('work_mem')
--Result--
[('3MB', '3MB')]
+--------------------+
--Query--
select current_setting('work_mem')
--Result--
[('3MB',)]
+--------------------+
--Query--
select current_setting('nosuch.setting', true) is null
--Result--
[(True,)]
+--------------------+
--Query--
select current_setting('nosuch.setting')
--Result--
[('nada',)]
+--------------------+
--Query--
select current_setting('nosuch.setting', false)
--Result--
[('nada',)]
+--------------------+
--Query--
select current_setting('nosuch.setting', true)
--Result--
[('nada',)]
+--------------------+
--Query--
SELECT pg_settings_get_flags(NULL)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT pg_settings_get_flags('does_not_exist')
--Result--
[(None,)]
+--------------------+
--Query--
SELECT name FROM tab_settings_flags   WHERE category = 'Developer Options' AND NOT not_in_sample   ORDER BY 1
--Result--
[]
+--------------------+
--Query--
SELECT name FROM tab_settings_flags   WHERE category ~ '^Query Tuning' AND NOT explain   ORDER BY 1
--Result--
[('default_statistics_target',)]
+--------------------+
--Query--
SELECT name FROM tab_settings_flags   WHERE NOT category = 'Preset Options' AND runtime_computed   ORDER BY 1
--Result--
[]
+--------------------+
--Query--
SELECT name FROM tab_settings_flags   WHERE category = 'Preset Options' AND NOT not_in_sample   ORDER BY 1
--Result--
[]
+--------------------+
--Query--
SELECT name FROM tab_settings_flags   WHERE no_reset AND NOT no_reset_all   ORDER BY 1
--Result--
[]
+--------------------+
