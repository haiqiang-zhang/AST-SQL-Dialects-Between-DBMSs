--                                                                              #
-- WL13784 - Create auto_increment PK on table creation when no PK is specified #
--                                                                              #
--###############################################################################

-- CREATE TABLE SELECT statements creating GIPKs are disallowed in SBR mode
--source include/have_binlog_format_row.inc

SET @saved_session_sql_generate_invisible_primary_key = @@session.sql_generate_invisible_primary_key;
SET SESSION sql_generate_invisible_primary_key=OFF;
CREATE TABLE t1(f1 INT, f2 INT);
DROP TABLE t1;
SET SESSION sql_generate_invisible_primary_key=ON;
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT);
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (f1 INT PRIMARY KEY, f2 INT);
DROP TABLE t1;
CREATE TABLE t1 (f1 INT, f2 INT PRIMARY KEY) PARTITION BY RANGE (f2)
                   (PARTITION p0 VALUES LESS THAN (2011),
                    PARTITION p1 VALUES LESS THAN (2022));
DROP TABLE t1;
CREATE TABLE t1 (f1 INT, f2 INT) ENGINE = MyISAM;
DROP TABLE t1;
CREATE TABLE t1 (my_row_id INT, f2 INT);
CREATE TABLE t1(f1 INT NOT NULL AUTO_INCREMENT, f2 INT, key(f1));
CREATE TABLE t1 (f1 INT, f2 DATE) PARTITION BY KEY(f2) PARTITIONS 2;
CREATE TABLE t1 (f1 INT, f2 INT NOT NULL UNIQUE) PARTITION BY RANGE (f2)
                   (PARTITION p0 VALUES LESS THAN (2011),
                    PARTITION p1 VALUES LESS THAN (2022));
CREATE TABLE t1(f1 INT);
DROP TABLE t1;
CREATE TEMPORARY TABLE t1(f1 INT);
DROP TABLE t1;
CREATE TABLE t1(f1 INT NOT NULL UNIQUE);
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (f1 INT NOT NULL UNIQUE);
DROP TABLE t1;
CREATE TABLE t1(f1 INT);
CREATE TABLE IF NOT EXISTS t1 (f1 INT, f2 INT);
DROP TABLE t1;

CREATE TEMPORARY TABLE t2 (f1 INT);
CREATE TEMPORARY TABLE IF NOT EXISTS t2 (f1 INT, f2 INT);
DROP TABLE t2;

CREATE VIEW t1 AS SELECT 1;
CREATE TABLE IF NOT EXISTS t1 (f1 INT);
DROP VIEW t1;
SET SESSION sql_generate_invisible_primary_key=OFF;
CREATE TABLE t1(f1 INT);
SET SESSION sql_generate_invisible_primary_key=ON;
CREATE TABLE t2 LIKE t1;
SET SESSION sql_require_primary_key=ON;
CREATE TABLE t3 LIKE t1;
SET SESSION sql_require_primary_key=OFF;
DROP TABLE t1, t2;
CREATE TABLE t1 (f1 INT);
CREATE TABLE t2 AS SELECT * FROM t1;
DROP TABLE t2;
CREATE TABLE t2 (f1 INT NOT NULL UNIQUE) AS SELECT * FROM t1;
DROP TABLE t2;
CREATE TABLE t2 (f1 INT, PRIMARY KEY(f1)) AS SELECT * FROM t1;
DROP TABLE t2;
CREATE TABLE t2 AS SELECT f1, my_row_id FROM t1;
CREATE TABLE t2(my_row_id INT PRIMARY KEY) AS SELECT f1, my_row_id FROM t1;
DROP TABLE t1, t2;
CREATE TABLE t1 (f1 INT);
CREATE TABLE t2 (f1 INT, f2 INT);
SET SESSION sql_generate_invisible_primary_key = OFF;
ALTER TABLE t1 DROP COLUMN my_row_id;
DROP TABLE t1;
ALTER TABLE t2 DROP PRIMARY KEY, ADD PRIMARY KEY(f2);
ALTER TABLE t2 DROP PRIMARY KEY, DROP COLUMN my_row_id, ADD PRIMARY KEY (f2);
DROP TABLE t2;
SET SESSION sql_generate_invisible_primary_key = ON;
CREATE TABLE t1 (f1 INT);
CREATE TABLE t2 (f1 INT);
CREATE TABLE t3 (f1 INT);
CREATE TEMPORARY TABLE t4 (f1 INT);
ALTER TABLE t1 DROP COLUMN my_row_id;
ALTER TABLE t1 DROP COLUMN my_row_id, ADD PRIMARY KEY(f1);
DROP TABLE t1;
ALTER TABLE t2 DROP PRIMARY KEY;
ALTER TABLE t2 DROP PRIMARY KEY, ADD PRIMARY KEY(f1);
ALTER TABLE t2 DROP PRIMARY KEY, DROP COLUMN my_row_id, ADD PRIMARY KEY(f1);
ALTER TABLE t2 DROP PRIMARY KEY;
DROP TABLE t2;
DROP INDEX `PRIMARY` ON t3;
DROP TABLE t3;
ALTER TABLE t4 DROP PRIMARY KEY;
ALTER TABLE t4 DROP PRIMARY KEY, ADD PRIMARY KEY(f1);
ALTER TABLE t4 DROP PRIMARY KEY, DROP COLUMN my_row_id, ADD PRIMARY KEY(f1);
ALTER TABLE t4 DROP PRIMARY KEY;
DROP TABLE t4;
CREATE TABLE t1 (f1 INT);
CREATE TEMPORARY TABLE t2 (f1 INT);
ALTER TABLE t1 DROP PRIMARY KEY, DROP COLUMN my_row_id, ADD UNIQUE KEY(f1);
ALTER TABLE t2 DROP PRIMARY KEY, DROP COLUMN my_row_id, ADD UNIQUE KEY(f1);
ALTER TABLE t1 ADD PRIMARY KEY(f1);
ALTER TABLE t2 ADD PRIMARY KEY(f1);
ALTER TABLE t1 ADD UNIQUE KEY(f1);
DROP TABLE t1;

ALTER TABLE t2 ADD UNIQUE KEY(f1);
DROP TABLE t2;
let $json_array = [ { "value": "OFF"}, { "value": "ON"} ];
  SET SESSION sql_generate_invisible_primary_key = ON;
  CREATE TABLE t1 (f1 INT, f2 INT);

  CREATE TEMPORARY TABLE t2 (f1 INT, f2 INT);
  ALTER TABLE t1 CHANGE my_row_id id INT NOT NULL AUTO_INCREMENT;
  ALTER TABLE t2 CHANGE my_row_id id INT NOT NULL AUTO_INCREMENT;
  ALTER TABLE t1 MODIFY my_row_id INT NOT NULL;
  ALTER TABLE t2 MODIFY my_row_id INT NOT NULL;
  ALTER TABLE t1 ALTER my_row_id SET DEFAULT 10;
  ALTER TABLE t2 ALTER my_row_id SET DEFAULT 10;
  ALTER TABLE t1 RENAME COLUMN my_row_id TO id;
  ALTER TABLE t2 RENAME COLUMN my_row_id TO id;
  ALTER TABLE t1 MODIFY my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE AFTER f2;
  ALTER TABLE t2 MODIFY my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE AFTER f2;
  ALTER TABLE t1 ALTER my_row_id SET VISIBLE;
  -- Once my_row_id column become visible, it is permitted to change its other
  -- properties.
  ALTER TABLE t1 CHANGE my_row_id my_row_id INT NOT NULL AUTO_INCREMENT;
  ALTER TABLE t1 MODIFY my_row_id INT NOT NULL;
  ALTER TABLE t1 RENAME COLUMN my_row_id TO id;

  ALTER TABLE t2 ALTER my_row_id SET VISIBLE;
  -- Once my_row_id column become visible, it is permitted to change its other
  -- properties.
  ALTER TABLE t2 CHANGE my_row_id my_row_id INT NOT NULL AUTO_INCREMENT;
  ALTER TABLE t2 MODIFY my_row_id INT NOT NULL;
  ALTER TABLE t2 RENAME COLUMN my_row_id TO id;
  DROP TABLE t1, t2;
CREATE TABLE t1 (f1 INT);
ALTER TABLE t1 ENGINE='MyISAM';
ALTER TABLE t1 DROP COLUMN my_row_id;

ALTER TABLE t1 ENGINE='InnoDB';
ALTER TABLE t1 ENGINE='MYISAM',
               ADD COLUMN my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE FIRST,
               ADD PRIMARY KEY(my_row_id);
ALTER TABLE t1 DROP COLUMN my_row_id;
DROP TABLE t1;

CREATE TEMPORARY TABLE t1 (f1 INT);
ALTER TABLE t1 ENGINE='MyISAM';
ALTER TABLE t1 DROP COLUMN my_row_id;

ALTER TABLE t1 ENGINE='InnoDB';
ALTER TABLE t1 ENGINE='MYISAM',
               ADD COLUMN my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE FIRST,
               ADD PRIMARY KEY(my_row_id);
ALTER TABLE t1 DROP COLUMN my_row_id;
DROP TABLE t1;
CREATE TABLE t1(my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE,
                f1 INT, primary key(my_row_id)) ENGINE = 'MyISAM';
ALTER TABLE t1 ENGINE='InnoDB';
ALTER TABLE t1 DROP COLUMN my_row_id;

ALTER TABLE t1 ENGINE='MYISAM', ALTER my_row_id SET VISIBLE;
ALTER TABLE t1 ENGINE='InnoDB', ALTER my_row_id SET INVISIBLE;
ALTER TABLE t1 DROP COLUMN my_row_id;
DROP TABLE t1;

CREATE TEMPORARY TABLE t1(my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE,
                f1 INT, primary key(my_row_id)) ENGINE = 'MyISAM';
ALTER TABLE t1 ENGINE='InnoDB';
ALTER TABLE t1 DROP COLUMN my_row_id;

ALTER TABLE t1 ENGINE='MYISAM', ALTER my_row_id SET VISIBLE;
ALTER TABLE t1 ENGINE='InnoDB', ALTER my_row_id SET INVISIBLE;
ALTER TABLE t1 DROP COLUMN my_row_id;
DROP TABLE t1;
CREATE TABLE t1 (f2 INT, f3 INT);
CREATE TEMPORARY TABLE t2 (f2 INT, f3 INT);
ALTER TABLE t1 ADD COLUMN f1 INT FIRST;
ALTER TABLE t2 ADD COLUMN f1 INT FIRST;
ALTER TABLE t1 ALTER my_row_id SET VISIBLE;
ALTER TABLE t1 ADD COLUMN f0 INT FIRST;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE;
ALTER TABLE t1 MODIFY my_row_id INT NOT NULL AUTO_INCREMENT;

ALTER TABLE t1 DROP COLUMN f0, MODIFY my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE;
ALTER TABLE t1 ADD COLUMN f0 INT FIRST;

ALTER TABLE t1 ALTER my_row_id SET VISIBLE;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE;
ALTER TABLE t1 ADD COLUMN f INT FIRST;
DROP TABLE t1;

ALTER TABLE t2 ALTER my_row_id SET VISIBLE;
ALTER TABLE t2 ADD COLUMN f0 INT FIRST;
ALTER TABLE t2 ALTER my_row_id SET INVISIBLE;
ALTER TABLE t2 MODIFY my_row_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE t2 DROP COLUMN f0, MODIFY my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE;
ALTER TABLE t2 ADD COLUMN f0 INT FIRST;

ALTER TABLE t2 ALTER my_row_id SET VISIBLE;
ALTER TABLE t2 ALTER my_row_id SET INVISIBLE;
ALTER TABLE t2 ADD COLUMN f INT FIRST;
DROP TABLE t2;
CREATE TABLE t1(f2 INT);
ALTER TABLE t1 ADD COLUMN f1 INT PRIMARY KEY FIRST, DROP PRIMARY KEY,
               DROP COLUMN my_row_id;
DROP TABLE t1;

CREATE TEMPORARY TABLE t1(f2 INT);
ALTER TABLE t1 ADD COLUMN f1 INT PRIMARY KEY FIRST, DROP PRIMARY KEY,
               DROP COLUMN my_row_id;
DROP TABLE t1;
SET SESSION sql_generate_invisible_primary_key = OFF;
CREATE TABLE t1(f2 INT);
ALTER TABLE t1 ADD COLUMN my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE FIRST,
               ADD PRIMARY KEY(my_row_id);
ALTER TABLE t1 ADD COLUMN f1 INT FIRST;
ALTER TABLE t1 MODIFY my_row_id INT;

SET SESSION sql_generate_invisible_primary_key = ON;
ALTER TABLE t1 ADD COLUMN f0 INT FIRST;
ALTER TABLE t1 MODIFY my_row_id INT;
DROP TABLE t1;
CREATE TABLE t1 (f1 INT);
ALTER TABLE t1 PARTITION BY KEY(my_row_id) PARTITIONS 10;
SET SESSION sql_generate_invisible_primary_key = OFF;
ALTER TABLE t1 PARTITION BY KEY(my_row_id) PARTITIONS 10;
SET SESSION sql_generate_invisible_primary_key = ON;
DROP TABLE t1;
SET SESSION sql_generate_invisible_primary_key = OFF;
CREATE TABLE t1 (f1 INT) PARTITION BY RANGE(f1) (PARTITION p1 VALUES LESS THAN (1991));
ALTER TABLE t1 REMOVE PARTITIONING;
ALTER TABLE t1 ADD COLUMN my_row_id bigint unsigned NOT NULL AUTO_INCREMENT INVISIBLE FIRST,
               ADD PRIMARY KEY(my_row_id);

-- my_row_id column alter is not permitted.
--error ER_GIPK_COLUMN_ALTER_NOT_ALLOWED
ALTER TABLE t1 MODIFY my_row_id INT;
ALTER TABLE t1 PARTITION BY KEY(my_row_id) PARTITIONS 10;

DROP TABLE t1;
SET SESSION sql_generate_invisible_primary_key = ON;
CREATE PROCEDURE p1() BEGIN
  CREATE TABLE t1(f1 INT PRIMARY KEY, f2 INT);

  CREATE TABLE t2 (f1 INT);

  CREATE TABLE t3 AS SELECT * FROM t2;

  DROP TABLE t1, t2, t3;
end
$
DELIMITER ;

SET SESSION sql_generate_invisible_primary_key = OFF;

SET SESSION sql_generate_invisible_primary_key = ON;

DROP PROCEDURE p1;
CREATE TABLE t(f1 INT);

DROP TABLE t1, t2;
DROP TABLE t1, t2;

SET SESSION sql_generate_invisible_primary_key = OFF;
DROP TABLE t1, t2;

SET SESSION sql_generate_invisible_primary_key = ON;

DROP TABLE t, t1, t2;
DROP PREPARE stmt1;
DROP PREPARE stmt2;
CREATE PROCEDURE run_show_and_i_s_stmts() BEGIN
  SHOW CREATE TABLE t1;

  -- I_S.TABLES
  SELECT TABLE_NAME, AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES
         WHERE TABLE_NAME='t1';
  -- I_S.COLUMNS
  SELECT COLUMN_NAME, COLUMN_TYPE, IS_NULLABLE, EXTRA
         FROM INFORMATION_SCHEMA.COLUMNS
         WHERE TABLE_NAME='t1' ORDER BY ORDINAL_POSITION;
  -- I_S.COLUMN_EXTENSIONS
  SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS_EXTENSIONS
         WHERE TABLE_NAME='t1' ORDER BY COLUMN_NAME;
  -- I_S.STATISTICS
  SELECT INDEX_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.STATISTICS
         WHERE TABLE_NAME='t1' ORDER BY INDEX_NAME, COLUMN_NAME;
  -- I_S.KEY_COLUMN_USAGE
  SELECT CONSTRAINT_NAME, COLUMN_NAME
         FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE TABLE_NAME='t1'
         ORDER BY CONSTRAINT_NAME, COLUMN_NAME;
  -- I_S.TABLE_CONSTRAINTS
  SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, ENFORCED
         FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_NAME='t1'
         ORDER BY CONSTRAINT_NAME;
  -- I_S.TABLE_CONSTRAINTS_EXTENSIONS
  SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS_EXTENSIONS
         WHERE TABLE_NAME='t1' ORDER BY CONSTRAINT_NAME;
let $json_array = [ { "LABEL"      : "empty Base Table",
                      "INIT_STMTS" : "CREATE TABLE t1(f1 INT, f2 INT UNIQUE)",
                      "CHECK_STMTS": "CALL run_show_and_i_s_stmts()"},
                    { "LABEL"      : "Base Table",
                      "INIT_STMTS" : "CREATE TABLE t1(f1 INT, f2 INT UNIQUE);
                      "CHECK_STMTS": "SHOW CREATE TABLE t1;
                    { "LABEL"      : "empty Temporary Table",
                      "INIT_STMTS" : "CREATE TEMPORARY TABLE t1(f1 INT, f2 INT UNIQUE)",
                      "CHECK_STMTS": "SHOW CREATE TABLE t1;
                    { "LABEL"      : "Temporary Table",
                      "INIT_STMTS" : "CREATE TEMPORARY TABLE t1(f1 INT, f2 INT UNIQUE);
                      "CHECK_STMTS": "SHOW CREATE TABLE t1"}
                  ];
  SET SESSION show_gipk_in_create_table_and_information_schema = ON;
  SET SESSION show_gipk_in_create_table_and_information_schema = OFF;
  ALTER TABLE t1 ENGINE='MyISAM';
  ALTER TABLE t1 ENGINE='InnoDB';

  DROP TABLE t1;

DROP PROCEDURE run_show_and_i_s_stmts;
SET @saved_session_show_gipk_in_create_table_and_information_schema =
       @@session.show_gipk_in_create_table_and_information_schema;

SET SESSION show_gipk_in_create_table_and_information_schema = OFF;
CREATE TABLE t1 (f1 INT);
INSERT INTO t1 VALUES (1), (3), (7), (4), (8);
ALTER TABLE t1 ALTER my_row_id SET VISIBLE, ALGORITHM=INSTANT;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE, ALGORITHM=INSTANT;
ALTER TABLE t1 ALTER my_row_id SET VISIBLE, RENAME COLUMN f1 to f2,
               ALGORITHM=INSTANT;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE, RENAME COLUMN f2 to f1,
               ALGORITHM=INSTANT;
ALTER TABLE t1 ALTER my_row_id SET VISIBLE, ALGORITHM=INPLACE;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE, ALGORITHM=INPLACE;
ALTER TABLE t1 ALTER my_row_id SET VISIBLE, ADD INDEX (f1), ALGORITHM=INPLACE;
ALTER TABLE t1 DROP INDEX f1;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE, ADD INDEX(f1),
             ALGORITHM=INPLACE;
ALTER TABLE t1 DROP INDEX f1;
ALTER TABLE t1 ALTER my_row_id SET VISIBLE, ALGORITHM=COPY;
ALTER TABLE t1 ALTER my_row_id SET INVISIBLE, ALGORITHM=COPY;

DROP TABLE t1;
SET SESSION show_gipk_in_create_table_and_information_schema =
              @saved_session_show_gipk_in_create_table_and_information_schema;

SET SESSION sql_generate_invisible_primary_key =
              @saved_session_sql_generate_invisible_primary_key;
