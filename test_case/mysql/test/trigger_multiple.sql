
SET @binlog_format_saved = @@binlog_format;
SET binlog_format='ROW';

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a);
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);

INSERT INTO t1 VALUES (1);

SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi AFTER INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a);
CREATE TRIGGER tr2_bi AFTER INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);

INSERT INTO t1 VALUES (1);

SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a);
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);

CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a);
CREATE TRIGGER tr2_bu BEFORE UPDATE ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 300);

INSERT INTO t1 VALUES (1);

SELECT * FROM t2 ORDER BY b;

UPDATE t1 SET a = 5;

SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);

SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:00');
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:01');
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;

SELECT trigger_name, created, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;
SET TIMESTAMP=DEFAULT;

CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
SELECT * FROM INFORMATION_SCHEMA.TRIGGERS
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TRIGGER tr1_bi;

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

CREATE TABLE t1 (a INT);

SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:01');
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;

SELECT trigger_name, created, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;
SET TIMESTAMP=DEFAULT;

CREATE TABLE t1 (a INT);

SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:01');
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;

DROP TABLE t1;
SET TIMESTAMP=DEFAULT;

CREATE TABLE t1 (a INT);

SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:01');

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;

SELECT * FROM INFORMATION_SCHEMA.TRIGGERS
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

SET TIMESTAMP=DEFAULT;

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);
CREATE TRIGGER tr3_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 300);
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW FOLLOWS tr1_bi INSERT INTO t2 (a) VALUES (NEW.a + 200);

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

INSERT INTO t1 VALUES (1);
SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);
CREATE TRIGGER tr3_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 300);
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW PRECEDES tr3_bi INSERT INTO t2 (a) VALUES (NEW.a + 200);

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

INSERT INTO t1 VALUES (1);
SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b INT AUTO_INCREMENT PRIMARY KEY);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO t2 (a) VALUES (NEW.a + 100);
CREATE TRIGGER tr0_bi BEFORE INSERT ON t1 FOR EACH ROW PRECEDES tr1_bi INSERT INTO t2 (a) VALUES (NEW.a);

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

INSERT INTO t1 VALUES (1);
SELECT * FROM t2 ORDER BY b;

DROP TABLE t2;
DROP TABLE t1;

CREATE TABLE t1 (a INT);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr3_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=3;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW FOLLOWS tr0_bi SET @a:=2;

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

CREATE TABLE t1 (a INT);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr3_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=3;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW PRECEDES tr0_bi SET @a:=2;

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

CREATE TABLE t1 (a INT);

CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;
CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW SET @a:=3;
SELECT trigger_name, action_order FROM information_schema.triggers WHERE trigger_schema='test';

CREATE TRIGGER tr3_bi BEFORE INSERT ON t1 FOR EACH ROW FOLLOWS tr2_bi SET @a:=3;
CREATE TRIGGER tr2_bu BEFORE UPDATE ON t1 FOR EACH ROW FOLLOWS tr1_bu SET @a:=3;

SELECT trigger_name, action_order FROM information_schema.triggers
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW SET @a:=3;
CREATE TRIGGER tr2_bu BEFORE UPDATE ON t1 FOR EACH ROW FOLLOWS tr1_bi SET @a:=3;
CREATE TRIGGER tr2_au AFTER UPDATE ON t1 FOR EACH ROW FOLLOWS tr1_bi SET @a:=3;
CREATE TRIGGER tr1_au AFTER UPDATE ON t1 FOR EACH ROW FOLLOWS tr1_bu SET @a:=3;
CREATE TRIGGER tr1_ai AFTER INSERT ON t1 FOR EACH ROW FOLLOWS tr1_bi SET @a:=3;
SELECT * FROM INFORMATION_SCHEMA.TRIGGERS
  WHERE trigger_schema='test'
  ORDER BY trigger_name, action_order;

DROP TABLE t1;

-- Binlog is required
--source include/have_log_bin.inc

--echo --
--echo -- Test 17. Check that table's triggers are dumped correctly.
--echo --
CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;
CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW SET @a:=3;

-- dump tables and triggers
--exec $MYSQL_DUMP --compact test

DROP TABLE t1;

CREATE TABLE t1 (a INT);
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;
CREATE TRIGGER tr0_bi BEFORE INSERT ON t1 FOR EACH ROW PRECEDES tr1_bi SET @a:=0;
CREATE TRIGGER tr1_1_bi BEFORE INSERT ON t1 FOR EACH ROW FOLLOWS tr1_bi SET @a:=0;

DROP TABLE t1;

CREATE TABLE t1 (a INT);
SET TIMESTAMP=UNIX_TIMESTAMP('2013-01-31 09:00:00');
CREATE TRIGGER tr1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=1;
CREATE TRIGGER tr2_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a:=2;
CREATE TRIGGER tr1_bu BEFORE UPDATE ON t1 FOR EACH ROW SET @a:=3;
SET TIMESTAMP=DEFAULT;

-- dump tables and triggers
--exec $MYSQL_DUMP --compact --no-create-info --xml test

DROP TABLE t1;

SET binlog_format=@binlog_format_saved;
