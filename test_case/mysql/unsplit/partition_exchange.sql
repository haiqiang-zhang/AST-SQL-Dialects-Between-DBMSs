SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
SELECT TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, CREATE_OPTIONS
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME IN ('t1', 't2');
CREATE TABLE t1_1 (
  `col1` int(11) DEFAULT NULL,
  `col2` int(11) DEFAULT NULL,
  `col3` int(11) DEFAULT NULL,
  `col4` text,
  `col5` varchar(500) GENERATED ALWAYS AS (substr(`col4`,1,500)) VIRTUAL,
  `col6` text GENERATED ALWAYS AS (substr(`col4`,1,500)) VIRTUAL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
CREATE TABLE temp25058 AS SELECT * FROM t1_1 WHERE 1 <> 1;
SELECT * FROM temp25058;
SELECT * FROM temp25058;
DROP TABLE temp25058;
DROP TABLE t1_1;
CREATE TABLE t1 (a INT NOT NULL, b TIME NOT NULL DEFAULT '00:00:00')
ENGINE=InnoDB
PARTITION BY HASH (a) PARTITIONS 2;
CREATE TABLE t2 (a INT) ENGINE=InnoDB;
DROP TABLE t1, t2;
CREATE TABLE t1 (s1 INT PRIMARY KEY) ENGINE=InnoDB;
CREATE TABLE t2 (s1 INT, FOREIGN KEY (s1) REFERENCES t1 (s1)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1),(2),(3);
INSERT INTO t2 VALUES (1),(2),(3);
CREATE TABLE t3 (s1 INT PRIMARY KEY)
  ENGINE=InnoDB
  PARTITION BY LIST (s1)
  (PARTITION p1 VALUES IN (1,2,3));
DROP TABLE t2, t1, t3;
CREATE TABLE t (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a));
CREATE TABLE tp (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
PARTITION BY RANGE (a)
(PARTITION p0 VALUES LESS THAN (100),
 PARTITION p1 VALUES LESS THAN MAXVALUE);
CREATE TABLE tsp (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
PARTITION BY RANGE (a)
SUBPARTITION BY HASH(a)
(PARTITION p0 VALUES LESS THAN (100)
 (SUBPARTITION sp0,
  SUBPARTITION sp1),
 PARTITION p1 VALUES LESS THAN MAXVALUE
 (SUBPARTITION sp2,
  SUBPARTITION sp3));
INSERT INTO t VALUES (1, "First value"), (3, "Three"), (5, "Five"), (99, "End of values");
INSERT INTO tp VALUES (2, "First value"), (10, "Ten"), (50, "Fifty"), (200, "Two hundred, end of values"), (61, "Sixty one"), (62, "Sixty two"), (63, "Sixty three"), (64, "Sixty four"), (161, "161"), (162, "162"), (163, "163"), (164, "164");
INSERT INTO tsp VALUES (2, "First value"), (10, "Ten"), (50, "Fifty"), (200, "Two hundred, end of values"), (61, "Sixty one"), (62, "Sixty two"), (63, "Sixty three"), (64, "Sixty four"), (161, "161"), (162, "162"), (163, "163"), (164, "164");
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp;
SELECT * FROM t;
SELECT * FROM tp;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tsp EXCHANGE PARTITION sp1 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tsp;
ALTER TABLE tsp EXCHANGE PARTITION sp1 WITH TABLE t;
ALTER TABLE t ENGINE = InnoDB;
ALTER TABLE tp ENGINE = InnoDB;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
CREATE TABLE tmp LIKE t;
INSERT INTO tmp SELECT * FROM t;
ALTER TABLE t CHARACTER SET = koi8r COLLATE koi8r_general_ci;
DROP TABLE t;
CREATE TABLE t (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
MAX_ROWS = 100000 MIN_ROWS = 1000;
DROP TABLE t;
ALTER TABLE tp ADD KEY ba_key (b, a);
ALTER TABLE tsp ADD KEY ba_key (b, a);
SELECT * FROM tp;
ALTER TABLE tmp RENAME TO t;
ALTER TABLE tp REMOVE PARTITIONING;
DROP TABLE t, tp, tsp;
CREATE TABLE tp
(a VARCHAR(24),
 b DATETIME,
 PRIMARY KEY (a,b))
PARTITION BY RANGE COLUMNS (a, b)
(PARTITION p0 VALUES LESS THAN ("Middle", '0000-00-00'),
 PARTITION p1 VALUES LESS THAN (MAXVALUE, '9999-12-31 23:59:59'));
CREATE TABLE t LIKE tp;
ALTER TABLE t REMOVE PARTITIONING;
CREATE TABLE t2 LIKE t;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t;
ALTER TABLE tp EXCHANGE PARTITION p0 WITH TABLE t2;
UNLOCK TABLES;
DROP TABLE t, t2, tp;
CREATE TABLE t (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a));
CREATE TABLE tp (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
PARTITION BY RANGE (a)
(PARTITION p0 VALUES LESS THAN (100),
 PARTITION p1 VALUES LESS THAN MAXVALUE);
CREATE TABLE tsp (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
PARTITION BY RANGE (a)
SUBPARTITION BY HASH(a)
(PARTITION p0 VALUES LESS THAN (100)
 (SUBPARTITION sp0,
  SUBPARTITION sp1),
 PARTITION p1 VALUES LESS THAN MAXVALUE
 (SUBPARTITION sp2,
  SUBPARTITION sp3));
INSERT INTO t VALUES (1, "First value"), (3, "Three"), (5, "Five"),
                     (6, "Six"), (8, "Eight"), (99, "End of values");
INSERT INTO tp VALUES (2, "First value"), (10, "Ten"), (50, "Fifty"),
(200, "Two hundred, end of values"), (61, "Sixty one"), (62, "Sixty two"),
(63, "Sixty three"), (64, "Sixty four"), (161, "161"), (162, "162"),
(163, "163"), (164, "164");
INSERT INTO tsp VALUES (2, "First value"), (10, "Ten"), (50, "Fifty"),
(200, "Two hundred, end of values"), (61, "Sixty one"), (62, "Sixty two"),
(63, "Sixty three"), (64, "Sixty four"), (161, "161"), (162, "162"),
(163, "163"), (164, "164");
SELECT * FROM t;
SELECT * FROM tp PARTITION (p0);
SELECT * FROM tp PARTITION (p1);
ALTER TABLE tp EXCHANGE PARTITION p1 WITH TABLE t WITHOUT VALIDATION;
SELECT * FROM t;
SELECT * FROM tp PARTITION (p0);
SELECT * FROM tp PARTITION (p1);
ALTER TABLE tp EXCHANGE PARTITION p1 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tp PARTITION (p0);
SELECT * FROM tp PARTITION (p1);
SELECT * FROM t;
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tsp EXCHANGE PARTITION sp3 WITH TABLE t WITHOUT VALIDATION;
SELECT * FROM t;
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tsp EXCHANGE PARTITION sp3 WITH TABLE t;
SELECT * FROM t;
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tp EXCHANGE PARTITION p1 WITH TABLE t WITHOUT VALIDATION;
SELECT * FROM tp PARTITION (p0);
SELECT * FROM tp PARTITION (p1);
ALTER TABLE tp ANALYZE PARTITION p1;
ALTER TABLE tp OPTIMIZE PARTITION p1;
ALTER TABLE tsp EXCHANGE PARTITION sp3 WITH TABLE t WITHOUT VALIDATION;
SELECT * FROM tsp PARTITION (sp2);
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tsp ANALYZE PARTITION sp3;
ALTER TABLE tsp OPTIMIZE PARTITION sp3;
SELECT * FROM tsp PARTITION (sp2);
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tsp EXCHANGE PARTITION sp3 WITH TABLE t;
ALTER TABLE tp EXCHANGE PARTITION p1 WITH TABLE t;
ALTER TABLE tsp EXCHANGE PARTITION sp3 WITH TABLE t WITHOUT VALIDATION;
SELECT * FROM tsp PARTITION (sp2);
SELECT * FROM tsp PARTITION (sp3);
ALTER TABLE tsp ANALYZE PARTITION sp3;
ALTER TABLE tsp OPTIMIZE PARTITION sp3;
SELECT * FROM tsp PARTITION (sp2);
SELECT * FROM tsp PARTITION (sp3);
DROP TABLE t, tp, tsp;
CREATE TABLE t1 (a INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, b VARCHAR(64)) ENGINE = INNODB;
CREATE TABLE t2 (a INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, b VARCHAR(64)) ENGINE = INNODB PARTITION BY LIST (a) (PARTITION p1 VALUES IN (1,3,5,7,9) ,PARTITION p2 VALUES IN (0,2,4,6,8) );
ALTER TABLE t2 EXCHANGE PARTITION p1 WITH TABLE t1;
ALTER TABLE t2 ADD COLUMN j INT,ALGORITHM=INSTANT;
ALTER TABLE t2 ADD COLUMN k INT,ALGORITHM=COPY;
DROP TABLE t1,t2;
CREATE TABLE t1 (a INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, b VARCHAR(64)) ENGINE = INNODB;
CREATE TABLE t2 (a INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, b VARCHAR(64)) ENGINE = INNODB PARTITION BY LIST (a) (PARTITION p1 VALUES IN (1,3,5,7,9) ,PARTITION p2 VALUES IN (0,2,4,6,8) );
ALTER TABLE t2 EXCHANGE PARTITION p2 WITH TABLE t1;
ALTER TABLE t2 ADD COLUMN j INT,ALGORITHM=INSTANT;
ALTER TABLE t2 ADD COLUMN k INT,ALGORITHM=COPY;
DROP TABLE t1,t2;
CREATE TABLE t1 (
  col1 INT UNSIGNED,
  col2 DATETIME
)
ENGINE=INNODB
PARTITION BY RANGE COLUMNS(col2)
(
PARTITION p0 VALUES LESS THAN ('1960-01-01'),
PARTITION p1 VALUES LESS THAN ('1980-01-01')
);
INSERT INTO t1 VALUES ('1','1958-02-17 06:25:34');
INSERT INTO t1 VALUES ('2','1962-11-23 11:06:06');
ALTER TABLE t1 ADD PARTITION (PARTITION p2 VALUES LESS THAN ('2000-01-01'));
INSERT INTO t1 VALUES ('3','1999-10-13 05:28:46'), ('4', '1996-09-26 20:00:00');
SELECT NAME,ROW_FORMAT  FROM INFORMATION_SCHEMA.INNODB_TABLES
WHERE NAME LIKE '%t1%' ORDER BY TABLE_ID;
CREATE TABLE t2 LIKE t1;
ALTER TABLE t2 REMOVE PARTITIONING;
ALTER TABLE t1 EXCHANGE PARTITION p0 WITH TABLE t2;
DROP TABLE t1,t2;
CREATE TABLE t1 (a INT,
  b VARCHAR(55),
  PRIMARY KEY (a))
PARTITION BY RANGE (a)
SUBPARTITION BY HASH(a)
(PARTITION p0 VALUES LESS THAN (100)
 (SUBPARTITION sp0,
  SUBPARTITION sp1),
 PARTITION p1 VALUES LESS THAN  (200)
 (SUBPARTITION sp2,
  SUBPARTITION sp3));
ALTER TABLE t1 ADD PARTITION (PARTITION p2 VALUES LESS THAN (300)
(SUBPARTITION sp4,
SUBPARTITION sp5));
INSERT INTO t1(b,a) VALUES('first',40),('second',91),('third',140),
('forth',191);
SELECT NAME,ROW_FORMAT  FROM INFORMATION_SCHEMA.INNODB_TABLES
WHERE NAME LIKE '%t1%' ORDER BY TABLE_ID;
CREATE TABLE t2 like t1;
ALTER TABLE t2 REMOVE PARTITIONING;
ALTER TABLE t1 EXCHANGE PARTITION sp2 WITH TABLE t2;
DROP TABLE t1,t2;
