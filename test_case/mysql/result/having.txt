--Query--
select count(a) as b from t1 where a=0 having b > 0
--Result--
[]
+--------------------+
--Query--
select count(a) as b from t1 where a=0 having b > 0
--Result--
[]
+--------------------+
--Query--
select count(a) as b from t1 where a=0 having b >=0
--Result--
[(0,)]
+--------------------+
--Query--
SELECT e.id,    MIN( IF(sgp.raw_ori=1,           (e.seq_start+sgp.chr_start-sgp.raw_start),             (sgp.chr_start+sgp.raw_end-e.seq_end))) as start,     MAX( IF(sgp.raw_ori=1,            (e.seq_end+sgp.chr_start-sgp.raw_start),              (sgp.chr_start+sgp.raw_end-e.seq_start))) as end,     AVG(IF (sgp.raw_ori=1,e.strand,(-e.strand))) as chr_strand  FROM  t1 sgp,       t2 e   WHERE sgp.raw_id=e.contig_id  GROUP BY e.id  HAVING chr_strand= -1 and end >= 0    AND start <= 999660
--Result--
[(133197, 813898, 813898, -1.0)]
+--------------------+
--Query--
select Fld1, max(Fld2) as q from t1 group by Fld1 having q is not null
--Result--
[(1, 20), (3, 50)]
+--------------------+
--Query--
select Fld1, max(Fld2) from t1 group by Fld1 having max(Fld2) is not null
--Result--
[(1, 20), (3, 50)]
+--------------------+
--Query--
select Fld1, max(Fld2) from t1 group by Fld1 having avg(Fld2) is not null
--Result--
[(1, 20), (3, 50)]
+--------------------+
--Query--
select Fld1, max(Fld2) from t1 group by Fld1 having std(Fld2) is not null
--Result--
[(1, 20), (3, 50)]
+--------------------+
--Query--
select Fld1, max(Fld2) from t1 group by Fld1 having variance(Fld2) is not null
--Result--
[(1, 20), (3, 50)]
+--------------------+
--Query--
select id, sum(qty) as sqty from t1 group by id having sqty>2
--Result--
[(1, 5.0), (2, 9.0)]
+--------------------+
--Query--
select sum(qty) as sqty from t1 group by id having count(id) > 0
--Result--
[(5.0,), (9.0,)]
+--------------------+
--Query--
select sum(qty) as sqty from t1 group by id having count(distinct id) > 0
--Result--
[(5.0,), (9.0,)]
+--------------------+
--Query--
select 	a.id, a.description, 	count(b.id) as c  from t1 a left join t3 b on a.id=b.order_id  group by a.id, a.description  having (a.description is not null) and (c=0)
--Result--
[(1, 'test', 0)]
+--------------------+
--Query--
select 	a.*,  	count(b.id) as c  from t2 a left join t3 b on a.id=b.order_id  group by a.id, a.description having (a.description is not null) and (c=0)
--Result--
[(1, 'test', 0)]
+--------------------+
--Query--
select 	a.id, a.description, 	count(b.id) as c  from t1 a left join t3 b on a.id=b.order_id  group by a.id, a.description  having (a.description is not null) and (c=0)
--Result--
[(1, 'test', 0), (2, 'test2', 0)]
+--------------------+
--Query--
SELECT SUM(a) FROM t1 GROUP BY a HAVING SUM(a)>0
--Result--
[(6.0,), (4.0,), (2.0,)]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY a HAVING a > 1
--Result--
[(2,), (3,)]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY a HAVING 1 != 1 AND a > 1
--Result--
[]
+--------------------+
--Query--
SELECT 0 AS x, a FROM t1 GROUP BY x,a HAVING x=1 AND a > 1
--Result--
[]
+--------------------+
--Query--
SELECT t1.a   FROM t1 INNER JOIN t2 ON t1.a=t2.a LEFT JOIN t3 ON t2.b=t3.b     GROUP BY t1.a, t2.b HAVING MAX(t3.flag)=0
--Result--
[]
+--------------------+
--Query--
SELECT DISTINCT t1.a, MAX(t3.flag)   FROM t1 INNER JOIN t2 ON t1.a=t2.a LEFT JOIN t3 ON t2.b=t3.b     GROUP BY t1.a, t2.b HAVING MAX(t3.flag)=0
--Result--
[]
+--------------------+
--Query--
SELECT DISTINCT t1.a   FROM t1 INNER JOIN t2 ON t1.a=t2.a LEFT JOIN t3 ON t2.b=t3.b     GROUP BY t1.a, t2.b HAVING MAX(t3.flag)=0
--Result--
[]
+--------------------+
--Query--
select count(*) from t1 group by col1 having col1 = 10
--Result--
[(4,)]
+--------------------+
--Query--
select count(*) as count_col1 from t1 group by col1 having col1 = 10
--Result--
[(4,)]
+--------------------+
--Query--
select count(*) as count_col1 from t1 as tmp1 group by col1 having col1 = 10
--Result--
[(4,)]
+--------------------+
--Query--
select col1 as count_col1 from t1 as tmp1 group by col1 having col1 = 10
--Result--
[(10,)]
+--------------------+
--Query--
select col1 as count_col1 from t1 as tmp1 group by col1 having count_col1 = 10
--Result--
[(10,)]
+--------------------+
--Query--
select col1 as count_col1 from t1 as tmp1 group by count_col1 having col1 = 10
--Result--
[(10,)]
+--------------------+
--Query--
select col1 as count_col1 from t1 as tmp1 group by count_col1 having count_col1 = 10
--Result--
[(10,)]
+--------------------+
--Query--
select col1 as count_col1,col2 from t1 as tmp1 group by col1,col2 having col1 = 10
--Result--
[(10, 'hello'), (10, 'bye'), (10, 'sam'), (10, 'bob')]
+--------------------+
--Query--
select col1 as count_col1,col2 from t1 as tmp1 group by col1,col2 having count_col1 = 10
--Result--
[(10, 'hello'), (10, 'bye'), (10, 'sam'), (10, 'bob')]
+--------------------+
--Query--
select col1 as count_col1,col2 from t1 as tmp1 group by col1,col2 having col2 = 'hello'
--Result--
[(10, 'hello'), (20, 'hello'), (30, 'hello')]
+--------------------+
--Query--
select col1 as count_col1,col2 as group_col2 from t1 as tmp1 group by col1,col2 having group_col2 = 'hello'
--Result--
[(10, 'hello'), (20, 'hello'), (30, 'hello')]
+--------------------+
--Query--
select sum(col1) as co2, count(col2) as cc from t1 group by col1 having col1 =10
--Result--
[(40.0, 4)]
+--------------------+
--Query--
select t1.col1 from t1 where t1.col2 in        (select t2.col2 from t2         group by t2.col1, t2.col2 having t2.col1 <= 10)
--Result--
[(10,), (20,), (30,), (10,), (10,), (10,)]
+--------------------+
--Query--
select t1.col1 from t1 where t1.col2 in        (select t2.col2 from t2        group by t2.col1, t2.col2        having t2.col1 <=               (select min(t3.col1) from t3))
--Result--
[(10,), (20,), (30,), (10,), (10,), (10,)]
+--------------------+
--Query--
select t1.col1 from t1 where t1.col2 in       (select t2.col2 from t2         group by t2.col1, t2.col2 having t1.col1 <= 10)
--Result--
[(10,), (10,), (10,), (10,)]
+--------------------+
--Query--
select t1.col1 from t1 where t1.col2 in        (select t2.col2 from t2         group by t2.col1, t2.col2 having col_t1 <= 10)
--Result--
[(10,), (10,), (10,), (10,)]
+--------------------+
--Query--
select sum(col1) from t1 group by col_t1 having (select col_t1 from t2 where col_t1 = col_t2 order by col_t2 limit 1)
--Result--
[(40.0,), (20.0,), (30.0,)]
+--------------------+
--Query--
select s1*0 as s1 from t1 group by s1 having s1 <> 0
--Result--
[(0,), (0,), (0,)]
+--------------------+
--Query--
select s1*0 from t1 group by s1 having s1 = 0
--Result--
[]
+--------------------+
--Query--
select s1 from t1 group by 1 having 1 = 0
--Result--
[]
+--------------------+
--Query--
select f1 from t1 group by f1 having max(f1)=f1
--Result--
[]
+--------------------+
--Query--
select f1 from t1 group by f1 having max(f1)=f1
--Result--
[]
+--------------------+
--Query--
SELECT b, COUNT(DISTINCT a) FROM t1 GROUP BY b HAVING b is NULL
--Result--
[(None, 1)]
+--------------------+
--Query--
SELECT t1.id1, (SELECT 0 FROM DUAL  WHERE t1.id1=t1.id1) AS amount FROM t1 WHERE t1.id2 = 1 HAVING amount > 0 ORDER BY t1.id1
--Result--
[]
+--------------------+
--Query--
SELECT table1.f1, table2.f2 FROM t1 AS table1 JOIN t1 AS table2 ON table1.f3 = table2.f3 WHERE table2.f1 = 2 GROUP BY table1.f1, table2.f2 HAVING (table2.f2 = 8 AND table1.f1 >= 6)
--Result--
[]
+--------------------+
--Query--
SELECT table1.f1, table2.f2 FROM t1 AS table1 JOIN t1 AS table2 ON table1.f3 = table2.f3 WHERE table2.f1 = 2 GROUP BY table1.f1, table2.f2 HAVING (table2.f2 = 8 AND table1.f1 >= 6)
--Result--
[]
+--------------------+
--Query--
SELECT table1.f1, table2.f2 FROM t1 AS table1 JOIN t1 AS table2 ON table1.f3 = table2.f3 WHERE table2.f1 = 2 GROUP BY table1.f1, table2.f2 HAVING (table2.f2 = 8)
--Result--
[]
+--------------------+
--Query--
SELECT MAX(t1.f1) field1 FROM t1 JOIN t2 ON t2.f2 LIKE 'x' HAVING field1 < 7
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 HAVING (3, 2) IN (SELECT f1, f2 FROM t2) AND t1.f1  >= 0 ORDER BY t1.f1
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 HAVING (3, 2) IN (SELECT 4, 2) AND t1.f1  >= 0 ORDER BY t1.f1
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 HAVING 2 IN (SELECT f2 FROM t2) AND t1.f1  >= 0 ORDER BY t1.f1
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 JOIN t2 ON t2.f1 = t1.f1 WHERE t1.f3 AND t1.f2 IN ('f') HAVING (1 ,6) IN (SELECT 3, 6) ORDER BY t1.f1
--Result--
[]
+--------------------+
--Query--
select a from t1 having a=3
--Result--
[(3,)]
+--------------------+
--Query--
select a as x from t1 having x=3
--Result--
[(3,)]
+--------------------+
--Query--
select avg(a) as x from t1 having x=2
--Result--
[(2.0,)]
+--------------------+
--Query--
select a as foo, sum(b) as bar from t1 group by a having foo<10
--Result--
[(1, 10.0), (2, 20.0), (3, 30.0)]
+--------------------+
--Query--
select a as foo, sum(b) as bar from t1  group by a  having bar>10  order by foo+10
--Result--
[(2, 20.0), (3, 30.0)]
+--------------------+
--Query--
select a as foo,   (select t1_inner.b from t1 as t1_inner where    t1_inner.a=t1_outer.a+1)  as bar from t1 as t1_outer  group by a  having bar<30  order by bar+5
--Result--
[(1, 20)]
+--------------------+
--Query--
select a as foo,   (select t1_inner.b from t1 as t1_inner where    t1_inner.a=t1_outer.a+1)  as bar from t1 as t1_outer  group by foo  having bar<30  order by bar+5
--Result--
[(1, 20)]
+--------------------+
--Query--
SELECT a FROM (SELECT 1 FROM t1 AS From1) AS From2    NATURAL RIGHT OUTER JOIN t1 AS Outjoin3  GROUP BY 1 HAVING (   SELECT 1 FROM t1 AS Grouphaving4 GROUP BY 1 HAVING a)
--Result--
[]
+--------------------+
--Query--
SELECT a FROM (SELECT 1 FROM t1 AS From1) AS From2   NATURAL RIGHT OUTER JOIN t1 AS Outjoin3 GROUP BY 1 HAVING   sin((SELECT 1 FROM t1 AS Grouphaving4 GROUP BY 1 HAVING a))
--Result--
[]
+--------------------+
--Query--
SELECT Outjoin3.a FROM (SELECT 1 FROM t1 AS From1) AS From2  NATURAL RIGHT OUTER JOIN t2 AS Outjoin3  GROUP BY 1 HAVING ( SELECT 1 FROM t1 AS GroupHaving4 GROUP BY 1 HAVING a)
--Result--
[]
+--------------------+
--Query--
SELECT * FROM series, seq_calls
--Result--
[(0, 1)]
+--------------------+
--Query--
SELECT * FROM series, seq_calls
--Result--
[(0, 1)]
+--------------------+
--Query--
SELECT * FROM series, seq_calls
--Result--
[(0, 1)]
+--------------------+
--Query--
SELECT * FROM series, seq_calls
--Result--
[(0, 1)]
+--------------------+
--Query--
SELECT * FROM series, seq_calls
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE (t, u) in (SELECT a.t,  COUNT(DISTINCT a.u)                                                        FROM t1 a, t1 b                                                        GROUP BY a.t)
--Result--
[('2', '1'), ('3', '1'), ('4', '1')]
+--------------------+
--Query--
SELECT * FROM t1 WHERE (t, u) not in (SELECT a.t,  COUNT(DISTINCT a.u)                                                        FROM t1 a, t1 b                                                        GROUP BY a.t)
--Result--
[]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT col_varchar_key AS field1   FROM t1 AS table1   GROUP BY field1   HAVING field1 = 'a'
--Result--
[('a',)]
+--------------------+
--Query--
SELECT c1 FROM t1 WHERE EXISTS(SELECT * FROM t2 HAVING c2>0)
--Result--
[]
+--------------------+
--Query--
SELECT c1 FROM t1 WHERE EXISTS(SELECT * FROM t2 HAVING c2>0)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT MAX(col_varchar_key) AS field1 FROM CC AS alias1  HAVING field1 <> 5
--Result--
[('z',)]
+--------------------+
--Query--
SELECT t1.id, (SELECT t2.value FROM t t2 WHERE t1.id = t2.id) AS sub_value FROM t t1 HAVING sub_value = 99 ORDER BY value LIMIT 1
--Result--
[(1, 99)]
+--------------------+
--Query--
SELECT (SELECT (SELECT t2.value+o.c FROM t t2 WHERE t1.id = t2.id) AS sub_value         FROM t t1         HAVING sub_value = 99         ORDER BY value         LIMIT 1) AS sub_value FROM o
--Result--
[(99,), (99,)]
+--------------------+
--Query--
SELECT 1 HAVING COUNT(*) = 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 1 WHERE TRUE HAVING COUNT(*) = 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 1 WHERE FALSE HAVING COUNT(*) = 0
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 1 HAVING json_objectagg(utc_date(), 1416) <> 0
--Result--
[(1,)]
+--------------------+
--Query--
SELECT DISTINCT   COUNT(DISTINCT t1.a) AS da FROM   t1   JOIN t1 AS t2 ON t1.a = t2.a GROUP BY t1.a HAVING COUNT(DISTINCT t1.a) = 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT SUM(t1.f1)+1 AS field1 FROM t1 JOIN t1 AS t2 GROUP BY t1.f1 HAVING field1 < 7 ORDER BY field1
--Result--
[]
+--------------------+
