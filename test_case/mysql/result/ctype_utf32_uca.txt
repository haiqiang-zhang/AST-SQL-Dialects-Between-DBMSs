--Query--
select hex('a'), hex('a ')
--Result--
[('61', '6120')]
+--------------------+
--Query--
select 'c' like '\_' as want0
--Result--
[(0,)]
+--------------------+
--Query--
select group_concat(c1 order by binary c1 separator '') from t1 group by c1 collate utf32_unicode_ci
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE _utf32 0x0000039C00000025 COLLATE utf32_general_ci
--Result--
[('Μωδαί̈',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE _utf32 0x0000039C00000025 COLLATE utf32_general_ci ORDER BY c
--Result--
[('Μωδ',), ('Μωδαί̈',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE _utf32 0x0000039C00000025 COLLATE utf32_unicode_ci
--Result--
[('Μωδαί̈',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE _utf32 0x0000039C00000025 COLLATE utf32_unicode_ci ORDER BY c
--Result--
[('Μωδ',), ('Μωδαί̈',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE CONVERT(_ucs2 0x039C0025 USING utf32) COLLATE utf32_unicode_ci
--Result--
[('Μωδαί̈',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE c LIKE CONVERT(_ucs2 0x039C0025 USING utf32) COLLATE utf32_unicode_ci ORDER BY c
--Result--
[('Μωδ',), ('Μωδαί̈',)]
+--------------------+
--Query--
SELECT a, length(a) la, @l:=lower(a) l, length(@l) ll, @u:=upper(a) u, length(@u) lu FROM t1 ORDER BY id
--Result--
[('ıi', 8, 'ıi', 8, 'II', 8), ('ıı', 8, 'ıı', 8, 'II', 8), ('ii', 8, 'ii', 8, 'II', 8), ('İI', 8, 'ii', 8, 'İI', 8), ('İİ', 8, 'ii', 8, 'İİ', 8), ('II', 8, 'ii', 8, 'II', 8)]
+--------------------+
--Query--
SELECT a, length(a) la, @l:=lower(a) l, length(@l) ll, @u:=upper(a) u, length(@u) lu FROM t1 ORDER BY id
--Result--
[('ıi', 8, 'ıi', 8, 'Iİ', 8), ('ıı', 8, 'ıı', 8, 'II', 8), ('ii', 8, 'ii', 8, 'İİ', 8), ('İI', 8, 'iı', 8, 'İI', 8), ('İİ', 8, 'ii', 8, 'İİ', 8), ('II', 8, 'ıı', 8, 'II', 8)]
+--------------------+
--Query--
SELECT * FROM t1,t2 WHERE a LIKE b
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t1 AS t1_0 NATURAL LEFT OUTER JOIN t2 AS t2_0 RIGHT JOIN t1 AS t1_1 ON t1_0.a LIKE t2_0.b
--Result--
[(1,), (1,)]
+--------------------+
