--Query--
SELECT t2.userid, MIN(t1.score) FROM t1, t2 WHERE t1.userID=t2.userID GROUP BY t2.userid
--Result--
[]
+--------------------+
--Query--
lock tables t1 read,t2 write
--Result--
[]
+--------------------+
--Query--
SELECT cid, CONCAT(firstname, ' ', surname), COUNT(call_id) FROM t1 LEFT JOIN t2 ON cid=contact_id WHERE firstname like '%foo%' GROUP BY cid
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select 1+1, "a",count(*) from t1 where foo in (2)
--Result--
[(2, 'a', 0)]
+--------------------+
--Query--
select sql_big_result spid,sum(userid) from t1 group by spid order by spid desc
--Result--
[(7, 3.0), (6, 3.0), (5, 3.0), (4, 3.0), (3, 3.0), (2, 3.0), (1, 1.0)]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY a
--Result--
[('A',), ('B',), (None,)]
+--------------------+
--Query--
SELECT binary a FROM t1 GROUP BY 1
--Result--
[(b'A',), (b'B',), (None,), (b'a',), (b'b',)]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY a ORDER BY a
--Result--
[(None,), ('A',), ('B',)]
+--------------------+
--Query--
SELECT binary a FROM t1 GROUP BY 1 ORDER BY 1
--Result--
[(None,), (b'A',), (b'B',), (b'a',), (b'b',)]
+--------------------+
--Query--
SELECT CONCAT(a, b) FROM t1 GROUP BY 1
--Result--
[('abcdef',), ('hijklm',)]
+--------------------+
--Query--
SELECT CONCAT(a, b),count(*) FROM t1 GROUP BY 1
--Result--
[('abcdef', 1), ('hijklm', 1)]
+--------------------+
--Query--
select S.ID as xID, S.ID1 as xID1 from t1 as S left join t1 as yS  on S.ID1 between yS.ID1 and yS.ID2
--Result--
[(1, 1), (2, 2), (2, 2), (3, 134), (3, 134), (3, 134), (4, 185), (4, 185), (4, 185), (4, 185)]
+--------------------+
--Query--
select S.ID as xID, S.ID1 as xID1, repeat('*',count(distinct yS.ID)) as Level from t1 as S left join t1 as yS  on S.ID1 between yS.ID1 and yS.ID2 group by xID order by xID1
--Result--
[(1, 1, '*'), (2, 2, '**'), (3, 134, '***'), (4, 185, '****')]
+--------------------+
--Query--
select * from t1 AS m LEFT JOIN t2 AS c1 ON m.c1id =  c1.id AND c1.active = 'Yes' LEFT JOIN t3 AS c2 ON m.c2id = c2.id AND  c2.active = 'Yes' WHERE m.pid=1  AND (c1.id IS NOT NULL OR c2.id IS NOT NULL)
--Result--
[(1, 1, None, 1, 1, 'Yes', None, None), (1, None, 3, 3, None, None, 3, 'Yes'), (1, 4, None, 4, 4, 'Yes', None, None)]
+--------------------+
--Query--
select max(value) from t1 AS m LEFT JOIN t2 AS c1 ON  m.c1id = c1.id AND c1.active = 'Yes' LEFT JOIN t3 AS c2 ON m.c2id =  c2.id AND c2.active = 'Yes' WHERE m.pid=1  AND (c1.id IS NOT NULL OR c2.id IS  NOT NULL)
--Result--
[(4,)]
+--------------------+
--Query--
select t1.a,t2.b from t1,t2 where t1.a=t2.a group by t1.a,t2.b
--Result--
[(1, 3), (1, 1), (3, 1), (2, 2)]
+--------------------+
--Query--
select t1.a,t2.b from t1,t2 where t1.a=t2.a group by t1.a,t2.b ORDER BY NULL
--Result--
[(1, 3), (1, 1), (3, 1), (2, 2)]
+--------------------+
--Query--
select a, MAX(b), INTERVAL (MAX(b), 1,3,10,30,39,40,50,60,100,1000) from t1 group by a
--Result--
[(1, 4, 2), (10, 43, 6)]
+--------------------+
--Query--
select a, MAX(b), FIELD(MAX(b), '43', '4', '5') from t1 group by a
--Result--
[(1, 4, 2), (10, 43, 1)]
+--------------------+
--Query--
select a, MAX(b), CONCAT_WS(MAX(b), '43', '4', '5') from t1 group by a
--Result--
[(1, 4, '434445'), (10, 43, '43434435')]
+--------------------+
--Query--
select a, MAX(b), ELT(MAX(b), 'a', 'b', 'c', 'd', 'e', 'f') from t1 group by a
--Result--
[(1, 4, 'd'), (10, 43, None)]
+--------------------+
--Query--
select a, MAX(b), MAKE_SET(MAX(b), 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h') from t1 group by a
--Result--
[(1, 4, 'c'), (10, 43, 'a,b,d,f')]
+--------------------+
--Query--
select id, sum(qty) as sqty, count(qty) as cqty from t1 group by id having sum(qty)>2 and cqty>1
--Result--
[(1, 5.0, 2), (2, 9.0, 2)]
+--------------------+
--Query--
select id, sum(qty) as sqty from t1 group by id having sqty>2 and count(qty)>1
--Result--
[(1, 5.0), (2, 9.0)]
+--------------------+
--Query--
select id, sum(qty) as sqty, count(qty) as cqty from t1 group by id having sqty>2 and cqty>1
--Result--
[(1, 5.0, 2), (2, 9.0, 2)]
+--------------------+
--Query--
select id, sum(qty) as sqty, count(qty) as cqty from t1 group by id having sum(qty)>2 and count(qty)>1
--Result--
[(1, 5.0, 2), (2, 9.0, 2)]
+--------------------+
--Query--
select min(a) is null from t1
--Result--
[(1,)]
+--------------------+
--Query--
select group_concat( distinct col1 ) as alias from t1   group by col2 having alias like '%'
--Result--
[('1,2',), ('1,2',), ('1',)]
+--------------------+
--Query--
SELECT a, 0.1*0+1 r2, SUM(1) r1 FROM t1 WHERE a = 1 GROUP BY a HAVING r1>1 AND r2=1
--Result--
[(1, 1.0, 2.0)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2, SUM(1) r1 FROM t1 GROUP BY a
--Result--
[(1, 2.0, 2.0), (2, 7.0, 1.0)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2, SUM(1) r1 FROM t1 GROUP BY a   HAVING r1>=1 AND r2<=7 AND r2 > 0
--Result--
[(1, 2.0, 2.0), (2, 7.0, 1.0)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2, SUM(1) r1 FROM t1 GROUP BY a   HAVING r1>=1 AND (SELECT r2<=7 AND r2 > 0 FROM t1 AS t2 LIMIT 1)
--Result--
[(1, 2.0, 2.0), (2, 7.0, 1.0)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2, SUM(1) r1 FROM t1 WHERE a = 1  GROUP BY a HAVING r1>1 AND r2<=2
--Result--
[(1, 7.0, 2.0)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2, SUM(1) r1 FROM t1 WHERE a = 1  GROUP BY a HAVING r1>1 AND r2<=2 ORDER BY a+r2+r1
--Result--
[(1, 7.0, 2.0)]
+--------------------+
--Query--
SELECT a,SUM(b) FROM t1 WHERE a=1 GROUP BY c
--Result--
[(1, 5.0)]
+--------------------+
--Query--
SELECT a*SUM(b) FROM t1 WHERE a=1 GROUP BY c
--Result--
[(5.0,)]
+--------------------+
--Query--
SELECT SUM(a)*SUM(b) FROM t1 WHERE a=1 GROUP BY c
--Result--
[(10.0,)]
+--------------------+
--Query--
SELECT SUM(a)*SUM(b) AS d FROM t1 WHERE a=1 GROUP BY c HAVING d > 0
--Result--
[(10.0,)]
+--------------------+
--Query--
SELECT a, ROUND(RAND(100)*10) r2 FROM t1
--Result--
[(1, 2.0), (1, 7.0), (2, 10.0)]
+--------------------+
--Query--
SELECT ROUND(RAND(100)*10) r2 FROM t1 GROUP BY r2
--Result--
[(2.0,), (7.0,), (10.0,)]
+--------------------+
--Query--
SELECT DISTINCT STD(i)+0 as splus0, i+0 as plain FROM t1 GROUP BY i
--Result--
[(None, None), (0.0, 1)]
+--------------------+
--Query--
select c from t2 where a = 2 and b = 'val-2' group by c
--Result--
[('val-74',), ('val-98',)]
+--------------------+
--Query--
select * from t1
--Result--
[(3000000000,)]
+--------------------+
--Query--
SELECT hostname, COUNT(DISTINCT user_id) as no FROM t1   WHERE hostname LIKE '%aol%'     GROUP BY hostname
--Result--
[('cache-dtc-af05.proxy.aol.com', 1)]
+--------------------+
--Query--
SELECT COUNT(DISTINCT(t1.id)), LEFT(err_comment, 256) AS comment   FROM t1 LEFT JOIN t2 ON t1.id=t2.id GROUP BY comment
--Result--
[(1, None), (1, b'a problem')]
+--------------------+
--Query--
select date(left(f1+0,8)) from t1 group by 1
--Result--
[(datetime.date(2005, 6, 6),)]
+--------------------+
--Query--
SELECT n+1 AS n FROM t1 GROUP BY n
--Result--
[(2,)]
+--------------------+
--Query--
select sql_buffer_result max(f1)+1 from t1
--Result--
[(3.0,)]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY `a`
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 GROUP BY `a`
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 HAVING 'a' > 1
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 HAVING "a" > 1
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 HAVING `a` > 1
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 ORDER BY 'a' DESC
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 ORDER BY "a" DESC
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 ORDER BY `a` DESC
--Result--
[]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT avg(t2.f1) FROM t1, t2 where t2.f2 = 'SIR' GROUP BY t1.f1
--Result--
[]
+--------------------+
--Query--
select t1.c1 as c2 from t1, t2 where t1.c2 = t2.c4 group by t1.c1
--Result--
[('aaa',)]
+--------------------+
--Query--
SELECT straight_join v1.a, v1.b, v1.real_b from t2, v1 where t2.b=v1.a GROUP BY t2.b
--Result--
[(1, '-----', '-----'), (6, 'Allemagne', 'Allemagne'), (17, 'Autriche', 'Autriche'), (25, 'Belgique', 'Belgique'), (54, 'Danemark', 'Danemark'), (62, 'Espagne', 'Espagne'), (68, 'France', 'France')]
+--------------------+
--Query--
SELECT straight_join v1.a, v1.b, v1.real_b from t2, v1 where t2.b=v1.a GROUP BY t2.b
--Result--
[(1, '-----', '-----'), (6, 'Allemagne', 'Allemagne'), (17, 'Autriche', 'Autriche'), (25, 'Belgique', 'Belgique'), (54, 'Danemark', 'Danemark'), (62, 'Espagne', 'Espagne'), (68, 'France', 'France')]
+--------------------+
--Query--
SELECT MIN(b), MAX(b) from t1
--Result--
[(0, 19)]
+--------------------+
--Query--
SELECT MAX(a)-MIN(a) FROM t1 GROUP BY b
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT CEILING(MIN(a)) FROM t1 GROUP BY b
--Result--
[(1,), (3,), (5,)]
+--------------------+
--Query--
SELECT CASE WHEN AVG(a)>=0 THEN 'Positive' ELSE 'Negative' END FROM t1   GROUP BY b
--Result--
[('Positive',), ('Positive',), ('Positive',)]
+--------------------+
--Query--
SELECT a + 1 FROM t1 GROUP BY a
--Result--
[(2,), (3,), (4,), (5,), (6,), (7,)]
+--------------------+
--Query--
SELECT (SELECT t1_outer.a FROM t1 AS t1_inner GROUP BY b LIMIT 1)    FROM t1 AS t1_outer
--Result--
[(1,), (2,), (3,), (4,), (5,), (6,)]
+--------------------+
--Query--
SELECT 1 FROM t1 as t1_outer GROUP BY a    HAVING (SELECT t1_outer.a FROM t1 AS t1_inner GROUP BY b LIMIT 1)
--Result--
[(1,), (1,), (1,), (1,), (1,), (1,)]
+--------------------+
--Query--
SELECT (SELECT SUM(t1_inner.a) FROM t1 AS t1_inner LIMIT 1)    FROM t1 AS t1_outer GROUP BY t1_outer.b
--Result--
[(21.0,), (21.0,), (21.0,)]
+--------------------+
--Query--
SELECT (SELECT SUM(t1_inner.a) FROM t1 AS t1_inner GROUP BY t1_inner.b LIMIT 1)   FROM t1 AS t1_outer
--Result--
[(3.0,), (3.0,), (3.0,), (3.0,), (3.0,), (3.0,)]
+--------------------+
--Query--
SELECT (SELECT SUM(t1_outer.a) FROM t1 AS t1_inner LIMIT 1)    FROM t1 AS t1_outer GROUP BY t1_outer.b
--Result--
[(3.0,), (7.0,), (11.0,)]
+--------------------+
--Query--
SELECT 1 FROM t1 as t1_outer    WHERE (SELECT t1_outer.b FROM t1 AS t1_inner GROUP BY t1_inner.b LIMIT 1)
--Result--
[(1,), (1,), (1,), (1,), (1,), (1,)]
+--------------------+
--Query--
SELECT b FROM t1 GROUP BY b HAVING CEILING(b) > 0
--Result--
[(1,), (2,), (3,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY b HAVING b = 2 OR b = 3 OR SUM(a) > 12
--Result--
[(1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY b HAVING ROW (b,b) = ROW (1,1)
--Result--
[(1,)]
+--------------------+
--Query--
select * from t1 group by f1, f2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 ORDER BY c1
--Result--
[(5, 1, 3), (4, 2, 3), (3, 3, 5), (2, 4, 1), (1, 5, 1)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY id ORDER BY c1
--Result--
[(5, 1, 3), (4, 2, 3), (3, 3, 5), (2, 4, 1), (1, 5, 1)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY id ORDER BY id DESC
--Result--
[(5, 1, 3), (4, 2, 3), (3, 3, 5), (2, 4, 1), (1, 5, 1)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY c2 ,c1, id ORDER BY c2, c1
--Result--
[(2, 4, 1), (1, 5, 1), (5, 1, 3), (4, 2, 3), (3, 3, 5)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY c2, c1, id ORDER BY c2 DESC, c1
--Result--
[(3, 3, 5), (5, 1, 3), (4, 2, 3), (2, 4, 1), (1, 5, 1)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY c2, c1, id ORDER BY c2 DESC, c1 DESC
--Result--
[(3, 3, 5), (4, 2, 3), (5, 1, 3), (1, 5, 1), (2, 4, 1)]
+--------------------+
--Query--
SELECT COUNT(*) FROM t1 ORDER BY SUM(a)
--Result--
[(6,)]
+--------------------+
--Query--
SELECT t1.a FROM t1 ORDER BY (SELECT SUM(t2.a) FROM t2)
--Result--
[(3,), (2,), (3,), (2,), (3,), (4,)]
+--------------------+
--Query--
SELECT t1.a FROM t1 ORDER BY (SELECT SUM(t2.a) FROM t2 ORDER BY t2.a)
--Result--
[(3,), (2,), (3,), (2,), (3,), (4,)]
+--------------------+
--Query--
SELECT t1.a FROM t1 GROUP BY t1.a   HAVING t1.a IN (SELECT t2.a FROM t2 ORDER BY SUM(t1.b))
--Result--
[(3,), (2,), (4,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY t1.a   HAVING (SELECT AVG(SUM(t1.b) + 1) FROM t2 ORDER BY SUM(t2.a) LIMIT 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY t1.a   HAVING (SELECT AVG(SUM(t1.b) + t2.b) FROM t2 ORDER BY SUM(t2.a) LIMIT 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY t1.a   HAVING (SELECT AVG(SUM(t1.b) + 1) FROM t2 ORDER BY t2.a LIMIT 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY t1.a   HAVING (SELECT AVG(SUM(t1.b) + t2.b) FROM t2 ORDER BY t2.a LIMIT 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT t1.a FROM t1    WHERE t1.a = (SELECT t2.a FROM t2 GROUP BY t2.a                   ORDER BY SUM(t2.b), SUM(t1.b) LIMIT 1)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT t1.a FROM t1 GROUP BY t1.a     HAVING (1, 1) = (SELECT SUM(t1.a), t1.a FROM t2 LIMIT 1)
--Result--
[]
+--------------------+
--Query--
select avg (   (select     (select sum(outr.a + innr.a) from t1 as innr limit 1) as tt    from t1 as outr order by outr.a limit 1)) from t1 as most_outer
--Result--
[(29.0,)]
+--------------------+
--Query--
select (select sum(outr.a + t1.a) from t1 limit 1) as tt from t1 as outr order by outr.a
--Result--
[(29.0,), (29.0,), (35.0,), (35.0,), (35.0,), (41.0,)]
+--------------------+
--Query--
SELECT COUNT(varchar_key) AS x FROM t1 WHERE pk = 8 having 'foo'='bar'
--Result--
[]
+--------------------+
--Query--
SELECT a FROM t1 IGNORE INDEX FOR ORDER BY (PRIMARY,i2) ORDER BY a
--Result--
[(1,), (2,), (3,), (4,), (5,), (6,), (7,), (8,), (9,), (10,), (11,), (12,), (13,), (14,), (15,), (16,), (17,), (18,), (19,), (20,), (21,), (22,), (23,), (24,), (25,), (26,), (27,), (28,), (29,), (30,), (31,), (32,), (33,), (34,), (35,), (36,), (37,), (38,), (39,), (40,), (41,), (42,), (43,), (44,), (45,), (46,), (47,), (48,), (49,), (50,), (51,), (52,), (53,), (54,), (55,), (56,), (57,), (58,), (59,), (60,), (61,), (62,), (63,), (64,), (65,), (66,), (67,), (68,), (69,), (70,), (71,), (72,), (73,), (74,), (75,), (76,), (77,), (78,), (79,), (80,), (81,), (82,), (83,), (84,), (85,), (86,), (87,), (88,), (89,), (90,), (91,), (92,), (93,), (94,), (95,), (96,), (97,), (98,), (99,), (100,), (101,), (102,), (103,), (104,), (105,), (106,), (107,), (108,), (109,), (110,), (111,), (112,), (113,), (114,), (115,), (116,), (117,), (118,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (126,), (127,), (128,), (129,), (130,), (131,), (132,), (133,), (134,), (135,), (136,), (137,), (138,), (139,), (140,), (141,), (142,), (143,), (144,)]
+--------------------+
--Query--
SELECT c,b,d FROM t1 GROUP BY c,b,d
--Result--
[(1, 1, 50), (3, 1, 4), (3, 2, 40)]
+--------------------+
--Query--
SELECT c,b,d FROM t1 GROUP BY c,b,d ORDER BY NULL
--Result--
[(1, 1, 50), (3, 1, 4), (3, 2, 40)]
+--------------------+
--Query--
SELECT c,b,d FROM t1 ORDER BY c,b,d
--Result--
[(1, 1, 50), (3, 1, 4), (3, 2, 40)]
+--------------------+
--Query--
SELECT c,b,d FROM t1 GROUP BY c,b
--Result--
[(1, 1, 50), (3, 1, 4), (3, 2, 40)]
+--------------------+
--Query--
SELECT c,b   FROM t1 GROUP BY c,b
--Result--
[(1, 1), (3, 1), (3, 2)]
+--------------------+
--Query--
SELECT a,b from t2 ORDER BY a,b
--Result--
[(None, None), (None, None), (None, 1), (1, None), (1, 1), (1, 2)]
+--------------------+
--Query--
SELECT a,b from t2 GROUP BY a,b
--Result--
[(None, None), (None, 1), (1, None), (1, 1), (1, 2)]
+--------------------+
--Query--
SELECT a from t2 GROUP BY a
--Result--
[(None,), (1,)]
+--------------------+
--Query--
SELECT b from t2 GROUP BY b
--Result--
[(None,), (1,), (2,)]
+--------------------+
--Query--
SELECT b c, (SELECT a FROM t1 WHERE b = c) FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT b c, (SELECT a FROM t1 WHERE b = c) FROM t1  HAVING b = 10
--Result--
[]
+--------------------+
--Query--
SELECT b c, (SELECT a FROM t1 WHERE b = c) FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT b c, (SELECT a FROM t1 WHERE b = c) FROM t1  HAVING b = 10
--Result--
[]
+--------------------+
--Query--
SELECT b c, (SELECT a FROM t1 WHERE b = c) FROM t1
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT SUBSTRING(a,1,10), LENGTH(a), GROUP_CONCAT(b) FROM t1 GROUP BY a
--Result--
[('1111111111', 1300, 'one,two')]
+--------------------+
--Query--
SELECT SUBSTRING(a,1,10), LENGTH(a) FROM t1 GROUP BY a
--Result--
[('1111111111', 1300)]
+--------------------+
--Query--
SELECT v1.pk FROM t1 LEFT JOIN v1 ON t1.i = v1.pk  GROUP BY v1.pk
--Result--
[(None,)]
+--------------------+
--Query--
SELECT a, AVG(t1.b), (SELECT t11.c FROM t1 t11 WHERE t11.a = t1.a AND t11.b = AVG(t1.b)) AS t11c, (SELECT t12.c FROM t1 t12 WHERE t12.a = t1.a AND t12.b = AVG(t1.b)) AS t12c FROM t1 GROUP BY a
--Result--
[(1, 4.0, 6, 6), (2, 2.0, 7, 7)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY IF(`a`,'','')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 1 FROM t1 GROUP BY SUBSTRING('',SLEEP(0),'')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT pk AS field1, col_int_nokey AS field2  FROM t1  WHERE col_int_nokey > 0 GROUP BY field1, field2
--Result--
[(10, 7), (11, 1), (12, 5), (13, 3)]
+--------------------+
--Query--
SELECT *  FROM where_subselect WHERE (field1, field2) IN (   SELECT pk AS field1, col_int_nokey AS field2   FROM t1   WHERE col_int_nokey > 0   GROUP BY field1, field2 )
--Result--
[(10, 7), (11, 1), (12, 5), (13, 3)]
+--------------------+
--Query--
PREPARE stmt FROM ' SELECT 1 FROM t2 LEFT JOIN t1 ON NULL GROUP BY t2.b, t1.a HAVING a <> 2'
--Result--
[]
+--------------------+
--Query--
DEALLOCATE PREPARE stmt
--Result--
[]
+--------------------+
--Query--
SELECT v1.pk FROM t1 LEFT JOIN v1 ON t1.i = v1.pk  GROUP BY v1.pk
--Result--
[(None,)]
+--------------------+
--Query--
SELECT vc FROM t1 GROUP BY vc
--Result--
[(None,), ('c',), ('o',), ('p',)]
+--------------------+
--Query--
SELECT SQL_BIG_RESULT col1 AS field1, col1 AS field2 FROM v1  GROUP BY field1, field2
--Result--
[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)]
+--------------------+
--Query--
SELECT SQL_BIG_RESULT tbl1.col1 AS field1, tbl2.col1 AS field2 FROM t1 as tbl1, t1 as tbl2  GROUP BY field1, field2 ORDER BY field1, field2 LIMIT 3
--Result--
[(1, 1), (1, 2), (1, 3)]
+--------------------+
--Query--
SELECT (SELECT MAX(b) FROM t2 WHERE t2.a != t1.a) as MAX  FROM t1
--Result--
[(None,), (1,)]
+--------------------+
--Query--
SELECT alias1.col_int_nokey AS field1,   (SELECT alias2.col_int_key    FROM t1 AS alias2    WHERE alias1.col_varchar_key <= alias1.col_varchar_nokey   ) AS field2 FROM t1 AS alias1 GROUP BY field1, field2
--Result--
[(None, None)]
+--------------------+
--Query--
SELECT     alias1.col_datetime_key AS field1 FROM (         view1 AS alias1,         t3 AS alias2     ) WHERE (     (SELECT MIN(sq1_alias1.pk)      FROM t2 AS sq1_alias1     ) ) OR (alias1.col_varchar_key = alias2.col_varchar_key   AND alias1.col_varchar_key = 'j' ) AND alias1.pk IS NULL GROUP BY     field1
--Result--
[]
+--------------------+
--Query--
select 1 from t1 group by b
--Result--
[]
+--------------------+
--Query--
SELECT a1.v1,a2.v1 FROM t1 AS a1 JOIN t1 AS a2 ON a2.pk = a1.i1 group by a1.v1,a2.v1 ORDER BY             a2.v1 ASC
--Result--
[('b', 'a'), ('a', 'b'), ('a', 'c')]
+--------------------+
--Query--
select sum(a), count(*) from t1 group by a
--Result--
[(2.0, 2), (None, 1)]
+--------------------+
--Query--
select round(sum(a)), count(*) from t1 group by a
--Result--
[(2.0, 2), (None, 1)]
+--------------------+
--Query--
select ifnull(a, 'xyz') from t1 group by a
--Result--
[('1',), ('xyz',)]
+--------------------+
--Query--
SELECT 1 FROM t1 WHERE 1 > ALL(SELECT 1 FROM t1 WHERE a)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t1 ORDER BY c
--Result--
[(2,)]
+--------------------+
--Query--
SELECT a, COUNT(*) AS c FROM t1 GROUP BY a ORDER BY c
--Result--
[(1, 1), (2, 1)]
+--------------------+
--Query--
SELECT (SELECT 1 AS foo ORDER BY a) AS x FROM t1
--Result--
[(1,), (1,)]
+--------------------+
--Query--
SELECT (SELECT 1 AS foo ORDER BY t1.a) AS x FROM t1
--Result--
[(1,), (1,)]
+--------------------+
--Query--
SELECT (SELECT 1 AS foo ORDER BY COUNT(a)) AS x FROM t1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT (SELECT 1 AS foo ORDER BY COUNT(t1.a)) AS x FROM t1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
SELECT 1 FROM r GROUP BY MAKE_SET(1,c) WITH ROLLUP
--Result--
[(1,), (1,)]
+--------------------+
--Query--
SELECT DISTINCT table1 . pk AS field1 FROM  view_AA AS table1  LEFT  JOIN B AS table2 ON  table1 . col_varchar_10_latin1_key =  table2 . col_varchar_1024_latin1_key WHERE ( ( table2 . pk > table1 . col_int_key AND table1 . pk NOT BETWEEN 3 AND ( 3 + 3 ) ) AND table2 . pk <> 6 ) GROUP BY table1 . pk
--Result--
[]
+--------------------+
--Query--
SELECT   EXISTS   (     SELECT 1     FROM (SELECT a FROM t1) t_inner     GROUP BY t_inner.a     ORDER BY MIN(t_outer.b)   ) FROM t1 t_outer
--Result--
[(1,)]
+--------------------+
--Query--
SELECT a, (SELECT SUM(a + c) FROM (SELECT b as c FROM t1) AS v1) FROM t1
--Result--
[(1, 8.0), (2, 10.0)]
+--------------------+
--Query--
SELECT c, i, pk FROM cc WHERE (cc.pk = 1)  GROUP BY c, i, pk
--Result--
[]
+--------------------+
--Query--
SELECT txt, AVG(i) a FROM t GROUP BY txt ORDER BY a, txt
--Result--
[('a', 2.0), ('c', 2.0), ('b', 4.0)]
+--------------------+
--Query--
SELECT txt, VAR_POP(i) v FROM t GROUP BY txt ORDER BY v, txt
--Result--
[('a', 0.0), ('c', 0.0), ('b', 16.0)]
+--------------------+
--Query--
SELECT txt, STDDEV_POP(i) s FROM t GROUP BY txt ORDER BY s, txt
--Result--
[('a', 0.0), ('c', 0.0), ('b', 4.0)]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT txt, AVG(i) a FROM t GROUP BY txt ORDER BY a, txt
--Result--
[('a', 2.0), ('c', 2.0), ('b', 4.0)]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT txt, VAR_POP(i) v FROM t GROUP BY txt ORDER BY v, txt
--Result--
[('a', 0.0), ('c', 0.0), ('b', 16.0)]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT txt, STDDEV_POP(i) s FROM t GROUP BY txt ORDER BY s, txt
--Result--
[('a', 0.0), ('c', 0.0), ('b', 4.0)]
+--------------------+
--Query--
SELECT col_varchar as field1, MAX(col_int_key) AS field3 FROM t1 GROUP BY col_varchar HAVING (field1 >= 'i' OR field3 <= 9)
--Result--
[('r', 83)]
+--------------------+
--Query--
SELECT CONCAT(col_varchar) as field1, MAX(col_int_key) AS field3 FROM t1 GROUP BY col_varchar HAVING (field1 >= 'i' OR field3 <= 9)
--Result--
[('r', 83)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t ORDER BY (SELECT 1 HAVING c)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t ORDER BY c
--Result--
[(4,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t ORDER BY c+1
--Result--
[(4,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t ORDER BY c+c
--Result--
[(4,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t HAVING (SELECT 1 HAVING c)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT COUNT(*) AS c FROM t HAVING c
--Result--
[(4,)]
+--------------------+
--Query--
SELECT a, COUNT(*) AS c FROM t GROUP BY a WITH ROLLUP HAVING (SELECT 1 HAVING c)
--Result--
[(0, 1), (1, 2), (2, 1), (None, 4)]
+--------------------+
--Query--
SELECT a, COUNT(*) AS c FROM t GROUP BY a WITH ROLLUP HAVING c
--Result--
[(0, 1), (1, 2), (2, 1), (None, 4)]
+--------------------+
--Query--
SELECT (SELECT COUNT(*) AS c FROM t HAVING c <> 0)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT (SELECT COUNT(*) FROM t HAVING COUNT(*) <> 0)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT (SELECT COUNT(*) AS c FROM t ORDER BY c)
--Result--
[(4,)]
+--------------------+
--Query--
SELECT (SELECT COUNT(*) FROM t ORDER BY COUNT(*))
--Result--
[(4,)]
+--------------------+
--Query--
SELECT 1 FROM t t1 HAVING (SELECT SUM(t1.a) s FROM t t2                                   GROUP BY (SELECT 1 HAVING s > 0)) > 0
--Result--
[(1,)]
+--------------------+
--Query--
SELECT (SELECT SUM(a)) FROM t
--Result--
[(4.0,)]
+--------------------+
--Query--
SELECT SUM(a) AS s, (SELECT SUM(a)) FROM t
--Result--
[(4.0, 4.0)]
+--------------------+
--Query--
SELECT a, (SELECT SUM(a)) s FROM t GROUP BY a
--Result--
[(0, 0.0), (1, 2.0), (2, 2.0)]
+--------------------+
--Query--
SELECT 1 FROM t t1 HAVING (SELECT SUM(t1.a) s FROM t t2 HAVING s > 5)
--Result--
[]
+--------------------+
--Query--
SELECT (SELECT SUM(t1.a) s FROM t t2 WHERE t2.a = 0 HAVING s > 3) FROM t t1
--Result--
[(4.0,)]
+--------------------+
--Query--
SELECT 1 FROM t HAVING (SELECT SUM(a)) > 0
--Result--
[(1,)]
+--------------------+
--Query--
SELECT (SELECT SUM(a)) FROM t
--Result--
[(4.0,)]
+--------------------+
--Query--
SELECT SUM(a) AS s, (SELECT 1 HAVING s) FROM t
--Result--
[(4.0, 1)]
+--------------------+
--Query--
SELECT SUM(a) AS s, (SELECT 1 HAVING s IS NULL) FROM t
--Result--
[(4.0, None)]
+--------------------+
--Query--
SELECT COUNT(a) AS c, (SELECT 1 HAVING c) FROM t
--Result--
[(4, 1)]
+--------------------+
--Query--
SELECT COUNT(a) AS c, (SELECT 1 HAVING c = 0) FROM t
--Result--
[(4, None)]
+--------------------+
--Query--
SELECT a, COUNT(*) c FROM t GROUP BY a ORDER BY (SELECT -a HAVING c > 0)
--Result--
[(0, 1), (2, 1), (1, 2)]
+--------------------+
--Query--
SELECT * FROM t t1 WHERE (SELECT SUM(t1.a) s FROM t t2 HAVING s = 0)
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s FROM t t2 ORDER BY s)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s FROM t t2 ORDER BY s + 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t WHERE (SELECT SUM(a)) > 0
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t GROUP BY (SELECT SUM(a))
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT * FROM t t1 WHERE (SELECT SUM(t1.a) s FROM t t2 HAVING s = 0)
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s FROM t t2 ORDER BY s)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s FROM t t2 ORDER BY s + 1)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t t1 GROUP BY (SELECT SUM(t1.a) s)
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t WHERE (SELECT SUM(a)) > 0
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT 1 FROM t GROUP BY (SELECT SUM(a))
--Result--
[(1,), (1,), (1,)]
+--------------------+
--Query--
SELECT WEEK(d)/10, GROUP_CONCAT(i) FROM t GROUP BY WEEK(d)/10
--Result--
[(None, '1'), (0.2, '3')]
+--------------------+
--Query--
SELECT f1, f1 + 1, COUNT(DISTINCT f2) AS x FROM t1 GROUP BY f1 ORDER BY x
--Result--
[(3, 4, 1), (2, 3, 2), (1, 2, 3)]
+--------------------+
--Query--
SELECT * FROM t1 GROUP BY f3,f2,f1 WITH ROLLUP
--Result--
[]
+--------------------+
--Query--
PREPARE stmt from " select count(distinct x.id_aams) from (select g.id_aams, g.id       from (select t1.id_aams, t2.*             from t1 left join t2                  on t2.code_id='G0000000012' and                     t1.id_aams=t2.id_game             where t1.id_aams=1715000360             order by t2.id desc            ) as g       group by g.id_aams       having g.id is null      ) as x"
--Result--
[]
+--------------------+
--Query--
DEALLOCATE PREPARE stmt
--Result--
[]
+--------------------+
--Query--
SELECT TRUNCATE(a, 1) FROM t1 GROUP BY TRUNCATE(a, 1) WITH ROLLUP
--Result--
[(0.1,), (None,)]
+--------------------+
--Query--
SELECT SUM(t1.a) AS field1, CONCAT(d1.b) AS field2 FROM (SELECT * FROM t1) AS d1, t1 GROUP BY field2 HAVING field2 > '' AND field1 < 4
--Result--
[(1.0, 'x')]
+--------------------+
--Query--
SELECT   (     SELECT COUNT(*) +       (         SELECT COUNT(*)         FROM t1         WHERE f1 = c.f2       )     FROM t1   )   FROM (SELECT 555 AS f2) AS c
--Result--
[(0,)]
+--------------------+
--Query--
SELECT t1.b FROM t1, t1 AS t2 WHERE t1.a = t1.b AND t1.a = t2.b GROUP BY t1.b ORDER BY t2.b
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(*), SUM(c1), AVG(c1), MIN(c1), MAX(c1) FROM t1 WHERE c1 > 32767
--Result--
[(0, None, None, None, None)]
+--------------------+
--Query--
PREPARE stmt from 'SELECT COUNT(*), SUM(c1), AVG(c1), MIN(c1), MAX(c1) FROM t1 WHERE c1 > ?'
--Result--
[]
+--------------------+
--Query--
SELECT BIT_AND(c1), BIT_OR(c1), BIT_XOR(c1) FROM t1 WHERE c1 > 32767
--Result--
[(18446744073709551615, 0, 0)]
+--------------------+
--Query--
PREPARE stmt from 'SELECT BIT_AND(c1), BIT_OR(c1), BIT_XOR(c1) FROM t1 WHERE c1 > ?'
--Result--
[]
+--------------------+
--Query--
SELECT GROUP_CONCAT(c1), JSON_ARRAYAGG(c1), JSON_OBJECTAGG('key', c1) FROM t1 WHERE c1 > 32767
--Result--
[(None, None, None)]
+--------------------+
--Query--
PREPARE stmt from "SELECT GROUP_CONCAT(c1), JSON_ARRAYAGG(c1), JSON_OBJECTAGG('key', c1)  FROM t1  WHERE c1 > ?"
--Result--
[]
+--------------------+
--Query--
SELECT STDDEV_POP(c1), STDDEV_SAMP(c1), VAR_POP(c1), VAR_SAMP(c1) FROM t1 WHERE c1 > 32767
--Result--
[(None, None, None, None)]
+--------------------+
--Query--
PREPARE stmt from 'SELECT STDDEV_POP(c1), STDDEV_SAMP(c1), VAR_POP(c1), VAR_SAMP(c1)  FROM t1  WHERE c1 > ?'
--Result--
[]
+--------------------+
--Query--
SELECT HEX(CONCAT(MIN(b1))), HEX(CONCAT(MIN(b9))), HEX(CONCAT(MIN(b64))) FROM t1 GROUP BY id
--Result--
[('00', '0000', '0000000000000000'), ('01', '0100', '8000000000000000')]
+--------------------+
--Query--
SELECT HEX(CONCAT(MIN(b1))), HEX(CONCAT(MIN(b9))), HEX(CONCAT(MIN(b64))) FROM t1 IGNORE INDEX(i1) GROUP BY id
--Result--
[('00', '0000', '0000000000000000'), ('01', '0100', '8000000000000000')]
+--------------------+
--Query--
SELECT SQL_BUFFER_RESULT MAX(f1)+1, 1 AS f2  FROM t1 GROUP BY f2
--Result--
[(2, 1)]
+--------------------+
--Query--
SELECT   t2d.a,   SUM(t1.b) AS field2 FROM   t1   JOIN ( SELECT * FROM t2 ) AS t2d ON t1.a = t2d.a GROUP BY t2d.a HAVING t2d.a <> 3 OR field2 < 5
--Result--
[(3, 0.0), (4, 5.0)]
+--------------------+
--Query--
PREPARE ps FROM ' SELECT d.i, COUNT(*) FROM t, LATERAL (SELECT i, blobfield) AS d GROUP BY d.i HAVING d.i < 100 ORDER BY d.i '
--Result--
[]
+--------------------+
--Query--
DEALLOCATE PREPARE ps
--Result--
[]
+--------------------+
--Query--
SELECT SUM(t1.f1) FROM t1 JOIN t1 AS t2         ON t1.f1 = t2.f1 ORDER BY RANK() OVER(), CAST(t1.f1 AS UNSIGNED)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT t2.x FROM   t1   LEFT JOIN t2   LEFT JOIN t3 ON t3.x = t2.x ON t1.x = t3.x WHERE t3.x IS NULL GROUP BY t2.x ORDER BY t2.x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT t1.x FROM t1, t2 WHERE t1.id = t2.id GROUP BY t1.x WITH ROLLUP
--Result--
[(1,), (2,), (None,)]
+--------------------+
--Query--
SELECT t1.x FROM t1, t2 WHERE t1.x = t2.pk GROUP BY t1.x HAVING (COUNT(*) = 3 AND COUNT(*) > 6) OR t1.x = 2
--Result--
[(2,)]
+--------------------+
--Query--
PREPARE ps FROM 'SELECT 1 FROM t1, (SELECT DISTINCT x FROM t2) AS ot2  WHERE t1.pk = ot2.x GROUP BY ot2.x, t1.x'
--Result--
[]
+--------------------+
--Query--
DEALLOCATE PREPARE ps
--Result--
[]
+--------------------+
--Query--
SELECT DISTINCT t1.x FROM t1, t2 WHERE t1.x = t2.pk GROUP BY t1.pk
--Result--
[(1,), (2,), (3,)]
+--------------------+
--Query--
SELECT t1.x, dt.* FROM t1, LATERAL (   SELECT SQL_BIG_RESULT t2.y, SUM(t3.x)   FROM t2, t3 WHERE t2.x = t3.id AND t2.y + t3.y < t1.y   GROUP BY t2.y ) AS dt
--Result--
[(1, 1, 1.0), (1, 2, 2.0), (2, 1, 1.0), (2, 2, 2.0), (3, 1, 1.0), (4, 1, 1.0), (4, 2, 2.0), (6, 1, 1.0), (6, 2, 2.0)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(0.0, 0.0, 1), (-0.0, -0.0, 2), (-0.0, -0.0, 1), (100.0, 100.0, 100)]
+--------------------+
--Query--
SELECT DISTINCT f from t
--Result--
[(0.0,), (100.0,)]
+--------------------+
--Query--
SELECT DISTINCT d from t
--Result--
[(0.0,), (100.0,)]
+--------------------+
--Query--
SELECT DISTINCT id, f from t
--Result--
[(1, 0.0), (2, -0.0), (100, 100.0)]
+--------------------+
--Query--
SELECT DISTINCT id, d from t
--Result--
[(1, 0.0), (2, -0.0), (100, 100.0)]
+--------------------+
--Query--
SELECT COUNT(DISTINCT f), COUNT(DISTINCT d), AVG(DISTINCT f), AVG(DISTINCT d) FROM t
--Result--
[(2, 2, 50.0, 50.0)]
+--------------------+
--Query--
SELECT COUNT(DISTINCT f, id), GROUP_CONCAT(DISTINCT f, id) FROM t
--Result--
[(3, '01,-02,100100')]
+--------------------+
