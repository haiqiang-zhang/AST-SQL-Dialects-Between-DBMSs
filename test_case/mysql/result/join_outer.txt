--Query--
select t1.*,t2.* from t1 JOIN t2 where t1.a=t2.a
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 on (t1.a=t2.a) order by t1.grp,t1.a,t2.c
--Result--
[(None, None, '', None, None, None, None), (1, 1, 'a', 1, 1, 'a', 1), (2, 2, 'b', None, None, None, None), (2, 3, 'c', None, None, None, None), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from { oj t2 left outer join t1 on (t1.a=t2.a) }
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6), (None, None, None, 4, 7, 'D', 7)]
+--------------------+
--Query--
select t1.*,t2.* from t1 as t0,{ oj t2 left outer join t1 on (t1.a=t2.a) } WHERE t0.a=2
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6), (None, None, None, 4, 7, 'D', 7)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 using (a)
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (2, 2, 'b', None, None, None, None), (2, 3, 'c', None, None, None, None), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6), (None, None, '', None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 using (a) where t1.a=t2.a
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 using (a,c)
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (2, 2, 'b', None, None, None, None), (2, 3, 'c', None, None, None, None), (3, 4, 'E', None, None, None, None), (3, 5, 'C', None, None, None, None), (3, 6, 'D', None, None, None, None), (None, None, '', None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 using (c)
--Result--
[(1, 1, 'a', 3, 4, 'A', 4), (1, 1, 'a', 1, 1, 'a', 1), (2, 2, 'b', 3, 5, 'B', 5), (2, 3, 'c', 3, 6, 'C', 6), (3, 4, 'E', None, None, None, None), (3, 5, 'C', 3, 6, 'C', 6), (3, 6, 'D', 4, 7, 'D', 7), (None, None, '', None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.* from t1 natural left outer join t2
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (2, 2, 'b', None, None, None, None), (2, 3, 'c', None, None, None, None), (3, 4, 'E', None, None, None, None), (3, 5, 'C', None, None, None, None), (3, 6, 'D', None, None, None, None), (None, None, '', None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 on (t1.a=t2.a) where t2.id=3
--Result--
[(3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from t1 left join t2 on (t1.a=t2.a) where t2.id is null
--Result--
[(2, 2, 'b', None, None, None, None), (2, 3, 'c', None, None, None, None), (None, None, '', None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.*,t3.a from t1 left join t2 on (t1.a=t2.a) left join t1 as t3 on (t2.a=t3.a)
--Result--
[(1, 1, 'a', 1, 1, 'a', 1, 1), (2, 2, 'b', None, None, None, None, None), (2, 3, 'c', None, None, None, None, None), (3, 4, 'E', 3, 4, 'A', 4, 4), (3, 5, 'C', 3, 5, 'B', 5, 5), (3, 6, 'D', 3, 6, 'C', 6, 6), (None, None, '', None, None, None, None, None)]
+--------------------+
--Query--
select t1.*,t2.* from t1 inner join t2 using (a)
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from t1 inner join t2 on (t1.a=t2.a)
--Result--
[(1, 1, 'a', 1, 1, 'a', 1), (3, 4, 'E', 3, 4, 'A', 4), (3, 5, 'C', 3, 5, 'B', 5), (3, 6, 'D', 3, 6, 'C', 6)]
+--------------------+
--Query--
select t1.*,t2.* from t1 natural join t2
--Result--
[(1, 1, 'a', 1, 1, 'a', 1)]
+--------------------+
--Query--
SELECT t1.usr_id,t1.uniq_id,t1.increment, t2.usr2_id,t2.c_amount,t2.max FROM t1 LEFT JOIN t2 ON t2.id = t1.uniq_id WHERE t1.uniq_id = 4 ORDER BY t2.c_amount
--Result--
[(3, 4, 84676, None, None, None)]
+--------------------+
--Query--
SELECT t1.usr_id,t1.uniq_id,t1.increment, t2.usr2_id,t2.c_amount,t2.max FROM t2 RIGHT JOIN t1 ON t2.id = t1.uniq_id WHERE t1.uniq_id = 4 ORDER BY t2.c_amount
--Result--
[(3, 4, 84676, None, None, None)]
+--------------------+
--Query--
SELECT t1.usr_id,t1.uniq_id,t1.increment,t2.usr2_id,t2.c_amount,t2.max FROM t1 LEFT JOIN t2 ON t2.id = t1.uniq_id WHERE t1.uniq_id = 4 ORDER BY t2.c_amount
--Result--
[(3, 4, 84676, None, None, None)]
+--------------------+
--Query--
SELECT t1.usr_id,t1.uniq_id,t1.increment,t2.usr2_id,t2.c_amount,t2.max FROM t1 LEFT JOIN t2 ON t2.id = t1.uniq_id WHERE t1.uniq_id = 4
--Result--
[(3, 4, 84676, None, None, None)]
+--------------------+
--Query--
SELECT DISTINCT fill,desc_larga_cat,cred_total,Grup,Places,PlacesOcupades FROM t4 LEFT JOIN t3 ON t3.cod_asig=fill AND estat='S'   AND dni_pasaporte='11111111'   AND t3.idPla=1 , t2,t1 WHERE fill=t1.cod_asig   AND Places>PlacesOcupades   AND fill=idAssignatura   AND t4.idPla=1   AND papa=-1
--Result--
[(10360, 'asdfggfg', 6.0, 0, 55, 0), (10360, 'asdfggfg', 6.0, 12, 333, 0), (10360, 'asdfggfg', 6.0, 33, 8, 0), (10360, 'asdfggfg', 6.0, 45, 10, 0), (10360, 'asdfggfg', 6.0, 55, 2, 0), (10360, 'asdfggfg', 6.0, 7887, 85, 0), (10360, 'asdfggfg', 6.0, 32767, 7, 0), (10361, 'Components i Circuits Electronics I', 6.0, 30, 2, 0), (10361, 'Components i Circuits Electronics I', 6.0, 40, 3, 0), (10362, 'Laboratori d`Ordinadors', 4.5, 10, 12, 0), (10362, 'Laboratori d`Ordinadors', 4.5, 11, 111, 0)]
+--------------------+
--Query--
SELECT DISTINCT fill,t3.idPla FROM t4 LEFT JOIN t3 ON t3.cod_asig=t4.fill AND t3.estat='S' AND t3.dni_pasaporte='1234' AND t3.idPla=1
--Result--
[(10360, None), (10361, None), (10362, None)]
+--------------------+
--Query--
SELECT DISTINCT fill,t3.idPla FROM t4 LEFT JOIN t3 ON t3.cod_asig=t4.fill AND t3.estat='S' AND t3.dni_pasaporte='1234' AND t3.idPla=1
--Result--
[(10360, 1), (10361, None), (10362, None)]
+--------------------+
--Query--
select * from t1 where str is not null order by id
--Result--
[(3, 'foo'), (4, 'bar')]
+--------------------+
--Query--
select * from t1 where str is null
--Result--
[(1, None), (2, None)]
+--------------------+
--Query--
select t1.*, t2.* from t1 left join t2 on t1.n = t2.n and t1.m = t2.m where t1.n = 1
--Result--
[(1, 2, 11, 1, 2, 3), (1, 2, 7, 1, 2, 3), (1, 2, 9, 1, 2, 3), (1, 3, 9, None, None, None)]
+--------------------+
--Query--
select t1.*, t2.* from t1 left join t2 on t1.n = t2.n and t1.m = t2.m where t1.n = 1 order by t1.o,t1.m
--Result--
[(1, 2, 7, 1, 2, 3), (1, 2, 9, 1, 2, 3), (1, 3, 9, None, None, None), (1, 2, 11, 1, 2, 3)]
+--------------------+
--Query--
SELECT t2.id2 FROM t2 LEFT OUTER JOIN t1 ON t1.id2 = t2.id2 WHERE id1 IS NULL
--Result--
[(3,)]
+--------------------+
--Query--
SELECT t2.id2 FROM t2 NATURAL LEFT OUTER JOIN t1 WHERE id1 IS NULL
--Result--
[(3,)]
+--------------------+
--Query--
select * from t1
--Result--
[('red', 'apple'), ('yellow', 'banana'), ('green', 'lime'), ('black', 'grape'), ('blue', 'blueberry')]
+--------------------+
--Query--
select * from t2
--Result--
[(10, 'green'), (5, 'black'), (15, 'white'), (7, 'green')]
+--------------------+
--Query--
select * from t2 natural join t1
--Result--
[('green', 7, 'lime'), ('green', 10, 'lime'), ('black', 5, 'grape')]
+--------------------+
--Query--
select t2.count, t1.name from t2 natural join t1
--Result--
[(7, 'lime'), (10, 'lime'), (5, 'grape')]
+--------------------+
--Query--
select t2.count, t1.name from t2 inner join t1 using (color)
--Result--
[(7, 'lime'), (10, 'lime'), (5, 'grape')]
+--------------------+
--Query--
SELECT t1.pcode, IF(ISNULL(t2.pcode), 0, COUNT(*)) AS count FROM t1 LEFT JOIN t2 ON t1.pcode = t2.pcode GROUP BY t1.pcode
--Result--
[('kvw2000', 26), ('kvw2001', 0), ('kvw3000', 36), ('kvw3001', 0), ('kvw3002', 0), ('kvw3500', 26), ('kvw3501', 0), ('kvw3502', 0), ('kvw3800', 0), ('kvw3801', 0), ('kvw3802', 0), ('kvw3900', 0), ('kvw3901', 0), ('kvw3902', 0), ('kvw4000', 0), ('kvw4001', 0), ('kvw4002', 0), ('kvw4200', 0), ('kvw4500', 0), ('kvw5000', 0), ('kvw5001', 0), ('kvw5500', 0), ('kvw5510', 0), ('kvw5600', 0), ('kvw5601', 0), ('kvw6000', 2), ('klw1000', 0), ('klw1020', 0), ('klw1500', 0), ('klw2000', 0), ('klw2001', 0), ('klw2002', 0), ('kld2000', 1), ('klw2500', 0), ('kmw1000', 0), ('kmw1500', 0), ('kmw2000', 0), ('kmw2001', 0), ('kmw2100', 0), ('kmw3000', 0), ('kmw3200', 0)]
+--------------------+
--Query--
SELECT SQL_BIG_RESULT t1.pcode, IF(ISNULL(t2.pcode), 0, COUNT(*)) AS count FROM t1 LEFT JOIN t2 ON t1.pcode = t2.pcode GROUP BY t1.pcode
--Result--
[('kld2000', 1), ('klw1000', 0), ('klw1020', 0), ('klw1500', 0), ('klw2000', 0), ('klw2001', 0), ('klw2002', 0), ('klw2500', 0), ('kmw1000', 0), ('kmw1500', 0), ('kmw2000', 0), ('kmw2001', 0), ('kmw2100', 0), ('kmw3000', 0), ('kmw3200', 0), ('kvw2000', 26), ('kvw2001', 0), ('kvw3000', 36), ('kvw3001', 0), ('kvw3002', 0), ('kvw3500', 26), ('kvw3501', 0), ('kvw3502', 0), ('kvw3800', 0), ('kvw3801', 0), ('kvw3802', 0), ('kvw3900', 0), ('kvw3901', 0), ('kvw3902', 0), ('kvw4000', 0), ('kvw4001', 0), ('kvw4002', 0), ('kvw4200', 0), ('kvw4500', 0), ('kvw5000', 0), ('kvw5001', 0), ('kvw5500', 0), ('kvw5510', 0), ('kvw5600', 0), ('kvw5601', 0), ('kvw6000', 2)]
+--------------------+
--Query--
select * from t1 LEFT JOIN t1 t2 ON (t1.id=t2.pid) AND t2.rep_del IS NULL
--Result--
[(1, None, None, 2, 1, None), (2, 1, None, None, None, None)]
+--------------------+
--Query--
select * from t1 LEFT JOIN t1 t2 ON (t1.id=t2.pid) AND t2.rep_del IS NULL
--Result--
[(1, None, None, 2, 1, None), (2, 1, None, None, None, None)]
+--------------------+
--Query--
select * from t2 left join t1 on t1.fooID = t2.fooID and t1.fooID = 30
--Result--
[(10, 1, None), (20, 2, None), (30, 3, 30)]
+--------------------+
--Query--
select * from t2 left join t1 ignore index(primary) on t1.fooID = t2.fooID and t1.fooID = 30
--Result--
[(10, 1, None), (20, 2, None), (30, 3, 30)]
+--------------------+
--Query--
select * from t1 natural left join t2 natural left join t3
--Result--
[(1,), (2,)]
+--------------------+
--Query--
select * from t1 natural left join t2 where (t2.i is not null)=0
--Result--
[(1,)]
+--------------------+
--Query--
select * from t1 natural left join t2 where (t2.i is not null) is not null
--Result--
[(1,), (2,)]
+--------------------+
--Query--
select * from t1 natural left join t2 where (i is not null)=0
--Result--
[]
+--------------------+
--Query--
select * from t1 natural left join t2 where (i is not null) is not null
--Result--
[(1,), (2,)]
+--------------------+
--Query--
select * from t1          left outer join t2 using (f2)          left outer join t3 using (f3)
--Result--
[]
+--------------------+
--Query--
select * from t1 left join t2  on  b1 = a1 left join t3  on  c1 = a1  and  b1 is null
--Result--
[(1, 2, 1, 3, None, None), (2, 2, 2, 3, None, None), (3, 2, None, None, 3, 4)]
+--------------------+
--Query--
select * from t1 left join t2 on t1.a=t2.a where not (t2.a <=> t1.a)
--Result--
[(1, None, None), (2, None, None), (3, None, None), (4, None, None)]
+--------------------+
--Query--
select * from t1 left join t2 on t1.a=t2.a having not (t2.a <=> t1.a)
--Result--
[(1, None, None), (2, None, None), (3, None, None), (4, None, None)]
+--------------------+
--Query--
select s.*, '*', m.*, (s.match_1_h - m.home) UUX from    (t2 s left join t1 m on m.match_id = 1)    order by UUX desc
--Result--
[(8, 12, '*', 1, 2, 10), (9, 11, '*', 1, 2, 9), (10, 10, '*', 1, 2, 8), (2, 9, '*', 1, 2, 7), (6, 8, '*', 1, 2, 6), (4, 7, '*', 1, 2, 5), (5, 6, '*', 1, 2, 4), (1, 5, '*', 1, 2, 3), (7, 4, '*', 1, 2, 2), (3, 3, '*', 1, 2, 1)]
+--------------------+
--Query--
select s.*, '*', m.*, (s.match_1_h - m.home) UUX from    t2 s straight_join t1 m where m.match_id = 1    order by UUX desc
--Result--
[(8, 12, '*', 1, 2, 10), (9, 11, '*', 1, 2, 9), (10, 10, '*', 1, 2, 8), (2, 9, '*', 1, 2, 7), (6, 8, '*', 1, 2, 6), (4, 7, '*', 1, 2, 5), (5, 6, '*', 1, 2, 4), (1, 5, '*', 1, 2, 3), (7, 4, '*', 1, 2, 2), (3, 3, '*', 1, 2, 1)]
+--------------------+
--Query--
select t1.a, t1.b, t2.c from t1 left join t2                                 on t1.a=t2.a and t1.b=t2.b and t2.c=3    where t1.a=1 and t2.c is null
--Result--
[(1, 11, None)]
+--------------------+
--Query--
SELECT t1.flag_name,t2.flag_value    FROM t1 LEFT JOIN t2            ON (t1.ts_id = t2.ts_id AND t1.flag_name = t2.flag_name AND               t2.inst_id = 3)    WHERE t1.inst_id = 0 AND t1.ts_id=111056548820001 AND         t2.flag_value IS  NULL
--Result--
[('flag2', None)]
+--------------------+
--Query--
SELECT t1.id, t1.text_id, t2.text_data   FROM t1 LEFT JOIN t2                ON t1.text_id = t2.text_id                   AND t2.language_id = 'SV'   WHERE (t1.id LIKE '%' OR t2.text_data LIKE '%')
--Result--
[(1, 0, '0-SV'), (2, 10, '10-SV')]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON a1=0
--Result--
[(1, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN (t2,t3) ON a1=0
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM t0, t1 LEFT JOIN (t2,t3) ON a1=0 WHERE a0=a1
--Result--
[(1, 1, None, None)]
+--------------------+
--Query--
SELECT * FROM t0, t1 LEFT JOIN (t2,t3) ON a1=5 WHERE a0=a1 AND a0=1
--Result--
[(1, 1, None, None)]
+--------------------+
--Query--
select * from t2 right join t1 on t2.a=t1.a
--Result--
[(1, 1, 1, 1), (2, 2, 2, 2), (None, None, 3, 3)]
+--------------------+
--Query--
select straight_join * from t2 right join t1 on t2.a=t1.a
--Result--
[(1, 1, 1, 1), (2, 2, 2, 2), (None, None, 3, 3)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a
--Result--
[(1, 1, 1, 2), (2, 1, 2, 2), (3, 1, None, None), (4, 2, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a WHERE t1.b=1
--Result--
[(1, 1, 1, 2), (2, 1, 2, 2), (3, 1, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a   WHERE t1.b=1 XOR (NOT ISNULL(t2.a) AND t2.b=1)
--Result--
[(1, 1, 1, 2), (2, 1, 2, 2), (3, 1, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a WHERE not(0+(t1.a=30 and t2.b=1))
--Result--
[(1, 1, 1, 2), (2, 1, 2, 2), (3, 1, None, None), (4, 2, None, None)]
+--------------------+
--Query--
select group_concat(t1.b,t2.c) from t1 left join t2 using(a) group by t1.a
--Result--
[('aaaaaaaaaacccccccccc',), ('bbbbbbbbbbdddddddddd',)]
+--------------------+
--Query--
SELECT * FROM v1
--Result--
[(0, 'KERI', 10), (9, 'BARRY', None)]
+--------------------+
--Query--
SELECT * FROM v1 WHERE EMPNUM < 10
--Result--
[(0, 'KERI', 10), (9, 'BARRY', None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON (c11=c21 AND c21=30) WHERE c11=40
--Result--
[(40, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t2.b <= t1.a AND t1.a <= t1.b
--Result--
[(7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a BETWEEN t2.b AND t1.b
--Result--
[(7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a NOT BETWEEN t2.b AND t1.b)
--Result--
[(7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t2.b > t1.a OR t1.a > t1.b
--Result--
[(2, 1, None, None), (3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (8, 7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a NOT BETWEEN t2.b AND t1.b
--Result--
[(2, 1, None, None), (3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (8, 7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a BETWEEN t2.b AND t1.b)
--Result--
[(2, 1, None, None), (3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (8, 7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a = t2.a OR t2.b > t1.a OR t1.a > t1.b
--Result--
[(2, 1, None, None), (3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5), (8, 7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a != t2.a AND t1.a BETWEEN t2.b AND t1.b)
--Result--
[(2, 1, None, None), (3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5), (8, 7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a = t2.a AND (t2.b > t1.a OR t1.a > t1.b)
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a != t2.a OR t1.a BETWEEN t2.b AND t1.b)
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a = t2.a OR t1.a = t2.b
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a IN(t2.a, t2.b)
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a NOT IN(t2.a, t2.b))
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a != t1.b AND t1.a != t2.b
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t1.a NOT IN(t1.b, t2.b)
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t1.a IN(t1.b, t2.b))
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t2.a != t2.b OR (t1.a != t2.a AND t1.a != t2.b)
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t2.a = t2.b AND t1.a IN(t2.a, t2.b))
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE t2.a != t2.b AND t1.a != t1.b AND t1.a != t2.b
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a WHERE NOT(t2.a = t2.b OR t1.a IN(t1.b, t2.b))
--Result--
[(3, 2, 3, 0), (4, 3, 4, 1), (6, 5, 6, 4), (7, 8, 7, 5)]
+--------------------+
--Query--
SELECT v1.a, v2. b    FROM v1 LEFT OUTER JOIN v2 ON (v1.a=v2.b) AND (v1.a >= 3)     GROUP BY v1.a
--Result--
[(2, None), (3, 3)]
+--------------------+
--Query--
SELECT v1.a, v2. b    FROM { OJ v1 LEFT OUTER JOIN v2 ON (v1.a=v2.b) AND (v1.a >= 3) }     GROUP BY v1.a
--Result--
[(2, None), (3, 3)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.b WHERE (1=1)
--Result--
[(1, None), (2, 2), (3, 3), (4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.b WHERE (1 OR 1)
--Result--
[(1, None), (2, 2), (3, 3), (4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.b WHERE (0 OR 1)
--Result--
[(1, None), (2, 2), (3, 3), (4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.b WHERE (1=1 OR 2=2)
--Result--
[(1, None), (2, 2), (3, 3), (4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.b WHERE (1=1 OR 1=0)
--Result--
[(1, None), (2, 2), (3, 3), (4, None)]
+--------------------+
--Query--
SELECT * FROM t1 JOIN t2 USING(f1) WHERE f1='Bla'
--Result--
[('bla', 'blah', 'sheep')]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 USING(f1) WHERE f1='bla'
--Result--
[('bla', 'blah', 'sheep')]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 USING(f1) WHERE f1='Bla'
--Result--
[('bla', 'blah', 'sheep')]
+--------------------+
--Query--
SELECT t1.id, a FROM t1 LEFT JOIN t2 ON t1.id=t2.id WHERE t2.b IS NULL
--Result--
[(1, 'aaaaaaa'), (4, 'ddddddd')]
+--------------------+
--Query--
SELECT t1.id, a FROM t1 LEFT JOIN t2 ON t1.id=t2.id WHERE t2.b IS NULL
--Result--
[(1, 'aaaaaaa'), (4, 'ddddddd')]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON e<>0 WHERE c=1 AND d IS NULL
--Result--
[(1, 0, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON e<>0 WHERE c=1 AND d<=>NULL
--Result--
[(1, 0, None)]
+--------------------+
--Query--
SELECT t1.a, COUNT( t2.b ), SUM( t2.b ), MAX( t2.b ) FROM t1 LEFT JOIN t2 USING( a ) GROUP BY t1.a WITH ROLLUP
--Result--
[(1, 3, 6.0, 3), (None, 3, 6.0, 3)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.f2 = t2.f2 WHERE (COALESCE(t1.f1, t2.f1), f3) IN ((1, 3), (2, 2))
--Result--
[(1, None, 3, None, None)]
+--------------------+
--Query--
SELECT 1 FROM t1 tt3 LEFT  OUTER JOIN t1 tt4 ON 1             LEFT  OUTER JOIN t1 tt5 ON 1             LEFT  OUTER JOIN t1 tt6 ON 1             LEFT  OUTER JOIN t1 tt7 ON 1             LEFT  OUTER JOIN t1 tt8 ON 1             RIGHT OUTER JOIN t1 tt2 ON 1             RIGHT OUTER JOIN t1 tt1 ON 1             STRAIGHT_JOIN    t1 tt9 ON 1
--Result--

+--------------------+
--Query--
SELECT STRAIGHT_JOIN COUNT(*) FROM t1 ta1 RIGHT JOIN t2 ta2 JOIN t2 ta3 ON ta2.f1 ON ta3.f1
--Result--
[(476,)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t2.f1 = t1.f1 WHERE t1.f1 = 4 GROUP BY t2.f1, t2.f2
--Result--
[(4, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t2.f1 = t1.f1 WHERE t1.f1 = 4 AND t2.f1 IS NOT NULL AND t2.f2 IS NOT NULL GROUP BY t2.f1, t2.f2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2   ON t1.col_int_unique = t2.col_int_unique AND t1.col_int = t2.col_int    WHERE t1.pk=1
--Result--
[(1, None, 2, None, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2   ON t1.col_int_unique = t2.col_int_unique AND t1.col_int = t2.col_int    WHERE t1.pk=1
--Result--
[(1, None, 2, None, None, None)]
+--------------------+
--Query--
SELECT table1.time_key AS field1, table2.pk  FROM BB table1  LEFT JOIN BB table2   ON table2.varchar_nokey = table1.varchar_key  HAVING field1
--Result--
[(datetime.timedelta(seconds=66478), None)]
+--------------------+
--Query--
SELECT table1.col_datetime_key   FROM BB table1 RIGHT JOIN BB table2   ON table2 .col_varchar_nokey = table1.col_varchar_key  WHERE 7
--Result--
[(None,)]
+--------------------+
--Query--
SELECT table1.col_datetime_key   FROM BB table1 RIGHT JOIN BB table2  ON table2 .col_varchar_nokey = table1.col_varchar_key  WHERE 7
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( t2 LEFT JOIN    ( t3 LEFT JOIN      t4      ON t4.i = t3.i    )    ON t3.i = t2.i  )  ON t2.i = t1.i
--Result--
[(0, 0, 0, 0), (2, None, None, None), (3, 3, None, None), (4, 4, 4, None)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( t2 LEFT JOIN    ( t3 LEFT JOIN      t4      ON t4.i = t3.i    )    ON t3.i = t2.i  )  ON t2.i = t1.i  WHERE t4.i IS NULL
--Result--
[(2, None, None, None), (3, 3, None, None), (4, 4, 4, None)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( ( t2 LEFT JOIN      t3      ON t3.i = t2.i    )  )  ON t2.i = t1.i  WHERE t3.i IS NULL
--Result--
[(2, None, None), (3, 3, None)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( ( t2 LEFT JOIN      t3      ON t3.i = t2.i    )    JOIN t4    ON t4.i=t2.i  )  ON t2.i = t1.i  WHERE t3.i IS NULL
--Result--
[(2, None, None, None), (3, 3, None, 3), (4, None, None, None)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( ( t2 LEFT JOIN      t3      ON t3.i = t2.i    )    JOIN (t4 AS t4a JOIN t4 AS t4b ON t4a.i=t4b.i)    ON t4a.i=t2.i  )  ON t2.i = t1.i  WHERE t3.i IS NULL
--Result--
[(2, None, None, None, None), (3, 3, None, 3, 3), (4, None, None, None, None)]
+--------------------+
--Query--
SELECT * FROM  t1 LEFT JOIN  ( ( t2 LEFT JOIN      t3      ON t3.i = t2.i    )    JOIN (t4 AS t4a, t4 AS t4b)    ON t4a.i=t2.i  )  ON t2.i = t1.i  WHERE t3.i IS NULL
--Result--
[(2, None, None, None, None), (3, 3, None, 3, 3), (3, 3, None, 3, 2), (3, 3, None, 3, 1), (3, 3, None, 3, 0), (4, None, None, None, None)]
+--------------------+
--Query--
SELECT TABLE1.pk FROM k TABLE1 RIGHT JOIN h TABLE2 ON TABLE1.col_int_key=TABLE2.col_int_key RIGHT JOIN m TABLE4 ON TABLE2.col_int_key=TABLE4.col_int_key
--Result--
[(2,), (4,), (2,), (4,), (None,), (None,), (None,), (None,), (None,), (None,), (None,)]
+--------------------+
--Query--
SELECT TABLE1.pk FROM k TABLE1 RIGHT JOIN h TABLE2 ON TABLE1.col_int_key=TABLE2.col_int_key RIGHT JOIN m TABLE4 ON TABLE2.col_int_key=TABLE4.col_int_key WHERE TABLE1.pk IS NULL
--Result--
[(None,), (None,), (None,), (None,), (None,), (None,), (None,)]
+--------------------+
--Query--
PREPARE prep_stmt FROM '  SELECT 1 AS f FROM t1  LEFT JOIN t1 t2   RIGHT JOIN t1 t3     JOIN t1 t4    ON 1   ON 1  ON 1  GROUP BY f'
--Result--
[]
+--------------------+
--Query--
SELECT t1.col_int FROM t1   LEFT JOIN t2     LEFT JOIN t3       JOIN t4       ON t3.col_int  = t4.pk     ON t2.col_varchar_10 = t3.col_varchar_10   ON t2.col_int = t1.pk WHERE   t1.col_int_key IS NULL OR t4.pk < t3.col_int
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt_9846 FROM ' SELECT alias1.pk AS field1 FROM t1 AS alias1 LEFT JOIN (    t1 AS alias2   RIGHT  JOIN   (      t1 AS alias3     JOIN t1 AS alias4     ON 1   )   ON 1 ) ON 1 GROUP BY field1'
--Result--
[]
+--------------------+
--Query--
deallocate prepare prep_stmt_9846
--Result--
[]
+--------------------+
--Query--
SELECT DISTINCT t2.col_int_key  FROM t1 LEFT JOIN t2 ON t1.col_varchar_10 = t2.col_varchar_10_key  WHERE t2.pk ORDER BY t2.col_int_key
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t5 LEFT JOIN t6 ON t5.col_int=1000 WHERE t6.col_int_key IS TRUE
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t5 LEFT JOIN t6 ON t5.col_int=1000 WHERE t6.col_int_key IS NOT TRUE
--Result--
[(1, '1', None, None, None)]
+--------------------+
--Query--
SELECT straight_join t1.vc, t1.ik FROM t1 JOIN t1 AS t2 ON t1.vc=t2.vc LEFT JOIN t1 AS t3 ON t1.vc=t3.vc
--Result--
[]
+--------------------+
--Query--
select * from t1 left join t1 as t2               on t2.a=12          where t1.a=1
--Result--
[(1, None)]
+--------------------+
--Query--
SELECT 9   FROM t1 AS table1     RIGHT JOIN t1 AS table2     ON table2.col_int_key = table1.col_int_key       AND table1.col_varchar_key = (         SELECT subquery2_t2.col_varchar_key         FROM t2           STRAIGHT_JOIN ( t2 AS subquery2_t2             JOIN t1 AS subquery2_t3           ) ON ( subquery2_t3.col_int_key = subquery2_t2.pk )       )
--Result--
[(9,), (9,), (9,), (9,), (9,), (9,), (9,)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN vmerge AS v ON a.id = v.id
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN vmat AS v ON a.id = v.id
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN (SELECT 1 AS one, id FROM b) AS v ON a.id = v.id
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN (SELECT DISTINCT 1 AS one, id FROM b) AS v ON a.id = v.id
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN vmerge AS v ON a.id = v.id UNION DISTINCT SELECT * FROM a LEFT JOIN vmerge AS v ON a.id = v.id
--Result--
[(1, None, None)]
+--------------------+
--Query--
SELECT * FROM a LEFT JOIN vmerge AS v ON a.id = v.id UNION ALL SELECT * FROM a LEFT JOIN vmerge AS v ON a.id = v.id
--Result--
[(1, None, None), (1, None, None)]
+--------------------+
--Query--
SELECT * FROM big_view
--Result--
[(1, 1, 1), (2, 2, 0), (3, None, None), (4, None, None)]
+--------------------+
--Query--
SELECT big.*, small.id AS small_id, small.is_odd FROM big LEFT JOIN      (SELECT id, IF (id % 2 = 1, 1, 0) AS is_odd FROM small) AS small      ON big.id = small.id
--Result--
[(1, 1, 1), (2, 2, 0), (3, None, None), (4, None, None)]
+--------------------+
--Query--
SELECT big.*, dt.* FROM big LEFT JOIN (SELECT id as dt_id,                            id IS NULL AS nul,                            id IS NOT NULL AS nnul,                            id IS TRUE AS t,                            id IS NOT TRUE AS nt,                            id IS FALSE AS f,                            id IS NOT FALSE AS nf,                            id IS UNKNOWN AS u,                            id IS NOT UNKNOWN AS nu                     FROM small) AS dt      ON big.id=dt.dt_id
--Result--
[(1, 1, 0, 1, 1, 0, 0, 1, 0, 1), (2, 2, 0, 1, 1, 0, 0, 1, 0, 1), (3, None, None, None, None, None, None, None, None, None), (4, None, None, None, None, None, None, None, None, None)]
+--------------------+
--Query--
SELECT big.*, dt.* FROM big LEFT JOIN (SELECT id as dt_id,                            id = 1 AS eq,                            id <> 1 AS ne,                            id > 1 AS gt,                            id >= 1 AS ge,                            id < 1 AS lt,                            id <= 1 AS le,                            id <=> 1 AS equal                     FROM small) AS dt      ON big.id=dt.dt_id
--Result--
[(1, 1, 1, 0, 0, 1, 0, 1, 1), (2, 2, 0, 1, 1, 1, 0, 0, 0), (3, None, None, None, None, None, None, None, None), (4, None, None, None, None, None, None, None, None)]
+--------------------+
--Query--
SELECT big.*, dt.* FROM big LEFT JOIN (SELECT id as dt_id,                            CASE id WHEN 0 THEN 0 ELSE 1 END AS simple,                            CASE WHEN id=0 THEN NULL ELSE 1 END AS cond,                            NULLIF(1, NULL) AS nullif,                            IFNULL(1, NULL) AS ifnull,                            COALESCE(id) AS coal,                            INTERVAL(NULL, 1, 2, 3) as intv,                            IF (id % 2 = 1, NULL, 1) AS iff                     FROM small) AS dt      ON big.id=dt.dt_id
--Result--
[(1, 1, 1, 1, 1, 1, 1, -1, None), (2, 2, 1, 1, 1, 1, 2, -1, 1), (3, None, None, None, None, None, None, None, None), (4, None, None, None, None, None, None, None, None)]
+--------------------+
--Query--
SELECT b.c2 AS f1 FROM (t2 AS a JOIN                         ((t2 AS b JOIN t2 AS c ON (c.c3=b.c3)))                         ON (c.c1=b.c2))      WHERE (c.c3 IN (SELECT subquery1_b.c3 AS subquery1_f1                      FROM (t1 AS subquery1_a JOIN t2 AS subquery1_b ON                            (subquery1_b.c1=subquery1_a.c1)))) AND            (a.c1=a.c1 AND (SELECT''FROM DUAL) IS NULL)
--Result--
[]
+--------------------+
--Query--
SELECT table2.pk, table1.col_int FROM t2 AS table1      LEFT JOIN t1 AS table2      ON table2.pk < table1.col_int AND         table2.pk = table1.col_int
--Result--
[(None, 0), (None, 0), (None, 2), (None, None), (None, 2), (None, 3), (None, 3), (None, 100), (None, 3), (None, 6)]
+--------------------+
--Query--
SELECT table2.pk, table1.col_int FROM t2 AS table1      LEFT JOIN (SELECT * FROM t1) AS table2      ON table2.pk < table1.col_int AND         table2.pk = table1.col_int
--Result--
[(None, 0), (None, 0), (None, 2), (None, None), (None, 2), (None, 3), (None, 3), (None, 100), (None, 3), (None, 6)]
+--------------------+
--Query--
SELECT alias2.col_datetime_key FROM     t1 AS alias1       LEFT JOIN t3 AS alias2         LEFT JOIN t2 AS alias3           LEFT JOIN t4 AS alias4           ON alias3.pk = alias4.col_int_key         ON alias2.pk = alias3.col_int       ON alias1.col_int = alias4.col_int
--Result--
[(datetime.datetime(1970, 1, 1, 0, 0),), (None,), (datetime.datetime(1970, 1, 1, 0, 0),)]
+--------------------+
--Query--
SELECT ta.a1, tb.b1, tb.b2 FROM ta LEFT OUTER JOIN tb      ON ta.a2 = tb.b1 AND tb.b3 = 0
--Result--
[('row1', None, None), ('row2', None, None)]
+--------------------+
--Query--
SELECT o.*,'|' as sep, m.* FROM o LEFT JOIN m      ON m.machineid = o.machineid AND         m.orderid = o.orderid
--Result--
[(1, 'm2', '|', None, None, None), (2, 'm2', '|', 'm2', 2, None)]
+--------------------+
--Query--
SELECT s.adslot, lid.ionumber1, lid.ionumber2, lid.ioattribute FROM t1 s LEFT JOIN      (SELECT lid.adslot,              i.ionumber as ionumber1,              lid.ionumber as ionumber2,              i.ioattribute       FROM t2 lid JOIN t3 i            USING (ionumber)      ) AS lid     USING (adslot)
--Result--
[('1', '01602', '01602', 'BOB'), ('2', None, None, None), ('3', '01602', '01602', 'BOB')]
+--------------------+
--Query--
SELECT t1.a, subq.st_value FROM t1 LEFT JOIN (SELECT t2.t1_a, 'red' AS st_value            FROM t2) AS subq   ON subq.t1_a = t1.a
--Result--
[(1, None), (2, None), (15, None), (24, None), (5, None)]
+--------------------+
--Query--
SELECT t1.a, subq.st_value FROM t1 LEFT JOIN (SELECT t2.t1_a, 'red' AS st_value            FROM t2) AS subq   ON subq.t1_a = t1.a ORDER BY t1.a
--Result--
[(1, None), (2, None), (5, None), (15, None), (24, None)]
+--------------------+
--Query--
SELECT t1.a, subq.st_value FROM (SELECT t2.t1_a, 'red' AS st_value       FROM t2) AS subq LEFT JOIN t1   ON subq.t1_a = t1.a ORDER BY t1.a
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN      (        (t2 LEFT JOIN t3 ON t3.i= t2.i)        LEFT JOIN t4 ON t3.i= t4.i      )ON t2.i= t1.i
--Result--
[(0, 0, 0, 0), (2, None, None, None), (3, 3, None, None), (4, 4, 4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN      (        (t2 INNER JOIN t3 ON t3.i= t2.i)        LEFT JOIN t4 ON t3.i= t4.i      )ON t2.i= t1.i
--Result--
[(0, 0, 0, 0), (2, None, None, None), (3, None, None, None), (4, 4, 4, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t2.i= t1.i         LEFT JOIN t3 ON t3.i= t2.i         LEFT JOIN t4 ON t3.i= t4.i
--Result--
[(0, 0, 0, 0), (2, None, None, None), (3, 3, None, None), (4, 4, 4, None)]
+--------------------+
--Query--
SELECT * FROM (SELECT id       FROM t1) AS a     LEFT JOIN     (SELECT id, 2 AS tall      FROM t2) AS b     ON a.id = b.id WHERE b.tall IS NOT NULL
--Result--
[(1, 1, 2)]
+--------------------+
--Query--
SELECT je FROM t2 LEFT JOIN (SELECT 1 AS je FROM t1 LIMIT 1) AS dt ON FALSE
--Result--
[(None,)]
+--------------------+
--Query--
SELECT je FROM t2 LEFT JOIN (SELECT 1 AS je FROM t1 LIMIT 1) AS dt ON FALSE GROUP BY je
--Result--
[(None,)]
+--------------------+
--Query--
SELECT je FROM t2 LEFT JOIN (SELECT 1 AS je FROM t1) AS dt ON FALSE
--Result--
[(None,)]
+--------------------+
--Query--
SELECT je FROM t2 LEFT JOIN (SELECT 1 AS je FROM t1) AS dt ON FALSE GROUP BY je
--Result--
[(None,)]
+--------------------+
--Query--
SELECT (SELECT * FROM (SELECT 'a') t) AS f1 HAVING (f1 = 'a' OR TRUE)
--Result--
[('a',)]
+--------------------+
--Query--
SELECT (SELECT * FROM (SELECT 'a') t) + 1 AS f1 HAVING (f1 = 'a' OR TRUE)
--Result--
[(1.0,)]
+--------------------+
--Query--
SELECT 1 + (SELECT * FROM (SELECT 'a') t) AS f1 HAVING (f1 = 'a' OR TRUE)
--Result--
[(1.0,)]
+--------------------+
--Query--
SELECT  * FROM (t1 RIGHT JOIN                 (SELECT * FROM t3 WHERE (DAYNAME('1995')))  AS table2 ON                 (( t1.f1 ,t1.pk) IN (SELECT 7,4 UNION SELECT 9,2))) WHERE (NOT EXISTS (SELECT t1.f1 FROM (t1 INNER JOIN t2 ON (t1.pk=t2.f1))              WHERE 0 IS NOT NULL)) AND t1.f1 >  50
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt FROM " SELECT 1 FROM ( ( SELECT * FROM t1 WHERE col_varchar >= 1 )  AS table1 RIGHT JOIN t2 ON ( ( NULL < NULL ) IS NULL OR 1 = 0 ) ) "
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2
--Result--
[(1, 1), (2, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE c2 IS NULL
--Result--
[(2, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE c2 IS NOT NULL
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE (c2 IS NOT NULL) = 1
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE (c2 IS NOT NULL) IS TRUE
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE (c2 IS NOT NULL) = 0
--Result--
[(2, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON c1=c2 WHERE (c2 IS NOT NULL) IS FALSE
--Result--
[(2, None)]
+--------------------+
--Query--
SELECT STRAIGHT_JOIN t1.col_int_unique, t2.col_int_key, t3.pk   FROM     (t1 LEFT JOIN t2 ON t1.col_int_unique = t2.col_int_key)         LEFT JOIN t3 ON t3.pk = t1.col_int_unique AND 	                t1.col_int_unique = t2.col_int_key
--Result--
[(6, None, None), (7, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.pk = t2.pk LEFT JOIN t3 ON t2.pk = t3.f2 WHERE t2.pk < 5
--Result--
[(1, 1, None, None), (2, 2, None, None)]
+--------------------+
--Query--
SELECT t1.col_int as t1_ci, t1.a as t1_a, t1.b as t1_b, t2.a as t2_a, t2.b as t2_b, t3.col_int as t3_ci, t3.a as t3_a, t3.b as t3_b   FROM t1   LEFT JOIN ( t2 LEFT JOIN t1 AS t3 ON t2.a=t3.a )     ON t1.b = t2.b
--Result--
[(5, None, 'p', None, None, None, None, None), (6, None, '', None, None, None, None, None), (7, None, '', None, None, None, None, None), (8, None, 'Z', 3, 'z', None, None, None), (9, 4, 'g', None, None, None, None, None), (10, None, 'if', None, None, None, None, None), (11, None, 'j', 1, 'j', None, None, None), (12, 9, '', None, None, None, None, None)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON t1.b = t2.id GROUP BY t1.id
--Result--
[(17, None, None), (136, 564, 564), (137, None, None)]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 JOIN t2 ON t1.f1 = t2.f2 AND 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 JOIN t2 ON t1.f1 = t2.f2 WHERE 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 JOIN t2 ON t1.f1 = t2.f2 AND 1=2 JOIN t3 ON t2.f1=t3.f1 AND 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1 FROM t1 JOIN t2 ON t1.f1 = t2.f2 JOIN t3 ON t2.f1=t3.f1 WHERE 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1,t2.f1 FROM t1 LEFT JOIN t2 ON t1.f1=t2.f1 AND t1.f2=t2.f2 AND 1=2
--Result--
[(1, None), (2, None), (3, None), (4, None)]
+--------------------+
--Query--
SELECT t1.f1,t2.f1 FROM t1 LEFT JOIN t2 ON t1.f1=t2.f1 AND t1.f2=t2.f2 WHERE 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t1.f1,t2.f1 FROM t1 LEFT JOIN t2 ON t1.f1=t2.f1 AND 1=2 LEFT JOIN t3 ON t2.f1=t3.f1 AND 1=2
--Result--
[(1, None), (2, None), (3, None), (4, None)]
+--------------------+
--Query--
SELECT t1.f1,t2.f1 FROM t1 LEFT JOIN t2 ON t1.f1=t2.f1 AND 1=2 LEFT JOIN t3 ON t2.f1=t3.f1 WHERE 1=2
--Result--
[]
+--------------------+
--Query--
SELECT f1,f2 FROM t1 WHERE EXISTS (SELECT t2.f1,t2.f2 FROM t2 WHERE 1=2)
--Result--
[]
+--------------------+
--Query--
SELECT f1,f2 FROM t1 WHERE NOT EXISTS (SELECT t2.f1,t2.f2 FROM t2 WHERE 1=2)
--Result--
[(1, 10), (2, 20), (3, 30), (4, 40)]
+--------------------+
--Query--
SELECT t2.f1,t2.f2 FROM t1 RIGHT JOIN t2 ON t1.f1=t2.f1 AND 1=2
--Result--
[(1, 10), (2, 20), (5, 30), (6, 40)]
+--------------------+
--Query--
SELECT t2.f1,t2.f2 FROM t1 RIGHT JOIN t2 ON t1.f1=t2.f1 AND 1=2 WHERE t1.f1>NULL
--Result--
[]
+--------------------+
--Query--
SELECT t3.f1 FROM t1 JOIN t2 ON t1.f1=t2.f1 AND 1=2 LEFT JOIN t3 ON t1.f1=t3.f1 AND 1=2 WHERE 1=2
--Result--
[]
+--------------------+
--Query--
SELECT t3.f1 FROM t1 JOIN t2 ON t1.f1=t2.f1 LEFT JOIN t3 ON t1.f1=t3.f1 AND 1=2
--Result--
[(None,), (None,)]
+--------------------+
--Query--
SELECT t2.f1 FROM t1 RIGHT JOIN t2 ON t1.f1=t2.f1 AND 1=2 LEFT JOIN t3 ON t1.f1=t3.f1 AND 1=2
--Result--
[(1,), (2,), (5,), (6,)]
+--------------------+
--Query--
SELECT * FROM t0 LEFT JOIN t1 ON FALSE      RIGHT JOIN t2 ON (t1.c0 IS NOT NULL) = (t2.c0 = 1000)
--Result--
[(2, None, 3), (1, None, 3)]
+--------------------+
