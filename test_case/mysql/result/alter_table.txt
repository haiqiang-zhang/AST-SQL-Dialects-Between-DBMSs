--Query--
select * from t1
--Result--
[(2, '4', '3', '5', 'PENDING', 1, 7)]
+--------------------+
--Query--
select * from t1
--Result--
[(6, 1, None), (3, 4, None), (1, 6, None), (2, 6, None), (4, 9, None), (5, 10, None), (7, 12, None), (8, 12, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 6, None), (2, 6, None), (3, 4, None), (4, 9, None), (5, 10, None), (6, 1, None), (7, 12, None), (8, 12, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 6, None), (2, 6, None), (3, 4, None), (4, 9, None), (5, 10, None), (6, 1, None), (7, 12, None), (8, 12, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 6, None), (2, 6, None), (3, 4, None), (4, 9, None), (5, 10, None), (6, 1, None), (7, 12, None), (8, 12, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(3,), (9,), (10,), (12,)]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,), (3,), (4,)]
+--------------------+
--Query--
select * from t1
--Result--
[('current',)]
+--------------------+
--Query--
select * from t1
--Result--
[('current',)]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
select * from t2
--Result--
[('localhost', ''), ('localhost', 'root')]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
select a,hex(a) from t1
--Result--
[]
+--------------------+
--Query--
select * from table_24562
--Result--
[(1, 0, 'Introduction'), (1, 1, 'Authors'), (1, 2, 'Acknowledgements'), (2, 0, 'Basics'), (2, 1, 'Syntax'), (2, 2, 'Client'), (2, 3, 'Server'), (3, 0, 'Intermediate'), (3, 1, 'Complex queries'), (3, 2, 'Stored Procedures'), (3, 3, 'Stored Functions'), (4, 0, 'Advanced'), (4, 1, 'Replication'), (4, 2, 'Load balancing'), (4, 3, 'High availability'), (5, 0, 'Conclusion')]
+--------------------+
--Query--
select * from table_24562
--Result--
[(1, 2, 'Acknowledgements', None), (4, 0, 'Advanced', None), (1, 1, 'Authors', None), (2, 0, 'Basics', None), (2, 2, 'Client', None), (3, 1, 'Complex queries', None), (5, 0, 'Conclusion', None), (4, 3, 'High availability', None), (3, 0, 'Intermediate', None), (1, 0, 'Introduction', None), (4, 2, 'Load balancing', None), (4, 1, 'Replication', None), (2, 3, 'Server', None), (3, 3, 'Stored Functions', None), (3, 2, 'Stored Procedures', None), (2, 1, 'Syntax', None)]
+--------------------+
--Query--
select * from table_24562
--Result--
[(1, 2, 'Acknowledgements', None), (1, 1, 'Authors', None), (1, 0, 'Introduction', None), (2, 3, 'Server', 'Me'), (2, 2, 'Client', 'Me'), (2, 1, 'Syntax', 'Me'), (2, 0, 'Basics', 'Me'), (3, 3, 'Stored Functions', 'You'), (3, 2, 'Stored Procedures', 'You'), (3, 1, 'Complex queries', 'You'), (3, 0, 'Intermediate', 'You'), (4, 3, 'High availability', None), (4, 2, 'Load balancing', None), (4, 1, 'Replication', None), (4, 0, 'Advanced', None), (5, 0, 'Conclusion', None)]
+--------------------+
--Query--
select * from table_24562
--Result--
[(5, 0, 'Conclusion', None), (4, 0, 'Advanced', None), (3, 0, 'Intermediate', 'You'), (2, 0, 'Basics', 'Me'), (1, 0, 'Introduction', None), (4, 1, 'Replication', None), (3, 1, 'Complex queries', 'You'), (2, 1, 'Syntax', 'Me'), (1, 1, 'Authors', None), (4, 2, 'Load balancing', None), (3, 2, 'Stored Procedures', 'You'), (2, 2, 'Client', 'Me'), (1, 2, 'Acknowledgements', None), (4, 3, 'High availability', None), (3, 3, 'Stored Functions', 'You'), (2, 3, 'Server', 'Me')]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,), (50,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,), (50,), (51,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, datetime.datetime(2000, 1, 1, 0, 0), datetime.date(2000, 1, 1), datetime.datetime(2002, 2, 2, 0, 0), datetime.date(2002, 2, 2))]
+--------------------+
--Query--
select * from t1
--Result--
[('def',), ('abc',), ('hij',), ('3r4f',)]
+--------------------+
--Query--
select * from t1
--Result--
[('def',), ('abc',), ('hij',), ('3r4f',)]
+--------------------+
--Query--
select * from t1
--Result--
[('def',), ('abc',), ('hij',), ('3r4f',)]
+--------------------+
--Query--
select * from t1
--Result--
[('def',), ('abc',), ('lmn',), ('3r4f',)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'def'), (2, 'abc'), (3, 'lmn'), (4, '3r4f')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'def'), (2, 'abc'), (4, '3r4f'), (5, 'lmn')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'def'), (2, 'abc'), (4, '3r4f'), (5, 'lmn')]
+--------------------+
--Query--
select * from t1 where i between 2 and 4 and v in ('def','3r4f','lmn')
--Result--
[(4, '3r4f')]
+--------------------+
--Query--
SELECT LENGTH(s) FROM t1
--Result--
[(4,)]
+--------------------+
--Query--
SELECT HEX(s) FROM t1
--Result--
[('7465737400000000',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('abc', 5)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('abc', 5)]
+--------------------+
--Query--
lock table t1 write, t3 read
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(None,), (1,)]
+--------------------+
--Query--
select * from t1
--Result--
[(None,), ('1',), ('Two',)]
+--------------------+
--Query--
select * from t2
--Result--
[(None,), ('1',), ('Two',)]
+--------------------+
--Query--
select * from t3
--Result--
[(None,)]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t2
--Result--
[(None,), ('1',), ('Two',), ('Three',)]
+--------------------+
--Query--
lock table t2 write, t3 read
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(None,), ('1',), ('Two',), ('Three',)]
+--------------------+
--Query--
select * from t3
--Result--
[(None,)]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(None,), ('1',), ('Two',), ('Three',), ('Four',)]
+--------------------+
--Query--
SELECT * FROM t2 ORDER BY unsigned_int_field
--Result--
[(1, 'edno'), (1, 'edno'), (2, 'dve'), (3, 'tri'), (5, 'pet')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 2, None)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, None, 2)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 2, None)]
+--------------------+
--Query--
lock table t1 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[('Two',)]
+--------------------+
--Query--
select (@unpaked_keys_size > @paked_keys_size)
--Result--
[(None,)]
+--------------------+
--Query--
select (@orig_max_data_length > @changed_max_data_length)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a'), (2, 'c'), (3, 'b'), (4, 'b'), (5, 'a')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 2)]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 1)]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 0)]
+--------------------+
--Query--
prepare stmt1 from 'alter table t1 alter column a set default 1, rename to t2'
--Result--
[]
+--------------------+
--Query--
deallocate prepare stmt1
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE state = "Waiting for table metadata lock" AND         info = "ALTER TABLE t1 DISABLE KEYS"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT * FROM ti3
--Result--
[(1, 1), (2, 2), (5, 5), (7, 7)]
+--------------------+
--Query--
select i.name as k, f.name as c from information_schema.innodb_tables as t,                                      information_schema.innodb_indexes as i,                                      information_schema.innodb_fields as f where t.name='test/t1' and t.table_id = i.table_id and i.index_id = f.index_id order by k, c
--Result--
[]
+--------------------+
--Query--
select i.name as k, f.name as c from information_schema.innodb_tables as t,                                      information_schema.innodb_indexes as i,                                      information_schema.innodb_fields as f where t.name='test/t1' and t.table_id = i.table_id and i.index_id = f.index_id order by k, c
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE state = "Waiting for table metadata lock" AND         info = "ALTER TABLE t1 DISCARD TABLESPACE"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE state = "Waiting for table metadata lock" AND         info = "ALTER TABLE t1 IMPORT TABLESPACE"
--Result--
[(0,)]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE state = "Waiting for table metadata lock" AND         info = "ALTER TABLE t1 DISCARD TABLESPACE"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE state = "Waiting for table metadata lock" AND         info = "ALTER TABLE t1 IMPORT TABLESPACE"
--Result--
[(0,)]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
LOCK TABLES t1 WRITE
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
SELECT T.NAME AS TABLE_NAME, I.NAME AS INDEX_NAME,        CASE I.TYPE              WHEN 0 THEN 'Secondary'             WHEN 1 THEN 'Clustered'             WHEN 2 THEN 'Unique'             WHEN 3 THEN 'Primary'             WHEN 32 THEN 'Full text'             WHEN 64 THEN 'Spatial'             ELSE 'Unknown'        END AS INDEX_TYPE,        F.NAME AS FIELD_NAME, F.POS AS FIELD_POS FROM               INFORMATION_SCHEMA.INNODB_TABLES AS T JOIN               INFORMATION_SCHEMA.INNODB_INDEXES AS I JOIN               INFORMATION_SCHEMA.INNODB_FIELDS AS F               ON I.INDEX_ID = F.INDEX_ID AND I.TABLE_ID = T.TABLE_ID        WHERE T.NAME = 'test/t1' ORDER BY I.NAME, F.NAME
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(*) FROM t1 WHERE fld1= 'a'
--Result--
[(1,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(50,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(45,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(40,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(50,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(40,)]
+--------------------+
--Query--
SELECT MERGE_THRESHOLD from INFORMATION_SCHEMA.INNODB_INDEXES WHERE NAME='key1'
--Result--
[(45,)]
+--------------------+
--Query--
SELECT * FROM t3
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t4
--Result--
[]
+--------------------+
--Query--
SELECT T.NAME AS TABLE_NAME, I.NAME AS INDEX_NAME,        CASE (I.TYPE & 3)             WHEN 3 THEN "yes"             ELSE "no" END AS IS_PRIMARY_KEY,        F.NAME AS FIELD_NAME, F.POS AS FIELD_POS FROM               INFORMATION_SCHEMA.INNODB_TABLES AS T JOIN               INFORMATION_SCHEMA.INNODB_INDEXES AS I JOIN               INFORMATION_SCHEMA.INNODB_FIELDS AS F               ON I.INDEX_ID = F.INDEX_ID AND I.TABLE_ID = T.TABLE_ID        WHERE T.NAME LIKE 'test/%' ORDER BY T.NAME, I.NAME, F.POS
--Result--
[]
+--------------------+
--Query--
SELECT trigger_name, event_object_schema, event_object_table, action_statement   FROM information_schema.triggers WHERE event_object_schema = 'test'
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'abcd', 1.234)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'abcd', 1.234)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[(1, 'abcd', 1.234)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('abcd', 5)]
+--------------------+
--Query--
SELECT * FROM t_gen
--Result--
[(4, 2.0)]
+--------------------+
--Query--
SELECT * FROM t_gen
--Result--
[(4, 2.0)]
+--------------------+
--Query--
SELECT schema_name, table_name, column_name,        JSON_REMOVE(histogram, '$."last-updated"') FROM information_schema.COLUMN_STATISTICS
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('abcd', 5)]
+--------------------+
--Query--
SELECT * FROM t
--Result--
[(None, datetime.date(1999, 9, 9), datetime.date(1999, 9, 9), None)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(b'\xc3\xa6\xc3\xb8\xc3\xa5',), (b'\xf0\x90\x90\x80',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æ',), ('ø',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æ',), ('ø',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('æøåtext',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('a',), ('𐐀',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[({'b', 'æ'},), ({'ø', 'b', '𐐀'},)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[({'a1'},), ({'a2'},), ({'a2', 'a3'},)]
+--------------------+
--Query--
SELECT a FROM t1
--Result--
[({'a1'},), ({'a2'},), ({'a2', 'a3'},), ({'a4', 'a3'},)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b', 'ab')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b', 'ab')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('a',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(b'a',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('a',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('a',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('a',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(b'a',)]
+--------------------+
--Query--
SELECT b FROM t1 USE INDEX (b) WHERE  b='1A204A9228E5201A36122351DA1744AF'
--Result--
[('1A204A9228E5201A36122351DA1744AF',)]
+--------------------+
--Query--
SELECT b FROM t1 USE INDEX (b) WHERE  b='1A204A9228E5201A36122351DA1744AF'
--Result--
[('1A204A9228E5201A36122351DA1744AF',)]
+--------------------+
--Query--
SELECT (t1.no_default > t2.alter_date) AS no_default_newer_than_alter, (t1.alter_default > t2.alter_date) AS alter_default_newer_than_alter FROM t1 NATURAL JOIN t2
--Result--
[(0, 0), (0, 0), (0, 0)]
+--------------------+
--Query--
SELECT (no_default > alter_date) AS no_default_newer_than_alter, (create_default > alter_date) AS create_default_newer_than_alter, (alter_default > alter_date) AS alter_default_newer_than_alter FROM t1 NATURAL JOIN t2
--Result--
[(0, 0, 0), (0, 0, 0), (0, 0, 0)]
+--------------------+
--Query--
SELECT partition_name, table_rows FROM information_schema.partitions WHERE table_name = 't1'
--Result--
[('p0', 0), ('p1', 0), ('p2', 1)]
+--------------------+
--Query--
SELECT partition_name, table_rows FROM information_schema.partitions WHERE table_name = 't1'
--Result--
[('p0', 0), ('p1', 1), ('p2', 0)]
+--------------------+
--Query--
SELECT * FROM t1 PARTITION(p2)
--Result--
[]
+--------------------+
