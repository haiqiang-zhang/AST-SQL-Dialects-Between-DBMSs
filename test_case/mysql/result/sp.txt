--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t2 order by s
--Result--
[]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ee'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_es'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_en'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ew'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ex'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_se'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ss'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Outer (bad)' as 'h_sn'
--Result--
[('Outer (bad)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_sn'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_sw'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_sx'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ne'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ns'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_nn'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_we'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ws'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_ww'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_xe'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_xs'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Inner (good)' as 'h_xx'
--Result--
[('Inner (good)',)]
+--------------------+
--Query--
select 'Ok'
--Result--
[('Ok',)]
+--------------------+
--Query--
select sleep(1.1)
--Result--
[(0,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,)]
+--------------------+
--Query--
select 'Missed it' as 'Result'
--Result--
[('Missed it',)]
+--------------------+
--Query--
select 'Missed it' as 'Result'
--Result--
[('Missed it',)]
+--------------------+
--Query--
SELECT @str
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @str
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @str
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @str
--Result--
[(None,)]
+--------------------+
--Query--
select 42
--Result--
[(42,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select 1
--Result--
[(1,)]
+--------------------+
--Query--
select 1
--Result--
[(1,)]
+--------------------+
--Query--
select 2
--Result--
[(2,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select * from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select 'yes' as 'v'
--Result--
[('yes',)]
+--------------------+
--Query--
select 'no' as 'v'
--Result--
[('no',)]
+--------------------+
--Query--
select 'done' as 'End'
--Result--
[('done',)]
+--------------------+
--Query--
select 'yes' as 'v'
--Result--
[('yes',)]
+--------------------+
--Query--
select 'done' as 'End'
--Result--
[('done',)]
+--------------------+
--Query--
select 'maybe' as 'v'
--Result--
[('maybe',)]
+--------------------+
--Query--
select 'done' as 'End'
--Result--
[('done',)]
+--------------------+
--Query--
select '1' as 'v'
--Result--
[('1',)]
+--------------------+
--Query--
select '2' as 'v'
--Result--
[('2',)]
+--------------------+
--Query--
select '?' as 'v'
--Result--
[('?',)]
+--------------------+
--Query--
select 'done' as 'End'
--Result--
[('done',)]
+--------------------+
--Query--
select '1' as 'v'
--Result--
[('1',)]
+--------------------+
--Query--
select '2' as 'v'
--Result--
[('2',)]
+--------------------+
--Query--
select '?' as 'v'
--Result--
[('?',)]
+--------------------+
--Query--
select 'done' as 'End'
--Result--
[('done',)]
+--------------------+
--Query--
select "After NOT FOUND condtition is triggered" as '2'
--Result--
[('After NOT FOUND condtition is triggered',)]
+--------------------+
--Query--
select 'Missed it (correct)' as 'Result'
--Result--
[('Missed it (correct)',)]
+--------------------+
--Query--
select 'Missed it (correct)' as 'Result'
--Result--
[('Missed it (correct)',)]
+--------------------+
--Query--
select id from t3
--Result--
[(1,), (1,), (1,), (1,), (12,), (0,), (1,), (1,), (1,), (1,), (1,), (42,), (42,)]
+--------------------+
--Query--
select 'Inner' as 'Handler'
--Result--
[('Inner',)]
+--------------------+
--Query--
SELECT 1
--Result--
[(1,)]
+--------------------+
--Query--
select 'statement after update'
--Result--
[('statement after update',)]
+--------------------+
--Query--
select 'reachable code a1'
--Result--
[('reachable code a1',)]
+--------------------+
--Query--
select 'reachable code a2'
--Result--
[('reachable code a2',)]
+--------------------+
--Query--
select 'unreachable code b2'
--Result--
[('unreachable code b2',)]
+--------------------+
--Query--
select 'reachable code a1'
--Result--
[('reachable code a1',)]
+--------------------+
--Query--
select 'reachable code a2'
--Result--
[('reachable code a2',)]
+--------------------+
--Query--
select 'unreachable code b2'
--Result--
[('unreachable code b2',)]
+--------------------+
--Query--
select pi(), pi ()
--Result--
[(3.141593, 3.141593)]
+--------------------+
--Query--
select database(), database ()
--Result--
[('test_db', 'test_db')]
+--------------------+
--Query--
select current_user(), current_user ()
--Result--
[('tester@localhost', 'tester@localhost')]
+--------------------+
--Query--
select sha2("aaa", 0), sha2 ("aaa", 0)
--Result--
[('9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0', '9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0')]
+--------------------+
--Query--
select 'caught something'
--Result--
[('caught something',)]
+--------------------+
--Query--
select 'dead code'
--Result--
[('dead code',)]
+--------------------+
--Query--
select 'leaving handler'
--Result--
[('leaving handler',)]
+--------------------+
--Query--
select 'do something'
--Result--
[('do something',)]
+--------------------+
--Query--
select 'do something again'
--Result--
[('do something again',)]
+--------------------+
--Query--
select 'caught something'
--Result--
[('caught something',)]
+--------------------+
--Query--
select 'dead code'
--Result--
[('dead code',)]
+--------------------+
--Query--
select 'leaving handler'
--Result--
[('leaving handler',)]
+--------------------+
--Query--
select 'do something'
--Result--
[('do something',)]
+--------------------+
--Query--
select 'do something again'
--Result--
[('do something again',)]
+--------------------+
--Query--
select 'caught something'
--Result--
[('caught something',)]
+--------------------+
--Query--
select 'dead code'
--Result--
[('dead code',)]
+--------------------+
--Query--
select 'leaving handler'
--Result--
[('leaving handler',)]
+--------------------+
--Query--
select 'do something'
--Result--
[('do something',)]
+--------------------+
--Query--
select 'do something again'
--Result--
[('do something again',)]
+--------------------+
--Query--
select 'caught something'
--Result--
[('caught something',)]
+--------------------+
--Query--
select 'dead code'
--Result--
[('dead code',)]
+--------------------+
--Query--
select 'leaving handler'
--Result--
[('leaving handler',)]
+--------------------+
--Query--
select 'do something'
--Result--
[('do something',)]
+--------------------+
--Query--
select 'do something again'
--Result--
[('do something again',)]
+--------------------+
--Query--
select count(t_1.a),count(t_2.a) from t1 as t_1, t2 as t_2 /* must be 0,0 */
--Result--
[(0, 0)]
+--------------------+
--Query--
select * from t2 /* must return 1,-1 ... */
--Result--
[(1, 1), (2, 2), (3, 3)]
+--------------------+
--Query--
PREPARE s1 FROM 'SELECT c1 FROM v1'
--Result--
[]
+--------------------+
--Query--
select 3
--Result--
[(3,)]
+--------------------+
--Query--
select 1/*! ,2*//*!00000 ,3*//*!99999 ,4*/
--Result--
[(1, 2, 3)]
+--------------------+
--Query--
select 1/*!,2 *//*!00000,3 *//*!99999,4 */
--Result--
[(1, 2, 3)]
+--------------------+
--Query--
select 1/*! ,2 *//*!00000 ,3 *//*!99999 ,4 */
--Result--
[(1, 2, 3)]
+--------------------+
--Query--
select 1 /*!,2*/ /*!00000,3*/ /*!99999,4*/
--Result--
[(1, 2, 3)]
+--------------------+
--Query--
select routine_name, routine_definition from information_schema.routines where routine_name like '%25411%'
--Result--
[]
+--------------------+
--Query--
select parameter_name from information_schema.parameters where SPECIFIC_NAME= '%25411%'
--Result--
[]
+--------------------+
--Query--
select ROUTINE_NAME, ROUTINE_DEFINITION from information_schema.ROUTINES where ROUTINE_NAME = "proc_26302"
--Result--
[('proc_26302', 'select 1 /* testing */')]
+--------------------+
--Query--
select column_name from information_schema.columns where table_name='v1' and table_schema='test' order by column_name
--Result--
[]
+--------------------+
--Query--
SELECT @state, @exception
--Result--
[(None, None)]
+--------------------+
--Query--
SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'v1'
--Result--
[]
+--------------------+
--Query--
SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'v2'
--Result--
[]
+--------------------+
--Query--
select @@sql_mode into @full_mode
--Result--
[]
+--------------------+
--Query--
select routine_name from information_schema.routines where routine_name = 'p' and sql_mode = @full_mode
--Result--
[('p',)]
+--------------------+
--Query--
SELECT @@SESSION.IDENTITY
--Result--
[(0,)]
+--------------------+
--Query--
SELECT @@GLOBAL.init_connect
--Result--
[('',)]
+--------------------+
--Query--
SELECT 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT CAST('10x' as UNSIGNED INTEGER)
--Result--
[(10,)]
+--------------------+
--Query--
SELECT routine_comment FROM information_schema.routines WHERE routine_name = "p1"
--Result--
[('12345678901234567890123456789012345678901234567890123456789012345678901234567890',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT     CASE _latin1'a'       WHEN _utf8mb3'a' THEN 'A'     END AS x2
--Result--
[('A',)]
+--------------------+
--Query--
SELECT     CASE _utf8mb3'a'       WHEN _latin1'a' THEN _utf8mb3'A'     END AS x3
--Result--
[('A',)]
+--------------------+
--Query--
SELECT     CASE s1       WHEN _latin1'a' THEN _latin1'b'       ELSE _latin1'c'     END AS x4   FROM t1
--Result--
[('b',)]
+--------------------+
--Query--
prepare s from 'select 1 from `v1` join `t1` on `v1`.`a` where (select 1 from `t1` where `v1`.`a`)'
--Result--
[]
+--------------------+
--Query--
prepare s from 'select 1 from `v1` join `t1` on `v1`.`a`'
--Result--
[]
+--------------------+
--Query--
prepare s from 'select 1 from `v1` join `t1` on `v1`.`a` join t1 as t2 on v1.a'
--Result--
[]
+--------------------+
--Query--
prepare s from 'select 1 from `v2` join `t1` on `v2`.`a` join v1 on `v1`.`a`'
--Result--
[]
+--------------------+
--Query--
prepare s from 'select 1 from `v2` join `t1` on `v2`.`a`, v1 where `v1`.`a`'
--Result--
[]
+--------------------+
--Query--
SELECT row_count()
--Result--
[(0,)]
+--------------------+
--Query--
SELECT @@default_storage_engine
--Result--
[('InnoDB',)]
+--------------------+
--Query--
SELECT @@default_storage_engine
--Result--
[('InnoDB',)]
+--------------------+
--Query--
SELECT @@default_storage_engine
--Result--
[('InnoDB',)]
+--------------------+
--Query--
PREPARE stmt FROM 'CREATE TABLE t2 AS SELECT ? FROM t1'
--Result--
[]
+--------------------+
--Query--
SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'f1'
--Result--
[]
+--------------------+
--Query--
SELECT * FROM INFORMATION_SCHEMA.PARAMETERS WHERE SPECIFIC_NAME = 'f1'
--Result--
[]
+--------------------+
--Query--
SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'p1'
--Result--
[('p1', 'def', 'test_db', 'p1', 'PROCEDURE', '', None, None, None, None, None, None, None, None, 'SQL', 'select 1', None, 'SQL', 'SQL', 'NO', 'CONTAINS SQL', None, 'DEFINER', datetime.datetime(2024, 5, 26, 3, 21, 55), datetime.datetime(2024, 5, 26, 3, 21, 55), {'ERROR_FOR_DIVISION_BY_ZERO', 'ONLY_FULL_GROUP_BY', 'NO_ZERO_DATE', 'NO_ENGINE_SUBSTITUTION', 'STRICT_TRANS_TABLES', 'NO_ZERO_IN_DATE'}, '', 'tester@localhost', 'utf8mb4', 'utf8mb4_0900_ai_ci', 'utf8mb4_0900_ai_ci')]
+--------------------+
--Query--
SELECT * FROM INFORMATION_SCHEMA.PARAMETERS WHERE SPECIFIC_NAME = 'p1'
--Result--
[('def', 'test_db', 'p1', 1, 'IN', 'a', 'int', None, None, 10, 0, None, None, None, 'int', 'PROCEDURE'), ('def', 'test_db', 'p1', 2, 'INOUT', 'b', 'int', None, None, 10, 0, None, None, None, 'int', 'PROCEDURE'), ('def', 'test_db', 'p1', 3, 'OUT', 'c', 'int', None, None, 10, 0, None, None, None, 'int', 'PROCEDURE')]
+--------------------+
--Query--
select 'Not reached'
--Result--
[('Not reached',)]
+--------------------+
--Query--
select get_lock('b26162',120)
--Result--
[(1,)]
+--------------------+
--Query--
select count(*) = 1 from information_schema.processlist   where state = "User lock" and   info = "select 'rl_acquirer', value from t1 where get_lock('b26162',120)"
--Result--
[(0,)]
+--------------------+
--Query--
select count(*) = 1 from information_schema.processlist   where state = "Waiting for table level lock" and   info = "update t1 set value='updated' where value='old'"
--Result--
[(0,)]
+--------------------+
--Query--
select 'rl_contender', value from t1
--Result--
[('rl_contender', 'old')]
+--------------------+
--Query--
select release_lock('b26162')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT GET_LOCK('Bug44521', 0)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT 2
--Result--
[(2,)]
+--------------------+
--Query--
SELECT count(*) = 1 FROM information_schema.processlist   WHERE state = "User lock" AND info = "SELECT GET_LOCK('Bug44521', 100)"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT RELEASE_LOCK('Bug44521')
--Result--
[(1,)]
+--------------------+
--Query--
SELECT count(*) = 1 FROM information_schema.processlist   WHERE state = "User lock" AND info = "SELECT * FROM v1"
--Result--
[(0,)]
+--------------------+
--Query--
SELECT COUNT(*) = 1 FROM information_schema.processlist   WHERE user = 'event_scheduler' AND command = 'Daemon'
--Result--
[(1,)]
+--------------------+
--Query--
SELECT t1.a, t1.b FROM t1       UNION DISTINCT       SELECT t2.c, t2.d FROM t2
--Result--
[(1, 10), (2, 20)]
+--------------------+
--Query--
SELECT t1.a, t1.b FROM t1       UNION ALL       SELECT t2.c, t2.d FROM t2
--Result--
[(1, 10), (2, 20)]
+--------------------+
--Query--
SELECT @sa, @sb
--Result--
[(None, None)]
+--------------------+
--Query--
SELECT @exist
--Result--
[(None,)]
+--------------------+
--Query--
SELECT 'then'
--Result--
[('then',)]
+--------------------+
--Query--
SELECT 'else'
--Result--
[('else',)]
+--------------------+
--Query--
SELECT 'while'
--Result--
[('while',)]
+--------------------+
--Query--
SELECT 'repeat'
--Result--
[('repeat',)]
+--------------------+
