--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select @total_change
--Result--
[(None,)]
+--------------------+
--Query--
select @del_sum
--Result--
[(None,)]
+--------------------+
--Query--
select @del
--Result--
[(None,)]
+--------------------+
--Query--
select @fired
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 2), (2, 3), (3, 14)]
+--------------------+
--Query--
select @fired
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 20), (2, 20), (3, 20)]
+--------------------+
--Query--
select @log
--Result--
[(None,)]
+--------------------+
--Query--
select @log
--Result--
[(None,)]
+--------------------+
--Query--
select @log
--Result--
[(None,)]
+--------------------+
--Query--
select @log
--Result--
[(None,)]
+--------------------+
--Query--
select @log
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'one', None), (2, 'two', None)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'one', None), (2, 'two', None), (4, 'four', 1), (5, 'five', 2)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'first')]
+--------------------+
--Query--
select * from t1 left join (t2 left join t3 on t2.fk_t3 = t3.id) on t1.fk_t2 = t2.id
--Result--
[(1, 1, 1, 1, None), (2, 1, 1, 1, None), (3, 2, 2, 2, 2)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 3), (2, 1), (3, 3)]
+--------------------+
--Query--
select @del_before, @del_after
--Result--
[(None, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(None,)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @c, @d, @e, @f
--Result--
[(None, None, None, None)]
+--------------------+
--Query--
select *, @b from t1
--Result--
[]
+--------------------+
--Query--
select *, @b from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 1), (2, 2), (3, 3)]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 1), (2, 2), (2, 3)]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(3, 3)]
+--------------------+
--Query--
select * from t1
--Result--
[(3, 13)]
+--------------------+
--Query--
select * from t1
--Result--
[(3, 13)]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 4)]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 4)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(datetime.date(2004, 1, 1),)]
+--------------------+
--Query--
select 'hello'
--Result--
[('hello',)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, None), (2, None), (3, None)]
+--------------------+
--Query--
select "hello again"
--Result--
[('hello again',)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, None), (2, None), (3, None), (4, None), (5, None), (6, None)]
+--------------------+
--Query--
select * from t1
--Result--
[(1,)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(10,), (10,)]
+--------------------+
--Query--
select * from t1
--Result--
[(10,), (10,)]
+--------------------+
--Query--
select * from t1
--Result--
[(10,), (10,), (3,)]
+--------------------+
--Query--
lock tables t2 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
lock tables t2 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t3
--Result--
[]
+--------------------+
--Query--
lock tables t2 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t3
--Result--
[]
+--------------------+
--Query--
lock tables t2 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t3
--Result--
[]
+--------------------+
--Query--
lock tables t2 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t3
--Result--
[]
+--------------------+
--Query--
prepare stmt1 from "insert into t1 values (10)"
--Result--
[]
+--------------------+
--Query--
deallocate prepare stmt1
--Result--
[]
+--------------------+
--Query--
prepare stmt1 from "insert into t1 values (10)"
--Result--
[]
+--------------------+
--Query--
deallocate prepare stmt1
--Result--
[]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test'
--Result--
[]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test'
--Result--
[]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test'
--Result--
[]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test'
--Result--
[]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test' or event_object_schema = 'mysqltest'
--Result--
[]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test' or event_object_schema = 'mysqltest'
--Result--
[]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test' or event_object_schema = 'mysqltest'
--Result--
[]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select trigger_schema, trigger_name, event_object_schema,        event_object_table, action_statement from information_schema.triggers        where event_object_schema = 'test' or event_object_schema = 'mysqltest'
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 1, 10.0), (1, 2, 10.0), (1, 3, 10.0), (1, 4, 10.0), (1, 5, 10.0), (1, 6, 10.0), (1, 7, 10.0), (1, 8, 10.0), (1, 9, 10.0), (1, 10, 10.0), (1, 11, 10.0), (1, 12, 10.0), (1, 13, 10.0), (1, 14, 10.0), (1, 15, 10.0)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 WHERE conn_id != trigger_conn_id
--Result--
[(828, -1), (828, -1)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(11,), (19,), (31,), (43,), (51,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 1), (2, 2), (13, 3)]
+--------------------+
--Query--
SELECT COUNT(*) FROM t2
--Result--
[(0,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'a'), (2, 'b'), (3, 'c')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b', 'Bang!', datetime.datetime(2024, 5, 26, 3, 22, 20)), (2, 'a', 'b', 'c', datetime.datetime(2024, 5, 26, 3, 22, 20))]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, 'a', 'b', 'Bang!', datetime.datetime(2024, 5, 26, 3, 22, 20)), (2, 'a', 'b', 'c', datetime.datetime(2024, 5, 26, 3, 22, 20))]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
select @a
--Result--
[(None,)]
+--------------------+
--Query--
select * from t1
--Result--
[(1,), (2,), (1,), (2,)]
+--------------------+
--Query--
select * from t3
--Result--
[]
+--------------------+
--Query--
lock table t1 write
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 0)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select @id, "CREATE TABLE ... REPLACE SELECT, deleting a duplicate key"
--Result--
[(None, 'CREATE TABLE ... REPLACE SELECT, deleting a duplicate key')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select NULL, "REPLACE ... SELECT, inserting a new key"
--Result--
[(None, 'REPLACE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select @id, "REPLACE ... SELECT, deleting a duplicate"
--Result--
[(None, 'REPLACE ... SELECT, deleting a duplicate')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT'), (2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t2
--Result--
[(3,)]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select @id, "CREATE TABLE ... REPLACE SELECT, deleting a duplicate key"
--Result--
[(None, 'CREATE TABLE ... REPLACE SELECT, deleting a duplicate key')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key'), (12, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select NULL, "REPLACE ... SELECT, inserting a new key"
--Result--
[(None, 'REPLACE ... SELECT, inserting a new key')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key'), (12, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select @id, "REPLACE ... SELECT, deleting a duplicate"
--Result--
[(None, 'REPLACE ... SELECT, deleting a duplicate')]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key'), (12, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key'), (12, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(1, 'INSERT for multi-UPDATE'), (2, 'multi-UPDATE, SET for t2, but the trigger is fired'), (3, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (4, 'CREATE TABLE ... SELECT, inserting a new key'), (5, 'INSERT ... SELECT, inserting a new key'), (6, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate'), (7, 'INSERT'), (8, 'INSERT ON DUPLICATE KEY UPDATE, inserting a new key'), (9, 'INSERT ON DUPLICATE KEY UPDATE, the key value is the same'), (10, 'CREATE TABLE ... SELECT, inserting a new key'), (11, 'INSERT ... SELECT, inserting a new key'), (12, 'INSERT ... SELECT ... ON DUPLICATE KEY UPDATE, updating a duplicate')]
+--------------------+
--Query--
select * from t2
--Result--
[(3,)]
+--------------------+
--Query--
select * from t1_op_log
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(0,), (0,)]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
select * from t2
--Result--
[]
+--------------------+
--Query--
select * from table_25411_a
--Result--
[]
+--------------------+
--Query--
select * from table_25411_a
--Result--
[(1,)]
+--------------------+
--Query--
lock tables t1 read
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
lock tables t1 read
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
lock tables t1 write
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[(10, 10), (10, 10)]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
select @a, @b
--Result--
[(None, None)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,)]
+--------------------+
--Query--
select trigger_name from information_schema.triggers   where event_object_schema = 'test' and event_object_table = 't1'
--Result--
[]
+--------------------+
--Query--
SELECT c FROM t1
--Result--
[('qazwsxedc',)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1,), (2,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT DEFINER FROM information_schema.triggers WHERE TRIGGER_NAME='silly_trigger'
--Result--
[]
+--------------------+
--Query--
SELECT TRIGGER_NAME FROM information_schema.triggers WHERE TRIGGER_NAME LIKE 'trg1%' ORDER BY TRIGGER_NAME
--Result--
[]
+--------------------+
--Query--
UNLOCK TABLES
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,), (1,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,), (1,), (2,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,), (1,), (2,), (3,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,), (1,), (2,), (3,), (6,)]
+--------------------+
--Query--
SELECT @mysqltest_var
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('line2',)]
+--------------------+
--Query--
SELECT * FROM t3
--Result--
[('t3_line1',)]
+--------------------+
--Query--
SELECT @mysqltest_var
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t4
--Result--
[('t4_line2',)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(0,), (0,), (1,), (2,), (3,), (6,)]
+--------------------+
--Query--
SELECT @mysqltest_var
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('line2',), ('line4',)]
+--------------------+
--Query--
SELECT * FROM t3
--Result--
[('t3_line1',), ('t3_line2',)]
+--------------------+
--Query--
SELECT @mysqltest_var
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t4
--Result--
[('t4_line2',), ('t4_line2',)]
+--------------------+
--Query--
SELECT @mysqltest_var
--Result--
[(None,)]
+--------------------+
--Query--
lock tables t1 write
--Result--
[]
+--------------------+
--Query--
select count(*) = 1 from information_schema.processlist   where state = "Waiting for global read lock"
--Result--
[(0,)]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
unlock tables
--Result--
[]
+--------------------+
--Query--
select * from t1
--Result--
[]
+--------------------+
--Query--
SELECT trigger_name FROM INFORMATION_SCHEMA.TRIGGERS  WHERE trigger_schema = 'db1'
--Result--
[]
+--------------------+
--Query--
SELECT @a
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(2, 20), (None, None)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 1)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 1)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 2)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 1)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 2)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 1)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[(3,), (2,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(datetime.datetime(2024, 5, 26, 3, 22, 20), 1)]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT @x
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 40)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 50)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 50)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 60)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 60)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 50)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 50)]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[('1100', 0)]
+--------------------+
--Query--
SELECT * FROM t2
--Result--
[('1100', 60)]
+--------------------+
--Query--
SELECT @t1_var
--Result--
[(None,)]
+--------------------+
