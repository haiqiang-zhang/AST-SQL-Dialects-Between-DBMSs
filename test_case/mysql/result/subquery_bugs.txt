--Query--
SELECT table2.col_int_key AS field1 FROM (SELECT sq1_t1.*       FROM t1 AS sq1_t1 RIGHT OUTER JOIN t2 AS sq1_t2            ON sq1_t2.col_varchar_key = sq1_t1.col_varchar      ) AS table1      LEFT JOIN t1 AS table2        RIGHT JOIN t2 AS table3        ON table3.pk = table2.col_int_key      ON table3.col_int_key = table2.col_int WHERE table3.col_int_key >= ALL    (SELECT sq2_t1.col_int AS sq2_field1     FROM t2 AS sq2_t1 STRAIGHT_JOIN t3 AS sq2_t2          ON sq2_t2.col_int = sq2_t1.pk AND             sq2_t1.col_varchar IN        (SELECT sq21_t1.col_varchar AS sq21_field1         FROM t2 AS sq21_t1 STRAIGHT_JOIN t1 AS sq21_t2              ON sq21_t2.col_int_key = sq21_t1.pk         WHERE sq21_t1.pk = 7        )     WHERE sq2_t2.col_int_key >= table2.col_int AND           sq2_t1.col_int_key <= table2.col_int_key    )
--Result--
[(None,), (None,), (None,), (None,), (None,), (None,), (None,)]
+--------------------+
--Query--
SELECT (SELECT 'X' FROM t2         WHERE t2.k = CONCAT(t1.k, 'X')) = 'XXX' FROM t1 WHERE k ='X'
--Result--
[]
+--------------------+
--Query--
SELECT (SELECT 'X' FROM t2         WHERE t2.k = CONCAT(t1.k, 'X')) = 'XXX' FROM t1 WHERE k ='X'
--Result--
[]
+--------------------+
--Query--
SELECT (SELECT 'X' FROM t2         WHERE t2.k = CONCAT(t1.k, 'X')) = 'XXX' FROM t1 WHERE k ='X'
--Result--
[]
+--------------------+
--Query--
SELECT (SELECT 'X' FROM t2         WHERE t2.k = CONCAT(t1.k, 'X')) = 'XXX' FROM t1 WHERE k ='X'
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt FROM "SELECT t2.f1 FROM (t2 LEFT JOIN t1  ON (1 = ANY (SELECT f1 FROM t1 WHERE 1 IS NULL)))"
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt FROM " SELECT t2.f1 FROM t2 LEFT OUTER JOIN (SELECT  * FROM t2 WHERE ('y',1)  IN (SELECT alias1.f1 , 0 FROM t1 AS alias1 LEFT JOIN t2 ON 0)) AS alias ON 0"
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt FROM " SELECT t2.f1 FROM (t2 LEFT OUTER JOIN (SELECT  * FROM t2 WHERE ('y',1)  IN (SELECT alias1.f1 , 0 FROM      (t1 INNER JOIN  (t1 AS alias1 LEFT JOIN t2 ON 0) ON 0))) AS alias ON 0)"
--Result--
[]
+--------------------+
--Query--
SELECT cv FROM t1 WHERE EXISTS (SELECT alias1.cv AS field1               FROM t1 AS alias1 RIGHT JOIN t1 AS alias2                    ON alias1.cv = alias2.cv              )
--Result--
[('h',), ('Q',), ('I',), ('q',), ('W',)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE col_varchar_key IN        (SELECT col_varchar_key         FROM t1         WHERE col_varchar_key =               (SELECT col_varchar_key                FROM t1                WHERE col_varchar_key > @var1               )        )
--Result--
[]
+--------------------+
--Query--
PREPARE prep_stmt FROM "SELECT t2.f1 FROM (t2 LEFT JOIN t1  ON 1 IN (SELECT f1 FROM t1 WHERE FALSE))"
--Result--
[]
+--------------------+
--Query--
SELECT alias1.col_time_gckey AS field1,        alias1.col_datetime_gckey AS field2 FROM t1 AS alias1,      (SELECT DISTINCT sq1_alias2.*       FROM t1 AS sq1_alias1, t1 AS sq1_alias2      ) AS alias2,      (SELECT sq2_alias1.*       FROM t1 AS sq2_alias1 RIGHT OUTER JOIN              t1 AS sq2_alias2 INNER JOIN t2 AS sq2_alias3              ON sq2_alias3.col_int_key = sq2_alias2.col_int_key            ON sq2_alias3.col_varchar_key = sq2_alias2.col_varchar_key      ) AS alias3 WHERE alias2.col_int_key = SOME        (WITH qn AS         (SELECT sq3_alias1.pk AS sq3_field1          FROM t1 AS sq3_alias1          WHERE sq3_alias1.col_int_key = alias3.pk         )         SELECT /*+ MERGE(qn) */ * FROM qn        )
--Result--
[]
+--------------------+
--Query--
SELECT d0.f1, d0.pk, t1.pk, t1.f1 FROM ( SELECT DISTINCT * FROM t1 ) AS d0 LEFT JOIN t1 ON d0.pk IN ( SELECT 1 FROM t1 ) ORDER BY d0.f1
--Result--
[('D', 1, 1, 'D'), ('D', 1, 20, 'G'), ('G', 20, None, None)]
+--------------------+
--Query--
SELECT table2.col_time_key AS field1 FROM t1 AS table1 LEFT JOIN t1 AS table2      ON table1.col_varchar_key = table2.col_varchar_key WHERE 1 IN (SELECT 1 FROM t1 AS subq             WHERE subq.pk <= (SELECT DISTINCT MIN(subq.col_int)                               FROM t1 as alias1                              )            )
--Result--
[(datetime.timedelta(seconds=40445),), (datetime.timedelta(seconds=81844),), (datetime.timedelta(seconds=73680),), (datetime.timedelta(seconds=63904),), (datetime.timedelta(seconds=73680),), (datetime.timedelta(seconds=63904),), (datetime.timedelta(seconds=68929),), (datetime.timedelta(seconds=57381),), (datetime.timedelta(seconds=13087),), (datetime.timedelta(seconds=55960),), (datetime.timedelta(seconds=13087),), (datetime.timedelta(seconds=55960),), (datetime.timedelta(seconds=57814),), (datetime.timedelta(seconds=24979),), (datetime.timedelta(seconds=57814),), (datetime.timedelta(seconds=24979),), (datetime.timedelta(seconds=25031),), (datetime.timedelta(seconds=64274),), (datetime.timedelta(seconds=40731),), (datetime.timedelta(seconds=33209),), (datetime.timedelta(seconds=59053),), (datetime.timedelta(seconds=11909),), (datetime.timedelta(seconds=35154),), (datetime.timedelta(seconds=57281),), (datetime.timedelta(seconds=19744),), (datetime.timedelta(seconds=60674),)]
+--------------------+
--Query--
PREPARE st FROM "DELETE outr1.*  FROM t1 AS outr1 RIGHT OUTER JOIN t2 AS outr2       ON outr1.col_int = outr2.col_int  WHERE (0, 3) NOT IN (SELECT innr1.pk AS x, innr1.col_int AS y                       FROM t2 AS innr1                       WHERE outr1.col_int = 25)"
--Result--
[]
+--------------------+
--Query--
DEALLOCATE PREPARE st
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1   WHERE NOT EXISTS (      SELECT *      FROM t4 LEFT JOIN t3 ON t4.f4 = t3.f3      WHERE 'abc' IN (         SELECT t2.f2 FROM t2 WHERE t3.f3 = 1 HAVING t2.f2 = 'xyz'      )    )
--Result--
[(1,), (2,), (3,)]
+--------------------+
--Query--
SELECT id, (     SELECT GROUP_CONCAT(id) FROM (       SELECT table_user.id FROM table_user WHERE id IN (         SELECT user FROM table_city_user WHERE table_city_user.city = table_city.id       )       GROUP BY table_user.id     ) AS d   ) AS users FROM table_city
--Result--
[(1, '1,2,3,4,5,6,7,8'), (2, '1,2,3,4,5'), (3, '2,5'), (4, '5,2,3,8,1'), (5, None), (6, None)]
+--------------------+
--Query--
SELECT /*+ JOIN_ORDER(b, c_inner, c_inner_inner, d, c) */ d.c FROM d JOIN c WHERE d.c IN (   SELECT     b.c   FROM     b LEFT JOIN c AS c_inner ON c_inner.c = b.c   WHERE     EXISTS ( SELECT c FROM c AS c_inner_inner ) ) ORDER BY d.c
--Result--
[(1,), (1,), (2,), (2,)]
+--------------------+
--Query--
SELECT /*+ JOIN_ORDER(t3,t1) */ *   FROM   t1 WHERE 3 IN (SELECT t3.col_int_nokey FROM t1 AS t3)
--Result--
[]
+--------------------+
--Query--
SELECT /*+ JOIN_ORDER(t1,t3,t2) */ *   FROM   t1 LEFT JOIN t1 AS t2   ON 3 IN (SELECT t3.col_int_nokey FROM t1 AS t3)   WHERE t1.pk=26
--Result--
[(26, 12, None, None)]
+--------------------+
--Query--
SELECT 1 FROM t1 AS table2 LEFT JOIN (SELECT 'c') AS table3(f1)   ON table3.f1 = table2.f1 WHERE table2.f1     IN (SELECT 1 FROM (SELECT 1314830897) AS t1(pk)           WHERE t1.pk <= ANY(SELECT 5)) AND FALSE
--Result--
[]
+--------------------+
--Query--
SELECT * FROM v1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT * FROM t AS upper JOIN LATERAL (SELECT DISTINCT ROW_NUMBER() OVER () AS rn FROM t  WHERE (t.a > upper.a)) der
--Result--
[(1, 1), (1, 2), (2, 1)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE (t1.a,t1.b) IN (SELECT t2.a,10 FROM t2)
--Result--
[(2, 10)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE t1.a IN (SELECT t2.a FROM t2 WHERE 10=t1.b)
--Result--
[(2, 10)]
+--------------------+
--Query--
SELECT * FROM t1 WHERE EXISTS (SELECT * FROM t2 WHERE 10=t1.b AND t1.a=t2.a)
--Result--
[(2, 10)]
+--------------------+
--Query--
SELECT * FROM     t1       JOIN t2 ON t1.pk = t2.pk       JOIN t3 ON t2.pk = t3.pk   WHERE (t1.col_int + t2.pk) IN ( SELECT col_int FROM t4 )
--Result--
[]
+--------------------+
--Query--
SELECT /*+ JOIN_ORDER(t3,t2,t1) */ * FROM t1   WHERE t1.col1 = ANY (     SELECT t1.col1 + t2.col2     FROM t2 JOIN t3 ON t2.col2 = t3.col2 AND t2.col1 =  t3.col1     WHERE t2.col2 BETWEEN 2 AND 9   )
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1   LEFT JOIN t2 ON t1.col_int_key = t2.col_int_key   JOIN t3 ON t1.col_int_key =  t3.pk WHERE t3.pk+6 NOT IN (   SELECT /*+ subquery(materialization) */     table1s.col_int_unique AS field4 FROM t2 AS table1s)
--Result--
[]
+--------------------+
--Query--
SELECT COUNT(table1.col_datetime) AS field1 FROM t1 AS table1 RIGHT JOIN t1 AS table2      ON table1.col_varchar_key = table2.col_char WHERE table1.col_char_key IN        (SELECT sq2_t1.col_real_key         FROM t2 AS sq2_t1 JOIN                t3 AS sq2_t2 JOIN t1 AS sq2_t3                ON INSTR(sq2_t3.col_tinyint, 'K') = sq2_t2.col_varchar              ON sq2_t3.col_varchar_key = sq2_t2.col_varchar_key         WHERE sq2_t1.col_mediumint IN                (SELECT sq1_t1.col_varchar_key                 FROM t1 AS sq1_t1 JOIN t1 AS sq1_t2                      ON sq1_t2.col_tinyint_key = table1.col_tinyint_key                )        ) OR       RTRIM(table1.col_tinyint_key) IS NOT NULL
--Result--
[(0,)]
+--------------------+
--Query--
SELECT 42 WHERE 11 NOT IN (SELECT col_int_key FROM t1)
--Result--
[]
+--------------------+
--Query--
SELECT 1= (   SELECT 1 FROM   (     SELECT 1 FROM t     LEFT JOIN     (       SELECT 1 FROM t       WHERE NOT EXISTS             (               SELECT 1 FROM t WINDOW w1 AS (PARTITION BY a)             )     ) AS x     ON 1 > 2   ) AS z )
--Result--
[(None,)]
+--------------------+
--Query--
PREPARE ps FROM ' SELECT (SELECT SUM(sq1_t1.col_int) AS sq1_field1         FROM t3 AS sq1_t1 INNER JOIN t1 AS sq1_t2              ON sq1_t2.col_varchar_key = sq1_t1.col_varchar_key         WHERE sq1_t2.col_varchar < sq1_t2.col_varchar OR               sq1_t2.col_varchar <>  ?        ) AS field1 FROM t5 AS table1 LEFT OUTER JOIN t4 AS table2      ON table2.col_int_key = table1.col_int WHERE table1.pk > ANY        (SELECT sq2_t1.pk AS sq2_field1         FROM t3 AS sq2_t1 STRAIGHT_JOIN t2 AS sq2_t2              ON sq2_t2.col_int_key = sq2_t1.pk         WHERE sq2_t2.col_varchar >= table2.col_varchar AND               sq2_t2.col_varchar <= table1.col_varchar_key        ) AND       table1.pk = ?'
--Result--
[]
+--------------------+
--Query--
SELECT (   SELECT 1 FROM   (     SELECT a FROM (SELECT 1) u   ) z ) FROM t GROUP BY 1
--Result--
[(1,)]
+--------------------+
--Query--
SELECT * FROM t1 AS table1, t1 AS table2   WHERE table1.pk = 6   HAVING table1.a IN (SELECT a FROM t1)
--Result--
[(6, '7', 3, 'N'), (6, '7', 4, 'e'), (6, '7', 5, '7'), (6, '7', 6, '7')]
+--------------------+
--Query--
SELECT b FROM t1 HAVING 1 IN   (SELECT b FROM t2 WHERE c = 1)
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t1 WHERE d IN (SELECT a FROM t1)
--Result--
[(1,), (1,)]
+--------------------+
--Query--
SELECT ( SELECT b FROM t2 ORDER BY a, MIN(a) LIMIT 1 ) FROM t1 GROUP BY a
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 WHERE a <= ALL (   SELECT 'a' FROM t1 AS t2   WHERE t2.a < t1.a AND t2.a NOT IN (SELECT a FROM t1) )
--Result--
[(None,), ('r',)]
+--------------------+
--Query--
SELECT 1 FROM t1 WHERE   ( SELECT a FROM ( SELECT 1 ) AS q )    IN ( SELECT a FROM t1 WHERE a > 0 GROUP BY a )
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t1 WHERE (@b IN ( SELECT a FROM t1 )) = a
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t WHERE CAST(pk AS UNSIGNED INTEGER) = 1       AND pk = (SELECT 1 FROM t)
--Result--
[]
+--------------------+
--Query--
SELECT t1.a FROM   t1,   LATERAL ( SELECT t1.a FROM t1 AS inner_t1 LIMIT 1 ) AS d1 WHERE 1 IN ( SELECT a FROM t1 ) ORDER BY a
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t1 WHERE a NOT IN (   SELECT 1   FROM     t1 AS t2     LEFT JOIN t1 AS t3 ON (t2.a = t3.a OR 0 IN ( SELECT REGEXP_LIKE(a, '') FROM t1 )) )
--Result--
[(1,)]
+--------------------+
--Query--
SELECT t1.c0 AS ref0 FROM t1 WHERE t1.c0 IN (SELECT t2.c0 AS ref1                 FROM t1 as t2                 WHERE t2.c0 NOT IN (SELECT t3.c0 AS ref2                                     FROM t1 as t3                                     WHERE t3.c0                                    )                       = t2.c0                )
--Result--
[]
+--------------------+
--Query--
SELECT t0.c0 FROM t0 WHERE t0.c0 NOT IN (SELECT t0.c0 AS ref1                     FROM t0                     WHERE t0.c0 IN (SELECT t0.c0                                     FROM t0                                     WHERE t0.c0 NOT IN (SELECT t0.c0 AS ref3                                                         FROM t0                                                        )                                           = t0.c0                                    )                    )
--Result--
[(321108437,), (-64596961,), (329053785,), (1983,), (None,), (None,), (1936,), (-543970881,), (None,), (None,), (-1945919442,), (None,), (1230052719,)]
+--------------------+
--Query--
SELECT a FROM t1 WHERE b =ALL (SELECT d FROM t2 WHERE c = 1)
--Result--
[(1,)]
+--------------------+
--Query--
SELECT a FROM t1 WHERE b =ALL (SELECT d FROM t2 WHERE c = 2)
--Result--
[]
+--------------------+
--Query--
prepare ps FROM " SELECT a FROM t1 WHERE b =ALL (SELECT d FROM t2 WHERE c = ?)"
--Result--
[]
+--------------------+
--Query--
deallocate prepare ps
--Result--
[]
+--------------------+
--Query--
SELECT * FROM v1 WHERE (v1.vc3 IN (SELECT c1 FROM t1 WHERE c2='01'))        AND (null IS null OR v1.vc1 IN (SELECT c2 FROM t2 WHERE c3=null))        AND (null IS null OR v1.vc2 IN (null))
--Result--
[(1, 1, 1)]
+--------------------+
--Query--
SELECT * FROM v1 WHERE (vc3 IN (SELECT c1 FROM t1 WHERE c2='01'))        AND (null IS null OR v1.vc1 IN (SELECT c2 FROM t2 WHERE c3=null))
--Result--
[(1, 1, 1)]
+--------------------+
--Query--
SELECT c FROM t WHERE ((SELECT c FROM t), 0) IN (SELECT 1, 2 UNION SELECT 3, 4) AND FALSE
--Result--
[]
+--------------------+
--Query--
SELECT * FROM (SELECT (SELECT SUM(t1.f1) FROM t1) AS subq       FROM t1 AS t2       WHERE t2.f1 IN (SELECT 1 FROM t1)       ORDER BY t2.f2, subq) AS dt
--Result--
[]
+--------------------+
--Query--
SELECT 1 FROM t AS t1 JOIN        (SELECT v.*         FROM v        ) AS t2      ON t1.f = t2.f WHERE FALSE AND (t2.f, t2.f) IN (SELECT 1, 2)
--Result--
[]
+--------------------+
--Query--
SELECT t2.f FROM t AS t1 JOIN (SELECT *                    FROM (SELECT (SELECT f = 1 AS f FROM t) AS f                     FROM t                    ) AS t2              ) AS t2      ON t1.f = t2.f WHERE FALSE AND (t2.f,t2.f) IN (SELECT 4,3)
--Result--
[]
+--------------------+
--Query--
SELECT CAST(NULL < ANY (VALUES ROW(1), ROW(2)) AS SIGNED)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT 1 WHERE 7 IN (SELECT COUNT(*) FROM t AS t1, t AS t2 WHERE t1.x = t2.x AND t1.x < t2.x)
--Result--
[]
+--------------------+
--Query--
SELECT NULL IN (SELECT (a IN (SELECT a FROM t)) FROM t)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT * FROM t t1 WHERE EXISTS   (SELECT t2.id FROM t t2 WHERE     t1.id = (SELECT id2 FROM t t3 WHERE t2.id = t3.id))
--Result--
[(1, 1), (2, 2)]
+--------------------+
--Query--
SELECT 1 AS x FROM t WHERE i IN (SELECT i FROM (TABLE t) AS dt WHERE i < 2) GROUP BY x WITH ROLLUP
--Result--
[(1,), (None,)]
+--------------------+
