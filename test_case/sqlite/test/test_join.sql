SELECT * FROM t1;
CREATE TABLE t2(b,c,d);
INSERT INTO t2 VALUES(1,2,3);
INSERT INTO t2 VALUES(2,3,4);
INSERT INTO t2 VALUES(3,4,5);
SELECT * FROM t2;
SELECT t1.rowid, t2.rowid, '|' FROM t1, t2 ON t1.a=t2.b;
SELECT * FROM t1 NATURAL JOIN t2;
SELECT * FROM t2 NATURAL JOIN t1;
SELECT * FROM t2 AS x NATURAL JOIN t1;
SELECT * FROM t2 NATURAL JOIN t1 AS y;
SELECT b FROM t1 NATURAL JOIN t2;
SELECT t2.* FROM t2 NATURAL JOIN t1;
SELECT xyzzy.* FROM t2 AS xyzzy NATURAL JOIN t1;
SELECT t1.* FROM t2 NATURAL JOIN t1;
SELECT xyzzy.* FROM t2 NATURAL JOIN t1 AS xyzzy;
SELECT aaa.*, bbb.* FROM t2 AS aaa NATURAL JOIN t1 AS bbb;
SELECT t1.*, t2.* FROM t2 NATURAL JOIN t1;
SELECT * FROM t1 INNER JOIN t2 USING(b,c);
SELECT * FROM t1 AS x INNER JOIN t2 USING(b,c);
SELECT * FROM t1 INNER JOIN t2 AS y USING(b,c);
SELECT * FROM t1 AS x INNER JOIN t2 AS y USING(b,c);
SELECT b FROM t1 JOIN t2 USING(b);
SELECT t1.* FROM t1 JOIN t2 USING(b);
SELECT t2.* FROM t1 JOIN t2 USING(b);
SELECT * FROM t1 INNER JOIN t2 USING(b);
SELECT * FROM t1 INNER JOIN t2 USING(c);
SELECT * FROM t1 INNER JOIN t2 USING(c,b);
SELECT * FROM t1 NATURAL CROSS JOIN t2;
SELECT * FROM t1 CROSS JOIN t2 USING(b,c);
SELECT * FROM t1 NATURAL INNER JOIN t2;
SELECT * FROM t1 INNER JOIN t2 USING(b,c);
SELECT * FROM t1 natural inner join t2;
SELECT * FROM t1 NATURAL JOIN 
        (SELECT b as 'c', c as 'd', d as 'e' FROM t2) as t3;
SELECT * FROM (SELECT b as 'c', c as 'd', d as 'e' FROM t2) as 'tx'
          NATURAL JOIN t1;
CREATE TABLE t3(c,d,e);
INSERT INTO t3 VALUES(2,3,4);
INSERT INTO t3 VALUES(3,4,5);
INSERT INTO t3 VALUES(4,5,6);
SELECT * FROM t3;
SELECT * FROM t1 natural join t2 natural join t3;
SELECT * FROM t1 natural join t2 natural join t3;
CREATE TABLE t4(d,e,f);
INSERT INTO t4 VALUES(2,3,4);
INSERT INTO t4 VALUES(3,4,5);
INSERT INTO t4 VALUES(4,5,6);
SELECT * FROM t4;
SELECT * FROM t1 natural join t2 natural join t4;
SELECT * FROM t1 natural join t2 natural join t4;
SELECT * FROM t1 natural join t2 natural join t3 WHERE t1.a=1;
SELECT * FROM t1 NATURAL LEFT JOIN t2;
SELECT * FROM t1 OUTER LEFT NATURAL JOIN t2;
SELECT * FROM t1 NATURAL LEFT OUTER JOIN t2;
SELECT * FROM t1 NATURAL LEFT JOIN t2;
SELECT t1.* FROM t1 NATURAL LEFT JOIN t2;
SELECT t2.* FROM t1 NATURAL LEFT JOIN t2;
SELECT * FROM t2 NATURAL LEFT OUTER JOIN t1;
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.d;
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.d WHERE t1.a>1;
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.d WHERE t2.b IS NULL OR t2.b>1;
BEGIN;
CREATE TABLE t5(a INTEGER PRIMARY KEY);
CREATE TABLE t6(a INTEGER);
INSERT INTO t6 VALUES(NULL);
INSERT INTO t6 VALUES(NULL);
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;
SELECT * FROM t6 NATURAL JOIN t5;
SELECT * FROM t6, t5 WHERE t6.a<t5.a;
SELECT * FROM t6, t5 WHERE t6.a>t5.a;
UPDATE t6 SET a='xyz';
SELECT * FROM t6 NATURAL JOIN t5;
SELECT * FROM t6, t5 WHERE t6.a<t5.a;
SELECT * FROM t6, t5 WHERE t6.a>t5.a;
UPDATE t6 SET a=1;
SELECT * FROM t6 NATURAL JOIN t5;
SELECT * FROM t6, t5 WHERE t6.a<t5.a;
SELECT * FROM t6, t5 WHERE t6.a>t5.a;
BEGIN;
create table centros (id integer primary key, centro);
INSERT INTO centros VALUES(1,'xxx');
create table usuarios (id integer primary key, nombre, apellidos,
    idcentro integer);
INSERT INTO usuarios VALUES(1,'a','aa',1);
INSERT INTO usuarios VALUES(2,'b','bb',1);
INSERT INTO usuarios VALUES(3,'c','cc',NULL);
create index idcentro on usuarios (idcentro);
select usuarios.id, usuarios.nombre, centros.centro from
    usuarios left outer join centros on usuarios.idcentro = centros.id;
CREATE TABLE t7 (x, y);
INSERT INTO t7 VALUES ("pa1", 1);
INSERT INTO t7 VALUES ("pa2", NULL);
INSERT INTO t7 VALUES ("pa3", NULL);
INSERT INTO t7 VALUES ("pa4", 2);
INSERT INTO t7 VALUES ("pa30", 131);
INSERT INTO t7 VALUES ("pa31", 130);
INSERT INTO t7 VALUES ("pa28", NULL);
CREATE TABLE t8 (a integer primary key, b);
INSERT INTO t8 VALUES (1, "pa1");
INSERT INTO t8 VALUES (2, "pa4");
INSERT INTO t8 VALUES (3, NULL);
INSERT INTO t8 VALUES (4, NULL);
INSERT INTO t8 VALUES (130, "pa31");
INSERT INTO t8 VALUES (131, "pa30");
SELECT coalesce(t8.a,999) from t7 LEFT JOIN t8 on y=a;
BEGIN;
CREATE TABLE t9(a INTEGER PRIMARY KEY, b);
INSERT INTO t9 VALUES(1,11);
INSERT INTO t9 VALUES(2,22);
CREATE TABLE t10(x INTEGER PRIMARY KEY, y);
INSERT INTO t10 VALUES(1,2);
INSERT INTO t10 VALUES(3,3);
CREATE TABLE t11(p INTEGER PRIMARY KEY, q);
INSERT INTO t11 VALUES(2,111);
INSERT INTO t11 VALUES(3,333);
CREATE VIEW v10_11 AS SELECT x, q FROM t10, t11 WHERE t10.y=t11.p;
SELECT * FROM t9 LEFT JOIN v10_11 ON( a=x );
SELECT * FROM t9 LEFT JOIN (SELECT 44, p, q FROM t11) AS sub1 ON p=a;
BEGIN;
CREATE TABLE t12(a,b);
INSERT INTO t12 VALUES(1,11);
INSERT INTO t12 VALUES(2,22);
CREATE TABLE t13(b,c);
INSERT INTO t13 VALUES(22,222);
SELECT * FROM t12 NATURAL LEFT JOIN t13
      EXCEPT
      SELECT * FROM t12 NATURAL LEFT JOIN (SELECT * FROM t13 WHERE b>0);
CREATE VIEW v13 AS SELECT * FROM t13 WHERE b>0;
SELECT * FROM t12 NATURAL LEFT JOIN t13
        EXCEPT
        SELECT * FROM t12 NATURAL LEFT JOIN v13;
CREATE TABLE t21(a,b,c);
CREATE TABLE t22(p,q);
CREATE INDEX i22 ON t22(q);
SELECT a FROM t21 LEFT JOIN t22 ON b=p WHERE q=
         (SELECT max(m.q) FROM t22 m JOIN t21 n ON n.b=m.p WHERE n.c=1);
CREATE TABLE t23(a, b, c);
CREATE TABLE t24(a, b, c);
INSERT INTO t23 VALUES(1, 2, 3);
SELECT * FROM t23 LEFT JOIN t24;
SELECT * FROM t23 LEFT JOIN (SELECT * FROM t24);
PRAGMA foreign_keys = OFF;
DROP table "t1";
DROP table "t2";
DROP table "t3";
DROP table "t4";
DROP table "t5";
DROP table "t6";
DROP table "centros";
DROP table "usuarios";
DROP table "t7";
DROP table "t8";
DROP table "t9";
DROP table "t10";
DROP table "t11";
DROP view "v10_11";
DROP table "t12";
DROP table "t13";
DROP view "v13";
DROP table "t21";
DROP table "t22";
DROP table "t23";
DROP table "t24";
CREATE TABLE t1(a INTEGER PRIMARY KEY, b TEXT);
CREATE TABLE t2(a INTEGER PRIMARY KEY, b TEXT);
INSERT INTO t1 VALUES(1,'abc');
INSERT INTO t1 VALUES(2,'def');
INSERT INTO t2 VALUES(1,'abc');
INSERT INTO t2 VALUES(2,'def');
SELECT * FROM t1 NATURAL JOIN t2;
SELECT a FROM t1 JOIN t1 USING (a);
SELECT a FROM t1 JOIN t1 AS t2 USING (a);
SELECT * FROM t1 NATURAL JOIN t1 AS t2;
SELECT * FROM t1 NATURAL JOIN t1;
PRAGMA foreign_keys = OFF;
DROP table "t1";
DROP table "t2";
CREATE TABLE t1(a COLLATE nocase, b);
CREATE TABLE t2(a, b);
INSERT INTO t1 VALUES('ONE', 1);
INSERT INTO t1 VALUES('two', 2);
INSERT INTO t2 VALUES('one', 1);
INSERT INTO t2 VALUES('two', 2);
SELECT * FROM t1 NATURAL JOIN t2;
SELECT * FROM t2 NATURAL JOIN t1;
PRAGMA foreign_keys = OFF;
DROP table "t1";
DROP table "t2";
CREATE TABLE t1(a, b TEXT);
CREATE TABLE t2(b INTEGER, a);
INSERT INTO t1 VALUES('one', '1.0');
INSERT INTO t1 VALUES('two', '2');
INSERT INTO t2 VALUES(1, 'one');
INSERT INTO t2 VALUES(2, 'two');
SELECT * FROM t1 NATURAL JOIN t2;
SELECT * FROM t2 NATURAL JOIN t1;
CREATE TABLE t14(x);
INSERT INTO t14 VALUES('abcdefghij');
SELECT 1 FROM t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14, t14;
SELECT 1 FROM t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14, t14;
SELECT 1 FROM t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14,t14, t14;
CREATE TABLE aa(a);
CREATE TABLE bb(b);
CREATE TABLE cc(c);
INSERT INTO aa VALUES(45);
INSERT INTO cc VALUES(45);
INSERT INTO cc VALUES(45);
SELECT * FROM aa LEFT JOIN bb, cc WHERE cc.c=aa.a;
CREATE INDEX ccc ON cc(c);
SELECT * FROM aa LEFT JOIN bb, cc WHERE cc.c=aa.a;
SELECT *
    FROM (SELECT 1 a) AS x 
         LEFT JOIN (SELECT 1, * FROM (SELECT * FROM (SELECT 1)));
SELECT *
  FROM (SELECT 1 a) AS x
    LEFT JOIN (SELECT 1, * FROM (SELECT * FROM (SELECT * FROM (SELECT 1)))) AS y
    JOIN (SELECT * FROM (SELECT 9)) AS z;
SELECT *
  FROM (SELECT 111)
  LEFT JOIN (SELECT cc+222, * FROM (SELECT * FROM (SELECT 333 cc)));
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(c PRIMARY KEY, a TEXT(10000), b TEXT(10000));
SELECT * FROM (SELECT 111) LEFT JOIN (SELECT c+222 FROM t1) GROUP BY 1;
SELECT * FROM (SELECT 111) LEFT JOIN (SELECT c+222 FROM t1);
SELECT * FROM (SELECT 111 AS x UNION ALL SELECT 222)
                LEFT JOIN (SELECT c+333 AS y FROM t1) ON x=y GROUP BY 1;
SELECT count(*)
    FROM (SELECT 111 AS x UNION ALL SELECT 222)
         LEFT JOIN (SELECT c+333 AS y FROM t1) ON x=y;
SELECT * FROM (SELECT 111 AS x UNION ALL SELECT 111)
                LEFT JOIN (SELECT c+333 AS y FROM t1) ON x=y GROUP BY 1;
SELECT * FROM (SELECT 111 AS x UNION ALL SELECT 111 UNION ALL SELECT 222)
                LEFT JOIN (SELECT c+333 AS y FROM t1) ON x=y GROUP BY 1;
INSERT INTO t1(c) VALUES(-111);
SELECT * FROM (SELECT 111 AS x UNION ALL SELECT 111 UNION ALL SELECT 222)
                LEFT JOIN (SELECT c+333 AS y FROM t1) ON x=y GROUP BY 1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(c PRIMARY KEY) WITHOUT ROWID;
SELECT * FROM (SELECT 111) LEFT JOIN (SELECT c+222 FROM t1) GROUP BY 1;
INSERT INTO t1 VALUES(1),(2),(3);
CREATE VIEW v2 AS SELECT a, 1 AS b FROM t1;
CREATE TABLE t3(x);
INSERT INTO t3 VALUES(2),(4);
DROP TABLE t1;
DROP TABLE t2;
CREATE TABLE t1(a INTEGER PRIMARY KEY, b INTEGER);
INSERT INTO t1(a,b) VALUES(1,0),(11,1),(12,1),(13,1),(121,12);
CREATE INDEX t1b ON t1(b);
CREATE TABLE t2(x INTEGER PRIMARY KEY);
INSERT INTO t2(x) VALUES(0),(1);
SELECT  a1, a2, a3, a4, a5
   FROM (SELECT a AS a1 FROM t1 WHERE b=0)
        JOIN (SELECT x AS x1 FROM t2)
        LEFT JOIN (SELECT a AS a2, b AS b2 FROM t1)
          ON x1 IS TRUE AND b2=a1
        JOIN (SELECT x AS x2 FROM t2)
          ON x2<=CASE WHEN x1 THEN CASE WHEN a2 THEN 1 ELSE -1 END ELSE 0 END
        LEFT JOIN (SELECT a AS a3, b AS b3 FROM t1)
          ON x2 IS TRUE AND b3=a2
        JOIN (SELECT x AS x3 FROM t2)
          ON x3<=CASE WHEN x2 THEN CASE WHEN a3 THEN 1 ELSE -1 END ELSE 0 END
        LEFT JOIN (SELECT a AS a4, b AS b4 FROM t1)
          ON x3 IS TRUE AND b4=a3
        JOIN (SELECT x AS x4 FROM t2)
          ON x4<=CASE WHEN x3 THEN CASE WHEN a4 THEN 1 ELSE -1 END ELSE 0 END
        LEFT JOIN (SELECT a AS a5, b AS b5 FROM t1)
          ON x4 IS TRUE AND b5=a4
   ORDER BY a1, a2, a3, a4, a5;
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
CREATE TABLE t1(a INT);
INSERT INTO t1(a) VALUES(1);
CREATE TABLE t2(b INT);
SELECT a, b
    FROM t1 LEFT JOIN t2 ON 0
   WHERE (b IS NOT NULL)=0;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(x);
INSERT INTO t1(x) VALUES(0),(1);
SELECT * FROM t1 LEFT JOIN (SELECT abs(1) AS y FROM t1) ON x WHERE NOT(y='a');
SELECT * FROM t1 LEFT JOIN (SELECT abs(1)+2 AS y FROM t1) ON x
   WHERE NOT(y='a');
CREATE TABLE t0(a);
CREATE VIEW v0 AS SELECT a FROM t1 LEFT JOIN t0;
INSERT INTO t1 VALUES (1);
SELECT * FROM v0 WHERE NOT(v0.a IS FALSE);
SELECT * FROM t1 LEFT JOIN t0 WHERE NOT(a IS FALSE);
SELECT NOT(v0.a IS FALSE) FROM v0;
SELECT * FROM t1 LEFT JOIN t2;
SELECT * FROM t1 LEFT JOIN t2 WHERE (b IS NOT NULL) IS NOT NULL;
SELECT (b IS NOT NULL) IS NOT NULL FROM t1 LEFT JOIN t2;
SELECT * FROM t1 LEFT JOIN t2 WHERE 
    (b IS NOT NULL AND b IS NOT NULL) IS NOT NULL;
DROP TABLE t0;
DROP TABLE t1;
CREATE TABLE t0(aa);
CREATE TABLE t1(bb);
INSERT INTO t0(aa) VALUES (1);
INSERT INTO t1(bb) VALUES (1);
SELECT 11, * FROM t1 LEFT JOIN t0 WHERE aa ISNULL;
SELECT 12, * FROM t1 LEFT JOIN t0 WHERE +aa ISNULL;
SELECT 13, * FROM t1 LEFT JOIN t0 ON aa ISNULL;
SELECT 14, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;
CREATE INDEX i0 ON t0(aa) WHERE aa ISNULL;
SELECT 21, * FROM t1 LEFT JOIN t0 WHERE aa ISNULL;
SELECT 22, * FROM t1 LEFT JOIN t0 WHERE +aa ISNULL;
SELECT 23, * FROM t1 LEFT JOIN t0 ON aa ISNULL;
SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;
CREATE TABLE a(value TEXT);
INSERT INTO a(value) SELECT value FROM json_each('["a", "b", null]');
CREATE TABLE b(value TEXT);
INSERT INTO b(value) SELECT value FROM json_each('["a", "c", null]');
SELECT a.value, b.value FROM a RIGHT JOIN b ON a.value = b.value;
SELECT a.value, b.value FROM b LEFT JOIN a ON a.value = b.value;
SELECT a.value, b.value 
      FROM json_each('["a", "c", null]') AS b
           LEFT JOIN
           json_each('["a", "b", null]') AS a ON a.value = b.value;
SELECT a.value, b.value 
      FROM json_each('["a", "b", null]') AS a
           RIGHT JOIN
           json_each('["a", "c", null]') AS b ON a.value = b.value;
SELECT a.value, b.value 
      FROM json_each('["a", "b", null]') AS a
           RIGHT JOIN
           b ON a.value = b.value;
SELECT a.value, b.value 
      FROM a
           RIGHT JOIN
           json_each('["a", "c", null]') AS b ON a.value = b.value;
INSERT INTO t2 VALUES(1);
CREATE TABLE t4(a,b);
CREATE TABLE t5(a,c);
CREATE TABLE t6(a,d);
INSERT INTO t3 VALUES(NULL);
DELETE FROM t1;
DELETE FROM t3;
DELETE FROM t1;
DELETE FROM t2;
DELETE FROM t3;
INSERT INTO t3 VALUES(5);
INSERT INTO t4 VALUES(1,4);
INSERT INTO t0 VALUES(1),(2);
INSERT INTO t1 VALUES(1);
INSERT INTO t2 VALUES(2);
CREATE VIEW v5(x,y) AS SELECT c, d FROM t3 LEFT JOIN t4 ON false;
