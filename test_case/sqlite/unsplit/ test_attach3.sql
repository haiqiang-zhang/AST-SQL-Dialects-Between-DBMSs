pragma recursive_triggers = off;
CREATE TABLE t1(a, b);
CREATE TABLE t2(c, d);
ATTACH 'test2.db' AS aux;
SELECT * FROM sqlite_master WHERE name = 't3';
SELECT * FROM aux.sqlite_master WHERE name = 't3';
INSERT INTO t3 VALUES(1, 2);
SELECT * FROM t3;
SELECT * FROM sqlite_master WHERE name = 'i1';
SELECT * FROM aux.sqlite_master WHERE name = 'i1';
SELECT * FROM aux.sqlite_master WHERE name = 'i1';
SELECT * FROM aux.sqlite_master WHERE name = 'i1';
SELECT * FROM aux.sqlite_master WHERE name = 'i1';
DROP TABLE aux.t1;
SELECT name FROM aux.sqlite_master;
DROP TABLE t2;
SELECT name FROM aux.sqlite_master;
DROP TABLE t2;
SELECT name FROM aux.sqlite_master;
CREATE VIEW aux.v1 AS SELECT * FROM t3;
SELECT * FROM aux.sqlite_master WHERE name = 'v1';
SELECT * FROM v1;
DROP VIEW aux.v1;
SELECT * FROM aux.sqlite_master WHERE name = 'v1';
DELETE FROM t3;
INSERT INTO t3 VALUES(10, 20);
SELECT * FROM t3;
SELECT * FROM aux.sqlite_master WHERE name = 'tr1';
SELECT * FROM aux.sqlite_master WHERE name = 'tr1';
CREATE TABLE main.t4(a, b, c);
CREATE TABLE aux.t4(a, b, c);
SELECT count(*) FROM temp.sqlite_master;
DROP TABLE main.t4;
SELECT count(*) FROM sqlite_temp_master;
DROP TABLE aux.t4;
SELECT count(*) FROM temp.sqlite_master;
ATTACH DATABASE ':memory:' AS notadb;
DETACH DATABASE notadb;
PRAGMA database_list;
PRAGMA database_list;
DETACH aux;
PRAGMA database_list;
PRAGMA database_list;
ATTACH DATABASE '' AS '';
PRAGMA database_list;
DETACH '';
PRAGMA database_list;
PRAGMA database_list;
PRAGMA database_list;
ATTACH DATABASE '' AS NULL;
PRAGMA database_list;
PRAGMA database_list;
DETACH NULL;
ATTACH null AS null;
PRAGMA database_list;
DETACH '';
PRAGMA database_list;
