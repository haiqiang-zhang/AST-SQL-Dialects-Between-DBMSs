--Query--
SELECT count(*) FROM t1, t2 WHERE t2.rowid = +t1.rowid
--Result--
[(0,)]
+--------------------+
--Query--
SELECT * FROM t6 WHERE 1 IN (SELECT value FROM json_each(x))
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t6      WHERE (EXISTS (SELECT 1 FROM json_each(t6.c) AS x WHERE x.value=1))
--Result--
[(1, None, '{"a":1,"b":[3,4,5],"c":{"x":4.5,"y":7.8}}')]
+--------------------+
--Query--
SELECT * FROM t      WHERE(EXISTS(SELECT 1 FROM json_each(t.json,"$.foo") j                    WHERE j.value = 'meep'))
--Result--
[]
+--------------------+
--Query--
SELECT cdid     FROM cd me   WHERE 2 > (     SELECT COUNT( * )       FROM cd rownum__emulation     WHERE       (         me.genreid IS NOT NULL           AND         rownum__emulation.genreid IS NULL       )         OR       (         me.genreid IS NOT NULL           AND         rownum__emulation.genreid IS NOT NULL           AND         rownum__emulation.genreid < me.genreid       )         OR       (         ( me.genreid = rownum__emulation.genreid OR ( me.genreid IS NULL   AND rownum__emulation.genreid IS NULL ) )           AND         rownum__emulation.cdid > me.cdid       )   )
--Result--
[(4,), (5,)]
+--------------------+
--Query--
SELECT (     SELECT COUNT(*) FROM t2      WHERE ( t1.b IS NOT NULL AND t2.bb IS NULL )         OR ( t2.bb < t1.b )         OR ( t1.b IS t2.bb AND t2.aa > t1.a )     )     FROM t1
--Result--
[(2,)]
+--------------------+
--Query--
EXPLAIN SELECT (     SELECT COUNT(*) FROM t2      WHERE ( t1.b GLOB 'a*z' AND t2.bb='xyz' )         OR ( t2.bb = t1.b )         OR ( t2.aa = t1.a )     )     FROM t1
--Result--
[(0, 'Init', 0, 48, 0, None, 0, None), (1, 'OpenRead', 0, 2, 0, '2', 0, None), (2, 'Rewind', 0, 47, 0, None, 0, None), (3, 'BeginSubrtn', 0, 2, 0, None, 0, None), (4, 'Null', 0, 3, 3, None, 0, None), (5, 'Integer', 1, 4, 0, None, 0, None), (6, 'Null', 0, 5, 5, None, 0, None), (7, 'OpenRead', 1, 3, 0, '2', 0, None), (8, 'Null', 0, 7, 0, None, 0, None), (9, 'Integer', 37, 6, 0, None, 0, None), (10, 'Column', 0, 1, 11, None, 0, None), (11, 'Function', 1, 10, 9, 'glob(2)', 0, None), (12, 'IfNot', 9, 22, 1, None, 0, None), (13, 'ReopenIdx', 2, 6, 0, 'k(2,,)', 2, None), (14, 'String8', 0, 12, 0, 'xyz', 0, None), (15, 'SeekGE', 2, 22, 12, '1', 0, None), (16, 'IdxGT', 2, 22, 12, '1', 0, None), (17, 'DeferredSeek', 2, 0, 1, '[0,1]', 0, None), (18, 'IdxRowid', 2, 8, 0, None, 0, None), (19, 'RowSetTest', 7, 21, 8, '0', 0, None), (20, 'Gosub', 6, 38, 0, None, 0, None), (21, 'Next', 2, 16, 1, None, 0, None), (22, 'ReopenIdx', 2, 6, 0, 'k(2,,)', 2, None), (23, 'Column', 0, 1, 13, None, 0, None), (24, 'IsNull', 13, 32, 0, None, 0, None), (25, 'SeekGE', 2, 32, 13, '1', 0, None), (26, 'IdxGT', 2, 32, 13, '1', 0, None), (27, 'DeferredSeek', 2, 0, 1, '[0,1]', 0, None), (28, 'IdxRowid', 2, 8, 0, None, 0, None), (29, 'RowSetTest', 7, 31, 8, '1', 0, None), (30, 'Gosub', 6, 38, 0, None, 0, None), (31, 'Next', 2, 26, 1, None, 0, None), (32, 'Rowid', 0, 14, 0, None, 0, None), (33, 'SeekRowid', 1, 37, 14, None, 0, None), (34, 'Rowid', 1, 8, 0, None, 0, None), (35, 'RowSetTest', 7, 37, 8, '2', 0, None), (36, 'Gosub', 6, 38, 0, None, 0, None), (37, 'Goto', 0, 40, 0, None, 0, None), (38, 'AggStep', 0, 0, 5, 'count(0)', 0, None), (39, 'Return', 6, 38, 0, None, 0, None), (40, 'AggFinal', 5, 0, 0, 'count(0)', 0, None), (41, 'Copy', 5, 3, 0, None, 0, None), (42, 'DecrJumpZero', 4, 43, 0, None, 0, None), (43, 'Return', 2, 4, 1, None, 0, None), (44, 'Copy', 3, 1, 0, None, 0, None), (45, 'ResultRow', 1, 1, 0, None, 0, None), (46, 'Next', 0, 3, 0, None, 1, None), (47, 'Halt', 0, 0, 0, None, 0, None), (48, 'Transaction', 0, 0, 35, '0', 1, None), (49, 'String8', 0, 10, 0, 'a*z', 0, None), (50, 'Goto', 0, 1, 0, None, 0, None)]
+--------------------+
