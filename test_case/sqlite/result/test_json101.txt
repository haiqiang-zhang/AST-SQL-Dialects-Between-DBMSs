--Query--
SELECT json_array(1,2.5,null,'hello')
--Result--
[('[1,2.5,null,"hello"]',)]
+--------------------+
--Query--
SELECT hex(json_array('String "\ Test'))
--Result--
[('5B22537472696E67205C225C5C2054657374225D',)]
+--------------------+
--Query--
SELECT json(jsonb_array(-9223372036854775808,9223372036854775807,0,1,-1,                     0.0, 1.0, -1.0, -1e99, +2e100,                     'one','two','three',                     4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,                     19, NULL, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,                     'abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ',                     'abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ',                     'abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ',                     99))
--Result--
[('[-9223372036854775808,9223372036854775807,0,1,-1,0.0,1.0,-1.0,-1.0e+99,2.0e+100,"one","two","three",4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,null,21,22,23,24,25,26,27,28,29,30,31,"abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ",99]',)]
+--------------------+
--Query--
SELECT json_object('a',1,'b',2.5,'c',null,'d','String Test')
--Result--
[('{"a":1,"b":2.5,"c":null,"d":"String Test"}',)]
+--------------------+
--Query--
SELECT json_replace('{"a":1,"b":2}','$.a','[3,4,5]')
--Result--
[('{"a":"[3,4,5]","b":2}',)]
+--------------------+
--Query--
SELECT json_type(json_set('{"a":1,"b":2}','$.b','{"x":3,"y":4}'),'$.b')
--Result--
[('text',)]
+--------------------+
--Query--
SELECT fullkey, atom, '|' FROM json_tree(json_set('{}','$.x',123,'$.x',456))
--Result--
[('$', None, '|'), ('$.x', 456, '|')]
+--------------------+
--Query--
SELECT * FROM j1 WHERE NOT json_valid(x)
--Result--
[]
+--------------------+
--Query--
SELECT * FROM j1 WHERE NOT json_valid(char(0x20,0x09,0x0a,0x0d)||x)
--Result--
[]
+--------------------+
--Query--
SELECT * FROM j1 WHERE NOT json_valid(x||char(0x20,0x09,0x0a,0x0d))
--Result--
[]
+--------------------+
--Query--
SELECT json_valid(''), json_valid(char(0x20,0x09,0x0a,0x0d))
--Result--
[(0, 0)]
+--------------------+
--Query--
SELECT x FROM j1 WHERE json_remove(x)<>x
--Result--
[]
+--------------------+
--Query--
SELECT x FROM j1 WHERE json_replace(x)<>x
--Result--
[]
+--------------------+
--Query--
SELECT x FROM j1 WHERE json_set(x)<>x
--Result--
[]
+--------------------+
--Query--
SELECT x FROM j1 WHERE json_insert(x)<>x
--Result--
[]
+--------------------+
--Query--
SELECT json_insert('{"a":1}','$.b',CAST(x'0000' AS text))
--Result--
[('{"a":1,"b":"\\u0000\\u0000"}',)]
+--------------------+
--Query--
SELECT count(*) FROM j1 WHERE json_type(x) IN ('object','array')
--Result--
[(4,)]
+--------------------+
--Query--
SELECT x FROM j1    WHERE json_extract(x,'$')<>x      AND json_type(x) IN ('object','array')
--Result--
[]
+--------------------+
--Query--
SELECT id, json_valid(json), json_type(json), '|' FROM j2 ORDER BY id
--Result--
[(1, 1, 'object', '|'), (2, 1, 'object', '|'), (3, 1, 'array', '|')]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_tree(j2.json) AS jx    WHERE fullkey!=(path || CASE WHEN typeof(key)=='integer' THEN '['||key||']'                                 ELSE '.'||key END)
--Result--
[]
+--------------------+
--Query--
SELECT j2b.rowid, jx.rowid, fullkey, path, key     FROM j2b, json_tree(j2b.json) AS jx    WHERE fullkey!=(path || CASE WHEN typeof(key)=='integer' THEN '['||key||']'                                 ELSE '.'||key END)
--Result--
[]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_each(j2.json) AS jx    WHERE fullkey!=(path || CASE WHEN typeof(key)=='integer' THEN '['||key||']'                                 ELSE '.'||key END)
--Result--
[]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_each(j2.json) AS jx    WHERE jx.json<>j2.json
--Result--
[]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_tree(j2.json) AS jx    WHERE jx.json<>j2.json
--Result--
[]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_each(j2.json) AS jx    WHERE jx.value<>jx.atom AND type NOT IN ('array','object')
--Result--
[]
+--------------------+
--Query--
SELECT j2.rowid, jx.rowid, fullkey, path, key     FROM j2, json_tree(j2.json) AS jx    WHERE jx.value<>jx.atom AND type NOT IN ('array','object')
--Result--
[]
+--------------------+
--Query--
SELECT json_insert('{}','$.a',value) FROM json_tree('[1,2,3]') WHERE atom IS NULL
--Result--
[('{"a":"[1,2,3]"}',)]
+--------------------+
--Query--
SELECT json_error_position('{"a":55,"b":72,}')
--Result--
[(0,)]
+--------------------+
--Query--
SELECT b FROM t8
--Result--
[('["abc\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\"#xyz"]',)]
+--------------------+
--Query--
SELECT a=json_extract(b,'$[0]') FROM t8
--Result--
[(1,)]
+--------------------+
--Query--
SELECT unicode(json_extract(char(0x22,228,0x22),'$'))
--Result--
[(228,)]
+--------------------+
--Query--
SELECT json_quote('abc"xyz')
--Result--
[('"abc\\"xyz"',)]
+--------------------+
--Query--
SELECT json_remove(x, '$.settings.layer2."dis.legomenon".forceDisplay')     FROM t12
--Result--
[('{"settings":{"layer2":{"hapax.legomenon":{"forceDisplay":true,"transliterate":true,"add.footnote":true,"summary.report":true},"dis.legomenon":{"transliterate":false,"add.footnote":false,"summary.report":true},"tris.legomenon":{"forceDisplay":true,"transliterate":false,"add.footnote":false,"summary.report":false}}}}',)]
+--------------------+
--Query--
SELECT json_extract(x, '$.settings.layer2."tris.legomenon"."summary.report"')     FROM t12
--Result--
[(0,)]
+--------------------+
--Query--
SELECT * FROM t1 CROSS JOIN t2    WHERE EXISTS(SELECT 1 FROM json_each(t1.json,'$.items') AS Z                  WHERE Z.value==t2.id)
--Result--
[(1, '{"items":[3,5]}', 3, '{"value":3}'), (1, '{"items":[3,5]}', 5, '{"value":5}')]
+--------------------+
--Query--
SELECT * FROM t2 CROSS JOIN t1    WHERE EXISTS(SELECT 1 FROM json_each(t1.json,'$.items') AS Z                  WHERE Z.value==t2.id)
--Result--
[(3, '{"value":3}', 1, '{"items":[3,5]}'), (5, '{"value":5}', 1, '{"items":[3,5]}')]
+--------------------+
--Query--
SELECT fullkey FROM json_each('123')
--Result--
[('$',)]
+--------------------+
--Query--
SELECT * FROM JSON_EACH('{"a":1, "b":2}')
--Result--
[('a', 1, 'integer', 1, 1, None, '$.a', '$'), ('b', 2, 'integer', 2, 5, None, '$.b', '$')]
+--------------------+
--Query--
SELECT xyz.* FROM JSON_EACH('{"a":1, "b":2}') AS xyz
--Result--
[('a', 1, 'integer', 1, 1, None, '$.a', '$'), ('b', 2, 'integer', 2, 5, None, '$.b', '$')]
+--------------------+
--Query--
SELECT * FROM (JSON_EACH('{"a":1, "b":2}'))
--Result--
[('a', 1, 'integer', 1, 1, None, '$.a', '$'), ('b', 2, 'integer', 2, 5, None, '$.b', '$')]
+--------------------+
--Query--
SELECT xyz.* FROM (JSON_EACH('{"a":1, "b":2}')) AS xyz
--Result--
[('a', 1, 'integer', 1, 1, None, '$.a', '$'), ('b', 2, 'integer', 2, 5, None, '$.b', '$')]
+--------------------+
--Query--
SELECT length(json_extract('"abc\uD834\uDD1Exyz"','$'))
--Result--
[(7,)]
+--------------------+
--Query--
SELECT * FROM t1 LEFT JOIN t2 ON (SELECT b FROM json_each ORDER BY 1)
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[]
+--------------------+
--Query--
SELECT json_object('a',2e370,'b',-3e380)->>'a'
--Result--
[(inf,)]
+--------------------+
--Query--
SELECT json_object('a',2e370,'b',-3e380)->>'b'
--Result--
[(-inf,)]
+--------------------+
--Query--
SELECT NULL->0
--Result--
[(None,)]
+--------------------+
--Query--
SELECT NULL->>0
--Result--
[(None,)]
+--------------------+
--Query--
SELECT '{a:5}'->NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT '{a:5}'->>NULL
--Result--
[(None,)]
+--------------------+
--Query--
SELECT json_patch(NULL,'{a:5}')
--Result--
[(None,)]
+--------------------+
--Query--
SELECT json_set(NULL,'$.a',123)
--Result--
[(None,)]
+--------------------+
--Query--
SELECT count(*) FROM json_each(NULL)
--Result--
[(0,)]
+--------------------+
--Query--
SELECT count(*) FROM json_tree(NULL)
--Result--
[(0,)]
+--------------------+
--Query--
WITH c(x) AS (VALUES(1),(2.0),(NULL),('three'))   SELECT json_group_array(x) FROM c
--Result--
[('[1,2.0,null,"three"]',)]
+--------------------+
--Query--
WITH c(x,y) AS (VALUES('a',1),('b',2.0),('c',NULL),(NULL,'three'),('e','four'))   SELECT json_group_object(x,y) FROM c
--Result--
[('{"a":1,"b":2.0,"c":null,:"three","e":"four"}',)]
+--------------------+
--Query--
SELECT j, j->>0, j->>1     FROM (SELECT json_set(json_set('[]','$[#]',0), '$[#]',1) AS j)
--Result--
[('[0,1]', 0, 1)]
+--------------------+
--Query--
SELECT j, j->>0, j->>1     FROM (SELECT json_set('[]','$[#]',0,'$[#]',1) AS j)
--Result--
[('[0,1]', 0, 1)]
+--------------------+
