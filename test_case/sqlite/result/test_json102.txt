--Query--
SELECT json_object('ex','[52,3.14159]')
--Result--
[('{"ex":"[52,3.14159]"}',)]
+--------------------+
--Query--
SELECT json(jsonb_object('ex','[52,3.14159]'))
--Result--
[('{"ex":"[52,3.14159]"}',)]
+--------------------+
--Query--
SELECT json_array(1,2,'3',4)
--Result--
[('[1,2,"3",4]',)]
+--------------------+
--Query--
SELECT json_array_length('[1,2,3,4]')
--Result--
[(4,)]
+--------------------+
--Query--
SELECT json_extract('{"a":2,"c":[4,5,{"f":7}]}', '$')
--Result--
[('{"a":2,"c":[4,5,{"f":7}]}',)]
+--------------------+
--Query--
SELECT jsonb_extract('{"a":2,"c":[4,5,{"f":7}]}', '$.c[2].f')
--Result--
[(7,)]
+--------------------+
--Query--
SELECT json_insert('{"a":2,"c":4}', '$.a', 99)
--Result--
[('{"a":2,"c":4}',)]
+--------------------+
--Query--
SELECT json_replace('{"a":2,"c":4}', '$.a', 99)
--Result--
[('{"a":99,"c":4}',)]
+--------------------+
--Query--
SELECT json_set('{"a":2,"c":4}', '$.a', 99)
--Result--
[('{"a":99,"c":4}',)]
+--------------------+
--Query--
SELECT json_remove('[0,1,2,3,4]','$[2]')
--Result--
[('[0,1,3,4]',)]
+--------------------+
--Query--
SELECT json_type('{"a":[2,3.5,true,false,null,"x"]}')
--Result--
[('object',)]
+--------------------+
--Query--
SELECT json_valid(char(123)||'"x":35'||char(125))
--Result--
[(1,)]
+--------------------+
--Query--
SELECT DISTINCT user.name     FROM user, json_each(user.phone)    WHERE json_each.value LIKE '704-%'    ORDER BY 1
--Result--
[('Cindy',), ('Dave',)]
+--------------------+
--Query--
SELECT name, substr(phone,1,5) FROM user ORDER BY name
--Result--
[('Alice', '["919'), ('Bob', '201-5'), ('Cindy', '704-5'), ('Dave', '["336')]
+--------------------+
--Query--
SELECT big.rowid, fullkey, value     FROM big, json_tree(big.json)    WHERE json_tree.type NOT IN ('object','array')    ORDER BY +big.rowid, +json_tree.id
--Result--
[(1, '$.id', 123), (1, '$.stuff[0]', 1), (1, '$.stuff[1]', 2), (1, '$.stuff[2]', 3), (1, '$.stuff[3]', 4), (1, '$.partlist[0].uuid', 'bb108722-572e-11e5-9320-7f3b63a4ca74'), (1, '$.partlist[1].uuid', 'c690dc14-572e-11e5-95f9-dfc8861fd535'), (1, '$.partlist[2].subassembly[0].uuid', '6fa5181e-5721-11e5-a04e-57f3d7b32808'), (2, '$.id', 456), (2, '$.stuff[0]', 'hello'), (2, '$.stuff[1]', 'world'), (2, '$.stuff[2]', 'xyzzy'), (2, '$.partlist[0].uuid', 0), (2, '$.partlist[1].uuid', 'c690dc14-572e-11e5-95f9-dfc8861fd535')]
+--------------------+
--Query--
SELECT DISTINCT json_extract(big.json,'$.id')     FROM big, json_tree(big.json,'$.partlist')    WHERE json_tree.key='uuid'      AND json_tree.value='6fa5181e-5721-11e5-a04e-57f3d7b32808'
--Result--
[(123,)]
+--------------------+
--Query--
SELECT json_valid('{"x":01}'), NOT json_error_position('{"x":01}')
--Result--
[(0, 0)]
+--------------------+
--Query--
WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<0x20)   SELECT x FROM c WHERE json_valid(printf('{"a":"x%sz"}', char(x))) ORDER BY x
--Result--
[(32,)]
+--------------------+
--Query--
WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<0x1f)   SELECT sum(json_valid(json_quote('a'||char(x)||'z'))) FROM c ORDER BY x
--Result--
[(31,)]
+--------------------+
--Query--
SELECT     id,     x->'a' AS '->',     CASE WHEN subtype(x->'a') THEN 'json' ELSE typeof(x->'a') END AS 'type',     x->>'a' AS '->>',     CASE WHEN subtype(x->>'a') THEN 'json' ELSE typeof(x->>'a') END AS 'type',     json_extract(x,'$.a') AS 'json_extract',     CASE WHEN subtype(json_extract(x,'$.a'))          THEN 'json' ELSE typeof(json_extract(x,'$.a')) END AS 'type'     FROM t1 ORDER BY id
--Result--
[(1, 'null', 'json', None, 'null', None, 'null'), (2, '123', 'json', 123, 'integer', 123, 'integer'), (3, '4.5', 'json', 4.5, 'real', 4.5, 'real'), (4, '"six"', 'json', 'six', 'text', 'six', 'text'), (5, '[7,8]', 'json', '[7,8]', 'text', '[7,8]', 'json'), (6, '{"b":9}', 'json', '{"b":9}', 'text', '{"b":9}', 'json'), (7, None, 'null', None, 'null', None, 'null')]
+--------------------+
--Query--
WITH c(y) AS (VALUES(0),(1),(2),(3),(4),(5),(6))   SELECT     y,     x->y AS '->',     CASE WHEN subtype(x->y) THEN 'json' ELSE typeof(x->y) END AS 'type',     x->>y AS '->>',     CASE WHEN subtype(x->>y) THEN 'json' ELSE typeof(x->>y) END AS 'type',     json_extract(x,format('$[%d]',y)) AS 'json_extract',     CASE WHEN subtype(json_extract(x,format('$[%d]',y)))       THEN 'json' ELSE typeof(json_extract(x,format('$[%d]',y))) END AS 'type'   FROM c, t1 ORDER BY y
--Result--
[(0, 'null', 'json', None, 'null', None, 'null'), (1, '123', 'json', 123, 'integer', 123, 'integer'), (2, '4.5', 'json', 4.5, 'real', 4.5, 'real'), (3, '"six"', 'json', 'six', 'text', 'six', 'text'), (4, '[7,8]', 'json', '[7,8]', 'text', '[7,8]', 'json'), (5, '{"b":9}', 'json', '{"b":9}', 'text', '{"b":9}', 'json'), (6, None, 'null', None, 'null', None, 'null')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, '[null,123,4.5,"six",[7,8],{"b":9}]')]
+--------------------+
--Query--
SELECT * FROM t1
--Result--
[(1, '[null,123,4.5,"six",[7,8],{"b":9}]')]
+--------------------+
