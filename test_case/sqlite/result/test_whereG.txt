--Query--
EXPLAIN QUERY PLAN    SELECT DISTINCT aname     FROM album, composer, track    WHERE unlikely(cname LIKE '%bach%')      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[(6, 0, 0, 'SCAN composer'), (11, 0, 0, 'SEARCH track USING INDEX track_i1 (cid=?)'), (16, 0, 0, 'SEARCH album USING INTEGER PRIMARY KEY (rowid=?)'), (26, 0, 0, 'USE TEMP B-TREE FOR DISTINCT')]
+--------------------+
--Query--
SELECT DISTINCT aname     FROM album, composer, track    WHERE unlikely(cname LIKE '%bach%')      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[('Mass in B Minor, BWV 232',)]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT DISTINCT aname     FROM album, composer, track    WHERE likelihood(cname LIKE '%bach%', 0.5)      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[(5, 0, 0, 'SCAN track'), (7, 0, 0, 'SEARCH composer USING INTEGER PRIMARY KEY (rowid=?)'), (13, 0, 0, 'SEARCH album USING INTEGER PRIMARY KEY (rowid=?)'), (22, 0, 0, 'USE TEMP B-TREE FOR DISTINCT')]
+--------------------+
--Query--
SELECT DISTINCT aname     FROM album, composer, track    WHERE likelihood(cname LIKE '%bach%', 0.5)      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[('Mass in B Minor, BWV 232',)]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT DISTINCT aname     FROM album, composer, track    WHERE cname LIKE '%bach%'      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[(5, 0, 0, 'SCAN track'), (7, 0, 0, 'SEARCH album USING INTEGER PRIMARY KEY (rowid=?)'), (10, 0, 0, 'SEARCH composer USING INTEGER PRIMARY KEY (rowid=?)'), (22, 0, 0, 'USE TEMP B-TREE FOR DISTINCT')]
+--------------------+
--Query--
SELECT DISTINCT aname     FROM album, composer, track    WHERE cname LIKE '%bach%'      AND composer.cid=track.cid      AND album.aid=track.aid
--Result--
[('Mass in B Minor, BWV 232',)]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT DISTINCT aname     FROM album, composer, track    WHERE cname LIKE '%bach%'      AND unlikely(composer.cid=track.cid)      AND unlikely(album.aid=track.aid)
--Result--
[(5, 0, 0, 'SCAN track'), (7, 0, 0, 'SEARCH album USING INTEGER PRIMARY KEY (rowid=?)'), (10, 0, 0, 'SEARCH composer USING INTEGER PRIMARY KEY (rowid=?)'), (22, 0, 0, 'USE TEMP B-TREE FOR DISTINCT')]
+--------------------+
--Query--
SELECT DISTINCT aname     FROM album, composer, track    WHERE cname LIKE '%bach%'      AND unlikely(composer.cid=track.cid)      AND unlikely(album.aid=track.aid)
--Result--
[('Mass in B Minor, BWV 232',)]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT * FROM a, b WHERE b1=a1 AND a2=5
--Result--
[(4, 0, 0, 'SCAN a'), (8, 0, 0, 'SEARCH b USING INDEX sqlite_autoindex_b_1 (b1=?)')]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT * FROM a, b WHERE a1=b1 AND a2=5
--Result--
[(4, 0, 0, 'SCAN a'), (8, 0, 0, 'SEARCH b USING INDEX sqlite_autoindex_b_1 (b1=?)')]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT * FROM a, b WHERE a2=5 AND b1=a1
--Result--
[(4, 0, 0, 'SCAN a'), (8, 0, 0, 'SEARCH b USING INDEX sqlite_autoindex_b_1 (b1=?)')]
+--------------------+
--Query--
EXPLAIN QUERY PLAN    SELECT * FROM a, b WHERE a2=5 AND a1=b1
--Result--
[(4, 0, 0, 'SCAN a'), (8, 0, 0, 'SEARCH b USING INDEX sqlite_autoindex_b_1 (b1=?)')]
+--------------------+
--Query--
SELECT DISTINCT x    FROM (SELECT x FROM t4 GROUP BY x)    WHERE x='right'    ORDER BY x
--Result--
[('right',)]
+--------------------+
--Query--
ANALYZE
--Result--
[]
+--------------------+
--Query--
SELECT count(*) FROM t1 LEFT JOIN t2 ON t1.i=t2.i AND bool='T'
--Result--
[(4,)]
+--------------------+
--Query--
SELECT count(*) FROM t1 LEFT JOIN t2 ON likely(t1.i=t2.i) AND bool='T'
--Result--
[(4,)]
+--------------------+
--Query--
SELECT likely(a), x FROM t1, t2 ORDER BY 1, 2
--Result--
[(1, 3), (1, 4), (9, 3), (9, 4)]
+--------------------+
--Query--
SELECT unlikely(a), x FROM t1, t2 ORDER BY 1, 2
--Result--
[(1, 3), (1, 4), (9, 3), (9, 4)]
+--------------------+
--Query--
SELECT likelihood(a,0.5), x FROM t1, t2 ORDER BY 1, 2
--Result--
[(1, 3), (1, 4), (9, 3), (9, 4)]
+--------------------+
--Query--
SELECT coalesce(a,a), x FROM t1, t2 ORDER BY 1, 2
--Result--
[(1, 3), (1, 4), (9, 3), (9, 4)]
+--------------------+
--Query--
SELECT LIKELY(t0.rowid) <= '0' FROM t0
--Result--
[(1,)]
+--------------------+
--Query--
SELECT * FROM t0 WHERE LIKELY(t0.rowid) <= '0'
--Result--
[('a',)]
+--------------------+
--Query--
SELECT (t0.rowid) <= '0' FROM t0
--Result--
[(0,)]
+--------------------+
--Query--
SELECT * FROM t0 WHERE (t0.rowid) <= '0'
--Result--
[]
+--------------------+
--Query--
SELECT unlikely(t0.rowid) <= '0', likelihood(t0.rowid,0.5) <= '0' FROM t0
--Result--
[(1, 1)]
+--------------------+
--Query--
SELECT * FROM t0 WHERE unlikely(t0.rowid) <= '0'
--Result--
[('a',)]
+--------------------+
--Query--
SELECT * FROM t0 WHERE likelihood(t0.rowid, 0.5) <= '0'
--Result--
[('a',)]
+--------------------+
--Query--
SELECT unlikely(t0.rowid <= '0'),          likely(t0.rowid <= '0'),          likelihood(t0.rowid <= '0',0.5)     FROM t0
--Result--
[(0, 0, 0)]
+--------------------+
--Query--
SELECT * FROM t0 WHERE unlikely(t0.rowid <= '0')
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t0 WHERE likelihood(t0.rowid <= '0', 0.5)
--Result--
[]
+--------------------+
--Query--
SELECT * FROM t1 JOIN t2 ON x=y AND y='AAA'
--Result--
[]
+--------------------+
--Query--
SELECT typeof(likely(a)) FROM t1 NOT INDEXED
--Result--
[('text',), ('null',), ('text',), ('null',), ('text',), ('integer',)]
+--------------------+
