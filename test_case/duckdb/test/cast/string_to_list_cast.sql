PRAGMA enable_verification;
CREATE TABLE stringList (col1 VARCHAR);
INSERT INTO stringList VALUES ('["hello","world","!"]'), ('["Amazing","text"]'), ('[Hello World!]');;
CREATE TABLE nestedStrings (col1 VARCHAR);
INSERT INTO nestedStrings VALUES ('[["hello"], ["world"],["!"]]'), ('[["Amazing"],["text"]]'), ('[[Hello World!]]');;
CREATE TABLE superNestedStrings (col1 VARCHAR);
INSERT INTO superNestedStrings VALUES ('[[[[["hello"]]], [[["world"],["!"]]]]]'), ('[[[[["Amazing"]],[["text"]]]]]'), ('[[[[[Hello World!]]]]]');;
CREATE TABLE tbl (col1 VARCHAR);;
INSERT INTO tbl VALUES ('[1,2,2]'), ('[345,67865,44,4]'), ('[5,6,7]');;
CREATE TABLE doubleNested (col1 VARCHAR);;
INSERT INTO doubleNested VALUES ('[[1,2],[2]]'), ('[[345],[67865,44,4]]'), ('[[5],[6,7]]');;
CREATE TABLE tripleNested (col1 VARCHAR);
INSERT INTO tripleNested VALUES ('[[[1,2],[3]]]'), ('[[[4]]]');;
CREATE TABLE crazyNested (col1 VARCHAR);
INSERT INTO crazyNested VALUES ('[[[[[[1]],[[3,4,9]]],[[[0,1]]]]]]'), ('[[[[[[4]]]]]]');;
CREATE TABLE null_tbl(col1 VARCHAR);;
INSERT INTO null_tbl VALUES(NULL), (NULL), ('[NULL]');;
CREATE TABLE try_cast_tbl (col1 VARCHAR);;
INSERT INTO try_cast_tbl VALUES ('[1,2,X,2]'), ('[hello DuckDB]'), ('[345,oops,44,4.0]'), ('[12345678901]'), ('[5,6,7]'), ('[3 0, 1]');;
SELECT CAST('{[3]}' AS INT[]);;
SELECT CAST('Hello World' AS INT[]);;
SELECT CAST('[3]]' AS INT[]);;
SELECT CAST('[3],[[]' AS INT[][]);;
SELECT CAST('[3], [[1]]' AS INT[][]);;
SELECT CAST('[[3 1]]' AS INT[][]);;
SELECT CAST('[[3,, 1]]' AS INT[][]);;
SELECT CAST('[[3], [[5], [4]]' AS INT[][]);;
SELECT CAST('][3]' AS INT[]);;
SELECT CAST('[[[[[]][3][[]][][[[][]]]]]' AS INT[][][][]);;
CREATE TABLE struct_tbl1(col VARCHAR);;
INSERT INTO struct_tbl1 VALUES('[{a: "hii"}, {a: "hellooo"}]');;
CREATE TABLE struct_tbl2(col VARCHAR);;
INSERT INTO struct_tbl2 VALUES('[{a: 7, b:"Duck"}, {a: 7000, b: "🦆🦆🦆🦆🦆🦆"}]');;
CREATE TABLE int_list(col INT[]);;
COPY (SELECT [1,2,3]) TO '__TEST_DIR__/int_list.csv';;
COPY int_list FROM '__TEST_DIR__/int_list.csv';;
CREATE TABLE assorted_lists(col1 INT[], col2 VARCHAR[], col3 DATE[]);;
COPY (SELECT [8,7,6], '[hello, Duck''DB]', '[2022-12-2, 1929-01-25]') TO '__TEST_DIR__/assorted_lists.csv' (Header 0);;
COPY assorted_lists FROM '__TEST_DIR__/assorted_lists.csv';;
select '[{"bar":"\\""}]'::VARCHAR[];;
SELECT '[12,13,14]'::INT[];;
SELECT '["hello", "world", "!"]'::VARCHAR[];;
SELECT CAST('[Hello World!]' AS VARCHAR[]);;
SELECT CAST('[[Hello World!], hello, universe]' AS VARCHAR[]);;
SELECT '[Cast like this]':: VARCHAR[];;
select UNNEST('[NULL, , NULL]'::varchar[]);;
select UNNEST('[NULL,, NULL]'::varchar[]);;
select UNNEST('[NULL,   , NULL]'::varchar[]);;
SELECT UNNEST('[NULL, NULL , ]'::varchar[]);;
SELECT UNNEST('[NULL, NULL ,]'::varchar[]);;
SELECT UNNEST('[NULL, NULL,]'::varchar[]);;
SELECT CAST('[ [12,13,14], [8, 9], [4], [2, 1, 0] ]' AS INT[][]);;
SELECT CAST('[ [[12,13,14], [8, 9]], [[4]], [[2, 1, 0], [99]] ]' AS INT[][][]);;
SELECT CAST('[ [12,13,14], [8, 9], [4], [2,  1,  0] ]' AS VARCHAR[]);;
SELECT CAST('[[ [🦆, 🦆, 🦆]], [[duck, db, 🦆], [🦆]], [[🦆, duck, db]]]' AS VARCHAR[][][]);;
SELECT col1::VARCHAR[] FROM stringList;;
SELECT col1::VARCHAR[][] FROM nestedStrings;;
SELECT col1::VARCHAR[][][][][] FROM superNestedStrings;;
SELECT col1::INT[] FROM tbl;;
SELECT col1::INT[][] FROM doubleNested;;
SELECT col1::INT[][][] FROM tripleNested;;
SELECT col1::INT[][][][][][] FROM crazyNested;;
SELECT CAST('[''hello'',''world'', ''!'']' AS VARCHAR[]);;
SELECT CAST('[''''hello'''',''''world'''', ''''!'''']' AS VARCHAR[]);;
SELECT CAST('[[ [''🦆, 🦆, 🦆'']], [[duck, db, ''🦆''] ]]' AS VARCHAR[][][]);;
SELECT CAST('["can''t", "you''re", "i''m"]' AS VARCHAR[]);;
SELECT CAST('[can''t, you''re, i''m]' AS VARCHAR[]);;
SELECT CAST('["]", "hello", "world"]' AS VARCHAR[]);;
SELECT CAST('['']'', "hello", "world"]' AS VARCHAR[]);;
SELECT CAST('[ [12,     13,14], [8, 9         ], [ 4    ], [    2, 1,     0] ]  ' AS INT[][]);;
SELECT CAST('[          [ [12,     13,14], [8, 9         ]  ],[[ 4    ]   ],        [[    2, 1,     0 ]         ] ]  ' AS INT[][][]);;
SELECT CAST('["   hello","          ''  world", "!         "]' AS VARCHAR[]);;
SELECT CAST('[   hello     ,   world      , !         ]' AS VARCHAR[]);;
SELECT CAST('[    [ "   hello"]  ,["            world"        ],[ "!        "           ]      ]' AS VARCHAR[][]);;
SELECT '[]'::VARCHAR[];;
SELECT '[]'::INT[];;
SELECT '[]'::INT[][][][];;
SELECT '[[1, 2, 3], [], [	], [  ]]'::INT[][];;
SELECT '[[1, 2, 3], [], NULL, [NULL], [4, NULL]]'::INT[][];;
SELECT col1::INT[] FROM null_tbl;;
SELECT CAST(NULL AS INT[]);;
SELECT CAST('[NULL]' AS INT[]);;
SELECT CAST('[NULL]' AS INT[][]);;
SELECT CAST('[[12,13,14], [8, 9], NULL, [2, 1]]' AS INT[][]);;
SELECT CAST('[[12,13,14], [8, 9], [2, NULL, 1]]' AS INT[][]);;
SELECT CAST('[ [[12,13,14], NULL], [[4]], NULL, [[2, NULL, 1, 0], [99]] ]' AS INT[][][]);;
SELECT TRY_CAST('Hello World' AS INT[]);;
SELECT TRY_CAST(col1 AS INT[]) FROM try_cast_tbl;;
SELECT * FROM tbl WHERE cast(col1 as int[]) = [1, 2, 2];;
SELECT col1 FROM tbl WHERE LEN(cast(col1 as int[])) < 4;;
SELECT cast(col1 as int[]) FROM tbl WHERE LEN(cast(col1 as int[])) < 4;;
SELECT col::STRUCT(a VARCHAR)[] FROM struct_tbl1;;
SELECT CAST('[ [{a:[12,13,14], b:"🦆"}], [{a:[12,13,14], b:"🦆", c:100}] ]' AS STRUCT(a INT[], b VARCHAR, c FLOAT)[][]);;
SELECT CAST('[{a:[12,13,14], b:"🦆", c:{a:[[a], [b, c]], b:[123]}}]' AS STRUCT(a INT[], b VARCHAR, c STRUCT(a VARCHAR[][], b INT[]))[]);;
SELECT '[{a: hii}, {a: "{" }]'::STRUCT(a VARCHAR)[] FROM struct_tbl1;;
SELECT col::STRUCT(a INT, b VARCHAR)[] FROM struct_tbl2;;
SELECT col FROM int_list;;
SELECT * FROM assorted_lists;;
select '[{"bar":"\""}]'::VARCHAR[];;
select '[{"bar":"\\\""}]'::VARCHAR[];;
select '[{"bar":"\"\"\\\"\"\"\\"}]'::VARCHAR[];;
