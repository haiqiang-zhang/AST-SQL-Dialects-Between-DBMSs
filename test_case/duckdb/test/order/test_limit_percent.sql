SELECT * FROM test LIMIT RANDOM() %;
SELECT * FROM test LIMIT 30% OFFSET RANDOM() / 10.0;
SELECT b FROM test LIMIT 0%;
CREATE TABLE test2 (a STRING);
INSERT INTO test2 VALUES ('first'), ('second'), ('third'), ('4th'), ('5th');
PREPARE v1 AS SELECT * FROM test2 LIMIT 40%;
CREATE VIEW v3 AS SELECT i % 5 g, LIST(CASE WHEN i=6 or i=8 then null else i end) l FROM RANGE(20) tbl(i) group by g;
CREATE TABLE struct_data (g INTEGER, e INTEGER);
INSERT INTO struct_data VALUES (1, 1), (1, 2), (2, 3), (2, 4), (2, 5), (3, 6), (5, NULL);
CREATE TABLE integers(i INTEGER);
INSERT INTO integers VALUES (1), (2), (3), (4), (5);
SELECT a FROM test LIMIT 20 %;
SELECT a FROM test LIMIT 40 PERCENT;
SELECT a FROM test LIMIT 35%;
SELECT a FROM test LIMIT 79.9%;
SELECT a FROM test LIMIT 80.1%;
SELECT a FROM test LIMIT 100 PERCENT;
SELECT a FROM test LIMIT (30-10) %;
SELECT a FROM test LIMIT 50% OFFSET 2;
SELECT * FROM range(10) LIMIT 50% OFFSET 2;
SELECT * FROM range(10000) LIMIT 0.1% OFFSET 8000;
SELECT * FROM range(10000) LIMIT 0.1% OFFSET 9999;
SELECT a FROM test LIMIT (SELECT COUNT(*) FROM test) % OFFSET 1;
SELECT a FROM test LIMIT 50% OFFSET (((SELECT MIN(b) FROM test)-1)/10);
SELECT b FROM test LIMIT 70% OFFSET (((SELECT MIN(test.a) FROM test)-1)/10);
EXECUTE v1;
SELECT g, 5=ANY(l) FROM v3 ORDER BY g LIMIT 80%;
SELECT g, 3>ANY(l) FROM v3 ORDER BY g LIMIT 50%;
SELECT STRUCT_PACK(a := 42, b := 43);
SELECT e, STRUCT_PACK(e) FROM struct_data ORDER BY e LIMIT 60%;
SELECT * FROM integers as int LIMIT (SELECT max(integers.i) FROM integers where i > 5) %;
select 1 union all select 2 union all select 3 union all select 4 limit 50%;
