--Query--
SELECT COUNT(*) OVER () FROM tenk1
--Result--
[(10,), (10,), (10,), (10,), (10,), (10,), (10,), (10,), (10,), (10,)]
+--------------------+
--Query--
SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10 order by ten, unique2
--Result--
[(0, 0, 0), (0, 0, 0), (2, 0, 2), (3, 1, 3), (4, 1, 1), (5, 1, 1), (3, 3, 3), (0, 4, 0), (1, 7, 1), (1, 9, 1)]
+--------------------+
--Query--
SELECT row_number() OVER (ORDER BY unique2) rn FROM tenk1 WHERE unique2 < 10 ORDER BY rn
--Result--
[(1,), (2,), (3,), (4,), (5,), (6,), (7,), (8,), (9,), (10,)]
+--------------------+
--Query--
SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten
--Result--
[(1, 0, 0), (1, 0, 0), (3, 4, 0), (1, 1, 1), (1, 1, 1), (3, 7, 1), (4, 9, 1), (1, 0, 2), (1, 1, 3), (2, 3, 3)]
+--------------------+
--Query--
SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten) FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten
--Result--
[(1,), (1,), (2,), (1,), (1,), (2,), (3,), (1,), (1,), (2,)]
+--------------------+
--Query--
SELECT first_value(ten) OVER (PARTITION BY four ORDER BY ten) FROM tenk1 WHERE unique2 < 10 order by four, ten
--Result--
[(0,), (0,), (0,), (1,), (1,), (1,), (1,), (0,), (1,), (1,)]
+--------------------+
--Query--
SELECT cast(percent_rank() OVER (PARTITION BY four ORDER BY ten)*10 as INTEGER) FROM tenk1 ORDER BY four, ten
--Result--
[(0,), (0,), (10,), (0,), (0,), (7,), (10,), (0,), (0,), (10,)]
+--------------------+
--Query--
SELECT cast(cume_dist() OVER (PARTITION BY four ORDER BY ten)*10 as integer) FROM tenk1 WHERE  unique2 < 10 order by four, ten
--Result--
[(7,), (7,), (10,), (5,), (5,), (8,), (10,), (10,), (5,), (10,)]
+--------------------+
--Query--
SELECT ntile(2) OVER (ORDER BY ten, four) nn FROM tenk1 ORDER BY ten, four, nn
--Result--
[(1,), (1,), (1,), (1,), (1,), (2,), (2,), (2,), (2,), (2,)]
+--------------------+
--Query--
SELECT ntile(3) OVER (ORDER BY ten, four) nn FROM tenk1 ORDER BY ten, four, nn
--Result--
[(1,), (1,), (1,), (1,), (2,), (2,), (2,), (3,), (3,), (3,)]
+--------------------+
--Query--
SELECT ntile(4) OVER (ORDER BY ten, four) nn FROM tenk1 ORDER BY ten, four, nn
--Result--
[(1,), (1,), (1,), (2,), (2,), (2,), (3,), (3,), (4,), (4,)]
+--------------------+
--Query--
SELECT ntile(5) OVER (ORDER BY ten, four) nn FROM tenk1 ORDER BY ten, four, nn
--Result--
[(1,), (1,), (2,), (2,), (3,), (3,), (4,), (4,), (5,), (5,)]
+--------------------+
--Query--
SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(None,), (0,), (0,), (None,), (1,), (1,), (7,), (None,), (None,), (1,)]
+--------------------+
--Query--
SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (4,), (None,), (1,), (7,), (9,), (None,), (None,), (3,), (None,)]
+--------------------+
--Query--
SELECT lag(ten, four) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (0,), (4,), (None,), (1,), (1,), (7,), (None,), (None,), (None,)]
+--------------------+
--Query--
SELECT lag(ten, four, 0) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (0,), (4,), (0,), (1,), (1,), (7,), (0,), (0,), (0,)]
+--------------------+
--Query--
SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (4,), (None,), (1,), (7,), (9,), (None,), (None,), (3,), (None,)]
+--------------------+
--Query--
SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (8,), (None,), (2,), (14,), (18,), (None,), (None,), (6,), (None,)]
+--------------------+
--Query--
SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten) lt FROM tenk1 order by four, ten, lt
--Result--
[(0,), (8,), (-1,), (2,), (14,), (18,), (-1,), (-1,), (6,), (-1,)]
+--------------------+
--Query--
SELECT COUNT(*) OVER w c, SUM(four) OVER w s, cast(AVG(ten) OVER w * 10 as integer) a, RANK() over w r, DENSE_RANK() over w dr, ROW_NUMBER() OVER w rn FROM tenk1 WINDOW w AS () ORDER BY rn
--Result--
[(10, 12, 26, 1, 1, 1), (10, 12, 26, 1, 1, 2), (10, 12, 26, 1, 1, 3), (10, 12, 26, 1, 1, 4), (10, 12, 26, 1, 1, 5), (10, 12, 26, 1, 1, 6), (10, 12, 26, 1, 1, 7), (10, 12, 26, 1, 1, 8), (10, 12, 26, 1, 1, 9), (10, 12, 26, 1, 1, 10)]
+--------------------+
--Query--
SELECT COUNT(*) OVER w c, SUM(four) OVER w s, cast(AVG(ten) OVER w * 10 as integer) a, RANK() over w r, DENSE_RANK() over w dr, ROW_NUMBER() OVER w rn FROM tenk1 WINDOW w AS (rows between 1 preceding and 1 following) ORDER BY rn
--Result--
[(2, 3, 5, 1, 1, 1), (3, 3, 3, 1, 1, 2), (3, 5, 3, 1, 1, 3), (3, 2, 13, 1, 1, 4), (3, 3, 43, 1, 1, 5), (3, 2, 67, 1, 1, 6), (3, 3, 57, 1, 1, 7), (3, 3, 30, 1, 1, 8), (3, 5, 17, 1, 1, 9), (2, 4, 20, 1, 1, 10)]
+--------------------+
