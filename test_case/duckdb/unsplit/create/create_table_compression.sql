PRAGMA enable_verification;
CREATE TABLE T (a INTEGER USING COMPRESSION RLE);
DROP TABLE T;
CREATE TABLE T (a INTEGER USING COMPRESSION 'bla');
CREATE TABLE T (a INTEGER USING COMPRESSION );
CREATE TABLE T (a INTEGER NOT NULL USING COMPRESSION );
CREATE TABLE T (a INTEGER USING COMPRESSION bla);
CREATE TABLE T (a INTEGER NOT NULL USING COMPRESSION RLE);
DROP TABLE T;
CREATE TABLE T (a INTEGER USING COMPRESSION RLE, b VARCHAR USING COMPRESSION RLE );
DROP TABLE T;
CREATE TABLE T (a INTEGER USING COMPRESSION RLE, b VARCHAR );
DROP TABLE T;
CREATE TABLE T (a INTEGER USING COMPRESSION RLE, b INTEGER USING COMPRESSION BITPACKING, C INTEGER USING COMPRESSION UNCOMPRESSED);
INSERT INTO T VALUES (1,1,1), (1,1,1), (1,1,1), (2,2,2), (2,2,2), (3,3,3);
CHECKPOINT;
ALTER TABLE T RENAME COLUMN a TO a_1;
ALTER TABLE T RENAME COLUMN b TO b_1;
ALTER TABLE T RENAME COLUMN c TO c_1;
ALTER TABLE T RENAME TO T_1;
ALTER TABLE T_1 DROP COLUMN c_1;
ALTER TABLE T_1 DROP COLUMN b_1;
ALTER TABLE T_1 ADD COLUMN b INTEGER DEFAULT 2;
CHECKPOINT;
SELECT * FROM T;
SELECT * FROM T;
SELECT compression FROM pragma_storage_info('T') WHERE segment_type ILIKE 'INTEGER' LIMIT 3;
SELECT * FROM T;
SELECT compression FROM pragma_storage_info('T') WHERE segment_type ILIKE 'INTEGER' LIMIT 3;
SELECT * FROM T_1;
SELECT compression FROM pragma_storage_info('T_1') WHERE segment_type ILIKE 'INTEGER' LIMIT 3;
SELECT * FROM T_1;
SELECT compression FROM pragma_storage_info('T_1') WHERE segment_type ILIKE 'INTEGER' LIMIT 2;
SELECT * FROM T_1;
SELECT compression FROM pragma_storage_info('T_1') WHERE segment_type ILIKE 'INTEGER' LIMIT 3;
