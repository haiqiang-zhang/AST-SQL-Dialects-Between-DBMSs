PRAGMA enable_verification;
SELECT bool_and(i) FROM (SELECT * FROM (SELECT NULL::INTEGER) tbl(i) UNION ALL SELECT CAST(1 as BOOLEAN)) tbl(i);
CREATE TABLE tbl AS SELECT NULL UNION ALL SELECT NULL;
CREATE VIEW v1 AS SELECT NULL;
CREATE VIEW v2 AS SELECT NULL UNION ALL SELECT NULL;
SELECT NULL;
SELECT NULL UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT NULL UNION ALL SELECT NULL;
SELECT NULL UNION ALL SELECT NULL UNION ALL SELECT NULL UNION ALL SELECT NULL UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT (SELECT NULL) UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT * FROM (SELECT NULL) tbl(i) UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT * FROM (SELECT (SELECT NULL) UNION ALL SELECT CAST(1 AS BOOLEAN)) tbl(i);
SELECT * FROM (SELECT NULL) tbl(i) UNION ALL SELECT NULL;
SELECT bool_and(i) FROM (SELECT * FROM (SELECT NULL) tbl(i) UNION ALL SELECT CAST(1 as BOOLEAN)) tbl(i);
SELECT * FROM (SELECT NULL) tbl(i), (SELECT NULL) tbl2(j);
SELECT bool_and(i), bool_and(j) FROM (SELECT NULL) tbl(i), (SELECT NULL) tbl2(j);
SELECT NULL as a, NULL as b, 1 as id UNION SELECT CAST(1 AS BOOLEAN) as a, CAST(0 AS BOOLEAN) as b, 2 as id;
SELECT CAST(1 AS BOOLEAN) as a, CAST(0 AS BOOLEAN) as b, 1 as id UNION SELECT NULL as a, NULL as b, 2 as id;
SELECT NULL::INTEGER as a, NULL::INTEGER as b, 1 as id UNION SELECT CAST(1 AS BOOLEAN) as a, CAST(0 AS BOOLEAN) as b, 2 as id;
SELECT CAST(1 AS BOOLEAN) as a, CAST(0 AS BOOLEAN) as b, 1 as id UNION SELECT NULL::INTEGER as a, NULL::INTEGER as b, 2 as id;
SELECT * FROM tbl;
SELECT typeof(#1) FROM tbl LIMIT 1;
SELECT * FROM v1;
SELECT * FROM v1 UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT typeof(#1) FROM v1;
SELECT * FROM v2;
SELECT * FROM v2 UNION ALL SELECT CAST(1 AS BOOLEAN);
SELECT typeof(#1) FROM v2 LIMIT 1;
SELECT [NULL];
SELECT [NULL] UNION ALL SELECT [True];
SELECT {'x': NULL};
SELECT {'x': NULL} UNION ALL SELECT {'x': True};
WITH cte AS (SELECT NULL)
SELECT * FROM cte;
WITH cte AS (SELECT NULL)
SELECT * FROM cte UNION ALL SELECT CAST(1 AS BOOLEAN);
