DBMS_Base,DBMS_Tested,SQL_Query,SQL_File_Name,Result,ERROR_Type,ERROR_Message
postgresql,postgresql,"insert into quadtable values (1, ((3.3,4.4),(5.5,6.6)))",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into quadtable values (2, ((null,4.4),(5.5,6.6)))",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into people values ('(Joe,Blow)', '1984-01-10')",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into quadtable (f1, q.c1.r, q.c2.i) values(44,55,66)",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into pp values (repeat('abcdefghijkl', 100000))",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into people select ('Jim', f1, null)::fullname, current_date from pp",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into test_table values ('a', 'b')",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into test_table select 'a', null from generate_series(1,1000)",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into test_table values ('b', 'a')",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into cc values('(""(1,2)"",3)')",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into cc values('(""(4,5)"",6)')",rowtypes.sql,SAME,,
postgresql,postgresql,"CREATE TABLE price (     id SERIAL PRIMARY KEY,     active BOOLEAN NOT NULL,     price NUMERIC )",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into price values (1,false,42), (10,false,100), (11,true,17.99)",rowtypes.sql,SAME,,
postgresql,postgresql,create function fcompos1(v compos) returns void as $$ insert into compos values (v);   $$ language sql,rowtypes.sql,DIFFERENT,DatatypeMismatch,"column ""f1"" is of type integer but expression is of type compos LINE 2: insert into compos values (v);                                       HINT:  You will need to rewrite or cast the expression."
postgresql,postgresql,create function fcompos1(v compos) returns void as $$ insert into compos values (v.*); $$ language sql,rowtypes.sql,SAME,,
postgresql,postgresql,"insert into fullname values ('Joe', 'Blow')",rowtypes.sql,SAME,,
postgresql,postgresql,"insert into tt2 values(0,0)",rowtypes.sql,DIFFERENT,UndefinedTable,"relation ""tt2"" does not exist LINE 1: insert into tt2 values(0,0)"
postgresql,postgresql,"insert into tt3 values(33,44)",rowtypes.sql,DIFFERENT,UndefinedTable,"relation ""tt3"" does not exist LINE 1: insert into tt3 values(33,44)"
postgresql,postgresql,"CREATE TABLE compositetable(a text, b text)",rowtypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO compositetable(a, b) VALUES('fa', 'fb')",rowtypes.sql,SAME,,
postgresql,postgresql,DROP TABLE compositetable,rowtypes.sql,SAME,,
postgresql,postgresql,"CREATE TABLE a_star ( 	class		char, 	a 			int4 )",create_misc.sql,SAME,,
postgresql,postgresql,CREATE TABLE b_star ( 	b 			text ) INHERITS (a_star),create_misc.sql,SAME,,
postgresql,postgresql,CREATE TABLE c_star ( 	c 			name ) INHERITS (a_star),create_misc.sql,SAME,,
postgresql,postgresql,"CREATE TABLE d_star ( 	d 			float8 ) INHERITS (b_star, c_star)",create_misc.sql,SAME,,
postgresql,postgresql,CREATE TABLE e_star ( 	e 			int2 ) INHERITS (c_star),create_misc.sql,SAME,,
postgresql,postgresql,CREATE TABLE f_star ( 	f 			polygon ) INHERITS (e_star),create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO a_star (class, a) VALUES ('a', 1)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO a_star (class, a) VALUES ('a', 2)",create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO a_star (class) VALUES ('a'),create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO b_star (class, a, b) VALUES ('b', 3, 'mumble'::text)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO b_star (class, a) VALUES ('b', 4)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO b_star (class, b) VALUES ('b', 'bumble'::text)",create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO b_star (class) VALUES ('b'),create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO c_star (class, a, c) VALUES ('c', 5, 'hi mom'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO c_star (class, a) VALUES ('c', 6)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO c_star (class, c) VALUES ('c', 'hi paul'::name)",create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO c_star (class) VALUES ('c'),create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, b, c, d)    VALUES ('d', 7, 'grumble'::text, 'hi sunita'::name, '0.0'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, b, c)    VALUES ('d', 8, 'stumble'::text, 'hi koko'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, b, d)    VALUES ('d', 9, 'rumble'::text, '1.1'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, c, d)    VALUES ('d', 10, 'hi kristin'::name, '10.01'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, b, c, d)    VALUES ('d', 'crumble'::text, 'hi boris'::name, '100.001'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, b)    VALUES ('d', 11, 'fumble'::text)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, c)    VALUES ('d', 12, 'hi avi'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a, d)    VALUES ('d', 13, '1000.0001'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, b, c)    VALUES ('d', 'tumble'::text, 'hi andrew'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, b, d)    VALUES ('d', 'humble'::text, '10000.00001'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, c, d)    VALUES ('d', 'hi ginger'::name, '100000.000001'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, a) VALUES ('d', 14)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, b) VALUES ('d', 'jumble'::text)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, c) VALUES ('d', 'hi jolly'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO d_star (class, d) VALUES ('d', '1000000.0000001'::float8)",create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO d_star (class) VALUES ('d'),create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, a, c, e)    VALUES ('e', 15, 'hi carol'::name, '-1'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, a, c)    VALUES ('e', 16, 'hi bob'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, a, e)    VALUES ('e', 17, '-2'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, c, e)    VALUES ('e', 'hi michelle'::name, '-3'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, a)    VALUES ('e', 18)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, c)    VALUES ('e', 'hi elisa'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO e_star (class, e)    VALUES ('e', '-4'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, c, e, f)    VALUES ('f', 19, 'hi claire'::name, '-5'::int2, '(1,3),(2,4)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, c, e)    VALUES ('f', 20, 'hi mike'::name, '-6'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, c, f)    VALUES ('f', 21, 'hi marcel'::name, '(11,44),(22,55),(33,66)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, e, f)    VALUES ('f', 22, '-7'::int2, '(111,555),(222,666),(333,777),(444,888)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, c, e, f)    VALUES ('f', 'hi keith'::name, '-8'::int2, 	   '(1111,3333),(2222,4444)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, c)    VALUES ('f', 24, 'hi marc'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, e)    VALUES ('f', 25, '-9'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a, f)    VALUES ('f', 26, '(11111,33333),(22222,44444)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, c, e)    VALUES ('f', 'hi allison'::name, '-10'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, c, f)    VALUES ('f', 'hi jeff'::name,            '(111111,333333),(222222,444444)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, e, f)    VALUES ('f', '-11'::int2, '(1111111,3333333),(2222222,4444444)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, a) VALUES ('f', 27)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, c) VALUES ('f', 'hi carl'::name)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, e) VALUES ('f', '-12'::int2)",create_misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO f_star (class, f)    VALUES ('f', '(11111111,33333333),(22222222,44444444)'::polygon)",create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO f_star (class) VALUES ('f'),create_misc.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest VALUES (1),combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest VALUES (2),combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest VALUES (333),combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest SELECT 1 LIMIT 0,combocid.sql,SAME,,
postgresql,postgresql,INSERT INTO combocidtest VALUES (444),combocid.sql,SAME,,
postgresql,postgresql,"CREATE TABLE IF NOT EXISTS testcase( 	id int PRIMARY KEY, 	balance numeric )",combocid.sql,SAME,,
postgresql,postgresql,"INSERT INTO testcase VALUES (1, 0)",combocid.sql,SAME,,
postgresql,postgresql,DROP TABLE testcase,combocid.sql,SAME,,
postgresql,postgresql,"CREATE TABLE macaddr8_data (a int, b macaddr8)",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (1, '08:00:2b:01:02:03')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (2, '08-00-2b-01-02-03')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (3, '08002b:010203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (4, '08002b-010203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (5, '0800.2b01.0203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (6, '0800-2b01-0203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (7, '08002b010203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (8, '0800:2b01:0203')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (9, 'not even close')",macaddr8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type macaddr8: ""not even close"" LINE 1: INSERT INTO macaddr8_data VALUES (9, 'not even close')"
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (10, '08:00:2b:01:02:04')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (11, '08:00:2b:01:02:02')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (12, '08:00:2a:01:02:03')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (13, '08:00:2c:01:02:03')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (14, '08:00:2a:01:02:04')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (15, '08:00:2b:01:02:03:04:05')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (16, '08-00-2b-01-02-03-04-05')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (17, '08002b:0102030405')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (18, '08002b-0102030405')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (19, '0800.2b01.0203.0405')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (20, '08002b01:02030405')",macaddr8.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr8_data VALUES (21, '08002b0102030405')",macaddr8.sql,SAME,,
postgresql,postgresql,DROP TABLE macaddr8_data,macaddr8.sql,SAME,,
postgresql,postgresql,insert into tt1 values(1),portals.sql,SAME,,
postgresql,postgresql,insert into tt1 values(2),portals.sql,SAME,,
postgresql,postgresql,insert into tt1 values(1),portals.sql,SAME,,
postgresql,postgresql,insert into tt1 values(2),portals.sql,SAME,,
postgresql,postgresql,"INSERT INTO uctest VALUES (1, 'one'), (2, 'two'), (3, 'three')",portals.sql,SAME,,
postgresql,postgresql,"INSERT INTO uctest VALUES (10, 'ten')",portals.sql,SAME,,
postgresql,postgresql,"INSERT INTO ucchild values(100, 'hundred')",portals.sql,SAME,,
postgresql,postgresql,"CREATE TABLE current_check (currentid int, payload text)",portals.sql,SAME,,
postgresql,postgresql,CREATE TABLE current_check_1 () INHERITS (current_check),portals.sql,SAME,,
postgresql,postgresql,CREATE TABLE current_check_2 () INHERITS (current_check),portals.sql,SAME,,
postgresql,postgresql,"INSERT INTO current_check_1 SELECT i, 'p' || i FROM generate_series(1,9) i",portals.sql,SAME,,
postgresql,postgresql,"INSERT INTO current_check_2 SELECT i, 'P' || i FROM generate_series(10,19) i",portals.sql,SAME,,
postgresql,postgresql,CREATE TABLE cursor (a int),portals.sql,SAME,,
postgresql,postgresql,INSERT INTO cursor VALUES (1),portals.sql,SAME,,
postgresql,postgresql,DROP TABLE cursor,portals.sql,SAME,,
postgresql,postgresql,create table toasted_data (f1 int[]),portals.sql,SAME,,
postgresql,postgresql,"insert into toasted_data   select array_agg(i) from generate_series(12345678, 12345678 + 1000) i",portals.sql,SAME,,
postgresql,postgresql,drop table toasted_data,portals.sql,SAME,,
postgresql,postgresql,"/* Test inheritance of structure (LIKE) */ CREATE TABLE inhx (xx text DEFAULT 'text');  /*  * Test double inheritance  *  * Ensure that defaults are NOT included unless  * INCLUDING DEFAULTS is specified  */ CREATE TABLE ctla (aa TEXT); CREATE TABLE ctlb (bb TEXT) INHERITS (ctla);  CREATE TABLE foo (LIKE nonexistent);  CREATE TABLE inhe (ee text, LIKE inhx) inherits (ctlb); INSERT INTO inhe VALUES ('ee-col1', 'ee-col2', DEFAULT, 'ee-col4'); SELECT * FROM inhe; /* Columns aa, bb, xx value NULL, ee */ SELECT * FROM inhx; /* Empty set since LIKE inherits structure only */ SELECT * FROM ctlb; /* Has ee entry */ SELECT * FROM ctla; /* Has ee entry */  CREATE TABLE inhf (LIKE inhx, LIKE inhx); /* Throw error */  CREATE TABLE inhf (LIKE inhx INCLUDING DEFAULTS INCLUDING CONSTRAINTS); INSERT INTO inhf DEFAULT VALUES; SELECT * FROM inhf; /* Single entry with value 'text' */  ALTER TABLE inhx add constraint foo CHECK (xx = 'text'); ALTER TABLE inhx ADD PRIMARY KEY (xx); CREATE TABLE inhg (LIKE inhx); /* Doesn't copy constraint */ INSERT INTO inhg VALUES ('foo')",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""nonexistent"" does not exist LINE 13: CREATE TABLE foo (LIKE nonexistent);"
postgresql,postgresql,DROP TABLE inhg,create_table_like.sql,DIFFERENT,UndefinedTable,"table ""inhg"" does not exist"
postgresql,postgresql,"CREATE TABLE inhg (x text, LIKE inhx INCLUDING CONSTRAINTS, y text)",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhx"" does not exist LINE 1: CREATE TABLE inhg (x text, LIKE inhx INCLUDING CONSTRAINTS, ..."
postgresql,postgresql,"/* Copies constraints */ INSERT INTO inhg VALUES ('x', 'text', 'y')",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhg"" does not exist LINE 2: INSERT INTO inhg VALUES ('x', 'text', 'y')"
postgresql,postgresql,"/* Succeeds */ INSERT INTO inhg VALUES ('x', 'text', 'y')",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhg"" does not exist LINE 2: INSERT INTO inhg VALUES ('x', 'text', 'y')"
postgresql,postgresql,"/* Succeeds  INSERT INTO inhg VALUES ('x', 'foo',  'y')",create_table_like.sql,DIFFERENT,SyntaxError,"unterminated /* comment at or near ""/* Succeeds  INSERT INTO inhg VALUES ('x', 'foo',  'y')"" LINE 1: /* Succeeds"
postgresql,postgresql,"/* Two records with three columns in order x=x, xx=text, y=y */ DROP TABLE inhg",create_table_like.sql,DIFFERENT,UndefinedTable,"table ""inhg"" does not exist"
postgresql,postgresql,"CREATE TABLE test_like_id_1 (a bigint GENERATED ALWAYS AS IDENTITY, b text)",create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_id_1 (b) VALUES ('b1'),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_id_2 (LIKE test_like_id_1),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_id_2 (b) VALUES ('b2'),create_table_like.sql,DIFFERENT,NotNullViolation,"null value in column ""a"" of relation ""test_like_id_2"" violates not-null constraint DETAIL:  Failing row contains (null, b2)."
postgresql,postgresql,CREATE TABLE test_like_id_3 (LIKE test_like_id_1 INCLUDING IDENTITY),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_id_3 (b) VALUES ('b3'),create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE test_like_id_1, test_like_id_2, test_like_id_3",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_like_gen_1 (a int, b int GENERATED ALWAYS AS (a * 2) STORED)",create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_gen_1 (a) VALUES (1),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_gen_2 (LIKE test_like_gen_1),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_gen_2 (a) VALUES (1),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_gen_3 (LIKE test_like_gen_1 INCLUDING GENERATED),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_gen_3 (a) VALUES (1),create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE test_like_gen_1, test_like_gen_2, test_like_gen_3",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_like_4 (b int DEFAULT 42,   c int GENERATED ALWAYS AS (a * 2) STORED,   a int CHECK (a > 0))",create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_4a (LIKE test_like_4),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_4b (LIKE test_like_4 INCLUDING DEFAULTS),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_4c (LIKE test_like_4 INCLUDING GENERATED),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_like_4d (LIKE test_like_4 INCLUDING DEFAULTS INCLUDING GENERATED),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_4a (a) VALUES(11),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_4b (a) VALUES(11),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_4c (a) VALUES(11),create_table_like.sql,SAME,,
postgresql,postgresql,INSERT INTO test_like_4d (a) VALUES(11),create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_like_5 (x point, y point, z point)",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_like_5x (p int CHECK (p > 0),    q int GENERATED ALWAYS AS (p * 2) STORED)",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_like_5c (LIKE test_like_4 INCLUDING ALL)   INHERITS (test_like_5, test_like_5x)",create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE test_like_4, test_like_4a, test_like_4b, test_like_4c, test_like_4d",create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE test_like_5, test_like_5x, test_like_5c",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, y text)",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhx"" does not exist LINE 1: CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, y te..."
postgresql,postgresql,"/* copies indexes */ INSERT INTO inhg VALUES (5, 10)",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhg"" does not exist LINE 2: INSERT INTO inhg VALUES (5, 10)"
postgresql,postgresql,"INSERT INTO inhg VALUES (20, 10)",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhg"" does not exist LINE 1: INSERT INTO inhg VALUES (20, 10)"
postgresql,postgresql,DROP TABLE inhg,create_table_like.sql,DIFFERENT,UndefinedTable,"table ""inhg"" does not exist"
postgresql,postgresql,"/* Multiple primary keys creation should fail */ CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, PRIMARY KEY(x))",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhx"" does not exist LINE 2: CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, PRIM..."
postgresql,postgresql,"/* fails */ CREATE TABLE inhz (xx text DEFAULT 'text', yy int UNIQUE)",create_table_like.sql,SAME,,
postgresql,postgresql,"/* Ok to create multiple unique indexes */ CREATE TABLE inhg (x text UNIQUE, LIKE inhz INCLUDING INDEXES)",create_table_like.sql,SAME,,
postgresql,postgresql,"INSERT INTO inhg (xx, yy, x) VALUES ('test', 5, 10)",create_table_like.sql,SAME,,
postgresql,postgresql,"INSERT INTO inhg (xx, yy, x) VALUES ('test', 10, 15)",create_table_like.sql,SAME,,
postgresql,postgresql,"INSERT INTO inhg (xx, yy, x) VALUES ('foo', 10, 15)",create_table_like.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""inhg_x_key"" DETAIL:  Key (x)=(15) already exists."
postgresql,postgresql,DROP TABLE inhg,create_table_like.sql,SAME,,
postgresql,postgresql,DROP TABLE inhz,create_table_like.sql,SAME,,
postgresql,postgresql,"/* Use primary key imported by LIKE for self-referential FK constraint */ CREATE TABLE inhz (x text REFERENCES inhz, LIKE inhx INCLUDING INDEXES)",create_table_like.sql,DIFFERENT,UndefinedTable,"relation ""inhx"" does not exist LINE 2: CREATE TABLE inhz (x text REFERENCES inhz, LIKE inhx INCLUDI..."
postgresql,postgresql,DROP TABLE inhz,create_table_like.sql,DIFFERENT,UndefinedTable,"table ""inhz"" does not exist"
postgresql,postgresql,"CREATE TABLE ctlt1 (a text CHECK (length(a) > 2) PRIMARY KEY, b text)",create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt2 (c text),create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctlt3 (a text CHECK (length(a) < 5), c text CHECK (length(c) < 7))",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctlt4 (a text, c text)",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctlt12_storage (LIKE ctlt1 INCLUDING STORAGE, LIKE ctlt2 INCLUDING STORAGE)",create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctlt12_comments (LIKE ctlt1 INCLUDING COMMENTS, LIKE ctlt2 INCLUDING COMMENTS)",create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt1_inh (LIKE ctlt1 INCLUDING CONSTRAINTS INCLUDING COMMENTS) INHERITS (ctlt1),create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctlt13_inh () INHERITS (ctlt1, ctlt3)",create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt13_like (LIKE ctlt3 INCLUDING CONSTRAINTS INCLUDING INDEXES INCLUDING COMMENTS INCLUDING STORAGE) INHERITS (ctlt1),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt_all (LIKE ctlt1 INCLUDING ALL),create_table_like.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inh_error1 () INHERITS (ctlt1, ctlt4)",create_table_like.sql,DIFFERENT,DatatypeMismatch,"inherited column ""a"" has a storage parameter conflict DETAIL:  MAIN versus EXTENDED"
postgresql,postgresql,CREATE TABLE inh_error2 (LIKE ctlt4 INCLUDING STORAGE) INHERITS (ctlt1),create_table_like.sql,DIFFERENT,DatatypeMismatch,"column ""a"" has a storage parameter conflict DETAIL:  MAIN versus EXTENDED"
postgresql,postgresql,CREATE TABLE pg_attrdef (LIKE ctlt1 INCLUDING ALL),create_table_like.sql,SAME,,
postgresql,postgresql,DROP TABLE public.pg_attrdef,create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt1 (LIKE ctlt1 INCLUDING ALL),create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE ctlt1, ctlt2, ctlt3, ctlt4, ctlt12_storage, ctlt12_comments, ctlt1_inh, ctlt13_inh, ctlt13_like, ctlt_all, ctla, ctlb CASCADE",create_table_like.sql,DIFFERENT,UndefinedTable,"table ""ctla"" does not exist"
postgresql,postgresql,CREATE TABLE noinh_con_copy (a int CHECK (a > 0) NO INHERIT),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE noinh_con_copy1 (LIKE noinh_con_copy INCLUDING CONSTRAINTS),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE noinh_con_copy1_parted (LIKE noinh_con_copy INCLUDING ALL)   PARTITION BY LIST (a),create_table_like.sql,DIFFERENT,InvalidTableDefinition,"cannot add NO INHERIT constraint to partitioned table ""noinh_con_copy1_parted"""
postgresql,postgresql,"DROP TABLE noinh_con_copy, noinh_con_copy1",create_table_like.sql,SAME,,
postgresql,postgresql,"/* LIKE with other relation kinds */  CREATE TABLE ctlt4 (a int, b text)",create_table_like.sql,DIFFERENT,DuplicateTable,"relation ""ctlt4"" already exists"
postgresql,postgresql,CREATE TABLE ctlt10 (LIKE ctlseq1),create_table_like.sql,DIFFERENT,WrongObjectType,"relation ""ctlseq1"" is invalid in LIKE clause LINE 1: CREATE TABLE ctlt10 (LIKE ctlseq1)                                    DETAIL:  This operation is not supported for sequences."
postgresql,postgresql,CREATE TABLE ctlt11 (LIKE ctlv1),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt11a (LIKE ctlv1 INCLUDING ALL),create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctlt12 (LIKE ctlty1),create_table_like.sql,SAME,,
postgresql,postgresql,"DROP TABLE IF EXISTS ctlt4, ctlt10, ctlt11, ctlt11a, ctlt12",create_table_like.sql,SAME,,
postgresql,postgresql,CREATE TABLE numrange_test (nr NUMRANGE),rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test VALUES('[,)')",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test VALUES('[3,]')",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test VALUES('[, 5)')",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test VALUES(numrange(1.1, 2.2))",rangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO numrange_test VALUES('empty'),rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test VALUES(numrange(1.7, 1.7, '[]'))",rangetypes.sql,SAME,,
postgresql,postgresql,create table numrange_test2(nr numrange),rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test2 VALUES('[, 5)')",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test2 VALUES(numrange(1.1, 2.2))",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test2 VALUES(numrange(1.1, 2.2))",rangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO numrange_test2 VALUES(numrange(1.1, 2.2,'()'))",rangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO numrange_test2 VALUES('empty'),rangetypes.sql,SAME,,
postgresql,postgresql,DROP TABLE numrange_test2,rangetypes.sql,SAME,,
postgresql,postgresql,CREATE TABLE textrange_test (tr textrange),rangetypes.sql,DIFFERENT,UndefinedObject,"type ""textrange"" does not exist LINE 1: CREATE TABLE textrange_test (tr textrange)"
postgresql,postgresql,"INSERT INTO textrange_test VALUES('[,)')",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES('[,)')"
postgresql,postgresql,"INSERT INTO textrange_test VALUES('[""a"",]')",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES('[""a"",]')"
postgresql,postgresql,"INSERT INTO textrange_test VALUES('[,""q"")')",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES('[,""q"")')"
postgresql,postgresql,"INSERT INTO textrange_test VALUES(textrange('b', 'g'))",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES(textrange('b', 'g'))"
postgresql,postgresql,INSERT INTO textrange_test VALUES('empty'),rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES('empty')"
postgresql,postgresql,"INSERT INTO textrange_test VALUES(textrange('d', 'd', '[]'))",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""textrange_test"" does not exist LINE 1: INSERT INTO textrange_test VALUES(textrange('d', 'd', '[]'))"
postgresql,postgresql,create table test_range_gist(ir int4range),rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select int4range(g, g+10) from generate_series(1,2000) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select 'empty'::int4range from generate_series(1,500) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select int4range(g, g+10000) from generate_series(1,1000) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select 'empty'::int4range from generate_series(1,500) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select int4range(NULL,g*10,'(]') from generate_series(1,100) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select int4range(g*10,NULL,'(]') from generate_series(1,100) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_gist select int4range(g, g+10) from generate_series(1,2000) g",rangetypes.sql,SAME,,
postgresql,postgresql,create table test_range_spgist(ir int4range),rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select int4range(g, g+10) from generate_series(1,2000) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select 'empty'::int4range from generate_series(1,500) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select int4range(g, g+10000) from generate_series(1,1000) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select 'empty'::int4range from generate_series(1,500) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select int4range(NULL,g*10,'(]') from generate_series(1,100) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select int4range(g*10,NULL,'(]') from generate_series(1,100) g",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_spgist select int4range(g, g+10) from generate_series(1,2000) g",rangetypes.sql,SAME,,
postgresql,postgresql,create table test_range_elem(i int4),rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_elem select i from generate_series(1,100) i",rangetypes.sql,SAME,,
postgresql,postgresql,drop table test_range_elem,rangetypes.sql,SAME,,
postgresql,postgresql,"create table test_range_excl(   room int4range,   speaker int4range,   during tsrange,   exclude using gist (room with =, during with &&),   exclude using gist (speaker with =, during with &&) )",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_excl   values(int4range(123, 123, '[]'), int4range(1, 1, '[]'), '[2010-01-02 10:00, 2010-01-02 11:00)')",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_excl   values(int4range(123, 123, '[]'), int4range(2, 2, '[]'), '[2010-01-02 11:00, 2010-01-02 12:00)')",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_excl   values(int4range(123, 123, '[]'), int4range(3, 3, '[]'), '[2010-01-02 10:10, 2010-01-02 11:00)')",rangetypes.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""test_range_excl_room_during_excl"" DETAIL:  Key (room, during)=([123,124), [""2010-01-02 10:10:00"",""2010-01-02 11:00:00"")) conflicts with existing key (room, during)=([123,124), [""2010-01-02 10:00:00"",""2010-01-02 11:00:00""))."
postgresql,postgresql,"insert into test_range_excl   values(int4range(124, 124, '[]'), int4range(3, 3, '[]'), '[2010-01-02 10:10, 2010-01-02 11:10)')",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_range_excl   values(int4range(125, 125, '[]'), int4range(1, 1, '[]'), '[2010-01-02 10:10, 2010-01-02 11:00)')",rangetypes.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""test_range_excl_speaker_during_excl"" DETAIL:  Key (speaker, during)=([1,2), [""2010-01-02 10:10:00"",""2010-01-02 11:00:00"")) conflicts with existing key (speaker, during)=([1,2), [""2010-01-02 10:00:00"",""2010-01-02 11:00:00""))."
postgresql,postgresql,"create table float8range_test(f8r float8range, i int)",rangetypes.sql,DIFFERENT,UndefinedObject,"type ""float8range"" does not exist LINE 1: create table float8range_test(f8r float8range, i int)"
postgresql,postgresql,"insert into float8range_test values(float8range(-100.00007, '1.111113e9'), 42)",rangetypes.sql,DIFFERENT,UndefinedTable,"relation ""float8range_test"" does not exist LINE 1: insert into float8range_test values(float8range(-100.00007, ..."
postgresql,postgresql,drop table float8range_test,rangetypes.sql,DIFFERENT,UndefinedTable,"table ""float8range_test"" does not exist"
postgresql,postgresql,"create table i8r_array (f1 int, f2 int8range[])",rangetypes.sql,SAME,,
postgresql,postgresql,"insert into i8r_array values (42, array[int8range(1,10), int8range(2,20)])",rangetypes.sql,SAME,,
postgresql,postgresql,drop table i8r_array,rangetypes.sql,SAME,,
postgresql,postgresql,"insert into text_support_test values ('a'), ('c'), ('d'), ('ch')",rangetypes.sql,SAME,,
postgresql,postgresql,drop table text_support_test,rangetypes.sql,SAME,,
postgresql,postgresql,DROP TABLE sitmp1,select_into.sql,DIFFERENT,UndefinedTable,"table ""sitmp1"" does not exist"
postgresql,postgresql,DROP TABLE sitmp1,select_into.sql,DIFFERENT,UndefinedTable,"table ""sitmp1"" does not exist"
postgresql,postgresql,"CREATE TABLE selinto_schema.tbl_withdata1 (a)   AS SELECT generate_series(1,3) WITH DATA",select_into.sql,SAME,,
postgresql,postgresql,INSERT INTO selinto_schema.tbl_withdata1 VALUES (4),select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE selinto_schema.tbl_withdata2 (a) AS   SELECT generate_series(1,3) WITH DATA",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE selinto_schema.tbl_nodata1 (a) AS   SELECT generate_series(1,3) WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE selinto_schema.tbl_nodata2 (a) AS   SELECT generate_series(1,3) WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,CREATE TABLE selinto_schema.tbl_withdata3 (a) AS   EXECUTE data_sel WITH DATA,select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE selinto_schema.tbl_withdata4 (a) AS   EXECUTE data_sel WITH DATA",select_into.sql,SAME,,
postgresql,postgresql,CREATE TABLE selinto_schema.tbl_nodata3 (a) AS   EXECUTE data_sel WITH NO DATA,select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE selinto_schema.tbl_nodata4 (a) AS   EXECUTE data_sel WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctas_base (i int, j int)",select_into.sql,SAME,,
postgresql,postgresql,"INSERT INTO ctas_base VALUES (1, 2)",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctas_nodata (ii, jj, kk) AS SELECT i, j FROM ctas_base",select_into.sql,DIFFERENT,SyntaxError,too many column names were specified
postgresql,postgresql,"CREATE TABLE ctas_nodata (ii, jj, kk) AS SELECT i, j FROM ctas_base WITH NO DATA",select_into.sql,DIFFERENT,SyntaxError,too many column names were specified
postgresql,postgresql,"CREATE TABLE ctas_nodata (ii, jj) AS SELECT i, j FROM ctas_base",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctas_nodata_2 (ii, jj) AS SELECT i, j FROM ctas_base WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctas_nodata_3 (ii) AS SELECT i, j FROM ctas_base",select_into.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ctas_nodata_4 (ii) AS SELECT i, j FROM ctas_base WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_base,select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_nodata,select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_nodata_2,select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_nodata_3,select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_nodata_4,select_into.sql,SAME,,
postgresql,postgresql,CREATE FUNCTION make_table() RETURNS VOID AS $$   CREATE TABLE created_table AS SELECT * FROM int8_tbl; $$ LANGUAGE SQL,select_into.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 3:   CREATE TABLE created_table AS SELECT * FROM int8_tbl;"
postgresql,postgresql,DO $$ BEGIN 	EXECUTE 'EXPLAIN ANALYZE SELECT * INTO TABLE easi FROM int8_tbl'; 	EXECUTE 'EXPLAIN ANALYZE CREATE TABLE easi2 AS SELECT * FROM int8_tbl WITH NO DATA'; END$$,select_into.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: EXPLAIN ANALYZE SELECT * INTO TABLE easi FROM int8_tbl                                                        QUERY:  EXPLAIN ANALYZE SELECT * INTO TABLE easi FROM int8_tbl CONTEXT:  PL/pgSQL function inline_code_block line 3 at EXECUTE"
postgresql,postgresql,DROP TABLE created_table,select_into.sql,DIFFERENT,UndefinedTable,"table ""created_table"" does not exist"
postgresql,postgresql,"DROP TABLE easi, easi2",select_into.sql,DIFFERENT,UndefinedTable,"table ""easi"" does not exist"
postgresql,postgresql,INSERT INTO int4_tbl SELECT 1 INTO f,select_into.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO int4_tbl SELECT 1 INTO f"
postgresql,postgresql,CREATE TABLE ctas_ine_tbl AS SELECT 1,select_into.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0,select_into.sql,DIFFERENT,DuplicateTable,"relation ""ctas_ine_tbl"" already exists"
postgresql,postgresql,CREATE TABLE IF NOT EXISTS ctas_ine_tbl AS SELECT 1 / 0,select_into.sql,SAME,,
postgresql,postgresql,CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA,select_into.sql,DIFFERENT,DuplicateTable,"relation ""ctas_ine_tbl"" already exists"
postgresql,postgresql,CREATE TABLE IF NOT EXISTS ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA,select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0",select_into.sql,DIFFERENT,DuplicateTable,"relation ""ctas_ine_tbl"" already exists"
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE IF NOT EXISTS ctas_ine_tbl AS SELECT 1 / 0",select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA",select_into.sql,DIFFERENT,DuplicateTable,"relation ""ctas_ine_tbl"" already exists"
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE IF NOT EXISTS ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA",select_into.sql,SAME,,
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE ctas_ine_tbl AS EXECUTE ctas_ine_query",select_into.sql,DIFFERENT,DuplicateTable,"relation ""ctas_ine_tbl"" already exists"
postgresql,postgresql,"EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)   CREATE TABLE IF NOT EXISTS ctas_ine_tbl AS EXECUTE ctas_ine_query",select_into.sql,SAME,,
postgresql,postgresql,DROP TABLE ctas_ine_tbl,select_into.sql,SAME,,
postgresql,postgresql,CREATE TABLE testjsonb (        j jsonb ),jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_jsonb VALUES ('scalar','""a scalar""'), ('array','[""zero"", ""one"",""two"",null,""four"",""five"", [1,2,3],{""f1"":9}]'), ('object','{""field1"":""val1"",""field2"":""val2"",""field3"":null, ""field4"": 4, ""field5"": [1,2,3], ""field6"": {""f1"":9}}')",jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847001,'t15','GE1043')",jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847002,'t16','GE1043')",jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847003,'sub-alpha','GESS90')",jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (999999, NULL, 'bar')",jsonb.sql,SAME,,
postgresql,postgresql,"INSERT INTO jsbpoptest SELECT '{ 	""jsa"": [1, ""2"", null, 4], 	""rec"": {""a"": ""abc"", ""c"": ""01.02.2003"", ""x"": 43.2}, 	""reca"": [{""a"": ""abc"", ""b"": 456}, null, {""c"": ""01.02.2003"", ""x"": 43.2}] }'::jsonb FROM generate_series(1, 3)",jsonb.sql,SAME,,
postgresql,postgresql,"insert into nestjsonb (j) values ('{""a"":[[""b"",{""x"":1}],[""b"",{""x"":2}]],""c"":3}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into nestjsonb (j) values ('[[14,2,3]]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into nestjsonb (j) values ('[1,[14,2,3]]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}'),  (2, '{""key"": ""value""}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (3, NULL)",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '[0]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '[]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{""b"": 1}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '[]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '[]')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{""a"": {}}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{""a"": []}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, '{""a"": 1}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values (1, 'null')",jsonb.sql,SAME,,
postgresql,postgresql,drop table test_jsonb_subscript,jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript values('foo', '{""foo"": ""bar""}')",jsonb.sql,SAME,,
postgresql,postgresql,"insert into test_jsonb_subscript   select s, ('{""' || s || '"": ""bar""}')::jsonb from repeat('xyzzy', 500) s",jsonb.sql,SAME,,
postgresql,postgresql,"SELECT oid, prsname FROM pg_ts_parser WHERE prsnamespace = 0 OR prsstart = 0 OR prstoken = 0 OR prsend = 0 OR       prslextype = 0;  SELECT oid, dictname FROM pg_ts_dict WHERE dictnamespace = 0 OR dictowner = 0 OR dicttemplate = 0;  SELECT oid, tmplname FROM pg_ts_template WHERE tmplnamespace = 0 OR tmpllexize = 0;    SELECT oid, cfgname FROM pg_ts_config WHERE cfgnamespace = 0 OR cfgowner = 0 OR cfgparser = 0;  SELECT mapcfg, maptokentype, mapseqno FROM pg_ts_config_map WHERE mapcfg = 0 OR mapdict = 0;  SELECT * FROM   ( SELECT oid AS cfgid, (ts_token_type(cfgparser)).tokid AS tokid     FROM pg_ts_config ) AS tt RIGHT JOIN pg_ts_config_map AS m     ON (tt.cfgid=m.mapcfg AND tt.tokid=m.maptokentype) WHERE     tt.cfgid IS NULL OR tt.tokid IS NULL;  CREATE TABLE test_tsvector( 	t text, 	a tsvector );  COPY test_tsvector FROM :'filename';  ANALYZE test_tsvector;   SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  create index wowidx on test_tsvector using gist (a);  SET enable_seqscan=OFF; SET enable_indexscan=ON; SET enable_bitmapscan=OFF;  explain (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh';  SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  SET enable_indexscan=OFF; SET enable_bitmapscan=ON;  explain (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh';  SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(foo=1)); CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=0)); CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=2048)); CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100,foo='bar')); CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100, siglen = 200));  CREATE INDEX wowidx2 ON test_tsvector USING gist (a tsvector_ops(siglen=1));   DROP INDEX wowidx;  EXPLAIN (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh';  SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  DROP INDEX wowidx2;  CREATE INDEX wowidx ON test_tsvector USING gist (a tsvector_ops(siglen=484));   EXPLAIN (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh';  SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  RESET enable_seqscan; RESET enable_indexscan; RESET enable_bitmapscan;  DROP INDEX wowidx;  CREATE INDEX wowidx ON test_tsvector USING gin (a);  SET enable_seqscan=OFF;  explain (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh';  SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr&qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq&yt'; SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq&yt)|(wr&qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)&(wr|qh)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'; SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}'); SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'; SELECT count(*) FROM test_tsvector WHERE a @@ 'pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ 'qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!pl <-> !yh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!yh <-> pl'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qe <2> qt'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl <-> yh)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh <-> pl)'; SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe <2> qt)'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'; SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D';  EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tsvector WHERE a @@ '!qh'; SELECT count(*) FROM test_tsvector WHERE a @@ '!qh';  EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh'; SELECT count(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh';  RESET enable_seqscan;  INSERT INTO test_tsvector VALUES ('???', 'DFG:1A,2B,6C,10 FGH'); SELECT * FROM ts_stat('SELECT a FROM test_tsvector') ORDER BY ndoc DESC, nentry DESC, word LIMIT 10; SELECT * FROM ts_stat('SELECT a FROM test_tsvector', 'AB') ORDER BY ndoc DESC, nentry DESC, word;   SELECT ts_lexize('english_stem', 'skies'); SELECT ts_lexize('english_stem', 'identity');  SELECT * FROM ts_token_type('default');  SELECT * FROM ts_parse('default', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href=""qwe<qwe>""> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty');  SELECT to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href=""qwe<qwe>""> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty');  SELECT length(to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href=""qwe<qwe>""> /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 <i <b> wow  < jqw <> qwerty'));   SELECT * from ts_debug('english', '<myns:foo-bar_baz.blurfl>abc&nm1;def&#xa9;ghi&#245;jkl</myns:foo-bar_baz.blurfl>');  SELECT * from ts_debug('english', 'http://www.harewoodsolutions.co.uk/press.aspx</span>'); SELECT * from ts_debug('english', 'http://aew.wer0c.ewr/id?ad=qwe&dw<span>'); SELECT * from ts_debug('english', 'http://5aew.werc.ewr:8100/?'); SELECT * from ts_debug('english', '5aew.werc.ewr:8100/?xx'); SELECT token, alias,   dictionaries, dictionaries is null as dnull, array_dims(dictionaries) as ddims,   lexemes, lexemes is null as lnull, array_dims(lexemes) as ldims from ts_debug('english', 'a title');   SELECT to_tsquery('english', 'qwe & sKies '); SELECT to_tsquery('simple', 'qwe & sKies '); SELECT to_tsquery('english', '''the wether'':dc & ''           sKies '':BC '); SELECT to_tsquery('english', 'asd&(and|fghj)'); SELECT to_tsquery('english', '(asd&and)|fghj'); SELECT to_tsquery('english', '(asd&!and)|fghj'); SELECT to_tsquery('english', '(the|and&(i&1))&fghj');  SELECT plainto_tsquery('english', 'the and z 1))& fghj'); SELECT plainto_tsquery('english', 'foo bar') && plainto_tsquery('english', 'asd'); SELECT plainto_tsquery('english', 'foo bar') || plainto_tsquery('english', 'asd fg'); SELECT plainto_tsquery('english', 'foo bar') || !!plainto_tsquery('english', 'asd fg'); SELECT plainto_tsquery('english', 'foo bar') && 'asd | fg';  SELECT to_tsquery('english', '!(a & !b) & c'); SELECT to_tsquery('english', '!(a & !b)');  SELECT to_tsquery('english', '(1 <-> 2) <-> a'); SELECT to_tsquery('english', '(1 <-> a) <-> 2'); SELECT to_tsquery('english', '(a <-> 1) <-> 2'); SELECT to_tsquery('english', 'a <-> (1 <-> 2)'); SELECT to_tsquery('english', '1 <-> (a <-> 2)'); SELECT to_tsquery('english', '1 <-> (2 <-> a)');  SELECT to_tsquery('english', '(1 <-> 2) <3> a'); SELECT to_tsquery('english', '(1 <-> a) <3> 2'); SELECT to_tsquery('english', '(a <-> 1) <3> 2'); SELECT to_tsquery('english', 'a <3> (1 <-> 2)'); SELECT to_tsquery('english', '1 <3> (a <-> 2)'); SELECT to_tsquery('english', '1 <3> (2 <-> a)');  SELECT to_tsquery('english', '(1 <3> 2) <-> a'); SELECT to_tsquery('english', '(1 <3> a) <-> 2'); SELECT to_tsquery('english', '(a <3> 1) <-> 2'); SELECT to_tsquery('english', 'a <-> (1 <3> 2)'); SELECT to_tsquery('english', '1 <-> (a <3> 2)'); SELECT to_tsquery('english', '1 <-> (2 <3> a)');  SELECT to_tsquery('english', '((a <-> 1) <-> 2) <-> s'); SELECT to_tsquery('english', '(2 <-> (a <-> 1)) <-> s'); SELECT to_tsquery('english', '((1 <-> a) <-> 2) <-> s'); SELECT to_tsquery('english', '(2 <-> (1 <-> a)) <-> s'); SELECT to_tsquery('english', 's <-> ((a <-> 1) <-> 2)'); SELECT to_tsquery('english', 's <-> (2 <-> (a <-> 1))'); SELECT to_tsquery('english', 's <-> ((1 <-> a) <-> 2)'); SELECT to_tsquery('english', 's <-> (2 <-> (1 <-> a))');  SELECT to_tsquery('english', '((a <-> 1) <-> s) <-> 2'); SELECT to_tsquery('english', '(s <-> (a <-> 1)) <-> 2'); SELECT to_tsquery('english', '((1 <-> a) <-> s) <-> 2'); SELECT to_tsquery('english', '(s <-> (1 <-> a)) <-> 2'); SELECT to_tsquery('english', '2 <-> ((a <-> 1) <-> s)'); SELECT to_tsquery('english', '2 <-> (s <-> (a <-> 1))'); SELECT to_tsquery('english', '2 <-> ((1 <-> a) <-> s)'); SELECT to_tsquery('english', '2 <-> (s <-> (1 <-> a))');  SELECT to_tsquery('english', 'foo <-> (a <-> (the <-> bar))'); SELECT to_tsquery('english', '((foo <-> a) <-> the) <-> bar'); SELECT to_tsquery('english', 'foo <-> a <-> the <-> bar'); SELECT phraseto_tsquery('english', 'PostgreSQL can be extended by the user in many ways');   SELECT ts_rank_cd(to_tsvector('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) '), to_tsquery('english', 'paint&water'));  SELECT ts_rank_cd(to_tsvector('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) '), to_tsquery('english', 'breath&motion&water'));  SELECT ts_rank_cd(to_tsvector('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) '), to_tsquery('english', 'ocean'));  SELECT ts_rank_cd(to_tsvector('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) '), to_tsquery('english', 'painted <-> Ship'));  SELECT ts_rank_cd(strip(to_tsvector('both stripped')),                   to_tsquery('both & stripped'));  SELECT ts_rank_cd(to_tsvector('unstripped') || strip(to_tsvector('stripped')),                   to_tsquery('unstripped & stripped'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'paint&water'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'breath&motion&water'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'ocean'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'day & drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'day | drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'day | !drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'painted <-> Ship & drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'painted <-> Ship | drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'painted <-> Ship | !drink'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', phraseto_tsquery('english', 'painted Ocean'));  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', phraseto_tsquery('english', 'idle as a painted Ship'));  SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english','Lorem') && phraseto_tsquery('english','ullamcorper urna'), 'MaxWords=100, MinWords=1');  SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', phraseto_tsquery('english','ullamcorper urna'), 'MaxWords=100, MinWords=5');  SELECT ts_headline('english', ' <html> <! <body> Sea view wow <u>foo bar</u> <i>qq</i> <a href=""http://www.google.com/foo.bar.html"" target=""_blank"">YES &nbsp;</a> ff-bg <script>        document.write(15); </script> </body> </html>', to_tsquery('english', 'sea&foo'), 'HighlightAll=true');  SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 <-> 3', 'MaxWords=2, MinWords=1'); SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 & 3', 'MaxWords=4, MinWords=1'); SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 <-> 3', 'MaxWords=4, MinWords=1');  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'ocean'), 'MaxFragments=1');  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'Coleridge & stuck'), 'MaxFragments=2');  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'ocean & seahorse'), 'MaxFragments=1');  SELECT ts_headline('english', ' Day after day, day after day,   We stuck, nor breath nor motion, As idle as a painted Ship   Upon a painted Ocean. Water, water, every where   And all the boards did shrink; Water, water, every where,   Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'Coleridge & stuck'), 'MaxFragments=2,FragmentDelimiter=***');  SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english','Lorem') && phraseto_tsquery('english','ullamcorper urna'), 'MaxFragments=100, MaxWords=100, MinWords=1');  SELECT ts_headline('english', '', to_tsquery('english', '')); SELECT ts_headline('english', 'foo bar', to_tsquery('english', ''));   CREATE TABLE test_tsquery (txtkeyword TEXT, txtsample TEXT); 'New York'	new <-> york | big <-> apple | nyc Moscow	moskva | moscow 'Sanct Peter'	Peterburg | peter | 'Sanct Peterburg' foo & bar & qq	foo & (bar | qq) & city 1 & (2 <-> 3)	2 <-> 4 5 <-> 6	5 <-> 7  ALTER TABLE test_tsquery ADD COLUMN keyword tsquery; UPDATE test_tsquery SET keyword = to_tsquery('english', txtkeyword); ALTER TABLE test_tsquery ADD COLUMN sample tsquery; UPDATE test_tsquery SET sample = to_tsquery('english', txtsample::text);   SELECT COUNT(*) FROM test_tsquery WHERE keyword <  'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword <= 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword = 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword >= 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword >  'new <-> york';  CREATE UNIQUE INDEX bt_tsq ON test_tsquery (keyword);  SET enable_seqscan=OFF;  SELECT COUNT(*) FROM test_tsquery WHERE keyword <  'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword <= 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword = 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword >= 'new <-> york'; SELECT COUNT(*) FROM test_tsquery WHERE keyword >  'new <-> york';  RESET enable_seqscan;  SELECT ts_rewrite('foo & bar & qq & new & york',  'new & york'::tsquery, 'big & apple | nyc | new & york & city'); SELECT ts_rewrite(ts_rewrite('new & !york ', 'york', '!jersey'),                   'jersey', 'mexico');  SELECT ts_rewrite('moscow', 'SELECT keyword, sample FROM test_tsquery'::text ); SELECT ts_rewrite('moscow & hotel', 'SELECT keyword, sample FROM test_tsquery'::text ); SELECT ts_rewrite('bar & qq & foo & (new <-> york)', 'SELECT keyword, sample FROM test_tsquery'::text );  SELECT ts_rewrite( 'moscow', 'SELECT keyword, sample FROM test_tsquery'); SELECT ts_rewrite( 'moscow & hotel', 'SELECT keyword, sample FROM test_tsquery'); SELECT ts_rewrite( 'bar & qq & foo & (new <-> york)', 'SELECT keyword, sample FROM test_tsquery');  SELECT ts_rewrite('1 & (2 <-> 3)', 'SELECT keyword, sample FROM test_tsquery'::text ); SELECT ts_rewrite('1 & (2 <2> 3)', 'SELECT keyword, sample FROM test_tsquery'::text ); SELECT ts_rewrite('5 <-> (1 & (2 <-> 3))', 'SELECT keyword, sample FROM test_tsquery'::text ); SELECT ts_rewrite('5 <-> (6 | 8)', 'SELECT keyword, sample FROM test_tsquery'::text );  SELECT ts_rewrite(to_tsquery('5 & (6 | 5)'), to_tsquery('5'), to_tsquery('')); SELECT ts_rewrite(to_tsquery('!5'), to_tsquery('5'), to_tsquery(''));  SELECT keyword FROM test_tsquery WHERE keyword @> 'new'; SELECT keyword FROM test_tsquery WHERE keyword @> 'moscow'; SELECT keyword FROM test_tsquery WHERE keyword <@ 'new'; SELECT keyword FROM test_tsquery WHERE keyword <@ 'moscow'; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow & hotel') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'bar & qq & foo & (new <-> york)') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow & hotel') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'bar & qq & foo & (new <-> york)') AS query;  CREATE INDEX qq ON test_tsquery USING gist (keyword tsquery_ops); SET enable_seqscan=OFF;  SELECT keyword FROM test_tsquery WHERE keyword @> 'new'; SELECT keyword FROM test_tsquery WHERE keyword @> 'moscow'; SELECT keyword FROM test_tsquery WHERE keyword <@ 'new'; SELECT keyword FROM test_tsquery WHERE keyword <@ 'moscow'; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow & hotel') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'bar & qq & foo & (new <-> york)') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow & hotel') AS query; SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'bar & qq & foo & (new <-> york)') AS query;  SELECT ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz'); SELECT to_tsvector('foo bar') @@   ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz'); SELECT to_tsvector('bar baz') @@   ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz');  RESET enable_seqscan;  SET default_text_search_config=simple;  SELECT to_tsvector('SKIES My booKs'); SELECT plainto_tsquery('SKIES My booKs'); SELECT to_tsquery('SKIES & My | booKs');  SET default_text_search_config=english;  SELECT to_tsvector('SKIES My booKs'); SELECT plainto_tsquery('SKIES My booKs'); SELECT to_tsquery('SKIES & My | booKs');  CREATE TRIGGER tsvectorupdate BEFORE UPDATE OR INSERT ON test_tsvector FOR EACH ROW EXECUTE PROCEDURE tsvector_update_trigger(a, 'pg_catalog.english', t);  SELECT count(*) FROM test_tsvector WHERE a @@ to_tsquery('345&qwerty'); INSERT INTO test_tsvector (t) VALUES ('345 qwerty'); SELECT count(*) FROM test_tsvector WHERE a @@ to_tsquery('345&qwerty'); UPDATE test_tsvector SET t = null WHERE t = '345 qwerty'; SELECT count(*) FROM test_tsvector WHERE a @@ to_tsquery('345&qwerty');  INSERT INTO test_tsvector (t) VALUES ('345 qwerty');  SELECT count(*) FROM test_tsvector WHERE a @@ to_tsquery('345&qwerty');   explain (costs off) select * from test_tsquery, to_tsquery('new') q where txtsample @@ q;  explain (costs off) select * from test_tsquery, to_tsquery('english', 'new') q where txtsample @@ q;  create temp table pendtest (ts tsvector); create index pendtest_idx on pendtest using gin(ts); insert into pendtest values (to_tsvector('Lore ipsam')); insert into pendtest values (to_tsvector('Lore ipsum')); select * from pendtest where 'ipsu:*'::tsquery @@ ts; select * from pendtest where 'ipsa:*'::tsquery @@ ts; select * from pendtest where 'ips:*'::tsquery @@ ts; select * from pendtest where 'ipt:*'::tsquery @@ ts; select * from pendtest where 'ipi:*'::tsquery @@ ts;  create temp table phrase_index_test(fts tsvector); insert into phrase_index_test values ('A fat cat has just eaten a rat.'); insert into phrase_index_test values (to_tsvector('english', 'A fat cat has just eaten a rat.')); create index phrase_index_test_idx on phrase_index_test using gin(fts); set enable_seqscan = off; select * from phrase_index_test where fts @@ phraseto_tsquery('english', 'fat cat'); set enable_seqscan = on;  select websearch_to_tsquery('simple', 'I have a fat:*ABCD cat'); select websearch_to_tsquery('simple', 'orange:**AABBCCDD'); select websearch_to_tsquery('simple', 'fat:A!cat:B|rat:C<'); select websearch_to_tsquery('simple', 'fat:A : cat:B');  select websearch_to_tsquery('simple', 'fat*rat'); select websearch_to_tsquery('simple', 'fat-rat'); select websearch_to_tsquery('simple', 'fat_rat');  select websearch_to_tsquery('simple', 'abc : def'); select websearch_to_tsquery('simple', 'abc:def'); select websearch_to_tsquery('simple', 'a:::b'); select websearch_to_tsquery('simple', 'abc:d'); select websearch_to_tsquery('simple', ':');  select websearch_to_tsquery('simple', 'abc & def'); select websearch_to_tsquery('simple', 'abc | def'); select websearch_to_tsquery('simple', 'abc <-> def'); select websearch_to_tsquery('simple', 'abc (pg or class)');  select websearch_to_tsquery('english', 'My brand new smartphone'); select websearch_to_tsquery('english', 'My brand ""new smartphone""'); select websearch_to_tsquery('english', 'My brand ""new -smartphone""');  select websearch_to_tsquery('simple', 'cat or rat'); select websearch_to_tsquery('simple', 'cat OR rat'); select websearch_to_tsquery('simple', 'cat ""OR"" rat'); select websearch_to_tsquery('simple', 'cat OR'); select websearch_to_tsquery('simple', 'OR rat'); select websearch_to_tsquery('simple', '""fat cat OR rat""'); select websearch_to_tsquery('simple', 'fat (cat OR rat'); select websearch_to_tsquery('simple', 'or OR or');  select websearch_to_tsquery('simple', '""fat cat""or""fat rat""'); select websearch_to_tsquery('simple', 'fat or(rat'); select websearch_to_tsquery('simple', 'fat or)rat'); select websearch_to_tsquery('simple', 'fat or&rat'); select websearch_to_tsquery('simple', 'fat or|rat'); select websearch_to_tsquery('simple', 'fat or!rat'); select websearch_to_tsquery('simple', 'fat or<rat'); select websearch_to_tsquery('simple', 'fat or>rat'); select websearch_to_tsquery('simple', 'fat or ');  select websearch_to_tsquery('simple', 'abc orange'); select websearch_to_tsquery('simple', 'abc OR1234'); select websearch_to_tsquery('simple', 'abc or-abc'); select websearch_to_tsquery('simple', 'abc OR_abc');  select websearch_to_tsquery('english', '""pg_class pg'); select websearch_to_tsquery('english', 'pg_class pg""'); select websearch_to_tsquery('english', '""pg_class pg""'); select websearch_to_tsquery('english', '""pg_class : pg""'); select websearch_to_tsquery('english', 'abc ""pg_class pg""'); select websearch_to_tsquery('english', '""pg_class pg"" def'); select websearch_to_tsquery('english', 'abc ""pg pg_class pg"" def'); select websearch_to_tsquery('english', ' or ""pg pg_class pg"" or '); select websearch_to_tsquery('english', '""""pg pg_class pg""""'); select websearch_to_tsquery('english', 'abc """""""""" def'); select websearch_to_tsquery('english', 'cat -""fat rat""'); select websearch_to_tsquery('english', 'cat -""fat rat"" cheese'); select websearch_to_tsquery('english', 'abc ""def -""'); select websearch_to_tsquery('english', 'abc ""def :""');  select websearch_to_tsquery('english', '""A fat cat"" has just eaten a -rat.'); select websearch_to_tsquery('english', '""A fat cat"" has just eaten OR !rat.'); select websearch_to_tsquery('english', '""A fat cat"" has just (+eaten OR -rat)');  select websearch_to_tsquery('english', 'this is  select websearch_to_tsquery('english', '(()) )))) this ||| is && -fine, ""dear friend"" OR good')",tsearch.sql,DIFFERENT,SyntaxError,"syntax error at or near "":"" LINE 35: COPY test_tsvector FROM :'filename';"
postgresql,postgresql,"CREATE TABLE prevstats AS SELECT t.seq_scan, t.seq_tup_read, t.idx_scan, t.idx_tup_fetch,        (b.heap_blks_read + b.heap_blks_hit) AS heap_blks,        (b.idx_blks_read + b.idx_blks_hit) AS idx_blks,        pg_stat_get_snapshot_timestamp() as snap_ts   FROM pg_catalog.pg_stat_user_tables AS t,        pg_catalog.pg_statio_user_tables AS b  WHERE t.relname='tenk2' AND b.relname='tenk2'",stats.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_stats_test(id serial),stats.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trunc_stats_test1(id serial, stuff text)",stats.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_stats_test2(id serial),stats.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trunc_stats_test3(id serial, stuff text)",stats.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_stats_test4(id serial),stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test1 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test1 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test1 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test1 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test2 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test2 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test2 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test2 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test3 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test3 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test3 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test3 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test3 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test4 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test4 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_stats_test4 DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,CREATE TABLE drop_stats_test(),stats.sql,SAME,,
postgresql,postgresql,INSERT INTO drop_stats_test DEFAULT VALUES,stats.sql,SAME,,
postgresql,postgresql,SELECT 'drop_stats_test'::regclass::oid AS drop_stats_test_oid \gset  CREATE TABLE drop_stats_test_xact(),stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: ...drop_stats_test'::regclass::oid AS drop_stats_test_oid \gset"
postgresql,postgresql,INSERT INTO drop_stats_test_xact DEFAULT VALUES,stats.sql,DIFFERENT,UndefinedTable,"relation ""drop_stats_test_xact"" does not exist LINE 1: INSERT INTO drop_stats_test_xact DEFAULT VALUES"
postgresql,postgresql,SELECT 'drop_stats_test_xact'::regclass::oid AS drop_stats_test_xact_oid \gset  CREATE TABLE drop_stats_test_subxact(),stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: ..._test_xact'::regclass::oid AS drop_stats_test_xact_oid \gset"
postgresql,postgresql,INSERT INTO drop_stats_test_subxact DEFAULT VALUES,stats.sql,DIFFERENT,UndefinedTable,"relation ""drop_stats_test_subxact"" does not exist LINE 1: INSERT INTO drop_stats_test_subxact DEFAULT VALUES"
postgresql,postgresql,DROP TABLE drop_stats_test,stats.sql,SAME,,
postgresql,postgresql,INSERT INTO drop_stats_test_xact DEFAULT VALUES,stats.sql,DIFFERENT,UndefinedTable,"relation ""drop_stats_test_xact"" does not exist LINE 1: INSERT INTO drop_stats_test_xact DEFAULT VALUES"
postgresql,postgresql,DROP TABLE drop_stats_test_xact,stats.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO drop_stats_test_xact DEFAULT VALUES,stats.sql,DIFFERENT,UndefinedTable,"relation ""drop_stats_test_xact"" does not exist LINE 1: INSERT INTO drop_stats_test_xact DEFAULT VALUES"
postgresql,postgresql,DROP TABLE drop_stats_test_xact,stats.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO drop_stats_test_subxact DEFAULT VALUES,stats.sql,DIFFERENT,UndefinedTable,"relation ""drop_stats_test_subxact"" does not exist LINE 1: INSERT INTO drop_stats_test_subxact DEFAULT VALUES"
postgresql,postgresql,INSERT INTO drop_stats_test_subxact DEFAULT VALUES,stats.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,DROP TABLE drop_stats_test_subxact,stats.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,DROP TABLE drop_stats_test_subxact,stats.sql,DIFFERENT,UndefinedTable,"table ""drop_stats_test_subxact"" does not exist"
postgresql,postgresql,DROP TABLE drop_stats_test_subxact,stats.sql,DIFFERENT,UndefinedTable,"table ""drop_stats_test_subxact"" does not exist"
postgresql,postgresql,"DROP TABLE trunc_stats_test, trunc_stats_test1, trunc_stats_test2, trunc_stats_test3, trunc_stats_test4",stats.sql,SAME,,
postgresql,postgresql,DROP TABLE prevstats,stats.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_last_scan(idx_col, noidx_col) VALUES(1, 1)",stats.sql,SAME,,
postgresql,postgresql,DROP TABLE test_stats_temp,stats.sql,DIFFERENT,UndefinedTable,"table ""test_stats_temp"" does not exist"
postgresql,postgresql,"CREATE table stats_test_tab1 as select generate_series(1,10) a",stats.sql,SAME,,
postgresql,postgresql,"SELECT sum(extends) AS io_sum_shared_before_extends   FROM pg_stat_io WHERE context = 'normal' AND object = 'relation' \gset SELECT sum(writes) AS writes, sum(fsyncs) AS fsyncs   FROM pg_stat_io   WHERE object = 'relation' \gset io_sum_shared_before_ CREATE TABLE test_io_shared(a int)",stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 2: ...at_io WHERE context = 'normal' AND object = 'relation' \gset"
postgresql,postgresql,"INSERT INTO test_io_shared SELECT i FROM generate_series(1,100)i",stats.sql,DIFFERENT,UndefinedTable,"relation ""test_io_shared"" does not exist LINE 1: INSERT INTO test_io_shared SELECT i FROM generate_series(1,1..."
postgresql,postgresql,DROP TABLE test_io_shared,stats.sql,DIFFERENT,UndefinedTable,"table ""test_io_shared"" does not exist"
postgresql,postgresql,"SELECT sum(extends) AS extends, sum(evictions) AS evictions, sum(writes) AS writes   FROM pg_stat_io   WHERE context = 'normal' AND object = 'temp relation' \gset io_sum_local_before_ INSERT INTO test_io_local SELECT generate_series(1, 5000) as id, repeat('a', 200)",stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 3: ...E context = 'normal' AND object = 'temp relation' \gset io_s..."
postgresql,postgresql,"SELECT sum(reuses) AS reuses, sum(reads) AS reads, sum(evictions) AS evictions   FROM pg_stat_io WHERE context = 'vacuum' \gset io_sum_vac_strategy_before_ CREATE TABLE test_io_vac_strategy(a int, b int) WITH (autovacuum_enabled = 'false')",stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 2:   FROM pg_stat_io WHERE context = 'vacuum' \gset io_sum_vac_..."
postgresql,postgresql,"INSERT INTO test_io_vac_strategy SELECT i, i from generate_series(1, 4500)i",stats.sql,DIFFERENT,UndefinedTable,"relation ""test_io_vac_strategy"" does not exist LINE 1: INSERT INTO test_io_vac_strategy SELECT i, i from generate_s..."
postgresql,postgresql,"SELECT sum(extends) AS io_sum_bulkwrite_strategy_extends_before   FROM pg_stat_io WHERE context = 'bulkwrite' \gset CREATE TABLE test_io_bulkwrite_strategy AS SELECT i FROM generate_series(1,100)i",stats.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 2:   FROM pg_stat_io WHERE context = 'bulkwrite' \gset"
postgresql,postgresql,"CREATE TABLE brin_hot (   id  integer PRIMARY KEY,   val integer NOT NULL ) WITH (autovacuum_enabled = off, fillfactor = 70)",stats.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_hot SELECT *, 0 FROM generate_series(1, 235)",stats.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_hot,stats.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_hot_2 (a int, b int)",stats.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_hot_2 VALUES (1, 100)",stats.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_hot_2,stats.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_hot_3 (a int, filler text) WITH (fillfactor = 10)",stats.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_hot_3 SELECT 1, repeat(' ', 500) FROM generate_series(1, 20)",stats.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_hot_3,stats.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest0 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (55) STORED)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest1 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_err_1 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED GENERATED ALWAYS AS (a * 3) STORED)",generated.sql,DIFFERENT,SyntaxError,"multiple generation clauses specified for column ""b"" of table ""gtest_err_1"" LINE 1: ...ARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED GENERATED ..."
postgresql,postgresql,"CREATE TABLE gtest_err_2a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (b * 2) STORED)",generated.sql,DIFFERENT,InvalidObjectDefinition,"cannot use generated column ""b"" in column generation expression LINE 1: ...2a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (b * 2) STO...                                                               DETAIL:  A generated column cannot reference another generated column."
postgresql,postgresql,"CREATE TABLE gtest_err_2b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED, c int GENERATED ALWAYS AS (b * 3) STORED)",generated.sql,DIFFERENT,InvalidObjectDefinition,"cannot use generated column ""b"" in column generation expression LINE 1: ...AYS AS (a * 2) STORED, c int GENERATED ALWAYS AS (b * 3) STO...                                                               DETAIL:  A generated column cannot reference another generated column."
postgresql,postgresql,"CREATE TABLE gtest_err_2c (a int PRIMARY KEY,     b int GENERATED ALWAYS AS (num_nulls(gtest_err_2c)) STORED)",generated.sql,DIFFERENT,InvalidObjectDefinition,cannot use whole-row variable in column generation expression LINE 2:     b int GENERATED ALWAYS AS (num_nulls(gtest_err_2c)) STOR...                                                   DETAIL:  This would cause the generated column to depend on its own value.
postgresql,postgresql,"CREATE TABLE gtest_err_3 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (c * 2) STORED)",generated.sql,DIFFERENT,UndefinedColumn,"column ""c"" does not exist LINE 1: ..._3 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (c * 2) STO..."
postgresql,postgresql,"CREATE TABLE gtest_err_4 (a int PRIMARY KEY, b double precision GENERATED ALWAYS AS (random()) STORED)",generated.sql,DIFFERENT,InvalidObjectDefinition,generation expression is not immutable
postgresql,postgresql,"CREATE TABLE gtest2 (a int, b text GENERATED ALWAYS AS (a || ' sec') STORED)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest2,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_err_5a (a int PRIMARY KEY, b int DEFAULT 5 GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,DIFFERENT,SyntaxError,"both default and generation expression specified for column ""b"" of table ""gtest_err_5a"" LINE 1: ... gtest_err_5a (a int PRIMARY KEY, b int DEFAULT 5 GENERATED ..."
postgresql,postgresql,"CREATE TABLE gtest_err_5b (a int PRIMARY KEY, b int GENERATED ALWAYS AS identity GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,DIFFERENT,SyntaxError,"both identity and generation expression specified for column ""b"" of table ""gtest_err_5b"" LINE 1: ...t PRIMARY KEY, b int GENERATED ALWAYS AS identity GENERATED ..."
postgresql,postgresql,"CREATE TABLE gtest_err_6a (a int PRIMARY KEY, b bool GENERATED ALWAYS AS (xmin <> 37) STORED)",generated.sql,DIFFERENT,InvalidColumnReference,"cannot use system column ""xmin"" in column generation expression LINE 1: ...a (a int PRIMARY KEY, b bool GENERATED ALWAYS AS (xmin <> 37..."
postgresql,postgresql,"CREATE TABLE gtest_err_7a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (avg(a)) STORED)",generated.sql,DIFFERENT,GroupingError,"aggregate functions are not allowed in column generation expressions LINE 1: ...7a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (avg(a)) ST..."
postgresql,postgresql,"CREATE TABLE gtest_err_7b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (row_number() OVER (ORDER BY a)) STORED)",generated.sql,DIFFERENT,WindowingError,"window functions are not allowed in column generation expressions LINE 1: ...7b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (row_number..."
postgresql,postgresql,"CREATE TABLE gtest_err_7c (a int PRIMARY KEY, b int GENERATED ALWAYS AS ((SELECT a)) STORED)",generated.sql,DIFFERENT,FeatureNotSupported,"cannot use subquery in column generation expression LINE 1: ...7c (a int PRIMARY KEY, b int GENERATED ALWAYS AS ((SELECT a)..."
postgresql,postgresql,"CREATE TABLE gtest_err_7d (a int PRIMARY KEY, b int GENERATED ALWAYS AS (generate_series(1, a)) STORED)",generated.sql,DIFFERENT,FeatureNotSupported,"set-returning functions are not allowed in column generation expressions LINE 1: ...7d (a int PRIMARY KEY, b int GENERATED ALWAYS AS (generate_s..."
postgresql,postgresql,"CREATE TABLE gtest_err_8 (a int PRIMARY KEY, b int GENERATED BY DEFAULT AS (a * 2) STORED)",generated.sql,DIFFERENT,SyntaxError,"for a generated column, GENERATED ALWAYS must be specified LINE 1: ...E gtest_err_8 (a int PRIMARY KEY, b int GENERATED BY DEFAULT..."
postgresql,postgresql,INSERT INTO gtest1 VALUES (1),generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1 VALUES (2, DEFAULT)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1 VALUES (3, 33)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1 VALUES (3, 33), (4, 44)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1 VALUES (3, DEFAULT), (4, 44)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1 VALUES (3, 33), (4, DEFAULT)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1 VALUES (3, DEFAULT), (4, DEFAULT)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest1 VALUES (2000000000),generated.sql,DIFFERENT,NumericValueOutOfRange,integer out of range
postgresql,postgresql,"CREATE TABLE gtestx (x int, y int)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtestx VALUES (11, 1), (22, 2), (33, 3)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtestx,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtestm (   id int PRIMARY KEY,   f1 int,   f2 int,   f3 int GENERATED ALWAYS AS (f1 * 2) STORED,   f4 int GENERATED ALWAYS AS (f2 * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtestm VALUES (1, 5, 100)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtestm,generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1v VALUES (4, 8)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1v VALUES (5, DEFAULT)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1v VALUES (6, 66), (7, 77)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1v VALUES (6, DEFAULT), (7, 77)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1v VALUES (6, 66), (7, DEFAULT)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1v VALUES (6, DEFAULT), (7, DEFAULT)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1v VALUES (8, DEFAULT)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,"INSERT INTO gtest1v VALUES (8, DEFAULT), (9, DEFAULT)",generated.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""b"" DETAIL:  Column ""b"" is a generated column."
postgresql,postgresql,CREATE TABLE gtest1_1 () INHERITS (gtest1),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest1_1 VALUES (4),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_normal (a int, b int)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_normal_child (a int, b int GENERATED ALWAYS AS (a * 2) STORED) INHERITS (gtest_normal)",generated.sql,DIFFERENT,InvalidColumnDefinition,"child column ""b"" specifies generation expression HINT:  A child table column cannot be generated unless its parent column is."
postgresql,postgresql,"CREATE TABLE gtest_normal_child (a int, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"DROP TABLE gtest_normal, gtest_normal_child",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtestx (x int, b int DEFAULT 10) INHERITS (gtest1)",generated.sql,DIFFERENT,InvalidColumnDefinition,"column ""b"" inherits from generated column but specifies default"
postgresql,postgresql,"CREATE TABLE gtestx (x int, b int GENERATED ALWAYS AS IDENTITY) INHERITS (gtest1)",generated.sql,DIFFERENT,InvalidColumnDefinition,"column ""b"" inherits from generated column but specifies identity"
postgresql,postgresql,"CREATE TABLE gtestx (x int, b int GENERATED ALWAYS AS (a * 22) STORED) INHERITS (gtest1)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtestxx_1 (a int NOT NULL, b int)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtestxx_3 (a int NOT NULL, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtestxx_4 (b int GENERATED ALWAYS AS (a * 2) STORED, a int NOT NULL)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtesty (x int, b int DEFAULT 55)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest1_y () INHERITS (gtest0, gtesty)",generated.sql,DIFFERENT,DatatypeMismatch,"inherited column ""b"" has a generation conflict"
postgresql,postgresql,DROP TABLE gtesty,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtesty (x int, b int)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest1_y () INHERITS (gtest1, gtesty)",generated.sql,DIFFERENT,DatatypeMismatch,"inherited column ""b"" has a generation conflict"
postgresql,postgresql,DROP TABLE gtesty,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtesty (x int, b int GENERATED ALWAYS AS (x * 22) STORED)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest1_y () INHERITS (gtest1, gtesty)",generated.sql,DIFFERENT,InvalidColumnDefinition,"column ""b"" inherits conflicting generation expressions HINT:  To resolve the conflict, specify a generation expression explicitly."
postgresql,postgresql,"CREATE TABLE gtest1_y (b int GENERATED ALWAYS AS (x + 1) STORED) INHERITS (gtest1, gtesty)",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtestp (f1 int),generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtestc (f2 int GENERATED ALWAYS AS (f1+1) STORED) INHERITS(gtestp),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtestc values(42),generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtestp CASCADE,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest3 (a int, b int GENERATED ALWAYS AS (a * 3) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest3 (a) VALUES (1), (2), (3), (NULL)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest3a (a text, b text GENERATED ALWAYS AS (a || '+' || a) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest3a (a) VALUES ('a'), ('b'), ('c'), (NULL)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest1 (a) VALUES (1), (2)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest3 (a) VALUES (1), (2)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest2 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (NULL) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest2 VALUES (1),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_varlena (a varchar, b varchar GENERATED ALWAYS AS (a) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest_varlena (a) VALUES('01234567890123456789'),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest_varlena (a) VALUES(NULL),generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest_varlena,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest4 (     a int,     b double_int GENERATED ALWAYS AS ((a * 2, a * 3)) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest4 VALUES (1), (6)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest4,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_tableoid (   a int PRIMARY KEY,   b bool GENERATED ALWAYS AS (tableoid = 'gtest_tableoid'::regclass) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest_tableoid VALUES (1), (2)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest10 (a int PRIMARY KEY, b int, c int GENERATED ALWAYS AS (b * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest10a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest10a (a) VALUES (1),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest11s (a int PRIMARY KEY, b int, c int GENERATED ALWAYS AS (b * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest11s VALUES (1, 10), (2, 20)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest12s (a int PRIMARY KEY, b int, c int GENERATED ALWAYS AS (gf1(b)) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest12s VALUES (1, 10), (2, 20)",generated.sql,SAME,,
postgresql,postgresql,"DROP TABLE gtest11s, gtest12s",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest20 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED CHECK (b < 50))",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20 (a) VALUES (10),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20 (a) VALUES (30),generated.sql,DIFFERENT,CheckViolation,"new row for relation ""gtest20"" violates check constraint ""gtest20_b_check"" DETAIL:  Failing row contains (30, 60)."
postgresql,postgresql,"CREATE TABLE gtest20a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20a (a) VALUES (10),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20a (a) VALUES (30),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest20b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20b (a) VALUES (10),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest20b (a) VALUES (30),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest21a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (nullif(a, 0)) STORED NOT NULL)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest21a (a) VALUES (1),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest21a (a) VALUES (0),generated.sql,DIFFERENT,NotNullViolation,"null value in column ""b"" of relation ""gtest21a"" violates not-null constraint DETAIL:  Failing row contains (0, null)."
postgresql,postgresql,"CREATE TABLE gtest21b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (nullif(a, 0)) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest21b (a) VALUES (1),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest21b (a) VALUES (0),generated.sql,DIFFERENT,NotNullViolation,"null value in column ""b"" of relation ""gtest21b"" violates not-null constraint DETAIL:  Failing row contains (0, null)."
postgresql,postgresql,INSERT INTO gtest21b (a) VALUES (0),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest22a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a / 2) STORED UNIQUE)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest22a VALUES (2),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest22a VALUES (3),generated.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""gtest22a_b_key"" DETAIL:  Key (b)=(1) already exists."
postgresql,postgresql,INSERT INTO gtest22a VALUES (4),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest22b (a int, b int GENERATED ALWAYS AS (a / 2) STORED, PRIMARY KEY (a, b))",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest22b VALUES (2),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest22b VALUES (2),generated.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""gtest22b_pkey"" DETAIL:  Key (a, b)=(2, 1) already exists."
postgresql,postgresql,"CREATE TABLE gtest22c (a int, b int GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest22c VALUES (1), (2), (3)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest23a (x int PRIMARY KEY, y int)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest23a VALUES (1, 11), (2, 22), (3, 33)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest23x (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x) ON UPDATE CASCADE)",generated.sql,DIFFERENT,SyntaxError,invalid ON UPDATE action for foreign key constraint containing generated column
postgresql,postgresql,"CREATE TABLE gtest23x (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x) ON DELETE SET NULL)",generated.sql,DIFFERENT,SyntaxError,invalid ON DELETE action for foreign key constraint containing generated column
postgresql,postgresql,"CREATE TABLE gtest23b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x))",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest23b VALUES (1),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest23b VALUES (5),generated.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""gtest23b"" violates foreign key constraint ""gtest23b_b_fkey"" DETAIL:  Key (b)=(10) is not present in table ""gtest23a""."
postgresql,postgresql,DROP TABLE gtest23b,generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest23a,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest23p (x int, y int GENERATED ALWAYS AS (x * 2) STORED, PRIMARY KEY (y))",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest23p VALUES (1), (2), (3)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest23q (a int PRIMARY KEY, b int REFERENCES gtest23p (y))",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest23q VALUES (1, 2)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest23q VALUES (2, 5)",generated.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""gtest23q"" violates foreign key constraint ""gtest23q_b_fkey"" DETAIL:  Key (b)=(5) is not present in table ""gtest23p""."
postgresql,postgresql,"CREATE TABLE gtest24 (a int PRIMARY KEY, b gtestdomain1 GENERATED ALWAYS AS (a * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest24 (a) VALUES (4),generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest24 (a) VALUES (6),generated.sql,DIFFERENT,CheckViolation,"value for domain gtestdomain1 violates check constraint ""gtestdomain1_check"""
postgresql,postgresql,CREATE TABLE gtest28 OF gtest_type (f1 WITH OPTIONS GENERATED ALWAYS AS (f2 *2) STORED),generated.sql,DIFFERENT,FeatureNotSupported,generated columns are not supported on typed tables
postgresql,postgresql,"CREATE TABLE gtest_parent (f1 date NOT NULL, f2 bigint, f3 bigint) PARTITION BY RANGE (f1)",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest_child PARTITION OF gtest_parent (     f3 WITH OPTIONS GENERATED ALWAYS AS (f2 * 2) STORED ) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),generated.sql,DIFFERENT,InvalidColumnDefinition,"child column ""f3"" specifies generation expression HINT:  A child table column cannot be generated unless its parent column is."
postgresql,postgresql,"CREATE TABLE gtest_child (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED)",generated.sql,SAME,,
postgresql,postgresql,"DROP TABLE gtest_parent, gtest_child",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_parent (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE (f1)",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest_child PARTITION OF gtest_parent   FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest_child2 PARTITION OF gtest_parent (     f3 WITH OPTIONS GENERATED ALWAYS AS (f2 * 22) STORED   ) FOR VALUES FROM ('2016-08-01') TO ('2016-09-01'),generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest_child3 PARTITION OF gtest_parent (     f3 DEFAULT 42   ) FOR VALUES FROM ('2016-09-01') TO ('2016-10-01'),generated.sql,DIFFERENT,InvalidColumnDefinition,"column ""f3"" inherits from generated column but specifies default"
postgresql,postgresql,CREATE TABLE gtest_child3 PARTITION OF gtest_parent (     f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY   ) FOR VALUES FROM ('2016-09-01') TO ('2016-10-01'),generated.sql,DIFFERENT,FeatureNotSupported,identity columns are not supported on partitions
postgresql,postgresql,"CREATE TABLE gtest_child3 (f1 date NOT NULL, f2 bigint, f3 bigint)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest_child3,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_child3 (f1 date NOT NULL, f2 bigint, f3 bigint DEFAULT 42)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest_child3,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_child3 (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS IDENTITY)",generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest_child3,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_child3 (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 33) STORED)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest_parent (f1, f2) VALUES ('2016-07-15', 1)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest_parent (f1, f2) VALUES ('2016-07-15', 2)",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest_parent (f1, f2) VALUES ('2016-08-15', 3)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest_part_key (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE (f3)",generated.sql,DIFFERENT,InvalidObjectDefinition,"cannot use generated column in partition key LINE 1: ...GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE (f3)                                                                      DETAIL:  Column ""f3"" is a generated column."
postgresql,postgresql,"CREATE TABLE gtest_part_key (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE ((f3 * 3))",generated.sql,DIFFERENT,InvalidObjectDefinition,"cannot use generated column in partition key LINE 1: ...TED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE ((f3 * 3))                                                                DETAIL:  Column ""f3"" is a generated column."
postgresql,postgresql,CREATE TABLE gtest25 (a int PRIMARY KEY),generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest25 VALUES (3), (4)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest27 (     a int,     b int,     x int GENERATED ALWAYS AS ((a + b) * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest27 (a, b) VALUES (3, 7), (4, 11)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest29 (     a int,     b int GENERATED ALWAYS AS (a * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest29 (a) VALUES (3), (4)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest29 (a) VALUES (5),generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest29 (a, b) VALUES (6, 66)",generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest30 (     a int,     b int GENERATED ALWAYS AS (a * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest30_1 () INHERITS (gtest30),generated.sql,SAME,,
postgresql,postgresql,DROP TABLE gtest30 CASCADE,generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest30 (     a int,     b int GENERATED ALWAYS AS (a * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest30_1 () INHERITS (gtest30),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest26 (     a int PRIMARY KEY,     b int GENERATED ALWAYS AS (a * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,"INSERT INTO gtest26 (a) VALUES (-2), (0), (3)",generated.sql,SAME,,
postgresql,postgresql,INSERT INTO gtest26 (a) VALUES (1),generated.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gtest28a (   a int,   b int,   c int,   x int GENERATED ALWAYS AS (b * 2) STORED )",generated.sql,SAME,,
postgresql,postgresql,CREATE TABLE gtest28b (LIKE gtest28a INCLUDING GENERATED),generated.sql,SAME,,
postgresql,postgresql,DROP TABLE IF EXISTS target,merge.sql,SAME,,
postgresql,postgresql,DROP TABLE IF EXISTS source,merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE target (tid integer, balance integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE source (sid integer, delta integer)    WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO target VALUES (1, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO target VALUES (2, 20)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO target VALUES (3, 30)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE target2 (tid integer, balance integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE source2 (sid integer, delta integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,MERGE INTO target t USING source AS s ON t.tid = s.sid WHEN NOT MATCHED THEN 	INSERT INTO target DEFAULT VALUES,merge.sql,DIFFERENT,SyntaxError,"syntax error at or near ""INTO"" LINE 5:  INSERT INTO target DEFAULT VALUES"
postgresql,postgresql,"INSERT INTO source VALUES (4, 40)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO target SELECT generate_series(1000,2500), 0",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (2, 5)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (3, 20)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (2, 5)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (2, 5)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (4, 40)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (4, 40)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (5, 50)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO source VALUES (5, 50)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE wq_target (tid integer not null, balance integer DEFAULT -1)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE wq_source (balance integer, sid integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO wq_source (sid, balance) VALUES (1, 100)",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE wq_target, wq_source",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sq_target (tid integer NOT NULL, balance integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sq_source (delta integer, sid integer, balance integer DEFAULT 0)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO sq_target(tid, balance) VALUES (1,100), (2,200), (3,300)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO sq_source(sid, delta) VALUES (1,10), (2,20), (4,40)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO sq_source (sid, balance, delta) VALUES (-1, -1, -10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO sq_source (sid, balance, delta) VALUES (-1, -1, -10)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE merge_actions(action text, abbrev text)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO merge_actions VALUES ('INSERT', 'ins'), ('UPDATE', 'upd'), ('DELETE', 'del')",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sq_target_merge_log (tid integer NOT NULL, last_change text)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO sq_target_merge_log VALUES (1, 'Original value')",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ex_mtarget (a int, b int)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ex_msource (a int, b int)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO ex_mtarget SELECT i, i*10 FROM generate_series(1,100,2) i",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO ex_msource SELECT i, i*10 FROM generate_series(1,100,1) i",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE ex_msource, ex_mtarget",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE src (a int, b int, c int, d int)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tgt (a int, b int, c int, d int)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref (ab int, cd int)",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE src, tgt, ref",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE sq_target, sq_target_merge_log, sq_source CASCADE",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pa_target (tid integer, balance float, val text) 	PARTITION BY LIST (tid)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part1 PARTITION OF pa_target FOR VALUES IN (1,4)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part2 PARTITION OF pa_target FOR VALUES IN (2,5,6)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part3 PARTITION OF pa_target FOR VALUES IN (3,8,9)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE part4 PARTITION OF pa_target DEFAULT   WITH (autovacuum_enabled=off),merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pa_source (sid integer, delta float)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id",merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_target CASCADE,merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pa_target (tid integer, balance float, val text) 	PARTITION BY LIST (tid)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part1 (tid integer, balance float, val text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part2 (balance float, tid integer, val text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part3 (tid integer, balance float, val text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part4 (extraid text, tid integer, balance float, val text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id",merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_source,merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_target CASCADE,merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pa_target (logts timestamp, tid integer, balance float, val text) 	PARTITION BY RANGE (logts)",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_m01 PARTITION OF pa_target 	FOR VALUES FROM ('2017-01-01') TO ('2017-02-01') 	PARTITION BY LIST (tid),merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_m01_odd PARTITION OF part_m01 	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_m01_even PARTITION OF part_m01 	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_m02 PARTITION OF pa_target 	FOR VALUES FROM ('2017-02-01') TO ('2017-03-01') 	PARTITION BY LIST (tid),merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_m02_odd PARTITION OF part_m02 	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_m02_even PARTITION OF part_m02 	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pa_source (sid integer, delta float)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_target SELECT '2017-01-31', id, id * 100, 'initial' FROM generate_series(1,9,3) AS id",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_target SELECT '2017-02-28', id, id * 100, 'initial' FROM generate_series(2,9,3) AS id",merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_source,merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_target CASCADE,merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE pa_target (tid integer PRIMARY KEY) PARTITION BY LIST (tid),merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE pa_targetp PARTITION OF pa_target DEFAULT,merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE pa_source (sid integer),merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO pa_source VALUES (1), (2)",merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_targetp,merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_source,merge.sql,SAME,,
postgresql,postgresql,DROP TABLE pa_target CASCADE,merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cj_target (tid integer, balance float, val text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cj_source1 (sid1 integer, scat integer, delta integer)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cj_source2 (sid2 integer, sval text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source1 VALUES (1, 10, 100)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source1 VALUES (1, 20, 200)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source1 VALUES (2, 20, 300)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source1 VALUES (3, 10, 400)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source2 VALUES (1, 'initial source2')",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source2 VALUES (2, 'initial source2')",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO cj_source2 VALUES (3, 'initial source2')",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE cj_source2, cj_source1, cj_target",merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fs_target (a int, b int, c text)   WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,DROP TABLE fs_target,merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE measurement (     city_id         int not null,     logdate         date not null,     peaktemp        int,     unitsales       int ) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE measurement_y2006m02 (     CHECK ( logdate >= DATE '2006-02-01' AND logdate < DATE '2006-03-01' ) ) INHERITS (measurement) WITH (autovacuum_enabled=off),merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE measurement_y2006m03 (     CHECK ( logdate >= DATE '2006-03-01' AND logdate < DATE '2006-04-01' ) ) INHERITS (measurement) WITH (autovacuum_enabled=off),merge.sql,SAME,,
postgresql,postgresql,"CREATE TABLE measurement_y2007m01 (     filler          text,     peaktemp        int,     logdate         date not null,     city_id         int not null,     unitsales       int     CHECK ( logdate >= DATE '2007-01-01' AND logdate < DATE '2007-02-01') ) WITH (autovacuum_enabled=off)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (0, '2005-07-21', 5, 15)",merge.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE FUNCTION measurement_insert_trigger() RETURNS TRIGGER AS $$ BEGIN     IF ( NEW.logdate >= DATE '2006-02-01' AND          NEW.logdate < DATE '2006-03-01' ) THEN         INSERT INTO measurement_y2006m02 VALUES (NEW.*);     ELSIF ( NEW.logdate >= DATE '2006-03-01' AND             NEW.logdate < DATE '2006-04-01' ) THEN         INSERT INTO measurement_y2006m03 VALUES (NEW.*);     ELSIF ( NEW.logdate >= DATE '2007-01-01' AND             NEW.logdate < DATE '2007-02-01' ) THEN         INSERT INTO measurement_y2007m01 (city_id, logdate, peaktemp, unitsales)             VALUES (NEW.*);     ELSE         RAISE EXCEPTION 'Date out of range.  Fix the measurement_insert_trigger() function!';     END IF;     RETURN NULL; END; $$ LANGUAGE plpgsql",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2006-02-10', 35, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2006-02-16', 45, 20)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2006-03-17', 25, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2006-03-27', 15, 40)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2007-01-15', 10, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO measurement VALUES (1, '2007-01-17', 10, 10)",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE new_measurement (LIKE measurement) WITH (autovacuum_enabled=off),merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (0, '2005-07-21', 25, 20)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2006-03-01', 20, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2006-02-16', 50, 10)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (2, '2006-02-10', 20, 20)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2006-03-27', NULL, NULL)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2007-01-17', NULL, NULL)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2007-01-15', 5, NULL)",merge.sql,SAME,,
postgresql,postgresql,"INSERT INTO new_measurement VALUES (1, '2007-01-16', 10, 10)",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE measurement, new_measurement CASCADE",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE target, target2",merge.sql,SAME,,
postgresql,postgresql,"DROP TABLE source, source2",merge.sql,SAME,,
postgresql,postgresql,CREATE TABLE nummultirange_test (nmr NUMMULTIRANGE),multirangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO nummultirange_test VALUES('{}'),multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES('{[,)}')",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES('{[3,]}')",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES('{[,), [3,]}')",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES('{[, 5)}')",multirangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO nummultirange_test VALUES(nummultirange()),multirangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO nummultirange_test VALUES(nummultirange(variadic '{}'::numrange[])),multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES(nummultirange(numrange(1.1, 2.2)))",multirangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO nummultirange_test VALUES('{empty}'),multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES(nummultirange(numrange(1.7, 1.7, '[]'), numrange(1.7, 1.9)))",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test VALUES(nummultirange(numrange(1.7, 1.7, '[]'), numrange(1.9, 2.1)))",multirangetypes.sql,SAME,,
postgresql,postgresql,create table test_multirange_gist(mr int4multirange),multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_multirange_gist select int4multirange(int4range(g, g+10),int4range(g+20, g+30),int4range(g+40, g+50)) from generate_series(1,2000) g",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_multirange_gist select '{}'::int4multirange from generate_series(1,500) g",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_multirange_gist select int4multirange(int4range(g, g+10000)) from generate_series(1,1000) g",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_multirange_gist select int4multirange(int4range(NULL, g*10, '(]'), int4range(g*10, g*20, '(]')) from generate_series(1,100) g",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into test_multirange_gist select int4multirange(int4range(g*10, g*20, '(]'), int4range(g*20, NULL, '(]')) from generate_series(1,100) g",multirangetypes.sql,SAME,,
postgresql,postgresql,drop table test_multirange_gist,multirangetypes.sql,SAME,,
postgresql,postgresql,"create table reservations ( room_id integer not null, booked_during daterange )",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into reservations values (1, daterange('2018-07-01', '2018-07-07')), (1, daterange('2018-07-07', '2018-07-14')), (1, daterange('2018-07-20', '2018-07-22')), (2, daterange('2018-07-01', '2018-07-03')), (3, NULL), (4, NULL), (4, NULL), (5, NULL), (5, daterange('2018-07-01', '2018-07-03')), (6, daterange('2018-07-01', '2018-07-07')), (6, daterange('2018-07-05', '2018-07-10')), (7, daterange('2018-07-01', '2018-07-07')), (7, daterange('2018-07-07', '2018-07-14')), (8, 'empty'::daterange)",multirangetypes.sql,SAME,,
postgresql,postgresql,create table nummultirange_test2(nmr nummultirange),multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test2 VALUES('{[, 5)}')",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test2 VALUES(nummultirange(numrange(1.1, 2.2)))",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test2 VALUES(nummultirange(numrange(1.1, 2.2)))",multirangetypes.sql,SAME,,
postgresql,postgresql,"INSERT INTO nummultirange_test2 VALUES(nummultirange(numrange(1.1, 2.2,'()')))",multirangetypes.sql,SAME,,
postgresql,postgresql,INSERT INTO nummultirange_test2 VALUES('{}'),multirangetypes.sql,SAME,,
postgresql,postgresql,DROP TABLE nummultirange_test2,multirangetypes.sql,SAME,,
postgresql,postgresql,"create table float8multirange_test(f8mr float8multirange, i int)",multirangetypes.sql,DIFFERENT,UndefinedObject,"type ""float8multirange"" does not exist LINE 1: create table float8multirange_test(f8mr float8multirange, i ..."
postgresql,postgresql,"insert into float8multirange_test values(float8multirange(float8range(-100.00007, '1.111113e9')), 42)",multirangetypes.sql,DIFFERENT,UndefinedTable,"relation ""float8multirange_test"" does not exist LINE 1: insert into float8multirange_test values(float8multirange(fl..."
postgresql,postgresql,drop table float8multirange_test,multirangetypes.sql,DIFFERENT,UndefinedTable,"table ""float8multirange_test"" does not exist"
postgresql,postgresql,drop table test1,multirangetypes.sql,SAME,,
postgresql,postgresql,"create table i8mr_array (f1 int, f2 int8multirange[])",multirangetypes.sql,SAME,,
postgresql,postgresql,"insert into i8mr_array values (42, array[int8multirange(int8range(1,10)), int8multirange(int8range(2,20))])",multirangetypes.sql,SAME,,
postgresql,postgresql,drop table i8mr_array,multirangetypes.sql,SAME,,
postgresql,postgresql,"create table t(a integer, b integer)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t(a, b) select i/100 + 1, i + 1 from generate_series(0, 999) n(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t(a, b) select i/50 + 1, i + 1 from generate_series(0, 999) n(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t(a, b) select (case when i < 5 then i else 9 end), i from generate_series(1, 1000) n(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t(a, b) select i / 10, i from generate_series(1, 1000) n(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t(a, b) select i, i from generate_series(1, 1000) n(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,drop table t,incremental_sort.sql,SAME,,
postgresql,postgresql,"create table t (a int, b int, c int)",incremental_sort.sql,SAME,,
postgresql,postgresql,"insert into t select mod(i,10),mod(i,10),i from generate_series(1,10000) s(i)",incremental_sort.sql,SAME,,
postgresql,postgresql,drop table t,incremental_sort.sql,SAME,,
postgresql,postgresql,"create table point_table (a point, b int)",incremental_sort.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c text) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (10),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (10) to (100) 	partition by range (b),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart21 partition of idxpart2 for values from (0) to (100),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c text) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (10),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,CREATE TABLE idxpart (col1 INT) PARTITION BY RANGE (col1),indexing.sql,SAME,,
postgresql,postgresql,CREATE TABLE idxpart_two (col2 INT),indexing.sql,SAME,,
postgresql,postgresql,"DROP table idxpart, idxpart_two",indexing.sql,SAME,,
postgresql,postgresql,"CREATE TABLE idxpart (a INT, b TEXT, c INT) PARTITION BY RANGE(a)",indexing.sql,SAME,,
postgresql,postgresql,CREATE TABLE idxpart1 PARTITION OF idxpart FOR VALUES FROM (MINVALUE) TO (MAXVALUE),indexing.sql,SAME,,
postgresql,postgresql,"INSERT INTO idxpart (a, b, c) SELECT i, i, i FROM generate_series(1, 50) i",indexing.sql,SAME,,
postgresql,postgresql,DROP TABLE idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c text) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 partition of idxpart for values from (0, 0) to (10, 10)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (10),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart1,indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart_temp,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 partition of idxpart for values from (0, 0) to (10, 10)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (a int, b int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (100),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (100) to (1000)   partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart21 partition of idxpart2 for values from (100) to (200),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart22 partition of idxpart2 for values from (200) to (300),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c text, d bool) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart including indexes),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (1) to (1000) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart11 partition of idxpart1 for values from (1) to (100),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart3 partition of idxpart for values from (2000) to (3000),indexing.sql,SAME,,
postgresql,postgresql,"drop table idxpart, idxpart1, idxpart2, idxpart3",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart3 partition of idxpart for values from (2000) to (3000),indexing.sql,SAME,,
postgresql,postgresql,"drop table idxpart, idxpart1, idxpart2, idxpart3",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c int) partition by range(a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (250),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (250) to (500),indexing.sql,SAME,,
postgresql,postgresql,"drop table idxpart, idxpart2",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart3 partition of idxpart for values from (2000) to (3000),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a text) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart3 partition of idxpart for values from ('ccc') to ('ddd'),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart4 partition of idxpart for values from ('ddd') to ('eee'),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a text) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart3 partition of idxpart for values from ('ccc') to ('ddd'),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart4 partition of idxpart for values from ('ddd') to ('eee'),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (col1 int, a int, col2 int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (b int, col1 int, col2 int, col3 int, a int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, c text) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (c text, a int, b int)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart2 (c text, a int, b int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (col1 int, col2 int, a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (col2 int, b int, col1 int, a int)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart2 (col1 int, col2 int, b int, a int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (col1 int, a int, col3 int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (col1 int, col2 int, col3 int, col4 int, b int, a int)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart2 (col1 int, col2 int, b int, a int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (drop_1 int, drop_2 int, col_keep int, drop_3 int)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (col_keep int) partition by range (col_keep),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart(drop_1 int, drop_2 int, col_keep int, drop_3 int) partition by range (col_keep)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 (col_keep int),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int primary key, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table failpart partition of idxpart (b primary key) for values from (0) to (100),indexing.sql,DIFFERENT,InvalidTableDefinition,"multiple primary keys for table ""failpart"" are not allowed"
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1pk partition of idxpart (a primary key) for values from (0) to (100),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int unique, b int) partition by range (a, b)",indexing.sql,DIFFERENT,FeatureNotSupported,"unique constraint on partitioned table must include all partitioning columns DETAIL:  UNIQUE constraint on table ""idxpart"" lacks column ""b"" which is part of the partition key."
postgresql,postgresql,"create table idxpart (a int, b int unique) partition by range (a, b)",indexing.sql,DIFFERENT,FeatureNotSupported,"unique constraint on partitioned table must include all partitioning columns DETAIL:  UNIQUE constraint on table ""idxpart"" lacks column ""a"" which is part of the partition key."
postgresql,postgresql,"create table idxpart (a int primary key, b int) partition by range (b, a)",indexing.sql,DIFFERENT,FeatureNotSupported,"unique constraint on partitioned table must include all partitioning columns DETAIL:  PRIMARY KEY constraint on table ""idxpart"" lacks column ""b"" which is part of the partition key."
postgresql,postgresql,"create table idxpart (a int, b int primary key) partition by range (b, a)",indexing.sql,DIFFERENT,FeatureNotSupported,"unique constraint on partitioned table must include all partitioning columns DETAIL:  PRIMARY KEY constraint on table ""idxpart"" lacks column ""a"" which is part of the partition key."
postgresql,postgresql,"create table idxpart (a int, b int, c text, primary key  (a, b, c)) partition by range (b, c, a)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, exclude USING GIST (a with = )) partition by range (a)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, exclude USING GIST (a wit..."
postgresql,postgresql,drop table idxpart,indexing.sql,DIFFERENT,UndefinedTable,"table ""idxpart"" does not exist"
postgresql,postgresql,"create table idxpart (a int4range, b int4range, exclude USING GIST (a with =, b with =)) partition by range (a, b)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, b int4range, exclude USIN..."
postgresql,postgresql,drop table idxpart,indexing.sql,DIFFERENT,UndefinedTable,"table ""idxpart"" does not exist"
postgresql,postgresql,"create table idxpart (a int4range, b int4range, exclude USING GIST (a with =, b with =)) partition by range (a)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, b int4range, exclude USIN..."
postgresql,postgresql,drop table idxpart,indexing.sql,DIFFERENT,UndefinedTable,"table ""idxpart"" does not exist"
postgresql,postgresql,"create table idxpart (a int4range, b int4range, exclude USING GIST (a with = )) partition by range (a, b)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, b int4range, exclude USIN..."
postgresql,postgresql,"create table idxpart (a int4range, exclude USING GIST (a with -|- )) partition by range (a)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, exclude USING GIST (a wit..."
postgresql,postgresql,"create table idxpart (a int4range, b int4range, exclude USING GIST (a with =, b with &&)) partition by range (a)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: create table idxpart (a int4range, b int4range, exclude USIN..."
postgresql,postgresql,drop table idxpart,indexing.sql,DIFFERENT,UndefinedTable,"table ""idxpart"" does not exist"
postgresql,postgresql,"create table idxpart (a int4range, b int4range, c int4range, exclude USING GIST (b with =, c with &&)) partition by range (a)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: ...e idxpart (a int4range, b int4range, c int4range, exclude US..."
postgresql,postgresql,"create table idxpart (a int4range, b int4range, c int4range, exclude USING GIST (a with =, b with =, c with &&)) partition by range (a, b)",indexing.sql,DIFFERENT,FeatureNotSupported,"exclusion constraints are not supported on partitioned tables LINE 1: ...e idxpart (a int4range, b int4range, c int4range, exclude US..."
postgresql,postgresql,drop table idxpart,indexing.sql,DIFFERENT,UndefinedTable,"table ""idxpart"" does not exist"
postgresql,postgresql,"create table idxpart (a int primary key, b int) partition by range ((b + a))",indexing.sql,DIFFERENT,FeatureNotSupported,unsupported PRIMARY KEY constraint with partition key definition DETAIL:  PRIMARY KEY constraints cannot be used when partition keys include expressions.
postgresql,postgresql,"create table idxpart (a int unique, b int) partition by range ((b + a))",indexing.sql,DIFFERENT,FeatureNotSupported,unsupported UNIQUE constraint with partition key definition DETAIL:  UNIQUE constraints cannot be used when partition keys include expressions.
postgresql,postgresql,"create table idxpart (a int, b int, c text) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 partition of idxpart for values from (0, 0) to (1000, 1000)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range, c int4range) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int4range, b int4range, c int4range) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, primary key (a, b)) partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 partition of idxpart for values from (1, 1) to (10, 10)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart2 partition of idxpart for values from (10, 10) to (20, 20)   partition by range (b)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart21 partition of idxpart2 for values from (10) to (15),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart22 partition of idxpart2 for values from (15) to (20),indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart3 (b int not null, a int not null)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, primary key (a)) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (0) to (1000) partition by range (b),indexing.sql,DIFFERENT,FeatureNotSupported,"unique constraint on partitioned table must include all partitioning columns DETAIL:  PRIMARY KEY constraint on table ""idxpart2"" lacks column ""b"" which is part of the partition key."
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int unique, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (a int not null, b int, unique (a, b))   partition by range (a, b)",indexing.sql,SAME,,
postgresql,postgresql,"DROP TABLE idxpart, idxpart1",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, primary key (a, b)) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (0) to (1000) partition by range (b),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart21 partition of idxpart2 for values from (0) to (1000),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (i int) partition by hash (i),indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart0 partition of idxpart (i) for values with (modulus 2, remainder 0)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 partition of idxpart (i) for values with (modulus 2, remainder 1)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"CREATE TABLE idxpart (c1 INT PRIMARY KEY, c2 INT, c3 VARCHAR(10)) PARTITION BY RANGE(c1)",indexing.sql,SAME,,
postgresql,postgresql,CREATE TABLE idxpart1 (LIKE idxpart),indexing.sql,SAME,,
postgresql,postgresql,"DROP TABLE idxpart, idxpart1",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int, primary key (a)) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (a int not null, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart11 (a int not null, b int primary key)",indexing.sql,SAME,,
postgresql,postgresql,"drop table idxpart, idxpart1, idxpart11",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart0 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart0 (like idxpart),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (a int not null, b int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart1 (a int not null, b int)",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b text, primary key (a, b)) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (100000),indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart2 (c int, like idxpart)",indexing.sql,SAME,,
postgresql,postgresql,"insert into idxpart2 (c, a, b) values (42, 572814, 'inserted first')",indexing.sql,SAME,,
postgresql,postgresql,"insert into idxpart values (0, 'zero'), (42, 'life'), (2^16, 'sixteen')",indexing.sql,SAME,,
postgresql,postgresql,"insert into idxpart select 2^g, format('two to power of %s', g) from generate_series(15, 17) g",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""idxpart1_a_idx"" DETAIL:  Key (a)=(65536) already exists."
postgresql,postgresql,"insert into idxpart values (16, 'sixteen')",indexing.sql,SAME,,
postgresql,postgresql,"insert into idxpart (b, a) values ('one', 142857), ('two', 285714)",indexing.sql,SAME,,
postgresql,postgresql,"insert into idxpart select a * 2, b || b from idxpart where a between 2^16 and 2^19",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""idxpart2_a_idx"" DETAIL:  Key (a)=(285714) already exists."
postgresql,postgresql,"insert into idxpart values (572814, 'five')",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""idxpart2_a_idx"" DETAIL:  Key (a)=(572814) already exists."
postgresql,postgresql,"insert into idxpart values (857142, 'six')",indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart (a int, b text, c int[]) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (100000),indexing.sql,SAME,,
postgresql,postgresql,drop table idxpart,indexing.sql,SAME,,
postgresql,postgresql,create table idxpart (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart1 partition of idxpart for values from (0) to (100),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart2 partition of idxpart for values from (100) to (1000)   partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart21 partition of idxpart2 for values from (100) to (200),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart22 partition of idxpart2 for values from (200) to (300),indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart_another (a int, b int, primary key (a, b)) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart_another_1 partition of idxpart_another for values from (0) to (100),indexing.sql,SAME,,
postgresql,postgresql,"create table idxpart3 (c int, b int, a int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table idxpart31 partition of idxpart3 for values from (1000) to (1200),indexing.sql,SAME,,
postgresql,postgresql,create table idxpart32 partition of idxpart3 for values from (1200) to (1400),indexing.sql,SAME,,
postgresql,postgresql,create table pk (a int primary key) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table pk1 partition of pk for values from (0) to (1000),indexing.sql,SAME,,
postgresql,postgresql,"create table pk2 (b int, a int)",indexing.sql,SAME,,
postgresql,postgresql,create table pk3 partition of pk for values from (2000) to (3000),indexing.sql,SAME,,
postgresql,postgresql,create table pk4 (like pk),indexing.sql,SAME,,
postgresql,postgresql,create table pk5 (like pk) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table pk51 partition of pk5 for values from (4000) to (4500),indexing.sql,SAME,,
postgresql,postgresql,create table pk52 partition of pk5 for values from (4500) to (5000),indexing.sql,SAME,,
postgresql,postgresql,"create table covidxpart (a int, b int) partition by list (a)",indexing.sql,SAME,,
postgresql,postgresql,create table covidxpart1 partition of covidxpart for values in (1),indexing.sql,SAME,,
postgresql,postgresql,create table covidxpart2 partition of covidxpart for values in (2),indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (1, 1)",indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (1, 1)",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covidxpart1_a_b_idx"" DETAIL:  Key (a)=(1) already exists."
postgresql,postgresql,"create table covidxpart3 (b int, c int, a int)",indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (3, 1)",indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (3, 1)",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covidxpart3_a_b_idx"" DETAIL:  Key (a)=(3) already exists."
postgresql,postgresql,"create table covidxpart4 (b int, a int)",indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (4, 1)",indexing.sql,SAME,,
postgresql,postgresql,"insert into covidxpart values (4, 1)",indexing.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covidxpart4_a_b_idx"" DETAIL:  Key (a)=(4) already exists."
postgresql,postgresql,create table parted_pk_detach_test (a int primary key) partition by list (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_pk_detach_test1 partition of parted_pk_detach_test for values in (1),indexing.sql,SAME,,
postgresql,postgresql,"drop table parted_pk_detach_test, parted_pk_detach_test1",indexing.sql,SAME,,
postgresql,postgresql,create table parted_uniq_detach_test (a int unique) partition by list (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_uniq_detach_test1 partition of parted_uniq_detach_test for values in (1),indexing.sql,SAME,,
postgresql,postgresql,"drop table parted_uniq_detach_test, parted_uniq_detach_test1",indexing.sql,SAME,,
postgresql,postgresql,"create table parted_index_col_drop(a int, b int, c int)   partition by list (a)",indexing.sql,SAME,,
postgresql,postgresql,create table parted_index_col_drop1 partition of parted_index_col_drop   for values in (1) partition by list (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_index_col_drop2 partition of parted_index_col_drop   for values in (2) partition by list (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_index_col_drop11 partition of parted_index_col_drop1   for values in (1),indexing.sql,SAME,,
postgresql,postgresql,drop table parted_index_col_drop,indexing.sql,SAME,,
postgresql,postgresql,create table parted_inval_tab (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_inval_tab_1 (a int) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_inval_tab_1_1 partition of parted_inval_tab_1   for values from (0) to (10),indexing.sql,SAME,,
postgresql,postgresql,create table parted_inval_tab_1_2 partition of parted_inval_tab_1   for values from (10) to (20),indexing.sql,SAME,,
postgresql,postgresql,drop table parted_inval_tab,indexing.sql,SAME,,
postgresql,postgresql,"create table parted_isvalid_tab (a int, b int) partition by range (a)",indexing.sql,SAME,,
postgresql,postgresql,create table parted_isvalid_tab_1 partition of parted_isvalid_tab   for values from (1) to (10) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_isvalid_tab_2 partition of parted_isvalid_tab   for values from (10) to (20) partition by range (a),indexing.sql,SAME,,
postgresql,postgresql,create table parted_isvalid_tab_11 partition of parted_isvalid_tab_1   for values from (1) to (5),indexing.sql,SAME,,
postgresql,postgresql,create table parted_isvalid_tab_12 partition of parted_isvalid_tab_1   for values from (5) to (10),indexing.sql,SAME,,
postgresql,postgresql,"insert into parted_isvalid_tab_11 values (1, 0)",indexing.sql,SAME,,
postgresql,postgresql,drop table parted_isvalid_tab,indexing.sql,SAME,,
postgresql,postgresql,create table parted_replica_tab (id int not null) partition by range (id),indexing.sql,SAME,,
postgresql,postgresql,create table parted_replica_tab_1 partition of parted_replica_tab   for values from (1) to (10) partition by range (id),indexing.sql,SAME,,
postgresql,postgresql,create table parted_replica_tab_11 partition of parted_replica_tab_1   for values from (1) to (5),indexing.sql,SAME,,
postgresql,postgresql,drop table parted_replica_tab,indexing.sql,SAME,,
postgresql,postgresql,"create table numeric_tbl (f1 numeric(18,3), f2 numeric)",expressions.sql,SAME,,
postgresql,postgresql,"create table bpchar_tbl (f1 character(16) unique, f2 bpchar)",expressions.sql,SAME,,
postgresql,postgresql,create table inttest (a myint),expressions.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"insert into inttest values(1::myint),(null)",expressions.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE texttest (a text PRIMARY KEY, b int)",strings.sql,SAME,,
postgresql,postgresql,"CREATE TABLE byteatest (a bytea PRIMARY KEY, b int)",strings.sql,SAME,,
postgresql,postgresql,"DROP TABLE texttest, byteatest",strings.sql,SAME,,
postgresql,postgresql,CREATE TABLE toasttest(f1 text),strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(repeat('1234567890',10000))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(repeat('1234567890',10000))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(repeat('1234567890',10000))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(repeat('1234567890',10000))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,"INSERT INTO toasttest values (repeat('1234567890',300))",strings.sql,SAME,,
postgresql,postgresql,DROP TABLE toasttest,strings.sql,SAME,,
postgresql,postgresql,CREATE TABLE toasttest(f1 bytea),strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(decode(repeat('1234567890',10000),'escape'))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(decode(repeat('1234567890',10000),'escape'))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(decode(repeat('1234567890',10000),'escape'))",strings.sql,SAME,,
postgresql,postgresql,"insert into toasttest values(decode(repeat('1234567890',10000),'escape'))",strings.sql,SAME,,
postgresql,postgresql,DROP TABLE toasttest,strings.sql,SAME,,
postgresql,postgresql,CREATE TABLE toasttest (c char(4096)),strings.sql,SAME,,
postgresql,postgresql,INSERT INTO toasttest VALUES('x'),strings.sql,SAME,,
postgresql,postgresql,DROP TABLE toasttest,strings.sql,SAME,,
postgresql,postgresql,"CREATE TABLE aggtest ( 	a 			int2, 	b			float4 )",aggregates.sql,SAME,,
postgresql,postgresql,"CREATE TABLE regr_test (x float8, y float8)",aggregates.sql,SAME,,
postgresql,postgresql,"INSERT INTO regr_test VALUES (10,150),(20,250),(30,350),(80,540),(100,200)",aggregates.sql,SAME,,
postgresql,postgresql,DROP TABLE regr_test,aggregates.sql,SAME,,
postgresql,postgresql,create table minmaxtest(f1 int),aggregates.sql,SAME,,
postgresql,postgresql,create table minmaxtest1() inherits (minmaxtest),aggregates.sql,SAME,,
postgresql,postgresql,create table minmaxtest2() inherits (minmaxtest),aggregates.sql,SAME,,
postgresql,postgresql,create table minmaxtest3() inherits (minmaxtest),aggregates.sql,SAME,,
postgresql,postgresql,"insert into minmaxtest values(11), (12)",aggregates.sql,SAME,,
postgresql,postgresql,"insert into minmaxtest1 values(13), (14)",aggregates.sql,SAME,,
postgresql,postgresql,"insert into minmaxtest2 values(15), (16)",aggregates.sql,SAME,,
postgresql,postgresql,"insert into minmaxtest3 values(17), (18)",aggregates.sql,SAME,,
postgresql,postgresql,drop table minmaxtest cascade,aggregates.sql,SAME,,
postgresql,postgresql,drop table t1 cascade,aggregates.sql,SAME,,
postgresql,postgresql,drop table t2,aggregates.sql,SAME,,
postgresql,postgresql,drop table t3,aggregates.sql,SAME,,
postgresql,postgresql,drop table p_t1,aggregates.sql,SAME,,
postgresql,postgresql,"drop table t1, t2",aggregates.sql,SAME,,
postgresql,postgresql,create table bytea_test_table(v bytea),aggregates.sql,SAME,,
postgresql,postgresql,"insert into bytea_test_table values(decode('ff','hex'))",aggregates.sql,SAME,,
postgresql,postgresql,"insert into bytea_test_table values(decode('aa','hex'))",aggregates.sql,SAME,,
postgresql,postgresql,drop table bytea_test_table,aggregates.sql,SAME,,
postgresql,postgresql,"create table pagg_test (x int, y int)",aggregates.sql,SAME,,
postgresql,postgresql,"insert into pagg_test select (case x % 4 when 1 then null else x end), x % 10 from generate_series(1,5000) x",aggregates.sql,SAME,,
postgresql,postgresql,drop table pagg_test,aggregates.sql,SAME,,
postgresql,postgresql,"CREATE TABLE btg AS SELECT   i % 10 AS x,   i % 10 AS y,   'abc' || i % 10 AS z,   i AS w FROM generate_series(1, 100) AS i",aggregates.sql,SAME,,
postgresql,postgresql,"CREATE TABLE group_agg_pk AS SELECT   i % 10 AS x,   i % 2 AS y,   i % 2 AS z,   2 AS w,   i % 10 AS f FROM generate_series(1,100) AS i",aggregates.sql,SAME,,
postgresql,postgresql,DROP TABLE group_agg_pk,aggregates.sql,SAME,,
postgresql,postgresql,"CREATE TABLE agg_sort_order (c1 int PRIMARY KEY, c2 int)",aggregates.sql,SAME,,
postgresql,postgresql,"INSERT INTO agg_sort_order SELECT i, i FROM generate_series(1,100)i",aggregates.sql,SAME,,
postgresql,postgresql,DROP TABLE agg_sort_order CASCADE,aggregates.sql,SAME,,
postgresql,postgresql,DROP TABLE btg,aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_data_2k as select g from generate_series(0, 1999) g",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_data_20k as select g from generate_series(0, 19999) g",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_group_1 as select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3   from agg_data_20k group by g%10000",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_group_2 as select * from   (values (100), (300), (500)) as r(a),   lateral (     select (g/2)::numeric as c1,            array_agg(g::numeric) as c2, 	   count(*) as c3     from agg_data_2k     where g < r.a     group by g/2) as s",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_group_3 as select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3   from agg_data_2k group by g/2",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_group_4 as select (g/2)::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3   from agg_data_2k group by g/2",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_hash_1 as select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3   from agg_data_20k group by g%10000",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_hash_2 as select * from   (values (100), (300), (500)) as r(a),   lateral (     select (g/2)::numeric as c1,            array_agg(g::numeric) as c2, 	   count(*) as c3     from agg_data_2k     where g < r.a     group by g/2) as s",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_hash_3 as select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3   from agg_data_2k group by g/2",aggregates.sql,SAME,,
postgresql,postgresql,"create table agg_hash_4 as select (g/2)::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3   from agg_data_2k group by g/2",aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_group_1,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_group_2,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_group_3,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_group_4,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_hash_1,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_hash_2,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_hash_3,aggregates.sql,SAME,,
postgresql,postgresql,drop table agg_hash_4,aggregates.sql,SAME,,
postgresql,postgresql,CREATE TABLE DATE_TBL (f1 date),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1957-04-09'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1957-06-13'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1996-02-28'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1996-02-29'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1996-03-01'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1996-03-02'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1997-02-28'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1997-02-29'),date.sql,DIFFERENT,DatetimeFieldOverflow,"date/time field value out of range: ""1997-02-29"" LINE 1: INSERT INTO DATE_TBL VALUES ('1997-02-29')"
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1997-03-01'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('1997-03-02'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2000-04-01'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2000-04-02'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2000-04-03'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2038-04-08'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2039-04-09'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2040-04-10'),date.sql,SAME,,
postgresql,postgresql,INSERT INTO DATE_TBL VALUES ('2040-04-10 BC'),date.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tab_settings_flags AS SELECT name, category,     'EXPLAIN'          = ANY(flags) AS explain,     'NO_RESET'         = ANY(flags) AS no_reset,     'NO_RESET_ALL'     = ANY(flags) AS no_reset_all,     'NOT_IN_SAMPLE'    = ANY(flags) AS not_in_sample,     'RUNTIME_COMPUTED' = ANY(flags) AS runtime_computed   FROM pg_show_all_settings() AS psas,     pg_settings_get_flags(psas.name) AS flags",guc.sql,SAME,,
postgresql,postgresql,DROP TABLE tab_settings_flags,guc.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal_rng ( 	valid_at daterange, 	CONSTRAINT temporal_rng_pk PRIMARY KEY (valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 3:  CONSTRAINT temporal_rng_pk PRIMARY KEY (valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng ( 	id INTEGER, 	CONSTRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 3: ...STRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng ( 	id int4range, 	valid_at TEXT, 	CONSTRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...STRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng ( 	id int4range, 	valid_at daterange, 	CONSTRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...STRAINT temporal_rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng2 ( 	id1 int4range, 	id2 int4range, 	valid_at daterange, 	CONSTRAINT temporal_rng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_rng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id int4range, 	valid_at textrange2, 	CONSTRAINT temporal_rng3_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...TRAINT temporal_rng3_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_rng3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng3"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_mltrng (   id int4range,   valid_at datemultirange,   CONSTRAINT temporal_mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...AINT temporal_mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_mltrng2 ( 	id1 int4range, 	id2 int4range, 	valid_at datemultirange, 	CONSTRAINT temporal_mltrng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...mporal_mltrng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	valid_at daterange, 	CONSTRAINT temporal_rng3_uq UNIQUE (valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 3:  CONSTRAINT temporal_rng3_uq UNIQUE (valid_at WITHOUT OVERLA..."
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id INTEGER, 	CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 3:  CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id int4range, 	valid_at TEXT, 	CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4:  CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id int4range, 	valid_at daterange, 	CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4:  CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_rng3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng3"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id1 int4range, 	id2 int4range, 	valid_at daterange, 	CONSTRAINT temporal_rng3_uq UNIQUE (id1, id2, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...RAINT temporal_rng3_uq UNIQUE (id1, id2, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_rng3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng3"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_rng3 ( 	id int4range, 	valid_at textrange2, 	CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4:  CONSTRAINT temporal_rng3_uq UNIQUE (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_rng3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng3"" does not exist"
postgresql,postgresql,DROP TABLE temporal_rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_rng ( 	id int4range, 	valid_at daterange )",without_overlaps.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal3 ( 	id int4range, 	valid_at daterange )",without_overlaps.sql,SAME,,
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal3 ( 	id int4range, 	valid_at daterange )",without_overlaps.sql,SAME,,
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal3 ( 	id int4range, 	valid_at daterange )",without_overlaps.sql,SAME,,
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,SAME,,
postgresql,postgresql,CREATE TABLE temporal3 ( 	id int4range ),without_overlaps.sql,SAME,,
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,SAME,,
postgresql,postgresql,CREATE TABLE temporal3 ( 	id int4range ),without_overlaps.sql,SAME,,
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[1,2)', daterange('2018-01-02', '2018-02-03'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[1,2)', daterange('2018-03-03', '2018-04-04'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[2,3)', daterange('2018-01-01', '2018-01-05'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[3,4)', daterange('2018-01-01', NULL))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[1,2)', daterange('2018-01-01', '2018-01-05'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES (NULL, daterange('2018-01-01', '2018-01-05'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[3,4)', NULL)",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', datemultirange(daterange('2018-01-02', '2018-02-03')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', datemultirange(daterange('2018-03-03', '2018-04-04')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[2,3)', datemultirange(daterange('2018-01-01', '2018-01-05')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[2,3)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[3,4)', datemultirange(daterange('2018-01-01', NULL)))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[3,4)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', datemultirange(daterange('2018-01-01', '2018-01-05')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES (NULL, datemultirange(daterange('2018-01-01', '2018-01-05')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES (NULL, dat..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[3,4)', NULL)",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[3,4)', ..."
postgresql,postgresql,"CREATE TABLE temporal3 (   id int4range,   valid_at daterange,   id2 int8range,   name TEXT,   CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS),   CONSTRAINT temporal3_uniq UNIQUE (id2, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 6: ...CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"INSERT INTO temporal3 (id, valid_at, id2, name)   VALUES   ('[1,2)', daterange('2000-01-01', '2010-01-01'), '[7,8)', 'foo'),   ('[2,3)', daterange('2000-01-01', '2010-01-01'), '[9,10)', 'bar')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal3"" does not exist LINE 1: INSERT INTO temporal3 (id, valid_at, id2, name)"
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal3"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal3 ( 	id int4range, 	valid_at daterange, 	CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal3"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_partitioned ( 	id int4range, 	valid_at daterange,   name text, 	CONSTRAINT temporal_paritioned_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) ) PARTITION BY LIST (id)",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_paritioned_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE tp1 PARTITION OF temporal_partitioned FOR VALUES IN ('[1,2)', '[2,3)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist"
postgresql,postgresql,"CREATE TABLE tp2 PARTITION OF temporal_partitioned FOR VALUES IN ('[3,4)', '[4,5)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist"
postgresql,postgresql,"INSERT INTO temporal_partitioned (id, valid_at, name) VALUES   ('[1,2)', daterange('2000-01-01', '2000-02-01'), 'one'),   ('[1,2)', daterange('2000-02-01', '2000-03-01'), 'one'),   ('[3,4)', daterange('2000-01-01', '2010-01-01'), 'three')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist LINE 1: INSERT INTO temporal_partitioned (id, valid_at, name) VALUES"
postgresql,postgresql,DROP TABLE temporal_partitioned,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_partitioned"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_partitioned ( 	id int4range, 	valid_at daterange,   name text, 	CONSTRAINT temporal_paritioned_uq UNIQUE (id, valid_at WITHOUT OVERLAPS) ) PARTITION BY LIST (id)",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...RAINT temporal_paritioned_uq UNIQUE (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE tp1 PARTITION OF temporal_partitioned FOR VALUES IN ('[1,2)', '[2,3)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist"
postgresql,postgresql,"CREATE TABLE tp2 PARTITION OF temporal_partitioned FOR VALUES IN ('[3,4)', '[4,5)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist"
postgresql,postgresql,"INSERT INTO temporal_partitioned (id, valid_at, name) VALUES   ('[1,2)', daterange('2000-01-01', '2000-02-01'), 'one'),   ('[1,2)', daterange('2000-02-01', '2000-03-01'), 'one'),   ('[3,4)', daterange('2000-01-01', '2010-01-01'), 'three')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned"" does not exist LINE 1: INSERT INTO temporal_partitioned (id, valid_at, name) VALUES"
postgresql,postgresql,DROP TABLE temporal_partitioned,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_partitioned"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal3 ( 	id int4range, 	valid_at daterange, 	CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...CONSTRAINT temporal3_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal3 (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk_rng2rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk_rng2rng"" does not exist"
postgresql,postgresql,DROP TABLE temporal3,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal3"" does not exist"
postgresql,postgresql,DROP TABLE temporal_rng,without_overlaps.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal_rng (id int4range, valid_at daterange)",without_overlaps.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at int4range, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk2 PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk2 FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_rng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...temporal_fk_rng2rng_pk2 PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_rng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk_rng2rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk_rng2rng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_rng (id, valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_rng (id, valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_rng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_rng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_rng (id) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id) 		REFERENCES temporal_rng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_rng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk_rng2rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk_rng2rng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id) 		REFERENCES temporal_rng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD parent_id) 		REFERENCES temporal_rng (id, PERIOD id) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_rng2,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_rng2"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_rng2 (   id1 int4range,   id2 int4range,   valid_at daterange,   CONSTRAINT temporal_rng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_rng2_pk PRIMARY KEY (id1, id2, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk2_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id1 int4range, 	parent_id2 int4range, 	CONSTRAINT temporal_fk2_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk2_rng2rng_fk FOREIGN KEY (parent_id1, parent_id2, PERIOD valid_at) 		REFERENCES temporal_rng2 (id1, id2, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 6: ...temporal_fk2_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk2_rng2rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk2_rng2rng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk2_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id1 int4range, 	parent_id2 int4range, 	CONSTRAINT temporal_fk2_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 6: ...temporal_fk2_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES   ('[1,2)', daterange('2018-01-02', '2018-02-03')),   ('[1,2)', daterange('2018-03-03', '2018-04-04')),   ('[2,3)', daterange('2018-01-01', '2018-01-05')),   ('[3,4)', daterange('2018-01-01', NULL))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[1,2)', daterange('2018-01-02', '2018-02-01'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[2,3)', daterange('2018-01-02', '2018-04-01'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[1,2)', daterange('2018-01-02', '2018-02-01'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[2,3)', daterange('2018-01-02', '2018-04-01'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[1,2)', daterange('2018-02-03', '2018-03-03'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[2,3)', daterange('2018-01-02', '2018-04-01'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES     ('[5,6)', daterange('2018-01-01', '2018-02-01')),     ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES     ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES   ('[5,6)', daterange('2018-01-01', '2018-02-01')),   ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES   ('[5,6)', daterange('2018-01-01', '2018-02-01')),   ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES   ('[5,6)', daterange('2018-01-01', '2018-02-01')),   ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES   ('[5,6)', daterange('2018-01-01', '2018-02-01')),   ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[6,7)', daterange('2018-01-01', '2021-01-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[4,5)', daterange('2018-01-01', '2021-01-01'), '[6,7)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[9,10)', daterange('2018-01-01', '2021-01-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[6,7)', daterange('2018-01-01', '2021-01-01'), '[9,10)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[-1,-1]', daterange(null, null))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_rng (id, valid_at) VALUES ('[12,13)', daterange('2018-01-01', '2021-01-01'))",without_overlaps.sql,SAME,,
postgresql,postgresql,"INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VALUES ('[8,9)', daterange('2018-01-01', '2021-01-01'), '[12,13)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_fk_rng2rng (id, valid_at, parent_id) VA..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at int4multirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk2 PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk2 FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_mltrng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...al_fk_mltrng2mltrng_pk2 PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_mltrng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk_mltrng2mltrng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk_mltrng2mltrng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_mltrng (id, valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_mltrng (id, valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_mltrng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, valid_at) 		REFERENCES temporal_mltrng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_mltrng (id) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id) 		REFERENCES temporal_mltrng (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_mltrng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk_mltrng2mltrng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk_mltrng2mltrng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id) 		REFERENCES temporal_mltrng )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk_mltrng2mltrng_fk FOREIGN KEY (parent_id, PERIOD parent_id) 		REFERENCES temporal_mltrng (id, PERIOD id) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk2_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id1 int4range, 	parent_id2 int4range, 	CONSTRAINT temporal_fk2_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_fk2_mltrng2mltrng_fk FOREIGN KEY (parent_id1, parent_id2, PERIOD valid_at) 		REFERENCES temporal_mltrng2 (id1, id2, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 6: ...al_fk2_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,DROP TABLE temporal_fk2_mltrng2mltrng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_fk2_mltrng2mltrng"" does not exist"
postgresql,postgresql,"CREATE TABLE temporal_fk_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id int4range, 	CONSTRAINT temporal_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...ral_fk_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk2_mltrng2mltrng ( 	id int4range, 	valid_at datemultirange, 	parent_id1 int4range, 	parent_id2 int4range, 	CONSTRAINT temporal_fk2_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 6: ...al_fk2_mltrng2mltrng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[1,2)', datemultirange(daterange('2018-01-02', '2018-02-01')), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[2,3)', datemultirange(daterange('2018-01-02', '2018-04-01')), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[1,2)', datemultirange(daterange('2018-01-02', '2018-02-01')), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[2,3)', datemultirange(daterange('2018-01-02', '2018-04-01')), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', datemultirange(daterange('2018-02-03', '2018-03-03')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[1,2)', ..."
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[2,3)', datemultirange(daterange('2018-01-02', '2018-04-01')), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES     ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01'))),     ('[5,6)', datemultirange(daterange('2018-02-01', '2018-03-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES"
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES     ('[3,4)', datemultirange(daterange('2018-01-05', '2018-01-10')), '[5,6)')",without_overlaps.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES   ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01'))),   ('[5,6)', datemultirange(daterange('2018-02-01', '2018-03-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES"
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[3,4)', datemultirange(daterange('2018-01-05', '2018-01-10')), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES   ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01'))),   ('[5,6)', datemultirange(daterange('2018-02-01', '2018-03-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES"
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[3,4)', datemultirange(daterange('2018-01-05', '2018-01-10')), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES   ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01'))),   ('[5,6)', datemultirange(daterange('2018-02-01', '2018-03-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES"
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[3,4)', datemultirange(daterange('2018-01-05', '2018-01-10')), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES ('[5,6)', ..."
postgresql,postgresql,"INSERT INTO temporal_mltrng (id, valid_at) VALUES   ('[5,6)', datemultirange(daterange('2018-01-01', '2018-02-01'))),   ('[5,6)', datemultirange(daterange('2018-02-01', '2018-03-01')))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_mltrng"" does not exist LINE 1: INSERT INTO temporal_mltrng (id, valid_at) VALUES"
postgresql,postgresql,"INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_id) VALUES ('[3,4)', datemultirange(daterange('2018-01-05', '2018-01-10')), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_fk_mltrng2mltrng"" does not exist LINE 1: INSERT INTO temporal_fk_mltrng2mltrng (id, valid_at, parent_..."
postgresql,postgresql,"CREATE TABLE temporal_box (   id int4range,   valid_at box,   CONSTRAINT temporal_box_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 4: ...STRAINT temporal_box_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_fk_box2box (   id int4range,   valid_at box,   parent_id int4range,   CONSTRAINT temporal_fk_box2box_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS),   CONSTRAINT temporal_fk_box2box_fk FOREIGN KEY (parent_id, PERIOD valid_at)     REFERENCES temporal_box (id, PERIOD valid_at) )",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ... temporal_fk_box2box_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE temporal_partitioned_rng ( 	id int4range, 	valid_at daterange,   name text, 	CONSTRAINT temporal_paritioned_rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS) ) PARTITION BY LIST (id)",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...poral_paritioned_rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE tp1 partition OF temporal_partitioned_rng FOR VALUES IN ('[1,2)', '[3,4)', '[5,6)', '[7,8)', '[9,10)', '[11,12)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist"
postgresql,postgresql,"CREATE TABLE tp2 partition OF temporal_partitioned_rng FOR VALUES IN ('[2,3)', '[4,5)', '[6,7)', '[8,9)', '[10,11)', '[12,13)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist"
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at, name) VALUES   ('[1,2)', daterange('2000-01-01', '2000-02-01'), 'one'),   ('[1,2)', daterange('2000-02-01', '2000-03-01'), 'one'),   ('[2,3)', daterange('2000-01-01', '2010-01-01'), 'two')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at, name) VA..."
postgresql,postgresql,"CREATE TABLE temporal_partitioned_fk_rng2rng ( 	id int4range, 	valid_at daterange, 	parent_id int4range, 	CONSTRAINT temporal_partitioned_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OVERLAPS), 	CONSTRAINT temporal_partitioned_fk_rng2rng_fk FOREIGN KEY (parent_id, PERIOD valid_at) 		REFERENCES temporal_partitioned_rng (id, PERIOD valid_at) ) PARTITION BY LIST (id)",without_overlaps.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITHOUT"" LINE 5: ...rtitioned_fk_rng2rng_pk PRIMARY KEY (id, valid_at WITHOUT OV..."
postgresql,postgresql,"CREATE TABLE tfkp1 partition OF temporal_partitioned_fk_rng2rng FOR VALUES IN ('[1,2)', '[3,4)', '[5,6)', '[7,8)', '[9,10)', '[11,12)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist"
postgresql,postgresql,"CREATE TABLE tfkp2 partition OF temporal_partitioned_fk_rng2rng FOR VALUES IN ('[2,3)', '[4,5)', '[6,7)', '[8,9)', '[10,11)', '[12,13)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist"
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES   ('[1,2)', daterange('2000-01-01', '2000-02-15'), '[1,2)'),   ('[1,2)', daterange('2001-01-01', '2002-01-01'), '[2,3)'),   ('[2,3)', daterange('2000-01-01', '2000-02-15'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES   ('[3,4)', daterange('2010-01-01', '2010-02-15'), '[1,2)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES   ('[3,4)', daterange('2000-01-01', '2000-02-15'), '[3,4)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2016-01-01', '2016-02-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2016-01-01', '2016-02-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-01-01', '2018-02-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES ('[5,6)', daterange('2018-02-01', '2018-03-01'))",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_rng (id, valid_at) VALUES (..."
postgresql,postgresql,"INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, parent_id) VALUES ('[3,4)', daterange('2018-01-05', '2018-01-10'), '[5,6)')",without_overlaps.sql,DIFFERENT,UndefinedTable,"relation ""temporal_partitioned_fk_rng2rng"" does not exist LINE 1: INSERT INTO temporal_partitioned_fk_rng2rng (id, valid_at, p..."
postgresql,postgresql,DROP TABLE temporal_partitioned_fk_rng2rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_partitioned_fk_rng2rng"" does not exist"
postgresql,postgresql,DROP TABLE temporal_partitioned_rng,without_overlaps.sql,DIFFERENT,UndefinedTable,"table ""temporal_partitioned_rng"" does not exist"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('34.5'),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('34.5')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('1000000000000'),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('1000000000000')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('asdf'),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('asdf')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('     '),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('     ')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('   asdf   '),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('   asdf   ')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('- 1234'),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('- 1234')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES ('123       5'),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('123       5')"
postgresql,postgresql,INSERT INTO INT4_TBL(f1) VALUES (''),int4.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('')"
postgresql,postgresql,"INSERT INTO empsalary VALUES ('develop', 10, 5200, '2007-08-01'), ('sales', 1, 5000, '2006-10-01'), ('personnel', 5, 3500, '2007-12-10'), ('sales', 4, 4800, '2007-08-08'), ('personnel', 2, 3900, '2006-12-23'), ('develop', 7, 4200, '2008-01-01'), ('develop', 9, 4500, '2008-01-01'), ('sales', 3, 4800, '2007-08-01'), ('develop', 8, 6000, '2006-10-01'), ('develop', 11, 5200, '2007-08-15')",window.sql,SAME,,
postgresql,postgresql,"insert into numerics values (0, '-infinity', '-infinity', '-infinity'), (1, -3, -3, -3), (2, -1, -1, -1), (3, 0, 0, 0), (4, 1.1, 1.1, 1.1), (5, 1.12, 1.12, 1.12), (6, 2, 2, 2), (7, 100, 100, 100), (8, 'infinity', 'infinity', 'infinity'), (9, 'NaN', 'NaN', 'NaN')",window.sql,SAME,,
postgresql,postgresql,"insert into datetimes values (0, '10:00', '10:00 BST', '-infinity', '-infinity', '-infinity'), (1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'), (2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'), (3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'), (4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'), (5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'), (6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'), (7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'), (8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'), (9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'), (10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54'), (11, '21:00', '21:00 BST', 'infinity', 'infinity', 'infinity')",window.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""-infinity"" LINE 2: (0, '10:00', '10:00 BST', '-infinity', '-infinity', '-infini..."
postgresql,postgresql,"insert into t1 values (1,1),(1,2),(2,2)",window.sql,SAME,,
postgresql,postgresql,DROP TABLE empsalary,window.sql,SAME,,
postgresql,postgresql,CREATE TABLE FLOAT4_TBL (f1  float4),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('    0.0'),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('1004.30   '),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('     -34.84    '),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e+20'),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e-20'),float4.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""10e70"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""-10e70"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""10e-70"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""-10e-70"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'::float8),float4.sql,DIFFERENT,NumericValueOutOfRange,value out of range: overflow
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'::float8),float4.sql,DIFFERENT,NumericValueOutOfRange,value out of range: overflow
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70'::float8),float4.sql,DIFFERENT,NumericValueOutOfRange,value out of range: underflow
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70'::float8),float4.sql,DIFFERENT,NumericValueOutOfRange,value out of range: underflow
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""10e400"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""-10e400"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""10e-400"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400'),float4.sql,DIFFERENT,NumericValueOutOfRange,"""-10e-400"" is out of range for type real LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES (''),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: """" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('       '),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""       "" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('       ')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""xyz"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""5.0.0"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""5 . 0"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""5.   0"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""     - 3.0"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0')"
postgresql,postgresql,INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5'),float4.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type real: ""123            5"" LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5')"
postgresql,postgresql,CREATE TABLE cmdata(f1 text COMPRESSION pglz),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmdata VALUES(repeat('1234567890', 1000))",compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmdata1(f1 TEXT COMPRESSION lz4),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004))",compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmmove3(f1 text COMPRESSION pglz),compression.sql,SAME,,
postgresql,postgresql,INSERT INTO cmmove3 SELECT * FROM cmdata,compression.sql,SAME,,
postgresql,postgresql,INSERT INTO cmmove3 SELECT * FROM cmdata1,compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmdata2 (LIKE cmdata1 INCLUDING COMPRESSION),compression.sql,SAME,,
postgresql,postgresql,DROP TABLE cmdata2,compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmdata2 (f1 int COMPRESSION pglz),compression.sql,DIFFERENT,FeatureNotSupported,column data type integer does not support compression
postgresql,postgresql,CREATE TABLE cmmove2(f1 text COMPRESSION pglz),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmmove2 VALUES (repeat('1234567890', 1004))",compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmdata2 (f1 text COMPRESSION pglz),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmdata2 SELECT large_val() || repeat('a', 4000)",compression.sql,DIFFERENT,UndefinedFunction,"function large_val() does not exist LINE 1: INSERT INTO cmdata2 SELECT large_val() || repeat('a', 4000)                                     HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"INSERT INTO cmdata1 SELECT large_val() || repeat('a', 4000)",compression.sql,DIFFERENT,UndefinedFunction,"function large_val() does not exist LINE 1: INSERT INTO cmdata1 SELECT large_val() || repeat('a', 4000)                                     HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,DROP TABLE cmdata2,compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmdata2 (f1 int),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmdata2 VALUES (repeat('123456789', 800))",compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmpart(f1 text COMPRESSION lz4) PARTITION BY HASH(f1),compression.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cmpart1 PARTITION OF cmpart FOR VALUES WITH (MODULUS 2, REMAINDER 0)",compression.sql,SAME,,
postgresql,postgresql,CREATE TABLE cmpart2(f1 text COMPRESSION pglz),compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmpart VALUES (repeat('123456789', 1004))",compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmpart VALUES (repeat('123456789', 4004))",compression.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cminh() INHERITS(cmdata, cmdata1)",compression.sql,DIFFERENT,DatatypeMismatch,"column ""f1"" has a compression method conflict DETAIL:  pglz versus lz4"
postgresql,postgresql,CREATE TABLE cminh(f1 TEXT COMPRESSION lz4) INHERITS(cmdata),compression.sql,DIFFERENT,DatatypeMismatch,"column ""f1"" has a compression method conflict DETAIL:  pglz versus lz4"
postgresql,postgresql,"INSERT INTO cmdata VALUES (repeat('123456789', 4004))",compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmpart VALUES (repeat('123456789', 1004))",compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmpart VALUES (repeat('123456789', 4004))",compression.sql,SAME,,
postgresql,postgresql,DROP TABLE cmdata2,compression.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cmdata2 (f1 TEXT COMPRESSION pglz, f2 TEXT COMPRESSION lz4)",compression.sql,SAME,,
postgresql,postgresql,"INSERT INTO cmdata2 VALUES((SELECT array_agg(fipshash(g::TEXT))::TEXT FROM generate_series(1, 50) g), VERSION())",compression.sql,DIFFERENT,UndefinedFunction,function fipshash(text) does not exist LINE 1: INSERT INTO cmdata2 VALUES((SELECT array_agg(fipshash(g::TEX...                                                       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgresql,postgresql,CREATE TABLE badcompresstbl (a text COMPRESSION I_Do_Not_Exist_Compression),compression.sql,DIFFERENT,InvalidParameterValue,"invalid compression method ""i_do_not_exist_compression"""
postgresql,postgresql,CREATE TABLE badcompresstbl (a text),compression.sql,SAME,,
postgresql,postgresql,DROP TABLE badcompresstbl,compression.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alt_regress_1 (a INTEGER, b INTEGER)",alter_generic.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alt_regress_2 (a INTEGER, b INTEGER)",alter_generic.sql,SAME,,
postgresql,postgresql,"create table test1 (id serial, t text)",copyselect.sql,SAME,,
postgresql,postgresql,insert into test1 (t) values ('a'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test1 (t) values ('b'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test1 (t) values ('c'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test1 (t) values ('d'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test1 (t) values ('e'),copyselect.sql,SAME,,
postgresql,postgresql,"create table test2 (id serial, t text)",copyselect.sql,SAME,,
postgresql,postgresql,insert into test2 (t) values ('A'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test2 (t) values ('B'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test2 (t) values ('C'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test2 (t) values ('D'),copyselect.sql,SAME,,
postgresql,postgresql,insert into test2 (t) values ('E'),copyselect.sql,SAME,,
postgresql,postgresql,drop table test2,copyselect.sql,SAME,,
postgresql,postgresql,drop table test1,copyselect.sql,SAME,,
postgresql,postgresql,create table test3 (c int),copyselect.sql,SAME,,
postgresql,postgresql,drop table test3,copyselect.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_data (id int4, val numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_add (id1 int4, id2 int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_sub (id1 int4, id2 int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_div (id1 int4, id2 int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_mul (id1 int4, id2 int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_sqrt (id int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_ln (id int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_log10 (id int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_power_10_ln (id int4, expected numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_result (id1 int4, id2 int4, result numeric(210,10))",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,2,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,2,'34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,2,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,2,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,3,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,3,'-4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,3,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,3,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,4,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,4,'-7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,4,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,4,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,5,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,5,'-16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,5,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,5,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,6,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,6,'-93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,6,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,6,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,7,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,7,'83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,7,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,7,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,8,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,8,'-74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,8,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,8,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,9,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,9,'24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,9,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,9,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,2,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,2,'34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,2,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,2,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,3,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,3,'-4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,3,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,3,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,4,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,4,'-7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,4,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,4,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,5,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,5,'-16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,5,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,5,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,6,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,6,'-93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,6,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,6,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,7,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,7,'83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,7,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,7,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,8,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,8,'-74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,8,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,8,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,9,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,9,'24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,9,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,9,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,0,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,0,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,1,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,1,'-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,2,'-68676984.430794094')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,2,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,2,'1179132047626883.596862135856320209')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,2,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,3,'-34338487.905397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,3,'-34338496.525397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,3,'-147998901.44836127257')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,3,'-7967167.56737750510440835266')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,4,'-26539030.803497047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,4,'-42137953.627297047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,4,'-267821744976817.8111137106593')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,4,'-4.40267480046830116685')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,5,'-34322095.176906047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,5,'-34354889.253888047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,5,'-563049578578.769242506736077')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,5,'-2094.18866914563535496429')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,6,'-34244590.637766787')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,6,'-34432393.793027307')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,6,'-3224438592470.18449811926184222')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,6,'-365.68599891479766440940')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,7,'-117366977.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,7,'48689992.784602953')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,7,'2851072985828710.485883795')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,7,'.41357483778485235518')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,8,'-34263611.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,8,'-34413373.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,8,'-2571300635581.146276407')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,8,'-458.57416721727870888476')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,9,'-59265296.260444467')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,9,'-9411688.170349627')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,9,'855948866655588.453741509242968740')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,9,'1.37757299946438931811')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,0,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,0,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,1,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,1,'4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,2,'-34338487.905397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,2,'34338496.525397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,2,'-147998901.44836127257')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,2,'-.00000012551512084352')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,3,'8.62')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,3,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,3,'18.5761')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,3,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,4,'7799465.7219')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,4,'-7799457.1019')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,4,'33615678.685289')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,4,'.00000055260225961552')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,5,'16401.348491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,5,'-16392.728491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,5,'70671.23589621')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,5,'.00026285234387695504')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,6,'93905.88763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,6,'-93897.26763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,6,'404715.7995864206')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,6,'.00004589912234457595')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,7,'-83028480.69')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,7,'83028489.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,7,'-357852770.35')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,7,'-.00000005190989574240')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,8,'74885.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,8,'-74876.69')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,8,'322737.11')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,8,'.00005755799201399553')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,9,'-24926799.735047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,9,'24926808.355047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,9,'-107434525.43415438020')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,9,'-.00000017290624149854')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,0,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,0,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,1,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,1,'7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,2,'-26539030.803497047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,2,'42137953.627297047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,2,'-267821744976817.8111137106593')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,2,'-.22713465002993920385')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,3,'7799465.7219')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,3,'7799457.1019')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,3,'33615678.685289')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,3,'1809619.81714617169373549883')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,4,'15598922.8238')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,4,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,4,'60831598315717.14146161')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,4,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,5,'7815858.450391')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,5,'7783064.373409')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,5,'127888068979.9935054429')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,5,'475.66281046305802686061')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,6,'7893362.98953026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,6,'7705559.83426974')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,6,'732381731243.745115764094')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,6,'83.05996138436129499606')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,7,'-75229023.5881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,7,'90827946.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,7,'-647577464846017.9715')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,7,'-.09393717604145131637')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,8,'7874342.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,8,'7724580.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,8,'584031469984.4839')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,8,'104.15808298366741897143')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,9,'-17127342.633147420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,9,'32726265.456947420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,9,'-194415646271340.1815956522980')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,9,'-.31289456112403769409')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,0,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,0,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,1,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,1,'16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,2,'-34322095.176906047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,2,'34354889.253888047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,2,'-563049578578.769242506736077')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,2,'-.00047751189505192446')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,3,'16401.348491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,3,'16392.728491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,3,'70671.23589621')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,3,'3804.41728329466357308584')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,4,'7815858.450391')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,4,'-7783064.373409')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,4,'127888068979.9935054429')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,4,'.00210232958726897192')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,5,'32794.076982')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,5,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,5,'268862871.275335557081')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,5,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,6,'110298.61612126')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,6,'-77504.53913926')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,6,'1539707782.76899778633766')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,6,'.17461941433576102689')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,7,'-83012087.961509')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,7,'83044882.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,7,'-1361421264394.416135')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,7,'-.00019748690453643710')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,8,'91278.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,8,'-58483.961509')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,8,'1227826639.244571')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,8,'.21897461960978085228')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,9,'-24910407.006556420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,9,'24943201.083538420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,9,'-408725765384.257043660243220')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,9,'-.00065780749354660427')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,0,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,0,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,1,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,1,'93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,2,'-34244590.637766787')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,2,'34432393.793027307')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,2,'-3224438592470.18449811926184222')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,2,'-.00273458651128995823')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,3,'93905.88763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,3,'93897.26763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,3,'404715.7995864206')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,3,'21786.90896293735498839907')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,4,'7893362.98953026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,4,'-7705559.83426974')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,4,'732381731243.745115764094')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,4,'.01203949512295682469')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,5,'110298.61612126')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,5,'77504.53913926')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,5,'1539707782.76899778633766')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,5,'5.72674008674192359679')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,6,'187803.15526052')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,6,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,6,'8817506281.4517452372676676')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,6,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,7,'-82934583.42236974')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,7,'83122386.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,7,'-7796505729750.37795610')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,7,'-.00113095617281538980')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,8,'168782.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,8,'19020.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,8,'7031444034.53149906')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,8,'1.25401073209839612184')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,9,'-24832902.467417160')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,9,'25020705.622677680')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,9,'-2340666225110.29929521292692920')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,9,'-.00376709254265256789')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,0,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,0,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,1,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,1,'-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,2,'-117366977.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,2,'-48689992.784602953')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,2,'2851072985828710.485883795')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,2,'2.41794207151503385700')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,3,'-83028480.69')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,3,'-83028489.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,3,'-357852770.35')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,3,'-19264149.65197215777262180974')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,4,'-75229023.5881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,4,'-90827946.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,4,'-647577464846017.9715')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,4,'-10.64541262725136247686')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,5,'-83012087.961509')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,5,'-83044882.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,5,'-1361421264394.416135')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,5,'-5063.62688881730941836574')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,6,'-82934583.42236974')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,6,'-83122386.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,6,'-7796505729750.37795610')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,6,'-884.20756174009028770294')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,7,'-166056970')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,7,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,7,'6893729321395225')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,7,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,8,'-82953604')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,8,'-83103366')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,8,'-6217255985285')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,8,'-1108.80577182462841041118')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,9,'-107955289.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,9,'-58101680.954952580')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,9,'2069634775752159.035758700')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,9,'3.33089171198810413382')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,0,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,0,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,1,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,1,'74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,2,'-34263611.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,2,'34413373.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,2,'-2571300635581.146276407')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,2,'-.00218067233500788615')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,3,'74885.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,3,'74876.69')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,3,'322737.11')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,3,'17373.78190255220417633410')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,4,'7874342.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,4,'-7724580.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,4,'584031469984.4839')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,4,'.00960079113741758956')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,5,'91278.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,5,'58483.961509')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,5,'1227826639.244571')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,5,'4.56673929509287019456')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,6,'168782.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,6,'-19020.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,6,'7031444034.53149906')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,6,'.79744134113322314424')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,7,'-82953604')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,7,'83103366')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,7,'-6217255985285')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,7,'-.00090187120721280172')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,8,'149762')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,8,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,8,'5607164161')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,8,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,9,'-24851923.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,9,'25001685.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,9,'-1866544013697.195857020')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,9,'-.00300403532938582735')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,0,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,0,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,1,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,1,'-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,2,'-59265296.260444467')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,2,'9411688.170349627')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,2,'855948866655588.453741509242968740')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,2,'.72591434384152961526')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,3,'-24926799.735047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,3,'-24926808.355047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,3,'-107434525.43415438020')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,3,'-5783481.21694835730858468677')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,4,'-17127342.633147420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,4,'-32726265.456947420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,4,'-194415646271340.1815956522980')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,4,'-3.19596478892958416484')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,5,'-24910407.006556420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,5,'-24943201.083538420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,5,'-408725765384.257043660243220')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,5,'-1520.20159364322004505807')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,6,'-24832902.467417160')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,6,'-25020705.622677680')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,6,'-2340666225110.29929521292692920')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,6,'-265.45671195426965751280')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,7,'-107955289.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,7,'58101680.954952580')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,7,'2069634775752159.035758700')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,7,'.30021990699995814689')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,8,'-24851923.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,8,'-25001685.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,8,'-1866544013697.195857020')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,8,'-332.88556569820675471748')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,9,'-49853608.090094840')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,9,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,9,'621345559900192.420120630048656400')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,9,'1.00000000000000000000')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (0,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (1,'0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (2,'5859.90547836712524903505')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (3,'2.07605394920266944396')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (4,'2792.75158435189147418923')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (5,'128.05092147657509145473')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (6,'306.43364311096782703406')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (7,'9111.99676251039939975230')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (8,'273.64392922189960397542')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (9,'4992.67503899937593364766')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (2,'17.35177750493897715514')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (3,'1.46093790411565641971')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (4,'15.86956523951936572464')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (5,'9.70485601768871834038')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (6,'11.45000246622944403127')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (7,'18.23469429965478772991')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (8,'11.22365546576315513668')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (9,'17.03145425013166006962')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (2,'7.53578122160797276459')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (3,'.63447727016073160075')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (4,'6.89206461372691743345')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (5,'4.21476541614777768626')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (6,'4.97267288886207207671')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (7,'7.91922711353275546914')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (8,'4.87437163556421004138')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (9,'7.39666659961986567059')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (0,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (1,'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (2,'224790267919917955.13261618583642653184')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (3,'28.90266599445155957393')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (4,'7405685069594999.07733999469386277636')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (5,'5068226527.32127265408584640098')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (6,'281839893606.99372343357047819067')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (7,'1716699575118597095.42330819910640247627')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (8,'167361463828.07491320069016125952')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (9,'107511333880052007.04141124673540337457')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (0, '0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (1, '0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (2, '-34338492.215397047')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (3, '4.31')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (4, '7799461.4119')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (5, '16397.038491')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (6, '93901.57763026')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (7, '-83028485')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (8, '74881')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (9, '-24926804.045047420')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val + t2.val     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val + t2.val, 10)     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val - t2.val     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val - t2.val, 40)     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val * t2.val     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val * t2.val, 30)     FROM num_data t1, num_data t2",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val / t2.val     FROM num_data t1, num_data t2     WHERE t2.val != '0.0'",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val / t2.val, 80)     FROM num_data t1, num_data t2     WHERE t2.val != '0.0'",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, SQRT(ABS(val))     FROM num_data",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, LN(ABS(val))     FROM num_data     WHERE val != '0.0'",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, LOG(numeric '10', ABS(val))     FROM num_data     WHERE val != '0.0'",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, POWER(numeric '10', LN(ABS(round(val,200))))     FROM num_data     WHERE val != '0.0'",numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fract_only (id int, val numeric(4,4))",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (1, '0.0')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (2, '0.1')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (3, '1.0')",numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1."
postgresql,postgresql,"INSERT INTO fract_only VALUES (4, '-0.9999')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (5, '0.99994')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (6, '0.99995')",numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1."
postgresql,postgresql,"INSERT INTO fract_only VALUES (7, '0.00001')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (8, '0.00017')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (9, 'NaN')",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_only VALUES (10, 'Inf')",numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value."
postgresql,postgresql,"INSERT INTO fract_only VALUES (11, '-Inf')",numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value."
postgresql,postgresql,DROP TABLE fract_only,numeric.sql,SAME,,
postgresql,postgresql,CREATE TABLE ceil_floor_round (a numeric),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('-5.5'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('-5.499999'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('9.5'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('9.4999999'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('0.0'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('0.0000001'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO ceil_floor_round VALUES ('-0.000001'),numeric.sql,SAME,,
postgresql,postgresql,DROP TABLE ceil_floor_round,numeric.sql,SAME,,
postgresql,postgresql,"CREATE TABLE width_bucket_test (operand_num numeric, operand_f8 float8)",numeric.sql,SAME,,
postgresql,postgresql,DROP TABLE width_bucket_test,numeric.sql,SAME,,
postgresql,postgresql,CREATE TABLE num_input_test (n1 numeric),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' 123'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('   3245874    '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('  -93853'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('555.50'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('-555.50'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('NaN '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('        nan'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' inf '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' +inf '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' -inf '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' Infinity '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' +inFinity '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' -INFINITY '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('12_000_000_000'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('12_000.123_456'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('23_000_000_000e-1_0'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e1_0'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e+1_1'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0b10001110111100111100001001010'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('  -0B_1010_1011_0101_0100_1010_1001_1000_1100_1110_1011_0001_1111_0000_1010_1101_0010  '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('  +0o112402761777 '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('-0O0012_5524_5230_6334_3167_0261'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('-0x0000000000000000000000000deadbeef'),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' 0X_30b1_F33a_6DF0_bD4E_64DF_9BdA_7D15 '),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('     '),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""     "" LINE 1: INSERT INTO num_input_test(n1) VALUES ('     ')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('   1234   %'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""   1234   %"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('   1234   %')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('xyz'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""xyz"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('xyz')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('- 1234'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""- 1234"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('- 1234')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('5 . 0'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""5 . 0"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('5 . 0')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('5. 0   '),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""5. 0   "" LINE 1: INSERT INTO num_input_test(n1) VALUES ('5. 0   ')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (''),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: """" LINE 1: INSERT INTO num_input_test(n1) VALUES ('')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES (' N aN '),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: "" N aN "" LINE 1: INSERT INTO num_input_test(n1) VALUES (' N aN ')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('+NaN'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""+NaN"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('+NaN')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('-NaN'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""-NaN"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('-NaN')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('+ infinity'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""+ infinity"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('+ infinity')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('_123'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""_123"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('_123')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('123_'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""123_"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('123_')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('12__34'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""12__34"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('12__34')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('123_.456'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""123_.456"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('123_.456')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('123._456'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""123._456"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('123._456')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('1.2e_34'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""1.2e_34"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e_34')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('1.2e34_'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""1.2e34_"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e34_')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('1.2e3__4'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""1.2e3__4"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e3__4')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0b1112'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0b1112"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0b1112')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0c1112'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0c1112"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0c1112')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0o12345678'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0o12345678"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0o12345678')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0x1eg'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0x1eg"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x1eg')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0x12.34'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0x12.34"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x12.34')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0x__1234'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0x__1234"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x__1234')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0x1234_'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0x1234_"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x1234_')"
postgresql,postgresql,INSERT INTO num_input_test(n1) VALUES ('0x12__34'),numeric.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type numeric: ""0x12__34"" LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x12__34')"
postgresql,postgresql,"CREATE TABLE num_typemod_test (   millions numeric(3, -6),   thousands numeric(3, -3),   units numeric(3, 0),   thousandths numeric(3, 3),   millionths numeric(3, 6) )",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (123456, 123, 0.123, 0.000123, 0.000000123)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (654321, 654, 0.654, 0.000654, 0.000000654)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (2345678, 2345, 2.345, 0.002345, 0.000002345)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (7654321, 7654, 7.654, 0.007654, 0.000007654)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (12345678, 12345, 12.345, 0.012345, 0.000012345)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (87654321, 87654, 87.654, 0.087654, 0.000087654)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (123456789, 123456, 123.456, 0.123456, 0.000123456)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES (987654321, 987654, 987.654, 0.987654, 0.000987654)",numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_typemod_test VALUES ('NaN', 'NaN', 'NaN', 'NaN', 'NaN')",numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_typemod_test (millions) VALUES ('inf'),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale -6 cannot hold an infinite value."
postgresql,postgresql,INSERT INTO num_typemod_test (millions) VALUES (999500000),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale -6 must round to an absolute value less than 109."
postgresql,postgresql,INSERT INTO num_typemod_test (thousands) VALUES (999500),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale -3 must round to an absolute value less than 106."
postgresql,postgresql,INSERT INTO num_typemod_test (units) VALUES (999.5),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale 0 must round to an absolute value less than 103."
postgresql,postgresql,INSERT INTO num_typemod_test (thousandths) VALUES (0.9995),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale 3 must round to an absolute value less than 1."
postgresql,postgresql,INSERT INTO num_typemod_test (millionths) VALUES (0.0009995),numeric.sql,DIFFERENT,NumericValueOutOfRange,"numeric field overflow DETAIL:  A field with precision 3, scale 6 must round to an absolute value less than 10-3."
postgresql,postgresql,CREATE TABLE num_variance (a numeric),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_variance VALUES (0),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_variance VALUES (3e-500),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_variance VALUES (-3e-500),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_variance VALUES (4e-500 - 1e-16383),numeric.sql,SAME,,
postgresql,postgresql,INSERT INTO num_variance VALUES (-4e-500 + 1e-16383),numeric.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_variance SELECT 9e131071 + x FROM generate_series(1, 5) x",numeric.sql,SAME,,
postgresql,postgresql,DROP TABLE num_variance,numeric.sql,SAME,,
postgresql,postgresql,"SET client_min_messages TO 'warning';  DROP ROLE IF EXISTS regress_priv_group1; DROP ROLE IF EXISTS regress_priv_group2;  DROP ROLE IF EXISTS regress_priv_user1; DROP ROLE IF EXISTS regress_priv_user2; DROP ROLE IF EXISTS regress_priv_user3; DROP ROLE IF EXISTS regress_priv_user4; DROP ROLE IF EXISTS regress_priv_user5; DROP ROLE IF EXISTS regress_priv_user6; DROP ROLE IF EXISTS regress_priv_user7;  SELECT lo_unlink(oid) FROM pg_largeobject_metadata WHERE oid >= 1000 AND oid < 3000 ORDER BY oid;  RESET client_min_messages;   CREATE USER regress_priv_user1; CREATE USER regress_priv_user2; CREATE USER regress_priv_user3; CREATE USER regress_priv_user4; CREATE USER regress_priv_user5; CREATE USER regress_priv_user5;	 CREATE USER regress_priv_user6; CREATE USER regress_priv_user7; CREATE USER regress_priv_user8; CREATE USER regress_priv_user9; CREATE USER regress_priv_user10; CREATE ROLE regress_priv_role;  GRANT regress_priv_user1 TO regress_priv_user2 WITH ADMIN OPTION; GRANT regress_priv_user1 TO regress_priv_user3 WITH ADMIN OPTION GRANTED BY regress_priv_user2; GRANT regress_priv_user1 TO regress_priv_user2 WITH ADMIN OPTION GRANTED BY regress_priv_user3;  REVOKE ADMIN OPTION FOR regress_priv_user1 FROM regress_priv_user2;  REVOKE regress_priv_user1 FROM regress_priv_user2;  SELECT member::regrole, admin_option FROM pg_auth_members WHERE roleid = 'regress_priv_user1'::regrole; BEGIN; REVOKE ADMIN OPTION FOR regress_priv_user1 FROM regress_priv_user2 CASCADE; SELECT member::regrole, admin_option FROM pg_auth_members WHERE roleid = 'regress_priv_user1'::regrole; ROLLBACK; REVOKE regress_priv_user1 FROM regress_priv_user2 CASCADE; SELECT member::regrole, admin_option FROM pg_auth_members WHERE roleid = 'regress_priv_user1'::regrole;  GRANT regress_priv_user1 TO regress_priv_user2 WITH ADMIN OPTION; GRANT regress_priv_user2 TO regress_priv_user3; SET ROLE regress_priv_user3; GRANT regress_priv_user1 TO regress_priv_user4; SELECT grantor::regrole FROM pg_auth_members WHERE roleid = 'regress_priv_user1'::regrole and member = 'regress_priv_user4'::regrole; RESET ROLE; REVOKE regress_priv_user2 FROM regress_priv_user3; REVOKE regress_priv_user1 FROM regress_priv_user2 CASCADE;  GRANT regress_priv_user1 TO regress_priv_user2 WITH ADMIN OPTION; GRANT regress_priv_user1 TO regress_priv_user3 GRANTED BY regress_priv_user2; DROP ROLE regress_priv_user2;  REASSIGN OWNED BY regress_priv_user2 TO regress_priv_user4; DROP ROLE regress_priv_user2;  DROP OWNED BY regress_priv_user2; DROP ROLE regress_priv_user2;   GRANT regress_priv_user1 TO regress_priv_user3 WITH ADMIN OPTION; GRANT regress_priv_user1 TO regress_priv_user4 GRANTED BY regress_priv_user3; DROP ROLE regress_priv_user3;  DROP ROLE regress_priv_user4;  DROP ROLE regress_priv_user3;  GRANT regress_priv_user1 TO regress_priv_user5 WITH ADMIN OPTION; GRANT regress_priv_user1 TO regress_priv_user6 GRANTED BY regress_priv_user5; DROP ROLE regress_priv_user5;  DROP ROLE regress_priv_user1, regress_priv_user5;   CREATE USER regress_priv_user1; CREATE USER regress_priv_user2; CREATE USER regress_priv_user3; CREATE USER regress_priv_user4; CREATE USER regress_priv_user5;  GRANT pg_read_all_data TO regress_priv_user6; GRANT pg_write_all_data TO regress_priv_user7; GRANT pg_read_all_settings TO regress_priv_user8 WITH ADMIN OPTION; GRANT regress_priv_user9 TO regress_priv_user8;  SET SESSION AUTHORIZATION regress_priv_user8; GRANT pg_read_all_settings TO regress_priv_user9 WITH ADMIN OPTION;  SET SESSION AUTHORIZATION regress_priv_user9; GRANT pg_read_all_settings TO regress_priv_user10;  SET SESSION AUTHORIZATION regress_priv_user8; REVOKE pg_read_all_settings FROM regress_priv_user10 GRANTED BY regress_priv_user9; REVOKE ADMIN OPTION FOR pg_read_all_settings FROM regress_priv_user9; REVOKE pg_read_all_settings FROM regress_priv_user9;  RESET SESSION AUTHORIZATION; REVOKE regress_priv_user9 FROM regress_priv_user8; REVOKE ADMIN OPTION FOR pg_read_all_settings FROM regress_priv_user8;  SET SESSION AUTHORIZATION regress_priv_user8; SET ROLE pg_read_all_settings; RESET ROLE;  RESET SESSION AUTHORIZATION; REVOKE SET OPTION FOR pg_read_all_settings FROM regress_priv_user8; GRANT pg_read_all_stats TO regress_priv_user8 WITH SET FALSE;  SET SESSION AUTHORIZATION regress_priv_user8; SET ROLE pg_read_all_settings;   SET ROLE pg_read_all_stats;      RESET ROLE;  RESET SESSION AUTHORIZATION; REVOKE pg_read_all_settings FROM regress_priv_user8;  DROP USER regress_priv_user10; DROP USER regress_priv_user9; DROP USER regress_priv_user8;  CREATE GROUP regress_priv_group1; CREATE GROUP regress_priv_group2 WITH ADMIN regress_priv_user1 USER regress_priv_user2;  ALTER GROUP regress_priv_group1 ADD USER regress_priv_user4;  GRANT regress_priv_group2 TO regress_priv_user2 GRANTED BY regress_priv_user1; SET SESSION AUTHORIZATION regress_priv_user1; ALTER GROUP regress_priv_group2 ADD USER regress_priv_user2; ALTER GROUP regress_priv_group2 ADD USER regress_priv_user2;	 ALTER GROUP regress_priv_group2 DROP USER regress_priv_user2; ALTER USER regress_priv_user2 PASSWORD 'verysecret';  RESET SESSION AUTHORIZATION; ALTER GROUP regress_priv_group2 DROP USER regress_priv_user2; REVOKE ADMIN OPTION FOR regress_priv_group2 FROM regress_priv_user1; GRANT regress_priv_group2 TO regress_priv_user4 WITH ADMIN OPTION;  CREATE FUNCTION leak(integer,integer) RETURNS boolean   AS 'int4lt'   LANGUAGE internal IMMUTABLE STRICT;   ALTER FUNCTION leak(integer,integer) OWNER TO regress_priv_user1;   GRANT regress_priv_role TO regress_priv_user1 WITH ADMIN OPTION GRANTED BY regress_priv_role;  GRANT regress_priv_role TO regress_priv_user1 WITH ADMIN OPTION GRANTED BY CURRENT_ROLE; REVOKE ADMIN OPTION FOR regress_priv_role FROM regress_priv_user1 GRANTED BY foo;  REVOKE ADMIN OPTION FOR regress_priv_role FROM regress_priv_user1 GRANTED BY regress_priv_user2;  REVOKE ADMIN OPTION FOR regress_priv_role FROM regress_priv_user1 GRANTED BY CURRENT_USER; REVOKE regress_priv_role FROM regress_priv_user1 GRANTED BY CURRENT_ROLE; DROP ROLE regress_priv_role;  SET SESSION AUTHORIZATION regress_priv_user1; SELECT session_user, current_user;  CREATE TABLE atest1 ( a int, b text ); SELECT * FROM atest1; INSERT INTO atest1 VALUES (1, 'one'); DELETE FROM atest1; UPDATE atest1 SET a = 1 WHERE b = 'blech'; TRUNCATE atest1; BEGIN; LOCK atest1 IN ACCESS EXCLUSIVE MODE; COMMIT;  REVOKE ALL ON atest1 FROM PUBLIC; SELECT * FROM atest1;  GRANT ALL ON atest1 TO regress_priv_user2; GRANT SELECT ON atest1 TO regress_priv_user3, regress_priv_user4; SELECT * FROM atest1;  CREATE TABLE atest2 (col1 varchar(10), col2 boolean); GRANT SELECT ON atest2 TO regress_priv_user2; GRANT UPDATE ON atest2 TO regress_priv_user3; GRANT INSERT ON atest2 TO regress_priv_user4 GRANTED BY CURRENT_USER; GRANT TRUNCATE ON atest2 TO regress_priv_user5 GRANTED BY CURRENT_ROLE;  GRANT TRUNCATE ON atest2 TO regress_priv_user4 GRANTED BY regress_priv_user5;     SET SESSION AUTHORIZATION regress_priv_user2; SELECT session_user, current_user;   SELECT * FROM atest1;  SELECT * FROM atest2;  INSERT INTO atest1 VALUES (2, 'two');  INSERT INTO atest2 VALUES ('foo', true);  INSERT INTO atest1 SELECT 1, b FROM atest1;  UPDATE atest1 SET a = 1 WHERE a = 2;  UPDATE atest2 SET col2 = NOT col2;  SELECT * FROM atest1 FOR UPDATE;  SELECT * FROM atest2 FOR UPDATE;  DELETE FROM atest2;  TRUNCATE atest2;  BEGIN; LOCK atest2 IN ACCESS EXCLUSIVE MODE;  COMMIT; COPY atest2 FROM stdin;  GRANT ALL ON atest1 TO PUBLIC;   SELECT * FROM atest1 WHERE ( b IN ( SELECT col1 FROM atest2 ) ); SELECT * FROM atest2 WHERE ( col1 IN ( SELECT b FROM atest1 ) );  SET SESSION AUTHORIZATION regress_priv_user6; SELECT * FROM atest1;  SELECT * FROM atest2;  INSERT INTO atest2 VALUES ('foo', true);   SET SESSION AUTHORIZATION regress_priv_user7; SELECT * FROM atest1;  SELECT * FROM atest2;  INSERT INTO atest2 VALUES ('foo', true);  UPDATE atest2 SET col2 = true;  DELETE FROM atest2;   UPDATE pg_catalog.pg_class SET relname = '123';  DELETE FROM pg_catalog.pg_class;  UPDATE pg_toast.pg_toast_1213 SET chunk_id = 1;   SET SESSION AUTHORIZATION regress_priv_user3; SELECT session_user, current_user;  SELECT * FROM atest1;  SELECT * FROM atest2;  INSERT INTO atest1 VALUES (2, 'two');  INSERT INTO atest2 VALUES ('foo', true);  INSERT INTO atest1 SELECT 1, b FROM atest1;  UPDATE atest1 SET a = 1 WHERE a = 2;  UPDATE atest2 SET col2 = NULL;  UPDATE atest2 SET col2 = NOT col2;  UPDATE atest2 SET col2 = true FROM atest1 WHERE atest1.a = 5;  SELECT * FROM atest1 FOR UPDATE;  SELECT * FROM atest2 FOR UPDATE;  DELETE FROM atest2;  TRUNCATE atest2;  BEGIN; LOCK atest2 IN ACCESS EXCLUSIVE MODE;  COMMIT; COPY atest2 FROM stdin;   SELECT * FROM atest1 WHERE ( b IN ( SELECT col1 FROM atest2 ) ); SELECT * FROM atest2 WHERE ( col1 IN ( SELECT b FROM atest1 ) );  SET SESSION AUTHORIZATION regress_priv_user4; COPY atest2 FROM stdin;  bar	true SELECT * FROM atest1;     SET SESSION AUTHORIZATION regress_priv_user1;  CREATE TABLE atest12 as   SELECT x AS a, 10001 - x AS b FROM generate_series(1,10000) x; CREATE INDEX ON atest12 (a); CREATE INDEX ON atest12 (abs(a)); ALTER TABLE atest12 SET (autovacuum_enabled = off); SET default_statistics_target = 10000; VACUUM ANALYZE atest12; RESET default_statistics_target;  CREATE OPERATOR <<< (procedure = leak, leftarg = integer, rightarg = integer,                      restrict = scalarltsel);  CREATE VIEW atest12v AS   SELECT * FROM atest12 WHERE b <<< 5; CREATE VIEW atest12sbv WITH (security_barrier=true) AS   SELECT * FROM atest12 WHERE b <<< 5; GRANT SELECT ON atest12v TO PUBLIC; GRANT SELECT ON atest12sbv TO PUBLIC;  EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b;  EXPLAIN (COSTS OFF) SELECT * FROM atest12 x, atest12 y   WHERE x.a = y.b and abs(y.a) <<< 5;  EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y WHERE x.a = y.b;  SET SESSION AUTHORIZATION regress_priv_user2;  CREATE FUNCTION leak2(integer,integer) RETURNS boolean   AS $$begin raise notice 'leak % %', $1, $2; return $1 > $2; end$$   LANGUAGE plpgsql immutable; CREATE OPERATOR >>> (procedure = leak2, leftarg = integer, rightarg = integer,                      restrict = scalargtsel);  EXPLAIN (COSTS OFF) SELECT * FROM atest12 WHERE a >>> 0;  EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b; EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y WHERE x.a = y.b;  EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y   WHERE x.a = y.b and abs(y.a) <<< 5;  EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y   WHERE x.a = y.b and abs(y.a) <<< 5;  SET SESSION AUTHORIZATION regress_priv_user1; GRANT SELECT (a, b) ON atest12 TO PUBLIC; SET SESSION AUTHORIZATION regress_priv_user2;  EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b;  EXPLAIN (COSTS OFF) SELECT * FROM atest12 x, atest12 y   WHERE x.a = y.b and abs(y.a) <<< 5;  DROP FUNCTION leak2(integer, integer) CASCADE;    SET SESSION AUTHORIZATION regress_priv_user3; CREATE TABLE atest3 (one int, two int, three int); GRANT DELETE ON atest3 TO GROUP regress_priv_group2;  SET SESSION AUTHORIZATION regress_priv_user1;  SELECT * FROM atest3;  DELETE FROM atest3;   BEGIN; RESET SESSION AUTHORIZATION; ALTER ROLE regress_priv_user1 NOINHERIT; SET SESSION AUTHORIZATION regress_priv_user1; SAVEPOINT s1; DELETE FROM atest3;  ROLLBACK TO s1; RESET SESSION AUTHORIZATION; GRANT regress_priv_group2 TO regress_priv_user1 WITH INHERIT FALSE; SET SESSION AUTHORIZATION regress_priv_user1; DELETE FROM atest3;  ROLLBACK TO s1; RESET SESSION AUTHORIZATION; REVOKE INHERIT OPTION FOR regress_priv_group2 FROM regress_priv_user1; SET SESSION AUTHORIZATION regress_priv_user1; DELETE FROM atest3;  ROLLBACK;   SET SESSION AUTHORIZATION regress_priv_user3;  CREATE VIEW atestv1 AS SELECT * FROM atest1;  /* The next *should* fail, but it's not implemented that way yet. */ CREATE VIEW atestv2 AS SELECT * FROM atest2",privileges.sql,DIFFERENT,SyntaxError,"syntax error at or near ""bar"" LINE 244: bar true"
postgresql,postgresql,"CREATE TABLE atest5 (one int, two int unique, three int, four int unique)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE atest6 (one int, two int, blue int)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO atest5 VALUES (1,2,3)",privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5 (two) VALUES (3),privileges.sql,SAME,,
postgresql,postgresql,1 INSERT INTO atest5 (three) VALUES (4),privileges.sql,DIFFERENT,SyntaxError,"syntax error at or near ""1"" LINE 1: 1"
postgresql,postgresql,"INSERT INTO atest5 VALUES (5,5,5)",privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = 10,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = 10 RETURNING atest5.three,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = 10 RETURNING atest5.one,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = EXCLUDED.one,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = EXCLUDED.three,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set one = 8,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(three) VALUES (4) ON CONFLICT (two) DO UPDATE set three = 10,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4),privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4) ON CONFLICT (four) DO UPDATE set three = 3,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4) ON CONFLICT ON CONSTRAINT atest5_four_key DO UPDATE set three = 3,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4),privileges.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atest5_four_key"" DETAIL:  Key (four)=(4) already exists."
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4) ON CONFLICT (four) DO UPDATE set three = 3,privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO atest5(four) VALUES (4) ON CONFLICT ON CONSTRAINT atest5_four_key DO UPDATE set three = 3,privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mtarget (a int, b text)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE msource (a int, b text)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO mtarget VALUES (1, 'init1'), (2, 'init2')",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO msource VALUES (1, 'source1'), (2, 'source2'), (3, 'source3')",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (c1 int, c2 int, c3 int check (c3 < 5), primary key (c1, c2))",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (1, 1, 1)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (1, 2, 1)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (2, 1, 2)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (2, 2, 2)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (3, 1, 3)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 (c1, c2) VALUES (1, 1)",privileges.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""t1_pkey"" DETAIL:  Key (c1, c2)=(1, 1) already exists."
postgresql,postgresql,"INSERT INTO t1 (c1, c2) VALUES (null, null)",privileges.sql,DIFFERENT,NotNullViolation,"null value in column ""c1"" of relation ""t1"" violates not-null constraint DETAIL:  Failing row contains (null, null, null)."
postgresql,postgresql,INSERT INTO t1 (c3) VALUES (null),privileges.sql,DIFFERENT,NotNullViolation,"null value in column ""c1"" of relation ""t1"" violates not-null constraint DETAIL:  Failing row contains (null, null, null)."
postgresql,postgresql,INSERT INTO t1 (c1) VALUES (5),privileges.sql,DIFFERENT,NotNullViolation,"null value in column ""c2"" of relation ""t1"" violates not-null constraint DETAIL:  Failing row contains (5, null, null)."
postgresql,postgresql,DROP TABLE t1,privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst(a text, b text NOT NULL, c text, secret1 text, secret2 text) PARTITION BY LIST (a)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_part_1(secret2 text, c text, a text, b text NOT NULL, secret1 text)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_part_2(secret1 text, secret2 text, a text, c text, b text NOT NULL)",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst_part_1 (a, b, c, secret1, secret2) VALUES ('aaa', 'bbb', 'ccc', 'the body', 'is in the attic')",privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst (a, b) VALUES ('aaa', NULL)",privileges.sql,DIFFERENT,NotNullViolation,"null value in column ""b"" of relation ""errtst_part_1"" violates not-null constraint DETAIL:  Failing row contains (aaa, null, null, null, null)."
postgresql,postgresql,DROP TABLE errtst,privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE atestp1 (f1 int, f2 int)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE atestp2 (fx int, fy int)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE atestc (fz int) INHERITS (atestp1, atestp2)",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test5a (a int, b priv_testdomain1)",privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE test6a OF priv_testtype1,privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test10a (a int[], b priv_testtype1[])",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test9a (a int, b int)",privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE test11a AS (SELECT 1::priv_testdomain1 AS a),privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test5b (a int, b priv_testdomain1)",privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE test6b OF priv_testtype1,privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test10b (a int[], b priv_testtype1[])",privileges.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test9b (a int, b int)",privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE test11b AS (SELECT 1::priv_testdomain1 AS a),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE test5b,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE test6b,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE test9b,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE test10b,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE test11b,privileges.sql,SAME,,
postgresql,postgresql,drop table mytable,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE atest4 (a int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE sro_tab (a int),privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO sro_tab VALUES (1), (2), (3)",privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE sro_tab,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE sro_ptab (a int) PARTITION BY RANGE (a),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE sro_part PARTITION OF sro_ptab FOR VALUES FROM (1) TO (10),privileges.sql,SAME,,
postgresql,postgresql,"INSERT INTO sro_ptab VALUES (1), (2), (3)",privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE sro_trojan_table (),privileges.sql,SAME,,
postgresql,postgresql,CREATE OR REPLACE FUNCTION mv_action() RETURNS bool LANGUAGE sql AS 	'INSERT INTO public.sro_trojan_table DEFAULT VALUES; SELECT true',privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE datdba_only (),privileges.sql,SAME,,
postgresql,postgresql,INSERT INTO datdba_only DEFAULT VALUES,privileges.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO datdba_only DEFAULT VALUES,privileges.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE testns.acltest1 (x int),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE testns.acltest1,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE testns.acltest1 (x int),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE testns.acltest1,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE testns.acltest1 (x int),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE testns.acltest1,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE testns.acltest1 (x int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE testns.t1 (f1 int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE testns.t2 (f1 int),privileges.sql,SAME,,
postgresql,postgresql,create table dep_priv_test (a int),privileges.sql,SAME,,
postgresql,postgresql,drop table dep_priv_test,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atest1,privileges.sql,DIFFERENT,UndefinedTable,"table ""atest1"" does not exist"
postgresql,postgresql,DROP TABLE atest2,privileges.sql,DIFFERENT,UndefinedTable,"table ""atest2"" does not exist"
postgresql,postgresql,DROP TABLE atest3,privileges.sql,DIFFERENT,UndefinedTable,"table ""atest3"" does not exist"
postgresql,postgresql,DROP TABLE atest4,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atest5,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atest6,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atestc,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atestp1,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE atestp2,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE lock_table (a int),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE lock_table,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE regress_roleoption.t1 (a int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE regress_roleoption.t2 (a int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE regress_roleoption.t3 (a int),privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE regress_roleoption.t4 (a int),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE regress_roleoption.t1,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE regress_roleoption.t2,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE regress_roleoption.t3,privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE regress_roleoption.t4,privileges.sql,SAME,,
postgresql,postgresql,CREATE TABLE maintain_test (a INT),privileges.sql,SAME,,
postgresql,postgresql,DROP TABLE maintain_test,privileges.sql,SAME,,
postgresql,postgresql,"CREATE SCHEMA test_ns_schema_1        CREATE UNIQUE INDEX abc_a_idx ON abc (a)         CREATE VIEW abc_view AS               SELECT a+1 AS a, b+1 AS b FROM abc         CREATE TABLE abc (               a serial,               b int UNIQUE        )",namespace.sql,SAME,,
postgresql,postgresql,INSERT INTO test_ns_schema_1.abc DEFAULT VALUES,namespace.sql,SAME,,
postgresql,postgresql,INSERT INTO test_ns_schema_1.abc DEFAULT VALUES,namespace.sql,SAME,,
postgresql,postgresql,INSERT INTO test_ns_schema_1.abc DEFAULT VALUES,namespace.sql,SAME,,
postgresql,postgresql,"CREATE SCHEMA IF NOT EXISTS test_ns_schema_renamed         CREATE TABLE abc (               a serial,               b int UNIQUE        )",namespace.sql,DIFFERENT,FeatureNotSupported,CREATE SCHEMA IF NOT EXISTS cannot include schema elements LINE 2:        CREATE TABLE abc (
postgresql,postgresql,CREATE TABLE test_maint(i INT),namespace.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_maint VALUES (1), (2)",namespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE money_data (m money),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('123'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.45'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.451'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.454'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.455'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.456'),money.sql,SAME,,
postgresql,postgresql,INSERT INTO money_data VALUES ('$123.459'),money.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest1 (a int generated by default as identity, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest2 (a bigint generated always as identity, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest3 (a smallint generated by default as identity (start with 7 increment by 5), b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest4 (a int, b text)",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest_err_1 (a text generated by default as identity),identity.sql,DIFFERENT,InvalidParameterValue,"identity column type must be smallint, integer, or bigint"
postgresql,postgresql,CREATE TABLE itest_err_2 (a int generated always as identity generated by default as identity),identity.sql,DIFFERENT,SyntaxError,"multiple identity specifications for column ""a"" of table ""itest_err_2"" LINE 1: ...E itest_err_2 (a int generated always as identity generated ..."
postgresql,postgresql,CREATE TABLE itest_err_3 (a int default 5 generated by default as identity),identity.sql,DIFFERENT,SyntaxError,"both default and identity specified for column ""a"" of table ""itest_err_3"" LINE 1: CREATE TABLE itest_err_3 (a int default 5 generated by defau..."
postgresql,postgresql,CREATE TABLE itest_err_4 (a serial generated by default as identity),identity.sql,DIFFERENT,SyntaxError,"both default and identity specified for column ""a"" of table ""itest_err_4"""
postgresql,postgresql,INSERT INTO itest1 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest1 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest2 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest2 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest3 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest3 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest4 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest4 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest5 (a int generated always as identity, b text)",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 VALUES (1, 'a')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itest5 VALUES (DEFAULT, 'a')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 VALUES (2, 'b'), (3, 'c')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itest5 VALUES (DEFAULT, 'b'), (3, 'c')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itest5 VALUES (2, 'b'), (DEFAULT, 'c')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itest5 VALUES (DEFAULT, 'b'), (DEFAULT, 'c')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-1, 'aa')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-2, 'bb'), (-3, 'cc')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (DEFAULT, 'dd'), (-4, 'ee')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-5, 'ff'), (DEFAULT, 'gg')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (DEFAULT, 'hh'), (DEFAULT, 'ii')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-1, 'aaa')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-2, 'bbb'), (-3, 'ccc')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING USER VALUE VALUES (DEFAULT, 'ddd'), (-4, 'eee')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-5, 'fff'), (DEFAULT, 'ggg')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest5 OVERRIDING USER VALUE VALUES (DEFAULT, 'hhh'), (DEFAULT, 'iii')",identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest5,identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest3 VALUES (DEFAULT, 'a')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest3 VALUES (DEFAULT, 'b'), (DEFAULT, 'c')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest1 VALUES (10, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest1 OVERRIDING SYSTEM VALUE VALUES (20, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest1 OVERRIDING USER VALUE VALUES (30, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest2 VALUES (10, 'xyz')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itest2 OVERRIDING SYSTEM VALUE VALUES (20, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest2 OVERRIDING USER VALUE VALUES (30, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest9 (a int GENERATED ALWAYS AS IDENTITY, b text, c bigint)",identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest4 DEFAULT VALUES,identity.sql,DIFFERENT,NotNullViolation,"null value in column ""a"" of relation ""itest4"" violates not-null constraint DETAIL:  Failing row contains (null, )."
postgresql,postgresql,INSERT INTO itest4 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest10 (a int generated by default as identity, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest11 (a int generated always as identity, b text)",identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itestv10 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itestv10 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itestv11 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itestv11 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itestv10 VALUES (10, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itestv10 OVERRIDING USER VALUE VALUES (11, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itestv11 VALUES (10, 'xyz')",identity.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""a"" DETAIL:  Column ""a"" is an identity column defined as GENERATED ALWAYS. HINT:  Use OVERRIDING SYSTEM VALUE to override."
postgresql,postgresql,"INSERT INTO itestv11 OVERRIDING SYSTEM VALUE VALUES (11, 'xyz')",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest13 (a int),identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest13 VALUES (1), (2), (3)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest5 (a serial, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest18 (a int NOT NULL, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest6 (a int GENERATED ALWAYS AS IDENTITY, b text)",identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest6 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest6 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest6 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7 (a int GENERATED ALWAYS AS IDENTITY),identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest7 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7a (b text) INHERITS (itest7),identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7b (a int),identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7c (a int GENERATED ALWAYS AS IDENTITY) INHERITS (itest7b),identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest7c DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7d (a int not null),identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest7e () INHERITS (itest7d),identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest8 (a int GENERATED ALWAYS AS IDENTITY, b text)",identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest8 DEFAULT VALUES,identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest8,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest8 (f1 int),identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO itest8 VALUES(0), (1)",identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest8,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest12 OF itest_type (f1 WITH OPTIONS GENERATED ALWAYS AS IDENTITY),identity.sql,DIFFERENT,FeatureNotSupported,identity columns are not supported on typed tables
postgresql,postgresql,"CREATE TABLE pitest1 (f1 date NOT NULL, f2 text, f3 bigint generated always as identity) PARTITION BY RANGE (f1)",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pitest1_p1 PARTITION OF pitest1 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest1(f1, f2) VALUES ('2016-07-2', 'from pitest1')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest1_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest1_p1')",identity.sql,DIFFERENT,NotNullViolation,"null value in column ""f3"" of relation ""pitest1_p1"" violates not-null constraint DETAIL:  Failing row contains (2016-07-03, from pitest1_p1, null)."
postgresql,postgresql,"CREATE TABLE pitest1_p2 (f1 date NOT NULL, f2 text, f3 bigint)",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest1_p2 VALUES ('2016-08-2', 'before attaching', 100)",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest1_p2 (f1, f2) VALUES ('2016-08-3', 'from pitest1_p2')",identity.sql,DIFFERENT,NotNullViolation,"null value in column ""f3"" of relation ""pitest1_p2"" violates not-null constraint DETAIL:  Failing row contains (2016-08-03, from pitest1_p2, null)."
postgresql,postgresql,"INSERT INTO pitest1 (f1, f2) VALUES ('2016-08-4', 'from pitest1')",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pitest2 (f1 date NOT NULL, f2 text) PARTITION BY RANGE (f1)",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pitest2_p1 PARTITION OF pitest2 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pitest2_p2 PARTITION OF pitest2 FOR VALUES FROM ('2016-08-01') TO ('2016-09-01'),identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2(f1, f2) VALUES ('2016-07-2', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-2', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest2_p1')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest2_p2 (f1, f2) VALUES ('2016-08-3', 'from pitest2_p2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2(f1, f2) VALUES ('2016-07-4', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-4', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2(f1, f2, f3) VALUES ('2016-07-5', 'from pitest2', 200)",identity.sql,DIFFERENT,UndefinedColumn,"column ""f3"" of relation ""pitest2"" does not exist LINE 1: INSERT into pitest2(f1, f2, f3) VALUES ('2016-07-5', 'from p..."
postgresql,postgresql,"INSERT INTO pitest2(f1, f2) VALUES ('2016-08-5', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-6', 'from pitest2_p1')",identity.sql,SAME,,
postgresql,postgresql,"INSERT INTO pitest2_p2 (f1, f2, f3) VALUES ('2016-08-6', 'from pitest2_p2', 300)",identity.sql,DIFFERENT,UndefinedColumn,"column ""f3"" of relation ""pitest2_p2"" does not exist LINE 1: INSERT INTO pitest2_p2 (f1, f2, f3) VALUES ('2016-08-6', 'fr..."
postgresql,postgresql,"INSERT into pitest2(f1, f2) VALUES ('2016-08-7', 'from pitest2')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-7', 'from pitest2_p1')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest2_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest2_p1', 2000)",identity.sql,DIFFERENT,UndefinedColumn,"column ""f3"" of relation ""pitest2_p1"" does not exist LINE 1: INSERT into pitest2_p1 (f1, f2, f3) VALUES ('2016-07-7', 'fr..."
postgresql,postgresql,DROP TABLE pitest2_p1,identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pitest3 (f1 date NOT NULL, f2 text, f3 int) PARTITION BY RANGE (f1)",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pitest3_p1 PARTITION OF pitest3 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3 VALUES ('2016-07-2', 'from pitest3', 1)",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3_p1 VALUES ('2016-07-3', 'from pitest3_p1', 2)",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3(f1, f2) VALUES ('2016-07-4', 'from pitest3')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3_p1 (f1, f2) VALUES ('2016-07-5', 'from pitest3_p1')",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3(f1, f2) VALUES ('2016-07-4', 'from pitest3')",identity.sql,DIFFERENT,NotNullViolation,"null value in column ""f3"" of relation ""pitest3_p1"" violates not-null constraint DETAIL:  Failing row contains (2016-07-04, from pitest3, null)."
postgresql,postgresql,"INSERT into pitest3_p1 (f1, f2) VALUES ('2016-07-5', 'from pitest3_p1')",identity.sql,DIFFERENT,NotNullViolation,"null value in column ""f3"" of relation ""pitest3_p1"" violates not-null constraint DETAIL:  Failing row contains (2016-07-05, from pitest3_p1, null)."
postgresql,postgresql,"INSERT into pitest3(f1, f2, f3) VALUES ('2016-07-6', 'from pitest3', 5)",identity.sql,SAME,,
postgresql,postgresql,"INSERT into pitest3_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest3_p1', 6)",identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pitest1_pfail PARTITION OF pitest1 (     f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-11-01') TO ('2016-12-01'),identity.sql,DIFFERENT,FeatureNotSupported,identity columns are not supported on partitions
postgresql,postgresql,CREATE TABLE pitest_pfail PARTITION OF pitest3 (     f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01'),identity.sql,DIFFERENT,FeatureNotSupported,identity columns are not supported on partitions
postgresql,postgresql,"CREATE TABLE pitest1_pfail (f1 date NOT NULL, f2 text, f3 bigint GENERATED ALWAYS AS IDENTITY)",identity.sql,SAME,,
postgresql,postgresql,DROP TABLE pitest1_pfail,identity.sql,SAME,,
postgresql,postgresql,DROP TABLE pitest3,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest14 (id serial),identity.sql,SAME,,
postgresql,postgresql,INSERT INTO itest14 (id) VALUES (DEFAULT),identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NULL),identity.sql,DIFFERENT,SyntaxError,"conflicting NULL/NOT NULL declarations for column ""id"" of table ""itest15"" LINE 1: ...TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NULL)"
postgresql,postgresql,CREATE TABLE itest15 (id integer NULL GENERATED ALWAYS AS IDENTITY),identity.sql,DIFFERENT,SyntaxError,"conflicting NULL/NOT NULL declarations for column ""id"" of table ""itest15"" LINE 1: CREATE TABLE itest15 (id integer NULL GENERATED ALWAYS AS ID..."
postgresql,postgresql,CREATE TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NOT NULL),identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest15,identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE itest15 (id integer NOT NULL GENERATED ALWAYS AS IDENTITY),identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest15,identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest15 (a int GENERATED ALWAYS AS IDENTITY, b text)",identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE itest16 (a int GENERATED BY DEFAULT AS IDENTITY, b text)",identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest15,identity.sql,SAME,,
postgresql,postgresql,DROP TABLE itest16,identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE expr_key (x numeric, t text)",memoize.sql,SAME,,
postgresql,postgresql,"INSERT INTO expr_key (x, t) SELECT d1::numeric, d1::text FROM (     SELECT round((d / pi())::numeric, 7) AS d1 FROM generate_series(1, 20) AS d ) t",memoize.sql,SAME,,
postgresql,postgresql,INSERT INTO expr_key SELECT * FROM expr_key,memoize.sql,SAME,,
postgresql,postgresql,DROP TABLE expr_key,memoize.sql,SAME,,
postgresql,postgresql,CREATE TABLE flt (f float),memoize.sql,SAME,,
postgresql,postgresql,"INSERT INTO flt VALUES('-0.0'::float),('+0.0'::float)",memoize.sql,SAME,,
postgresql,postgresql,DROP TABLE flt,memoize.sql,SAME,,
postgresql,postgresql,"CREATE TABLE strtest (n name, t text)",memoize.sql,SAME,,
postgresql,postgresql,"INSERT INTO strtest VALUES('one','one'),('two','two'),('three',repeat(fipshash('three'),100))",memoize.sql,DIFFERENT,UndefinedFunction,"function fipshash(unknown) does not exist LINE 1: ...VALUES('one','one'),('two','two'),('three',repeat(fipshash('...                                                               HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,INSERT INTO strtest SELECT * FROM strtest,memoize.sql,SAME,,
postgresql,postgresql,DROP TABLE strtest,memoize.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt (a int) PARTITION BY RANGE(a),memoize.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt_p1 PARTITION OF prt FOR VALUES FROM (0) TO (10),memoize.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt_p2 PARTITION OF prt FOR VALUES FROM (10) TO (20),memoize.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt VALUES (0), (0), (0), (0)",memoize.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt VALUES (10), (10), (10), (10)",memoize.sql,SAME,,
postgresql,postgresql,DROP TABLE prt,memoize.sql,SAME,,
postgresql,postgresql,"CREATE TABLE seclabel_tbl1 (a int, b text)",security_label.sql,SAME,,
postgresql,postgresql,"CREATE TABLE seclabel_tbl2 (x int, y text)",security_label.sql,SAME,,
postgresql,postgresql,DROP TABLE seclabel_tbl1,security_label.sql,SAME,,
postgresql,postgresql,DROP TABLE seclabel_tbl2,security_label.sql,SAME,,
postgresql,postgresql,"/*  * 1.1. test CREATE INDEX with buffered build  */  CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,8000) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 1.2. test CREATE INDEX with inserts  */  CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,8000) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 2. CREATE INDEX CONCURRENTLY  */ CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 3. REINDEX  */ CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 4. Update, delete values in indexed table.  */ CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 5. Alter column type.  */ CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box)",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"/*  * 6. EXCLUDE constraint.  */ CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box, EXCLUDE USING gist (c4 WITH &&) INCLUDE (c1, c2, c3))",index_including_gist.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""tbl_gist_c4_c1_c2_c3_excl"" DETAIL:  Key (c4)=((4,5),(2,3)) conflicts with existing key (c4)=((2,3),(1,2))."
postgresql,postgresql,"INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(3*x,2*x),point(3*x+1,2*x+1)) FROM generate_series(1,10) AS x",index_including_gist.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl_gist,index_including_gist.sql,SAME,,
postgresql,postgresql,"CREATE TABLE reloptions_test(i INT) WITH (FiLLFaCToR=30, 	autovacuum_enabled = false, autovacuum_analyze_scale_factor = 0.2)",reloptions.sql,SAME,,
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=2),reloptions.sql,DIFFERENT,InvalidParameterValue,"value 2 out of bounds for option ""fillfactor"" DETAIL:  Valid values are between ""10"" and ""100""."
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=110),reloptions.sql,DIFFERENT,InvalidParameterValue,"value 110 out of bounds for option ""fillfactor"" DETAIL:  Valid values are between ""10"" and ""100""."
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = -10.0),reloptions.sql,DIFFERENT,InvalidParameterValue,"value -10.0 out of bounds for option ""autovacuum_analyze_scale_factor"" DETAIL:  Valid values are between ""0.000000"" and ""100.000000""."
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = 110.0),reloptions.sql,DIFFERENT,InvalidParameterValue,"value 110.0 out of bounds for option ""autovacuum_analyze_scale_factor"" DETAIL:  Valid values are between ""0.000000"" and ""100.000000""."
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (not_existing_option=2),reloptions.sql,DIFFERENT,InvalidParameterValue,"unrecognized parameter ""not_existing_option"""
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (not_existing_namespace.fillfactor=2),reloptions.sql,DIFFERENT,InvalidParameterValue,"unrecognized parameter namespace ""not_existing_namespace"""
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=-30.1),reloptions.sql,DIFFERENT,InvalidParameterValue,"value -30.1 out of bounds for option ""fillfactor"" DETAIL:  Valid values are between ""10"" and ""100""."
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor='string'),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for integer option ""fillfactor"": string"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=true),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for integer option ""fillfactor"": true"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=12),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for boolean option ""autovacuum_enabled"": 12"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=30.5),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for boolean option ""autovacuum_enabled"": 30.5"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled='string'),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for boolean option ""autovacuum_enabled"": string"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor='string'),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for floating point option ""autovacuum_analyze_scale_factor"": string"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor=true),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for floating point option ""autovacuum_analyze_scale_factor"": true"
postgresql,postgresql,"CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=30, fillfactor=40)",reloptions.sql,DIFFERENT,InvalidParameterValue,"parameter ""fillfactor"" specified more than once"
postgresql,postgresql,CREATE TABLE reloptions_test2(i INT) WITH (fillfactor),reloptions.sql,DIFFERENT,InvalidParameterValue,"invalid value for integer option ""fillfactor"": true"
postgresql,postgresql,DROP TABLE reloptions_test,reloptions.sql,SAME,,
postgresql,postgresql,"INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL)",reloptions.sql,DIFFERENT,NotNullViolation,"null value in column ""i"" of relation ""reloptions_test"" violates not-null constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,"INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL)",reloptions.sql,DIFFERENT,NotNullViolation,"null value in column ""i"" of relation ""reloptions_test"" violates not-null constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,DROP TABLE reloptions_test,reloptions.sql,SAME,,
postgresql,postgresql,CREATE TABLE reloptions_test (s VARCHAR) 	WITH (toast.autovacuum_vacuum_cost_delay = 23),reloptions.sql,SAME,,
postgresql,postgresql,CREATE TABLE reloptions_test2 (i int) WITH (toast.not_existing_option = 42),reloptions.sql,DIFFERENT,InvalidParameterValue,"unrecognized parameter ""not_existing_option"""
postgresql,postgresql,DROP TABLE reloptions_test,reloptions.sql,SAME,,
postgresql,postgresql,"CREATE TABLE reloptions_test (s VARCHAR) WITH 	(toast.autovacuum_vacuum_cost_delay = 23, 	autovacuum_vacuum_cost_delay = 24, fillfactor = 40)",reloptions.sql,SAME,,
postgresql,postgresql,"CREATE TABLE delete_test (     id SERIAL PRIMARY KEY,     a INT,     b text )",delete.sql,SAME,,
postgresql,postgresql,INSERT INTO delete_test (a) VALUES (10),delete.sql,SAME,,
postgresql,postgresql,"INSERT INTO delete_test (a, b) VALUES (50, repeat('x', 10000))",delete.sql,SAME,,
postgresql,postgresql,INSERT INTO delete_test (a) VALUES (100),delete.sql,SAME,,
postgresql,postgresql,DROP TABLE delete_test,delete.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brintest_multi ( 	int8col bigint, 	int2col smallint, 	int4col integer, 	oidcol oid, 	tidcol tid, 	float4col real, 	float8col double precision, 	macaddrcol macaddr, 	macaddr8col macaddr8, 	inetcol inet, 	cidrcol cidr, 	datecol date, 	timecol time without time zone, 	timestampcol timestamp without time zone, 	timestamptzcol timestamp with time zone, 	intervalcol interval, 	timetzcol time with time zone, 	numericcol numeric, 	uuidcol uuid, 	lsncol pg_lsn ) WITH (fillfactor=10)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_multi SELECT 	142857 * tenthous, 	thousand, 	twothousand, 	unique1::oid, 	format('(%s,%s)', tenthous, twenty)::tid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	substr(fipshash(unique1::text), 1, 16)::macaddr8, 	inet '10.2.3.4/24' + tenthous, 	cidr '10.2.3/24' + tenthous, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20+02' + hundred * interval '15 seconds', 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	format('%s/%s%s', odd, even, tenthous)::pg_lsn FROM tenk1 ORDER BY unique2 LIMIT 100",brin_multi.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 22: FROM tenk1 ORDER BY unique2 LIMIT 100"
postgresql,postgresql,"INSERT INTO brintest_multi (inetcol, cidrcol) SELECT 	inet 'fe80::6e40:8ff:fea9:8c46' + tenthous, 	cidr 'fe80::6e40:8ff:fea9:8c46' + tenthous FROM tenk1 ORDER BY thousand, tenthous LIMIT 25",brin_multi.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 4: FROM tenk1 ORDER BY thousand, tenthous LIMIT 25"
postgresql,postgresql,"CREATE TABLE brinopers_multi (colname name, typ text, 	op text[], value text[], matches int[], 	check (cardinality(op) = cardinality(value)), 	check (cardinality(op) = cardinality(matches)))",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brinopers_multi VALUES 	('int2col', 'int2', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 999}', 	 '{100, 100, 1, 100, 100}'), 	('int2col', 'int4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int2col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int2', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('int8col', 'int2', 	 '{>, >=}', 	 '{0, 0}', 	 '{100, 100}'), 	('int8col', 'int4', 	 '{>, >=}', 	 '{0, 0}', 	 '{100, 100}'), 	('int8col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 1257141600, 1428427143, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('oidcol', 'oid', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 8800, 9999, 9999}', 	 '{100, 100, 1, 100, 100}'), 	('tidcol', 'tid', 	 '{>, >=, =, <=, <}', 	 '{""(0,0)"", ""(0,0)"", ""(8800,0)"", ""(9999,19)"", ""(9999,19)""}', 	 '{100, 100, 1, 100, 100}'), 	('float4col', 'float4', 	 '{>, >=, =, <=, <}', 	 '{0.0103093, 0.0103093, 1, 1, 1}', 	 '{100, 100, 4, 100, 96}'), 	('float4col', 'float8', 	 '{>, >=, =, <=, <}', 	 '{0.0103093, 0.0103093, 1, 1, 1}', 	 '{100, 100, 4, 100, 96}'), 	('float8col', 'float4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 0, 1.98, 1.98}', 	 '{99, 100, 1, 100, 100}'), 	('float8col', 'float8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 0, 1.98, 1.98}', 	 '{99, 100, 1, 100, 100}'), 	('macaddrcol', 'macaddr', 	 '{>, >=, =, <=, <}', 	 '{00:00:01:00:00:00, 00:00:01:00:00:00, 2c:00:2d:00:16:00, ff:fe:00:00:00:00, ff:fe:00:00:00:00}', 	 '{99, 100, 2, 100, 100}'), 	('macaddr8col', 'macaddr8', 	 '{>, >=, =, <=, <}', 	 '{b1:d1:0e:7b:af:a4:42:12, d9:35:91:bd:f7:86:0e:1e, 72:8f:20:6c:2a:01:bf:57, 23:e8:46:63:86:07:ad:cb, 13:16:8e:6a:2e:6c:84:b4}', 	 '{31, 17, 1, 11, 4}'), 	('inetcol', 'inet', 	 '{=, <, <=, >, >=}', 	 '{10.2.14.231/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}', 	 '{1, 100, 100, 125, 125}'), 	('inetcol', 'cidr', 	 '{<, <=, >, >=}', 	 '{255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}', 	 '{100, 100, 125, 125}'), 	('cidrcol', 'inet', 	 '{=, <, <=, >, >=}', 	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}', 	 '{2, 100, 100, 125, 125}'), 	('cidrcol', 'cidr', 	 '{=, <, <=, >, >=}', 	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}', 	 '{2, 100, 100, 125, 125}'), 	('datecol', 'date', 	 '{>, >=, =, <=, <}', 	 '{1995-08-15, 1995-08-15, 2009-12-01, 2022-12-30, 2022-12-30}', 	 '{100, 100, 1, 100, 100}'), 	('timecol', 'time', 	 '{>, >=, =, <=, <}', 	 '{01:20:30, 01:20:30, 02:28:57, 06:28:31.5, 06:28:31.5}', 	 '{100, 100, 1, 100, 100}'), 	('timestampcol', 'timestamp', 	 '{>, >=, =, <=, <}', 	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}', 	 '{100, 100, 1, 100, 100}'), 	('timestampcol', 'timestamptz', 	 '{>, >=, =, <=, <}', 	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}', 	 '{100, 100, 1, 100, 100}'), 	('timestamptzcol', 'timestamptz', 	 '{>, >=, =, <=, <}', 	 '{1972-10-10 03:00:00-04, 1972-10-10 03:00:00-04, 1972-10-19 09:00:00-07, 1972-11-20 19:00:00-03, 1972-11-20 19:00:00-03}', 	 '{100, 100, 1, 100, 100}'), 	('intervalcol', 'interval', 	 '{>, >=, =, <=, <}', 	 '{00:00:00, 00:00:00, 1 mons 13 days 12:24, 2 mons 23 days 07:48:00, 1 year}', 	 '{100, 100, 1, 100, 100}'), 	('timetzcol', 'timetz', 	 '{>, >=, =, <=, <}', 	 '{01:30:20+02, 01:30:20+02, 01:35:50+02, 23:55:05+02, 23:55:05+02}', 	 '{99, 100, 2, 100, 100}'), 	('numericcol', 'numeric', 	 '{>, >=, =, <=, <}', 	 '{0.00, 0.01, 2268164.347826086956521739130434782609, 99470151.9, 99470151.9}', 	 '{100, 100, 1, 100, 100}'), 	('uuidcol', 'uuid', 	 '{>, >=, =, <=, <}', 	 '{00040004-0004-0004-0004-000400040004, 00040004-0004-0004-0004-000400040004, 52225222-5222-5222-5222-522252225222, 99989998-9998-9998-9998-999899989998, 99989998-9998-9998-9998-999899989998}', 	 '{100, 100, 1, 100, 100}'), 	('lsncol', 'pg_lsn', 	 '{>, >=, =, <=, <, IS, IS NOT}', 	 '{0/1200, 0/1200, 44/455222, 198/1999799, 198/1999799, NULL, NULL}', 	 '{100, 100, 1, 100, 100, 25, 100}')",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_multi SELECT 	142857 * tenthous, 	thousand, 	twothousand, 	unique1::oid, 	format('(%s,%s)', tenthous, twenty)::tid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	substr(fipshash(unique1::text), 1, 16)::macaddr8, 	inet '10.2.3.4' + tenthous, 	cidr '10.2.3/24' + tenthous, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20' + hundred * interval '15 seconds', 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	format('%s/%s%s', odd, even, tenthous)::pg_lsn FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5",brin_multi.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 22: FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5"
postgresql,postgresql,insert into public.brintest_multi (float4col) values (real 'nan'),brin_multi.sql,SAME,,
postgresql,postgresql,insert into public.brintest_multi (float8col) values (real 'nan'),brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_test_inet (a inet),brin_multi.sql,SAME,,
postgresql,postgresql,INSERT INTO brin_test_inet VALUES ('127.0.0.1/0'),brin_multi.sql,SAME,,
postgresql,postgresql,INSERT INTO brin_test_inet VALUES ('0.0.0.0/12'),brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_test_inet,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_large_range (a int4),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_large_range SELECT i FROM generate_series(1,10000) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_large_range,brin_multi.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_summarize_multi (     value int ) WITH (fillfactor=10, autovacuum_enabled=false)",brin_multi.sql,SAME,,
postgresql,postgresql,"DO $$ DECLARE curtid tid; BEGIN   LOOP     INSERT INTO brin_summarize_multi VALUES (1) RETURNING ctid INTO curtid;     EXIT WHEN curtid > tid '(2, 0)';   END LOOP; END; $$",brin_multi.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_test_multi (a INT, b INT)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test_multi SELECT x/100,x%100 FROM generate_series(1,10000) x(x)",brin_multi.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_test_multi_1 (a INT, b BIGINT) WITH (fillfactor=10)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test_multi_1 SELECT i/5 + mod(911 * i + 483, 25),        i/10 + mod(751 * i + 221, 41)   FROM generate_series(1,1000) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test_multi_1 SELECT i/5 + mod(911 * i + 483, 25),        i/10 + mod(751 * i + 221, 41)   FROM generate_series(1,1000) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_test_multi_1,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_test_multi_2 (a UUID) WITH (fillfactor=10),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test_multi_2 SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()",brin_multi.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 2: ... row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((...                                                               HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"INSERT INTO brin_test_multi_2 SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()",brin_multi.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 2: ... row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((...                                                               HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,DROP TABLE brin_test_multi_2,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_timestamp_test(a TIMESTAMPTZ),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_timestamp_test SELECT '4713-01-01 00:00:01 BC'::timestamptz + (i || ' seconds')::interval   FROM generate_series(1,30) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_timestamp_test SELECT '294276-12-01 00:00:01'::timestamptz + (i || ' seconds')::interval   FROM generate_series(1,30) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_timestamp_test,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_date_test(a DATE),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_date_test SELECT '4713-01-01 BC'::date + i FROM generate_series(1, 30) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_date_test SELECT '5874897-12-01'::date + i FROM generate_series(1, 30) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_date_test,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_timestamp_test(a TIMESTAMP),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_timestamp_test VALUES ('-infinity'), ('infinity')",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_timestamp_test SELECT i FROM generate_series('2000-01-01'::timestamp, '2000-02-09'::timestamp, '1 day'::interval) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_timestamp_test,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_date_test(a DATE),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_date_test VALUES ('-infinity'), ('infinity')",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_date_test SELECT '2000-01-01'::date + i FROM generate_series(1, 40) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_date_test,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_interval_test(a INTERVAL),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_interval_test SELECT (i || ' years')::interval FROM generate_series(-178000000, -177999980) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_interval_test SELECT (i || ' years')::interval FROM generate_series( 177999980,  178000000) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_interval_test,brin_multi.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_interval_test(a INTERVAL),brin_multi.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_interval_test VALUES ('-infinity'), ('infinity')",brin_multi.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""-infinity"" LINE 1: INSERT INTO brin_interval_test VALUES ('-infinity'), ('infin..."
postgresql,postgresql,"INSERT INTO brin_interval_test SELECT (i || ' days')::interval FROM generate_series(100, 140) s(i)",brin_multi.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_interval_test,brin_multi.sql,SAME,,
postgresql,postgresql,"create table gist_point_tbl(id int4, p point)",gist.sql,SAME,,
postgresql,postgresql,"insert into gist_point_tbl (id, p) select g,        point(g*10, g*10) from generate_series(1, 10000) g",gist.sql,SAME,,
postgresql,postgresql,"insert into gist_point_tbl (id, p) select g+100000, point(g*10+1, g*10+1) from generate_series(1, 10000) g",gist.sql,SAME,,
postgresql,postgresql,"create table gist_tbl (b box, p point, c circle)",gist.sql,SAME,,
postgresql,postgresql,"insert into gist_tbl select box(point(0.05*i, 0.05*i), point(0.05*i, 0.05*i)),        point(0.05*i, 0.05*i),        circle(point(0.05*i, 0.05*i), 1.0) from generate_series(0,10000) as i",gist.sql,SAME,,
postgresql,postgresql,drop table gist_tbl,gist.sql,SAME,,
postgresql,postgresql,"insert into gist_tbl   select box(point(0.05*i, 0.05*i)) from generate_series(0,10) as i",gist.sql,SAME,,
postgresql,postgresql,drop table gist_tbl,gist.sql,SAME,,
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('34.5'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('34.5')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('100000'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('100000')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('asdf'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('asdf')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('    '),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('    ')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('- 1234'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('- 1234')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('4 444'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('4 444')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES ('123 dt'),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('123 dt')"
postgresql,postgresql,INSERT INTO INT2_TBL(f1) VALUES (''),int2.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 1: INSERT INTO INT2_TBL(f1) VALUES ('')"
postgresql,postgresql,INSERT INTO nocols DEFAULT VALUES,select.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (42),(3),(10),(7),(null),(null),(1)",select.sql,SAME,,
postgresql,postgresql,"create table list_parted_tbl (a int,b int) partition by list (a)",select.sql,SAME,,
postgresql,postgresql,create table list_parted_tbl1 partition of list_parted_tbl   for values in (1) partition by list(b),select.sql,SAME,,
postgresql,postgresql,drop table list_parted_tbl,select.sql,SAME,,
postgresql,postgresql,CREATE TABLE ttable1 OF nothing,typed_table.sql,DIFFERENT,UndefinedObject,"type ""nothing"" does not exist"
postgresql,postgresql,CREATE TABLE persons OF person_type,typed_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE IF NOT EXISTS persons OF person_type,typed_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE stuff (id int),typed_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE personsx OF person_type (myname WITH OPTIONS NOT NULL),typed_table.sql,DIFFERENT,UndefinedColumn,"column ""myname"" does not exist"
postgresql,postgresql,"CREATE TABLE persons2 OF person_type (     id WITH OPTIONS PRIMARY KEY,     UNIQUE (name) )",typed_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE persons3 OF person_type (     PRIMARY KEY (id),     name WITH OPTIONS DEFAULT '' )",typed_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE persons4 OF person_type (     name WITH OPTIONS NOT NULL,     name WITH OPTIONS DEFAULT ''   )",typed_table.sql,DIFFERENT,DuplicateColumn,"column ""name"" specified more than once"
postgresql,postgresql,CREATE TABLE persons5 OF stuff,typed_table.sql,DIFFERENT,WrongObjectType,type stuff is not a composite type
postgresql,postgresql,DROP TABLE stuff,typed_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE persons OF person_type,typed_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO persons VALUES (1, 'test')",typed_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE persons2 OF person_type (     id WITH OPTIONS PRIMARY KEY,     UNIQUE (name) )",typed_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE persons3 OF person_type (     PRIMARY KEY (id),     name NOT NULL DEFAULT '' )",typed_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE temptest(col int),temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,CREATE TABLE temptest(col int),temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (1),temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (2.1),temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (1),temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (2),temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,DROP TABLE temptest,temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (1),temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest VALUES (2),temp.sql,SAME,,
postgresql,postgresql,CREATE TABLE temptest(col int) ON COMMIT DELETE ROWS,temp.sql,DIFFERENT,InvalidTableDefinition,ON COMMIT can only be used on temporary tables
postgresql,postgresql,CREATE TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1,temp.sql,DIFFERENT,InvalidTableDefinition,ON COMMIT can only be used on temporary tables
postgresql,postgresql,INSERT INTO temptest1 VALUES (1),temp.sql,SAME,,
postgresql,postgresql,INSERT INTO temptest2 VALUES (1),temp.sql,SAME,,
postgresql,postgresql,create table public.whereami (f1 text),temp.sql,SAME,,
postgresql,postgresql,insert into public.whereami values ('public'),temp.sql,SAME,,
postgresql,postgresql,insert into whereami values ('temp'),temp.sql,SAME,,
postgresql,postgresql,drop table public.whereami,temp.sql,SAME,,
postgresql,postgresql,insert into temp_parted_oncommit values (1),temp.sql,SAME,,
postgresql,postgresql,drop table temp_parted_oncommit,temp.sql,SAME,,
postgresql,postgresql,"insert into temp_parted_oncommit_test values (1), (2)",temp.sql,SAME,,
postgresql,postgresql,"insert into temp_parted_oncommit_test values (1), (2)",temp.sql,SAME,,
postgresql,postgresql,drop table temp_parted_oncommit_test,temp.sql,SAME,,
postgresql,postgresql,insert into temp_inh_oncommit_test1 values (1),temp.sql,SAME,,
postgresql,postgresql,insert into temp_inh_oncommit_test1 values (1),temp.sql,SAME,,
postgresql,postgresql,insert into temp_inh_oncommit_test values (1),temp.sql,SAME,,
postgresql,postgresql,drop table temp_inh_oncommit_test,temp.sql,SAME,,
postgresql,postgresql,insert into twophase_tab values (1),temp.sql,SAME,,
postgresql,postgresql,drop table twophase_tab,temp.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testxmlschema.test1 (a int, b text)",xmlmap.sql,SAME,,
postgresql,postgresql,"INSERT INTO testxmlschema.test1 VALUES (1, 'one'), (2, 'two'), (-1, null)",xmlmap.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testxmlschema.test2 (z int, y varchar(500), x char(6),     w numeric(9,2), v smallint, u bigint, t real,     s time, stz timetz, r timestamp, rtz timestamptz, q date,     p xml, o testxmldomain, n bool, m bytea, aaa text)",xmlmap.sql,SAME,,
postgresql,postgresql,"INSERT INTO testxmlschema.test2 VALUES (55, 'abc', 'def',     98.6, 2, 999, 0,     '21:07', '21:11 +05', '2009-06-08 21:07:30', '2009-06-08 21:07:30 -07', '2009-06-08',     NULL, 'ABC', true, 'XYZ')",xmlmap.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testxmlschema.test3     AS SELECT true c1,               true::testboolxmldomain c2,               '2013-02-21'::date c3,               '2013-02-21'::testdatexmldomain c4",xmlmap.sql,SAME,,
postgresql,postgresql,"create table copydml_test (id serial, t text)",copydml.sql,SAME,,
postgresql,postgresql,insert into copydml_test (t) values ('a'),copydml.sql,SAME,,
postgresql,postgresql,insert into copydml_test (t) values ('b'),copydml.sql,SAME,,
postgresql,postgresql,insert into copydml_test (t) values ('c'),copydml.sql,SAME,,
postgresql,postgresql,insert into copydml_test (t) values ('d'),copydml.sql,SAME,,
postgresql,postgresql,insert into copydml_test (t) values ('e'),copydml.sql,SAME,,
postgresql,postgresql,copy (insert into copydml_test (t) values ('f') returning id) to stdout,copydml.sql,DIFFERENT,ProgrammingError,can't execute COPY TO: use the copy_to() method instead
postgresql,postgresql,copy (insert into copydml_test default values) to stdout,copydml.sql,DIFFERENT,FeatureNotSupported,COPY query must have a RETURNING clause
postgresql,postgresql,copy (insert into copydml_test default values) to stdout,copydml.sql,DIFFERENT,FeatureNotSupported,DO INSTEAD NOTHING rules are not supported for COPY
postgresql,postgresql,copy (insert into copydml_test default values) to stdout,copydml.sql,DIFFERENT,FeatureNotSupported,DO ALSO rules are not supported for the COPY
postgresql,postgresql,copy (insert into copydml_test default values) to stdout,copydml.sql,DIFFERENT,FeatureNotSupported,COPY query must have a RETURNING clause
postgresql,postgresql,copy (insert into copydml_test default values) to stdout,copydml.sql,DIFFERENT,FeatureNotSupported,conditional DO INSTEAD rules are not supported for COPY
postgresql,postgresql,create rule qqq as on delete to copydml_test do also insert into copydml_test default values,copydml.sql,SAME,,
postgresql,postgresql,create rule qqq as on delete to copydml_test do instead (insert into copydml_test default values,copydml.sql,DIFFERENT,SyntaxError,syntax error at end of input LINE 1: ...dml_test do instead (insert into copydml_test default values
postgresql,postgresql,insert into copydml_test default values),copydml.sql,DIFFERENT,SyntaxError,"syntax error at or near "")"" LINE 1: insert into copydml_test default values)"
postgresql,postgresql,create rule qqq as on delete to copydml_test where old.t <> 'f' do instead insert into copydml_test default values,copydml.sql,SAME,,
postgresql,postgresql,copy (insert into copydml_test (t) values ('f') returning id) to stdout,copydml.sql,DIFFERENT,ProgrammingError,can't execute COPY TO: use the copy_to() method instead
postgresql,postgresql,drop table copydml_test,copydml.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('a'),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('A'),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('1'),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES (2),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('3'),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES (''),char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('cd'),char.sql,DIFFERENT,StringDataRightTruncation,value too long for type character(1)
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('c     '),char.sql,SAME,,
postgresql,postgresql,DROP TABLE CHAR_TBL,char.sql,SAME,,
postgresql,postgresql,INSERT INTO CHAR_TBL (f1) VALUES ('abcde'),char.sql,DIFFERENT,UndefinedTable,"relation ""char_tbl"" does not exist LINE 1: INSERT INTO CHAR_TBL (f1) VALUES ('abcde')"
postgresql,postgresql,"CREATE TABLE collate_test1 (     a int,     b text COLLATE ""en_US"" NOT NULL )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""ja_JP.eucjp"" )",collate.linux.utf8.sql,DIFFERENT,UndefinedObject,"collation ""ja_JP.eucjp"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""ja_JP.eucjp"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""foo"" )",collate.linux.utf8.sql,DIFFERENT,UndefinedObject,"collation ""foo"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""foo"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int COLLATE ""en_US"",     b text )",collate.linux.utf8.sql,DIFFERENT,DatatypeMismatch,"collations are not supported by type integer LINE 2:     a int COLLATE ""en_US"","
postgresql,postgresql,CREATE TABLE collate_test_like (     LIKE collate_test1 ),collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test2 (     a int,     b text COLLATE ""sv_SE"" )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test3 (     a int,     b text COLLATE ""C"" )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'ÃÂ¤bc'), (3, 'bbc'), (4, 'ABC')",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test2 SELECT * FROM collate_test1,collate.linux.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test3 SELECT * FROM collate_test1,collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test4 (     a int,     b testdomain_sv )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test4 SELECT * FROM collate_test1,collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test5 (     a int,     b testdomain_sv COLLATE ""en_US"" )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test5 SELECT * FROM collate_test1,collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test10 (     a int,     x text COLLATE ""en_US"",     y text COLLATE ""tr_TR"" )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test10 VALUES (1, 'hij', 'hij'), (2, 'HIJ', 'HIJ')",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test6 (     a int,     b text COLLATE ""en_US"" )",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test6 VALUES (1, 'abc'), (2, 'ABC'), (3, '123'), (4, 'ab1'),                                  (5, 'a1!'), (6, 'a c'), (7, '!.;'), (8, '   '),                                  (9, 'ÃÂ¤bÃÂ§'), (10, 'ÃÂBÃÂ')",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3",collate.linux.utf8.sql,DIFFERENT,IndeterminateCollation,"no collation was derived for column ""b"" with collatable type text HINT:  Use the COLLATE clause to set the collation explicitly."
postgresql,postgresql,"CREATE TABLE collate_dep_test1 (a int, b text COLLATE test0)",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_dep_test4t (a int, b text)",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,"DROP TABLE collate_dep_test1, collate_dep_test4t",collate.linux.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLESPACE regress_tblspace LOCATION 'relative',tablespace.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_tblspace"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,CREATE TABLESPACE regress_tblspace LOCATION '',tablespace.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_tblspace"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,CREATE TABLESPACE regress_tblspacewith LOCATION '' WITH (some_nonexistent_parameter = true),tablespace.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_tblspacewith"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,CREATE TABLESPACE regress_tblspacewith LOCATION '' WITH (random_page_cost = 3.0),tablespace.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_tblspacewith"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,DROP TABLESPACE regress_tblspacewith,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspacewith"" does not exist"
postgresql,postgresql,"CREATE TABLE regress_tblspace_test_tbl (num1 bigint, num2 double precision, t text)",tablespace.sql,SAME,,
postgresql,postgresql,"INSERT INTO regress_tblspace_test_tbl (num1, num2, t)   SELECT round(random()*100), random(), 'text'   FROM generate_series(1, 10) s(i)",tablespace.sql,SAME,,
postgresql,postgresql,DROP TABLE regress_tblspace_test_tbl,tablespace.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbspace_reindex_part (c1 int, c2 int) PARTITION BY RANGE (c1)",tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE tbspace_reindex_part_0 PARTITION OF tbspace_reindex_part   FOR VALUES FROM (0) TO (10) PARTITION BY list (c2),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE tbspace_reindex_part_0_1 PARTITION OF tbspace_reindex_part_0   FOR VALUES IN (1),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE tbspace_reindex_part_0_2 PARTITION OF tbspace_reindex_part_0   FOR VALUES IN (2),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE tbspace_reindex_part_10 PARTITION OF tbspace_reindex_part    FOR VALUES FROM (10) TO (20) PARTITION BY list (c2),tablespace.sql,SAME,,
postgresql,postgresql,DROP TABLE tbspace_reindex_part,tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.foo (i int) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,INSERT INTO testschema.foo VALUES(1),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.foo"" does not exist LINE 1: INSERT INTO testschema.foo VALUES(1)"
postgresql,postgresql,INSERT INTO testschema.foo VALUES(2),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.foo"" does not exist LINE 1: INSERT INTO testschema.foo VALUES(2)"
postgresql,postgresql,CREATE TABLE testschema.asselect TABLESPACE regress_tblspace AS SELECT 1,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.asexecute TABLESPACE regress_tblspace     AS EXECUTE selectsource(2),tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.part (a int) PARTITION BY LIST (a),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part_1 PARTITION OF testschema.part FOR VALUES IN (1),tablespace.sql,DIFFERENT,InsufficientPrivilege,permission denied for tablespace pg_global
postgresql,postgresql,CREATE TABLE testschema.part_1 PARTITION OF testschema.part FOR VALUES IN (1),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part_2 PARTITION OF testschema.part FOR VALUES IN (2),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part_3 PARTITION OF testschema.part FOR VALUES IN (3),tablespace.sql,DIFFERENT,InsufficientPrivilege,permission denied for tablespace pg_global
postgresql,postgresql,CREATE TABLE testschema.part_3 PARTITION OF testschema.part FOR VALUES IN (3),tablespace.sql,DIFFERENT,InsufficientPrivilege,permission denied for tablespace pg_global
postgresql,postgresql,CREATE TABLE testschema.part_4 PARTITION OF testschema.part FOR VALUES IN (4)   TABLESPACE pg_default,tablespace.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testschema.part_56 PARTITION OF testschema.part FOR VALUES IN (5, 6)   PARTITION BY LIST (a)",tablespace.sql,DIFFERENT,InsufficientPrivilege,permission denied for tablespace pg_global
postgresql,postgresql,"CREATE TABLE testschema.part_78 PARTITION OF testschema.part FOR VALUES IN (7, 8)   PARTITION BY LIST (a)",tablespace.sql,DIFFERENT,InsufficientPrivilege,permission denied for tablespace pg_global
postgresql,postgresql,"CREATE TABLE testschema.part_910 PARTITION OF testschema.part FOR VALUES IN (9, 10)   PARTITION BY LIST (a) TABLESPACE regress_tblspace",tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,"CREATE TABLE testschema.part_78 PARTITION OF testschema.part FOR VALUES IN (7, 8)   PARTITION BY LIST (a)",tablespace.sql,SAME,,
postgresql,postgresql,DROP TABLE testschema.part,tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part (a int) PARTITION BY LIST (a),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part1 PARTITION OF testschema.part FOR VALUES IN (1),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.part2 PARTITION OF testschema.part FOR VALUES IN (2),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE testschema.dflt (a int PRIMARY KEY) PARTITION BY LIST (a) TABLESPACE pg_default,tablespace.sql,DIFFERENT,FeatureNotSupported,cannot specify default tablespace for partitioned relations
postgresql,postgresql,CREATE TABLE testschema.dflt (a int PRIMARY KEY USING INDEX TABLESPACE pg_default) PARTITION BY LIST (a),tablespace.sql,DIFFERENT,FeatureNotSupported,cannot specify default tablespace for partitioned relations
postgresql,postgresql,CREATE TABLE testschema.dflt (a int PRIMARY KEY) PARTITION BY LIST (a) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.dflt (a int PRIMARY KEY USING INDEX TABLESPACE regress_tblspace) PARTITION BY LIST (a),tablespace.sql,DIFFERENT,FeatureNotSupported,cannot specify default tablespace for partitioned relations
postgresql,postgresql,CREATE TABLE testschema.dflt (a int PRIMARY KEY USING INDEX TABLESPACE regress_tblspace) PARTITION BY LIST (a) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.dflt2 (a int PRIMARY KEY) PARTITION BY LIST (a),tablespace.sql,SAME,,
postgresql,postgresql,"DROP TABLE testschema.dflt, testschema.dflt2",tablespace.sql,DIFFERENT,UndefinedTable,"table ""dflt"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.test_default_tab(id bigint) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,INSERT INTO testschema.test_default_tab VALUES (1),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.test_default_tab"" does not exist LINE 1: INSERT INTO testschema.test_default_tab VALUES (1)"
postgresql,postgresql,DROP TABLE testschema.test_default_tab,tablespace.sql,DIFFERENT,UndefinedTable,"table ""test_default_tab"" does not exist"
postgresql,postgresql,"CREATE TABLE testschema.test_default_tab_p(id bigint, val bigint)     PARTITION BY LIST (id) TABLESPACE regress_tblspace",tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.test_default_tab_p1 PARTITION OF testschema.test_default_tab_p     FOR VALUES IN (1),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.test_default_tab_p"" does not exist"
postgresql,postgresql,INSERT INTO testschema.test_default_tab_p VALUES (1),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.test_default_tab_p"" does not exist LINE 1: INSERT INTO testschema.test_default_tab_p VALUES (1)"
postgresql,postgresql,DROP TABLE testschema.test_default_tab_p,tablespace.sql,DIFFERENT,UndefinedTable,"table ""test_default_tab_p"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.test_tab(id int) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,INSERT INTO testschema.test_tab VALUES (1),tablespace.sql,DIFFERENT,UndefinedTable,"relation ""testschema.test_tab"" does not exist LINE 1: INSERT INTO testschema.test_tab VALUES (1)"
postgresql,postgresql,DROP TABLE testschema.test_tab,tablespace.sql,DIFFERENT,UndefinedTable,"table ""test_tab"" does not exist"
postgresql,postgresql,"CREATE TABLE testschema.test_tab(a int, b int, c int)",tablespace.sql,SAME,,
postgresql,postgresql,DROP TABLE testschema.test_tab,tablespace.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testschema.atable AS VALUES (1), (2)",tablespace.sql,SAME,,
postgresql,postgresql,INSERT INTO testschema.atable VALUES(3),tablespace.sql,SAME,,
postgresql,postgresql,INSERT INTO testschema.atable VALUES(1),tablespace.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""anindex"" DETAIL:  Key (column1)=(1) already exists."
postgresql,postgresql,CREATE TABLESPACE regress_badspace LOCATION '/no/such/location',tablespace.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_badspace"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,CREATE TABLE bar (i int) TABLESPACE regress_nosuchspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_nosuchspace"" does not exist"
postgresql,postgresql,DROP TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,DROP TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,CREATE TABLE testschema.tablespace_acl (c int),tablespace.sql,SAME,,
postgresql,postgresql,CREATE TABLE tablespace_table (i int) TABLESPACE regress_tblspace,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace"" does not exist"
postgresql,postgresql,DROP TABLESPACE regress_tblspace_renamed,tablespace.sql,DIFFERENT,UndefinedObject,"tablespace ""regress_tblspace_renamed"" does not exist"
postgresql,postgresql,CREATE TABLE tid_tab (a int),tid.sql,SAME,,
postgresql,postgresql,"INSERT INTO tid_tab VALUES (1), (2)",tid.sql,SAME,,
postgresql,postgresql,INSERT INTO tid_tab VALUES (1),tid.sql,SAME,,
postgresql,postgresql,CREATE TABLE tid_part (a int) PARTITION BY RANGE (a),tid.sql,SAME,,
postgresql,postgresql,DROP TABLE tid_part,tid.sql,SAME,,
postgresql,postgresql,INSERT INTO tid_tab VALUES (1),tid.sql,SAME,,
postgresql,postgresql,DROP TABLE tid_tab CASCADE,tid.sql,SAME,,
postgresql,postgresql,CREATE TABLE OID_TBL(f1 oid),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('1234'),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('1235'),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('987'),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('-1040'),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('99999999'),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('5     '),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('   10  '),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('	  15 	  '),oid.sql,SAME,,
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES (''),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: """" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('    '),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""    "" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('    ')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('asdfasd'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""asdfasd"" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('asdfasd')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('99asdfasd'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""99asdfasd"" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('99asdfasd')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('5    d'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""5    d"" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('5    d')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('    5d'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""    5d"" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('    5d')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('5    5'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: ""5    5"" LINE 1: INSERT INTO OID_TBL(f1) VALUES ('5    5')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES (' - 500'),oid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type oid: "" - 500"" LINE 1: INSERT INTO OID_TBL(f1) VALUES (' - 500')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935'),oid.sql,DIFFERENT,NumericValueOutOfRange,"value ""32958209582039852935"" is out of range for type oid LINE 1: INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935')"
postgresql,postgresql,INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385'),oid.sql,DIFFERENT,NumericValueOutOfRange,"value ""-23582358720398502385"" is out of range for type oid LINE 1: INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385')"
postgresql,postgresql,DROP TABLE OID_TBL,oid.sql,SAME,,
postgresql,postgresql,"CREATE TABLE real_city ( 	pop			int4, 	cname		text, 	outline 	path )",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE view_base_table (key int PRIMARY KEY, data varchar(20))",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE viewtest_tbl (a int, b int, c numeric(10,1), d text COLLATE ""C"")",create_view.sql,SAME,,
postgresql,postgresql,DROP TABLE viewtest_tbl,create_view.sql,SAME,,
postgresql,postgresql,"CREATE SCHEMA temp_view_test     CREATE TABLE base_table (a int, id int)     CREATE TABLE base_table2 (a int, id int)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (num int, name text)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t2 (num2 int, value text)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl1 ( a int, b int)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl2 (c int, d int)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl3 (e int, f int)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl4 (g int, h int)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt1 (f1 int, f2 int, f3 text)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tx1 (x1 int, x2 int, x3 text)",create_view.sql,SAME,,
postgresql,postgresql,"CREATE TABLE temp_view_test.tt1 (y1 int, f2 int, f3 text)",create_view.sql,SAME,,
postgresql,postgresql,"create table tbl1a (a int, c int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt2 (a int, b int, c int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt3 (ax int8, b int2, c numeric)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt4 (ay int, b int, q int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt5 (a int, b int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt6 (c int, d int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt7 (x int, xx int, y int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt8 (x int, z int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt7a (x date, xx int, y int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt8a (x timestamptz, z int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt9 (x int, xx int, y int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt10 (x int, z int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt11 (x int, y int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt12 (x int, z int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt13 (z int, q int)",create_view.sql,SAME,,
postgresql,postgresql,"create table tt14t (f1 text, f2 text, f3 text, f4 text)",create_view.sql,SAME,,
postgresql,postgresql,"insert into tt14t values('foo', 'bar', 'baz', '42')",create_view.sql,SAME,,
postgresql,postgresql,"create table tt15v_log(o tt15v, n tt15v, incr bool)",create_view.sql,DIFFERENT,UndefinedObject,"type ""tt15v"" does not exist LINE 1: create table tt15v_log(o tt15v, n tt15v, incr bool)"
postgresql,postgresql,"create rule updlog as on update to tt15v do also   insert into tt15v_log values(old, new, row(old,old) < row(new,new))",create_view.sql,DIFFERENT,UndefinedTable,"relation ""tt15v"" does not exist"
postgresql,postgresql,CREATE SCHEMA AUTHORIZATION regress_create_schema_role   CREATE TABLE schema_not_existing.tab (id int),create_schema.sql,DIFFERENT,UndefinedObject,"role ""regress_create_schema_role"" does not exist"
postgresql,postgresql,CREATE SCHEMA AUTHORIZATION CURRENT_ROLE   CREATE TABLE schema_not_existing.tab (id int),create_schema.sql,DIFFERENT,InvalidSchemaDefinition,CREATE specifies a schema (schema_not_existing) different from the one being created (tester)
postgresql,postgresql,CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE   CREATE TABLE schema_not_existing.tab (id int),create_schema.sql,DIFFERENT,InvalidSchemaDefinition,CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
postgresql,postgresql,CREATE SCHEMA AUTHORIZATION regress_create_schema_role   CREATE TABLE regress_create_schema_role.tab (id int),create_schema.sql,DIFFERENT,UndefinedObject,"role ""regress_create_schema_role"" does not exist"
postgresql,postgresql,CREATE SCHEMA AUTHORIZATION CURRENT_ROLE   CREATE TABLE regress_create_schema_role.tab (id int),create_schema.sql,DIFFERENT,InvalidSchemaDefinition,CREATE specifies a schema (regress_create_schema_role) different from the one being created (tester)
postgresql,postgresql,CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE   CREATE TABLE regress_schema_1.tab (id int),create_schema.sql,SAME,,
postgresql,postgresql,"CREATE TABLE lotest_stash_values (loid oid, fd integer)",largeobject.sql,SAME,,
postgresql,postgresql,INSERT INTO lotest_stash_values (loid) SELECT lo_creat(42),largeobject.sql,SAME,,
postgresql,postgresql,INSERT INTO lotest_stash_values (loid) SELECT lo_import(:'filename'),largeobject.sql,DIFFERENT,SyntaxError,"syntax error at or near "":"" LINE 1: ... INTO lotest_stash_values (loid) SELECT lo_import(:'filename..."
postgresql,postgresql,DROP TABLE lotest_stash_values,largeobject.sql,SAME,,
postgresql,postgresql,CREATE TABLE a (aa TEXT),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE b (bb TEXT) INHERITS (a),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE c (cc TEXT) INHERITS (a),inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE d (dd TEXT) INHERITS (b,c,a)",inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaaaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaaaaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaaaaaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO a(aa) VALUES('aaaaaaaa'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbbbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbbbbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbbbbbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO b(aa) VALUES('bbbbbbbb'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('ccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('cccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('ccccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('cccccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('ccccccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO c(aa) VALUES('cccccccc'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('ddd'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('dddd'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('ddddd'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('dddddd'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('ddddddd'),inherit.sql,SAME,,
postgresql,postgresql,INSERT INTO d(aa) VALUES('dddddddd'),inherit.sql,SAME,,
postgresql,postgresql,"INSERT INTO z VALUES (NULL, 'text')",inherit.sql,DIFFERENT,NotNullViolation,"null value in column ""aa"" of relation ""z"" violates not-null constraint DETAIL:  Failing row contains (null, text)."
postgresql,postgresql,"create table some_tab (f1 int, f2 int, f3 int, check (f1 < 10) no inherit)",inherit.sql,SAME,,
postgresql,postgresql,create table some_tab_child () inherits(some_tab),inherit.sql,SAME,,
postgresql,postgresql,"insert into some_tab_child select i, i+1, 0 from generate_series(1,1000) i",inherit.sql,SAME,,
postgresql,postgresql,drop table some_tab cascade,inherit.sql,SAME,,
postgresql,postgresql,"create table some_tab (a int, b int)",inherit.sql,SAME,,
postgresql,postgresql,create table some_tab_child () inherits (some_tab),inherit.sql,SAME,,
postgresql,postgresql,"insert into some_tab_child values(1,2)",inherit.sql,SAME,,
postgresql,postgresql,drop table some_tab cascade,inherit.sql,SAME,,
postgresql,postgresql,"insert into foo values(1,1)",inherit.sql,SAME,,
postgresql,postgresql,"insert into foo values(3,3)",inherit.sql,SAME,,
postgresql,postgresql,"insert into foo2 values(2,2,2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into foo2 values(3,3,3)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar values(1,1)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar values(2,2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar values(3,3)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar values(4,4)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar2 values(1,1,1)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar2 values(2,2,2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar2 values(3,3,3)",inherit.sql,SAME,,
postgresql,postgresql,"insert into bar2 values(4,4,4)",inherit.sql,SAME,,
postgresql,postgresql,create table some_tab (a int),inherit.sql,SAME,,
postgresql,postgresql,insert into some_tab values (0),inherit.sql,SAME,,
postgresql,postgresql,create table some_tab_child () inherits (some_tab),inherit.sql,SAME,,
postgresql,postgresql,insert into some_tab_child values (1),inherit.sql,SAME,,
postgresql,postgresql,"create table parted_tab (a int, b char) partition by list (a)",inherit.sql,SAME,,
postgresql,postgresql,create table parted_tab_part1 partition of parted_tab for values in (1),inherit.sql,SAME,,
postgresql,postgresql,create table parted_tab_part2 partition of parted_tab for values in (2),inherit.sql,SAME,,
postgresql,postgresql,create table parted_tab_part3 partition of parted_tab for values in (3),inherit.sql,SAME,,
postgresql,postgresql,"insert into parted_tab values (1, 'a'), (2, 'a'), (3, 'a')",inherit.sql,SAME,,
postgresql,postgresql,"insert into parted_tab values (1, 'a'), (2, 'a'), (3, 'a')",inherit.sql,SAME,,
postgresql,postgresql,drop table parted_tab,inherit.sql,SAME,,
postgresql,postgresql,"create table mlparted_tab (a int, b char, c text) partition by list (a)",inherit.sql,SAME,,
postgresql,postgresql,create table mlparted_tab_part1 partition of mlparted_tab for values in (1),inherit.sql,SAME,,
postgresql,postgresql,create table mlparted_tab_part2 partition of mlparted_tab for values in (2) partition by list (b),inherit.sql,SAME,,
postgresql,postgresql,create table mlparted_tab_part3 partition of mlparted_tab for values in (3),inherit.sql,SAME,,
postgresql,postgresql,create table mlparted_tab_part2a partition of mlparted_tab_part2 for values in ('a'),inherit.sql,SAME,,
postgresql,postgresql,create table mlparted_tab_part2b partition of mlparted_tab_part2 for values in ('b'),inherit.sql,SAME,,
postgresql,postgresql,"insert into mlparted_tab values (1, 'a'), (2, 'a'), (2, 'b'), (3, 'a')",inherit.sql,SAME,,
postgresql,postgresql,drop table mlparted_tab,inherit.sql,SAME,,
postgresql,postgresql,drop table some_tab cascade,inherit.sql,SAME,,
postgresql,postgresql,/* Test multiple inheritance of column defaults */  CREATE TABLE firstparent (tomorrow date default now()::date + 1),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE secondparent (tomorrow date default  now() :: date  +  1),inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE jointchild () INHERITS (firstparent, secondparent)",inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE thirdparent (tomorrow date default now()::date - 1),inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE otherchild () INHERITS (firstparent, thirdparent)",inherit.sql,DIFFERENT,InvalidColumnDefinition,"column ""tomorrow"" inherits conflicting default values HINT:  To resolve the conflict, specify a default explicitly."
postgresql,postgresql,"CREATE TABLE otherchild (tomorrow date default now())   INHERITS (firstparent, thirdparent)",inherit.sql,SAME,,
postgresql,postgresql,"DROP TABLE firstparent, secondparent, jointchild, thirdparent, otherchild",inherit.sql,SAME,,
postgresql,postgresql,"insert into d values('test','one','two','three')",inherit.sql,SAME,,
postgresql,postgresql,create table p1(ff1 int),inherit.sql,SAME,,
postgresql,postgresql,create table c1 () inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,create table c2 (constraint p2chk check (ff1 > 10) no inherit) inherits (p1),inherit.sql,DIFFERENT,InvalidObjectDefinition,"constraint ""p2chk"" conflicts with inherited constraint on relation ""c2"""
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table base (i integer),inherit.sql,SAME,,
postgresql,postgresql,create table derived () inherits (base),inherit.sql,SAME,,
postgresql,postgresql,"create table more_derived (like derived, b int) inherits (derived)",inherit.sql,SAME,,
postgresql,postgresql,insert into derived (i) values (0),inherit.sql,SAME,,
postgresql,postgresql,drop table more_derived,inherit.sql,SAME,,
postgresql,postgresql,drop table derived,inherit.sql,SAME,,
postgresql,postgresql,drop table base,inherit.sql,SAME,,
postgresql,postgresql,create table p1(ff1 int),inherit.sql,SAME,,
postgresql,postgresql,create table p2(f1 text),inherit.sql,SAME,,
postgresql,postgresql,"create table c1(f3 int) inherits(p1,p2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into c1 values(123456789, 'hi', 42)",inherit.sql,SAME,,
postgresql,postgresql,drop table c1,inherit.sql,SAME,,
postgresql,postgresql,drop table p2,inherit.sql,SAME,,
postgresql,postgresql,drop table p1,inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE ac (aa TEXT),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE bc (bb TEXT) INHERITS (ac),inherit.sql,SAME,,
postgresql,postgresql,insert into ac (aa) values (NULL),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""ac"" violates check constraint ""ac_check"" DETAIL:  Failing row contains (null)."
postgresql,postgresql,insert into bc (aa) values (NULL),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""bc"" violates check constraint ""ac_check"" DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,insert into ac (aa) values (NULL),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""ac"" violates check constraint ""ac_aa_check"" DETAIL:  Failing row contains (null)."
postgresql,postgresql,insert into bc (aa) values (NULL),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""bc"" violates check constraint ""ac_aa_check"" DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,drop table bc,inherit.sql,SAME,,
postgresql,postgresql,drop table ac,inherit.sql,SAME,,
postgresql,postgresql,create table ac (a int constraint check_a check (a <> 0)),inherit.sql,SAME,,
postgresql,postgresql,"create table bc (a int constraint check_a check (a <> 0), b int constraint check_b check (b <> 0)) inherits (ac)",inherit.sql,SAME,,
postgresql,postgresql,drop table bc,inherit.sql,SAME,,
postgresql,postgresql,drop table ac,inherit.sql,SAME,,
postgresql,postgresql,create table ac (a int constraint check_a check (a <> 0)),inherit.sql,SAME,,
postgresql,postgresql,create table bc (b int constraint check_b check (b <> 0)),inherit.sql,SAME,,
postgresql,postgresql,"create table cc (c int constraint check_c check (c <> 0)) inherits (ac, bc)",inherit.sql,SAME,,
postgresql,postgresql,drop table cc,inherit.sql,SAME,,
postgresql,postgresql,drop table bc,inherit.sql,SAME,,
postgresql,postgresql,drop table ac,inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table p2(f2 int),inherit.sql,SAME,,
postgresql,postgresql,"create table c1(f3 int) inherits(p1,p2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into c1 values(1,-1,2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into c1 values(1,1,2)",inherit.sql,SAME,,
postgresql,postgresql,"insert into c1 values(1,-1,2)",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""c1"" violates check constraint ""p2_f2_check"" DETAIL:  Failing row contains (1, -1, 2)."
postgresql,postgresql,"create table c2(f3 int) inherits(p1,p2)",inherit.sql,SAME,,
postgresql,postgresql,"create table c3 (f4 int) inherits(c1,c2)",inherit.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,drop table p2 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table pp1 (f1 int),inherit.sql,SAME,,
postgresql,postgresql,"create table cc1 (f2 text, f3 int) inherits (pp1)",inherit.sql,SAME,,
postgresql,postgresql,"create table cc2(f4 float) inherits(pp1,cc1)",inherit.sql,SAME,,
postgresql,postgresql,drop table pp1 cascade,inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inht1 (a int, b int)",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inhs1 (b int, c int)",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inhts (d int) INHERITS (inht1, inhs1)",inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE inhts,inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE inhta (),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE inhtb () INHERITS (inhta),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE inhtc () INHERITS (inhtb),inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inhtd () INHERITS (inhta, inhtb, inhtc)",inherit.sql,SAME,,
postgresql,postgresql,"DROP TABLE inhta, inhtb, inhtc, inhtd",inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE inht2 (x int) INHERITS (inht1),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE inht3 (y int) INHERITS (inht1),inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inht4 (z int) INHERITS (inht2, inht3)",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE inhts (d int) INHERITS (inht2, inhs1)",inherit.sql,SAME,,
postgresql,postgresql,"DROP TABLE inht1, inhs1 CASCADE",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_constraints (id int, val1 varchar, val2 int, UNIQUE(val1, val2))",inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_constraints_inh () INHERITS (test_constraints),inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_constraints_inh,inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_constraints,inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_ex_constraints (     c circle,     EXCLUDE USING gist (c WITH &&) )",inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_ex_constraints_inh () INHERITS (test_ex_constraints),inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_ex_constraints_inh,inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_ex_constraints,inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_primary_constraints(id int PRIMARY KEY),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_foreign_constraints(id1 int REFERENCES test_primary_constraints(id)),inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_foreign_constraints_inh () INHERITS (test_foreign_constraints),inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_foreign_constraints_inh,inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_foreign_constraints,inherit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_primary_constraints,inherit.sql,SAME,,
postgresql,postgresql,create table inh_fk_1 (a int primary key),inherit.sql,SAME,,
postgresql,postgresql,"insert into inh_fk_1 values (1), (2), (3)",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_fk_2 (x int primary key, y int references inh_fk_1 on delete cascade)",inherit.sql,SAME,,
postgresql,postgresql,"insert into inh_fk_2 values (11, 1), (22, 2), (33, 3)",inherit.sql,SAME,,
postgresql,postgresql,create table inh_fk_2_child () inherits (inh_fk_2),inherit.sql,SAME,,
postgresql,postgresql,"insert into inh_fk_2_child values (111, 1), (222, 2)",inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_fk_1, inh_fk_2, inh_fk_2_child",inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c1() inherits(p1),inherit.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int constraint f1_pos CHECK (f1 > 0)),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c1 (f1 int constraint f1_pos CHECK (f1 > 0)) inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int constraint f1_pos CHECK (f1 > 0)),inherit.sql,SAME,,
postgresql,postgresql,create table p2(f1 int constraint f1_pos CHECK (f1 > 0)),inherit.sql,SAME,,
postgresql,postgresql,"create table p1p2_c1 (f1 int) inherits (p1, p2)",inherit.sql,SAME,,
postgresql,postgresql,"create table p1p2_c2 (f1 int constraint f1_pos CHECK (f1 > 0)) inherits (p1, p2)",inherit.sql,SAME,,
postgresql,postgresql,"drop table p1, p2 cascade",inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int constraint f1_pos CHECK (f1 > 0)),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c1() inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c2() inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,"create table p1_c1c2() inherits (p1_c1, p1_c2)",inherit.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table p1(f1 int constraint f1_pos CHECK (f1 > 0)),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c1() inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,create table p1_c2(constraint f1_pos CHECK (f1 > 0)) inherits (p1),inherit.sql,SAME,,
postgresql,postgresql,"create table p1_c1c2() inherits (p1_c1, p1_c2, p1)",inherit.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table invalid_check_con(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table invalid_check_con_child() inherits(invalid_check_con),inherit.sql,SAME,,
postgresql,postgresql,insert into invalid_check_con values(0),inherit.sql,SAME,,
postgresql,postgresql,insert into invalid_check_con values(0),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""invalid_check_con"" violates check constraint ""inh_check_constraint"" DETAIL:  Failing row contains (0)."
postgresql,postgresql,insert into invalid_check_con_child values(0),inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""invalid_check_con_child"" violates check constraint ""inh_check_constraint"" DETAIL:  Failing row contains (0)."
postgresql,postgresql,"insert into patest1   select x, x from generate_series(0,1000) x",inherit.sql,SAME,,
postgresql,postgresql,"insert into patest2   select x, x from generate_series(0,1000) x",inherit.sql,SAME,,
postgresql,postgresql,drop table patest0 cascade,inherit.sql,SAME,,
postgresql,postgresql,"create table matest0 (id serial primary key, name text)",inherit.sql,SAME,,
postgresql,postgresql,create table matest1 (id integer primary key) inherits (matest0),inherit.sql,SAME,,
postgresql,postgresql,create table matest2 (id integer primary key) inherits (matest0),inherit.sql,SAME,,
postgresql,postgresql,create table matest3 (id integer primary key) inherits (matest0),inherit.sql,SAME,,
postgresql,postgresql,insert into matest1 (name) values ('Test 1'),inherit.sql,SAME,,
postgresql,postgresql,insert into matest1 (name) values ('Test 2'),inherit.sql,SAME,,
postgresql,postgresql,insert into matest2 (name) values ('Test 3'),inherit.sql,SAME,,
postgresql,postgresql,insert into matest2 (name) values ('Test 4'),inherit.sql,SAME,,
postgresql,postgresql,insert into matest3 (name) values ('Test 5'),inherit.sql,SAME,,
postgresql,postgresql,insert into matest3 (name) values ('Test 6'),inherit.sql,SAME,,
postgresql,postgresql,drop table matest0 cascade,inherit.sql,SAME,,
postgresql,postgresql,"create table matest0 (a int, b int, c int, d int)",inherit.sql,SAME,,
postgresql,postgresql,create table matest1 () inherits(matest0),inherit.sql,SAME,,
postgresql,postgresql,drop table matest0 cascade,inherit.sql,SAME,,
postgresql,postgresql,create table matest0(a int primary key),inherit.sql,SAME,,
postgresql,postgresql,create table matest1() inherits (matest0),inherit.sql,SAME,,
postgresql,postgresql,"insert into matest0 select generate_series(1, 400)",inherit.sql,SAME,,
postgresql,postgresql,"insert into matest1 select generate_series(1, 200)",inherit.sql,SAME,,
postgresql,postgresql,drop table matest0 cascade,inherit.sql,SAME,,
postgresql,postgresql,"create table inhpar(f1 int, f2 name)",inherit.sql,SAME,,
postgresql,postgresql,"create table inhcld(f2 name, f1 int)",inherit.sql,SAME,,
postgresql,postgresql,"insert into inhpar select x, x::text from generate_series(1,5) x",inherit.sql,SAME,,
postgresql,postgresql,"insert into inhcld select x::text, x from generate_series(6,10) x",inherit.sql,SAME,,
postgresql,postgresql,drop table inhpar cascade,inherit.sql,SAME,,
postgresql,postgresql,"create table inhpar(f1 int primary key, f2 name) partition by range (f1)",inherit.sql,SAME,,
postgresql,postgresql,"create table inhcld1(f2 name, f1 int primary key)",inherit.sql,SAME,,
postgresql,postgresql,"create table inhcld2(f1 int primary key, f2 name)",inherit.sql,SAME,,
postgresql,postgresql,"insert into inhpar select x, x::text from generate_series(1,10) x",inherit.sql,SAME,,
postgresql,postgresql,"insert into inhpar as i values (3), (7) on conflict (f1)   do update set (f1, f2) = (select i.f1, i.f2 || '+')",inherit.sql,SAME,,
postgresql,postgresql,drop table inhpar cascade,inherit.sql,SAME,,
postgresql,postgresql,create table cnullparent (f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table cnullchild (check (f1 = 1 or f1 = null)) inherits(cnullparent),inherit.sql,SAME,,
postgresql,postgresql,insert into cnullchild values(1),inherit.sql,SAME,,
postgresql,postgresql,insert into cnullchild values(2),inherit.sql,SAME,,
postgresql,postgresql,insert into cnullchild values(null),inherit.sql,SAME,,
postgresql,postgresql,drop table cnullparent cascade,inherit.sql,SAME,,
postgresql,postgresql,create table pp1 (f1 int),inherit.sql,SAME,,
postgresql,postgresql,"create table cc1 (f2 text, f3 int) inherits (pp1)",inherit.sql,SAME,,
postgresql,postgresql,"create table cc2(f4 float) inherits(pp1,cc1)",inherit.sql,SAME,,
postgresql,postgresql,create table cc3 (a2 int not null no inherit) inherits (cc1),inherit.sql,DIFFERENT,SyntaxError,"syntax error at or near ""no"" LINE 1: create table cc3 (a2 int not null no inherit) inherits (cc1)"
postgresql,postgresql,create table inh_parent1(a int constraint nn not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent2(b int constraint nn not null),inherit.sql,SAME,,
postgresql,postgresql,"create table inh_child () inherits (inh_parent1, inh_parent2)",inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_parent1, inh_parent2, inh_child",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_parent1(a int, b int, c int, primary key (a, b))",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_parent2(d int, e int, b int, primary key (d, b))",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_child() inherits (inh_parent1, inh_parent2)",inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_parent1, inh_parent2, inh_child",inherit.sql,SAME,,
postgresql,postgresql,create table inh_nn_parent(a int),inherit.sql,SAME,,
postgresql,postgresql,create table inh_nn_child() inherits (inh_nn_parent),inherit.sql,SAME,,
postgresql,postgresql,create table inh_nn_child2() inherits (inh_nn_parent),inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_nn_parent, inh_nn_child, inh_nn_child2",inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child1(f1 int not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child2(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child3 () inherits (inh_child1),inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_parent, inh_child1, inh_child2, inh_child3",inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent (a int primary key),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child (a int primary key),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child2 () inherits (inh_parent),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child3 (like inh_parent),inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_parent, inh_child, inh_child2, inh_child3",inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent(f1 int not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child1() inherits(inh_parent),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child2() inherits(inh_parent),inherit.sql,SAME,,
postgresql,postgresql,"create table inh_child3() inherits(inh_child1, inh_child2)",inherit.sql,SAME,,
postgresql,postgresql,drop table inh_parent cascade,inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent_1(f1 int),inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent_2(f2 text),inherit.sql,SAME,,
postgresql,postgresql,"create table inh_child(f1 int not null, f2 text not null) inherits(inh_parent_1, inh_parent_2)",inherit.sql,SAME,,
postgresql,postgresql,drop table inh_parent_1 cascade,inherit.sql,SAME,,
postgresql,postgresql,drop table inh_parent_2,inherit.sql,SAME,,
postgresql,postgresql,create table inh_p1(f1 int not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_p2(f1 int not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_p3(f2 int),inherit.sql,SAME,,
postgresql,postgresql,"create table inh_p4(f1 int not null, f3 text not null)",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_multiparent() inherits(inh_p1, inh_p2, inh_p3, inh_p4)",inherit.sql,SAME,,
postgresql,postgresql,"create table inh_multiparent2 (a int not null, f1 int) inherits(inh_p3, inh_multiparent)",inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_p1, inh_p2, inh_p3, inh_p4 cascade",inherit.sql,SAME,,
postgresql,postgresql,create table inh_parent (a int not null),inherit.sql,SAME,,
postgresql,postgresql,create table inh_child () inherits (inh_parent),inherit.sql,SAME,,
postgresql,postgresql,"drop table inh_parent, inh_child",inherit.sql,SAME,,
postgresql,postgresql,create table inh_perm_parent (a1 int),inherit.sql,SAME,,
postgresql,postgresql,create table inh_perm_child () inherits (inh_temp_parent),inherit.sql,DIFFERENT,WrongObjectType,"cannot inherit from temporary relation ""inh_temp_parent"""
postgresql,postgresql,insert into inh_perm_parent values (1),inherit.sql,SAME,,
postgresql,postgresql,insert into inh_temp_parent values (2),inherit.sql,SAME,,
postgresql,postgresql,insert into inh_temp_child values (3),inherit.sql,SAME,,
postgresql,postgresql,insert into inh_temp_child_2 values (4),inherit.sql,SAME,,
postgresql,postgresql,drop table inh_perm_parent cascade,inherit.sql,SAME,,
postgresql,postgresql,drop table inh_temp_parent cascade,inherit.sql,SAME,,
postgresql,postgresql,create table list_parted ( 	a	varchar ) partition by list (a),inherit.sql,SAME,,
postgresql,postgresql,"create table part_ab_cd partition of list_parted for values in ('ab', 'cd')",inherit.sql,SAME,,
postgresql,postgresql,"create table part_ef_gh partition of list_parted for values in ('ef', 'gh')",inherit.sql,SAME,,
postgresql,postgresql,"create table part_null_xy partition of list_parted for values in (null, 'xy')",inherit.sql,SAME,,
postgresql,postgresql,"create table range_list_parted ( 	a	int, 	b	char(2) ) partition by range (a)",inherit.sql,SAME,,
postgresql,postgresql,create table part_1_10 partition of range_list_parted for values from (1) to (10) partition by list (b),inherit.sql,SAME,,
postgresql,postgresql,create table part_1_10_ab partition of part_1_10 for values in ('ab'),inherit.sql,SAME,,
postgresql,postgresql,create table part_1_10_cd partition of part_1_10 for values in ('cd'),inherit.sql,SAME,,
postgresql,postgresql,create table part_10_20 partition of range_list_parted for values from (10) to (20) partition by list (b),inherit.sql,SAME,,
postgresql,postgresql,create table part_10_20_ab partition of part_10_20 for values in ('ab'),inherit.sql,SAME,,
postgresql,postgresql,create table part_10_20_cd partition of part_10_20 for values in ('cd'),inherit.sql,SAME,,
postgresql,postgresql,create table part_21_30 partition of range_list_parted for values from (21) to (30) partition by list (b),inherit.sql,SAME,,
postgresql,postgresql,create table part_21_30_ab partition of part_21_30 for values in ('ab'),inherit.sql,SAME,,
postgresql,postgresql,create table part_21_30_cd partition of part_21_30 for values in ('cd'),inherit.sql,SAME,,
postgresql,postgresql,create table part_40_inf partition of range_list_parted for values from (40) to (maxvalue) partition by list (b),inherit.sql,SAME,,
postgresql,postgresql,create table part_40_inf_ab partition of part_40_inf for values in ('ab'),inherit.sql,SAME,,
postgresql,postgresql,create table part_40_inf_cd partition of part_40_inf for values in ('cd'),inherit.sql,SAME,,
postgresql,postgresql,create table part_40_inf_null partition of part_40_inf for values in (null),inherit.sql,SAME,,
postgresql,postgresql,drop table list_parted,inherit.sql,SAME,,
postgresql,postgresql,drop table range_list_parted,inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted (a int, b int, c int) partition by range (a, abs(b), c)",inherit.sql,SAME,,
postgresql,postgresql,create table mcrparted_def partition of mcrparted default,inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted0 partition of mcrparted for values from (minvalue, minvalue, minvalue) to (1, 1, 1)",inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted1 partition of mcrparted for values from (1, 1, 1) to (10, 5, 10)",inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted2 partition of mcrparted for values from (10, 5, 10) to (10, 10, 10)",inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted3 partition of mcrparted for values from (11, 1, 1) to (20, 10, 10)",inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted4 partition of mcrparted for values from (20, 10, 10) to (20, 20, 20)",inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted5 partition of mcrparted for values from (20, 20, 20) to (maxvalue, maxvalue, maxvalue)",inherit.sql,SAME,,
postgresql,postgresql,"create table parted_minmax (a int, b varchar(16)) partition by range (a)",inherit.sql,SAME,,
postgresql,postgresql,create table parted_minmax1 partition of parted_minmax for values from (1) to (10),inherit.sql,SAME,,
postgresql,postgresql,"insert into parted_minmax values (1,'12345')",inherit.sql,SAME,,
postgresql,postgresql,drop table parted_minmax,inherit.sql,SAME,,
postgresql,postgresql,drop table mcrparted_def,inherit.sql,SAME,,
postgresql,postgresql,drop table mcrparted5,inherit.sql,SAME,,
postgresql,postgresql,"create table mcrparted5 partition of mcrparted for values from (20, 20, 20) to (maxvalue, maxvalue, maxvalue) partition by list (a)",inherit.sql,SAME,,
postgresql,postgresql,create table mcrparted5a partition of mcrparted5 for values in(20),inherit.sql,SAME,,
postgresql,postgresql,create table mcrparted5_def partition of mcrparted5 default,inherit.sql,SAME,,
postgresql,postgresql,drop table mcrparted5_def,inherit.sql,SAME,,
postgresql,postgresql,create table mclparted (a int) partition by list(a),inherit.sql,SAME,,
postgresql,postgresql,create table mclparted1 partition of mclparted for values in(1),inherit.sql,SAME,,
postgresql,postgresql,create table mclparted2 partition of mclparted for values in(2),inherit.sql,SAME,,
postgresql,postgresql,"create table mclparted3_5 partition of mclparted for values in(3,5)",inherit.sql,SAME,,
postgresql,postgresql,create table mclparted4 partition of mclparted for values in(4),inherit.sql,SAME,,
postgresql,postgresql,create table mclparted_null partition of mclparted for values in(null),inherit.sql,SAME,,
postgresql,postgresql,create table mclparted_def partition of mclparted default,inherit.sql,SAME,,
postgresql,postgresql,drop table mclparted_null,inherit.sql,SAME,,
postgresql,postgresql,"create table mclparted_0_null partition of mclparted for values in(0,null)",inherit.sql,SAME,,
postgresql,postgresql,drop table mclparted,inherit.sql,SAME,,
postgresql,postgresql,drop table mcrparted,inherit.sql,SAME,,
postgresql,postgresql,create table bool_lp (b bool) partition by list(b),inherit.sql,SAME,,
postgresql,postgresql,create table bool_lp_true partition of bool_lp for values in(true),inherit.sql,SAME,,
postgresql,postgresql,create table bool_lp_false partition of bool_lp for values in(false),inherit.sql,SAME,,
postgresql,postgresql,drop table bool_lp,inherit.sql,SAME,,
postgresql,postgresql,"create table bool_rp (b bool, a int) partition by range(b,a)",inherit.sql,SAME,,
postgresql,postgresql,"create table bool_rp_false_1k partition of bool_rp for values from (false,0) to (false,1000)",inherit.sql,SAME,,
postgresql,postgresql,"create table bool_rp_true_1k partition of bool_rp for values from (true,0) to (true,1000)",inherit.sql,SAME,,
postgresql,postgresql,"create table bool_rp_false_2k partition of bool_rp for values from (false,1000) to (false,2000)",inherit.sql,SAME,,
postgresql,postgresql,"create table bool_rp_true_2k partition of bool_rp for values from (true,1000) to (true,2000)",inherit.sql,SAME,,
postgresql,postgresql,drop table bool_rp,inherit.sql,SAME,,
postgresql,postgresql,"create table range_parted (a int, b int, c int) partition by range(a, b)",inherit.sql,SAME,,
postgresql,postgresql,"create table range_parted1 partition of range_parted for values from (0,0) to (10,10)",inherit.sql,SAME,,
postgresql,postgresql,"create table range_parted2 partition of range_parted for values from (10,10) to (20,20)",inherit.sql,SAME,,
postgresql,postgresql,drop table range_parted,inherit.sql,SAME,,
postgresql,postgresql,"create table permtest_parent (a int, b text, c text) partition by list (a)",inherit.sql,SAME,,
postgresql,postgresql,"create table permtest_child (b text, c text, a int) partition by list (b)",inherit.sql,SAME,,
postgresql,postgresql,"create table permtest_grandchild (c text, b text, a int)",inherit.sql,SAME,,
postgresql,postgresql,"insert into permtest_parent   select 1, 'a', left(fipshash(i::text), 5) from generate_series(0, 100) i",inherit.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 2:   select 1, 'a', left(fipshash(i::text), 5) from generate_se...                                HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,drop table permtest_parent,inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_parent (     partid int not null,     shdata int not null,     data int NOT NULL DEFAULT 0,     CONSTRAINT shdata_small CHECK(shdata < 3) ) PARTITION BY RANGE (partid)",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_child_fastdef (     partid int not null,     shdata int not null,     CONSTRAINT shdata_small CHECK(shdata < 3) )",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_child_plaindef (     partid int not null,     shdata int not null,     data int NOT NULL DEFAULT 0,     CONSTRAINT shdata_small CHECK(shdata < 3),     CHECK(data < 10) )",inherit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE errtst_child_reorder (     data int NOT NULL DEFAULT 0,     shdata int not null,     partid int not null,     CONSTRAINT shdata_small CHECK(shdata < 3),     CHECK(data < 10) )",inherit.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', '5')",inherit.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', '5')",inherit.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', '5')",inherit.sql,SAME,,
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', '10')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_fastdef"" violates check constraint ""errtest_child_fastdef_data_check"" DETAIL:  Failing row contains (0, 1, 10)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', '10')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_plaindef"" violates check constraint ""errtst_child_plaindef_data_check"" DETAIL:  Failing row contains (10, 1, 10)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', '10')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_reorder"" violates check constraint ""errtst_child_reorder_data_check"" DETAIL:  Failing row contains (20, 1, 10)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', NULL)",inherit.sql,DIFFERENT,NotNullViolation,"null value in column ""data"" of relation ""errtst_child_fastdef"" violates not-null constraint DETAIL:  Failing row contains (0, 1, null)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', NULL)",inherit.sql,DIFFERENT,NotNullViolation,"null value in column ""data"" of relation ""errtst_child_plaindef"" violates not-null constraint DETAIL:  Failing row contains (10, 1, null)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', NULL)",inherit.sql,DIFFERENT,NotNullViolation,"null value in column ""data"" of relation ""errtst_child_reorder"" violates not-null constraint DETAIL:  Failing row contains (20, 1, null)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '5', '5')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_fastdef"" violates check constraint ""shdata_small"" DETAIL:  Failing row contains (0, 5, 5)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '5', '5')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_plaindef"" violates check constraint ""shdata_small"" DETAIL:  Failing row contains (10, 5, 5)."
postgresql,postgresql,"INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '5', '5')",inherit.sql,DIFFERENT,CheckViolation,"new row for relation ""errtst_child_reorder"" violates check constraint ""shdata_small"" DETAIL:  Failing row contains (20, 5, 5)."
postgresql,postgresql,DROP TABLE errtst_parent,inherit.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncate_a (col1 integer primary key),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a VALUES (2),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_b (a int REFERENCES truncate_a),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_c (a serial PRIMARY KEY),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_d (a int REFERENCES trunc_c),truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trunc_e (a int REFERENCES truncate_a, b int REFERENCES trunc_c)",truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_c VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_b VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_d VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_e VALUES (1,1)",truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_c VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_b VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_d VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_e VALUES (1,1)",truncate.sql,SAME,,
postgresql,postgresql,"DROP TABLE truncate_a,trunc_c,trunc_b,trunc_d,trunc_e CASCADE",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_f (col1 integer primary key),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_f VALUES (1),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO trunc_f VALUES (2),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_fa (col2a text) INHERITS (trunc_f),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_fa VALUES (3, 'three')",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_fb (col2b int) INHERITS (trunc_f),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_fb VALUES (4, 444)",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_faa (col3 text) INHERITS (trunc_fa),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_faa VALUES (5, 'five', 'FIVE')",truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE trunc_f CASCADE,truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trunc_trigger_test (f1 int, f2 text, f3 text)",truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trunc_trigger_log (tgop text, tglevel text, tgwhen text,         tgargv text, tgtable name, rowcount bigint)",truncate.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION trunctrigger() RETURNS trigger as $$ declare c bigint; begin     execute 'select count(*) from ' || quote_ident(tg_table_name) into c;     insert into trunc_trigger_log values       (TG_OP, TG_LEVEL, TG_WHEN, TG_ARGV[0], tg_table_name, c);     return null; end; $$ LANGUAGE plpgsql",truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_trigger_test VALUES(1, 'foo', 'bar'), (2, 'baz', 'quux')",truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_trigger_test VALUES(1, 'foo', 'bar'), (2, 'baz', 'quux')",truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE trunc_trigger_test,truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE trunc_trigger_log,truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE truncate_a (id serial,                          id1 integer default nextval('truncate_a_id1'))",truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncate_b (id int GENERATED ALWAYS AS IDENTITY (START WITH 44)),truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_b DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,INSERT INTO truncate_a DEFAULT VALUES,truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE truncate_a,truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE truncparted (a int, b char) PARTITION BY LIST (a)",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncparted1 PARTITION OF truncparted FOR VALUES IN (1),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO truncparted VALUES (1, 'a')",truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE truncparted,truncate.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION tp_ins_data() RETURNS void LANGUAGE plpgsql AS $$   BEGIN 	INSERT INTO truncprim VALUES (1), (100), (150); 	INSERT INTO truncpart VALUES (1), (100), (150);   END $$",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncprim (a int PRIMARY KEY),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncpart (a int REFERENCES truncprim)   PARTITION BY RANGE (a),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncpart_1 PARTITION OF truncpart FOR VALUES FROM (0) TO (100),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncpart_2 PARTITION OF truncpart FOR VALUES FROM (100) TO (200)   PARTITION BY RANGE (a),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncpart_2_1 PARTITION OF truncpart_2 FOR VALUES FROM (100) TO (150),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE truncpart_2_d PARTITION OF truncpart_2 DEFAULT,truncate.sql,SAME,,
postgresql,postgresql,"DROP TABLE truncprim, truncpart",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a (a INT PRIMARY KEY) PARTITION BY RANGE (a),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a1 PARTITION OF trunc_a FOR VALUES FROM (0) TO (10),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a2 PARTITION OF trunc_a FOR VALUES FROM (10) TO (20)   PARTITION BY RANGE (a),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a21 PARTITION OF trunc_a2 FOR VALUES FROM (10) TO (12),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a22 PARTITION OF trunc_a2 FOR VALUES FROM (12) TO (16),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a2d PARTITION OF trunc_a2 DEFAULT,truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE trunc_a3 PARTITION OF trunc_a FOR VALUES FROM (20) TO (30),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO trunc_a VALUES (0), (5), (10), (15), (20), (25)",truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref_b (     b INT PRIMARY KEY,     a INT REFERENCES trunc_a(a) ON DELETE CASCADE )",truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref_b VALUES (10, 0), (50, 5), (100, 10), (150, 15)",truncate.sql,SAME,,
postgresql,postgresql,DROP TABLE ref_b,truncate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref_c (     c INT PRIMARY KEY,     a INT REFERENCES trunc_a(a) ON DELETE CASCADE ) PARTITION BY RANGE (c)",truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref_c1 PARTITION OF ref_c FOR VALUES FROM (100) TO (200),truncate.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref_c2 PARTITION OF ref_c FOR VALUES FROM (200) TO (300),truncate.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref_c VALUES (100, 10), (150, 15), (200, 20), (250, 25)",truncate.sql,SAME,,
postgresql,postgresql,"DROP TABLE trunc_a, ref_c",truncate.sql,SAME,,
postgresql,postgresql,create table gin_test_tbl(i int4[]) with (autovacuum_enabled = off),gin.sql,SAME,,
postgresql,postgresql,"insert into gin_test_tbl select array[1, 2, g] from generate_series(1, 20000) g",gin.sql,SAME,,
postgresql,postgresql,"insert into gin_test_tbl select array[1, 3, g] from generate_series(1, 1000) g",gin.sql,SAME,,
postgresql,postgresql,"insert into gin_test_tbl select array[3, 1, g] from generate_series(1, 1000) g",gin.sql,SAME,,
postgresql,postgresql,"insert into gin_test_tbl select array[1, 2, g] from generate_series(1, 1000) g",gin.sql,SAME,,
postgresql,postgresql,"insert into gin_test_tbl select array[1, 3, g] from generate_series(1, 1000) g",gin.sql,SAME,,
postgresql,postgresql,"insert into t_gin_test_tbl values   (null,    null),   ('{}',    null),   ('{1}',   null),   ('{1,2}', null),   (null,    '{}'),   (null,    '{10}'),   ('{1,2}', '{10}'),   ('{2}',   '{10}'),   ('{1,3}', '{}'),   ('{1,1}', '{10}')",gin.sql,SAME,,
postgresql,postgresql,"insert into t_gin_test_tbl select array[1, g, g/10], array[2, g, g/10]   from generate_series(1, 20000) g",gin.sql,SAME,,
postgresql,postgresql,drop table t_gin_test_tbl,gin.sql,SAME,,
postgresql,postgresql,"insert into t_gin_test_tbl values   (null,    null),   ('{}',    null),   ('{1}',   '{2,3}')",gin.sql,SAME,,
postgresql,postgresql,drop table t_gin_test_tbl,gin.sql,SAME,,
postgresql,postgresql,CREATE TABLE NAME_TBL(f1 name),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR'),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr'),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('asdfghjkl;'),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('343f%2a'),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('d34aaasdf'),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES (''),name.sql,SAME,,
postgresql,postgresql,INSERT INTO NAME_TBL(f1) VALUES ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'),name.sql,SAME,,
postgresql,postgresql,DROP TABLE NAME_TBL,name.sql,SAME,,
postgresql,postgresql,CREATE TABLE LINE_TBL (s line),line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,-1,5}')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{1,0,5}')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,3,0}')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES (' (0,0), (6,6)')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('10,-10 ,-5,-4')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[-1e6,2e2,3e5, -4e1]')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{3,NaN,5}')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{NaN,NaN,NaN}')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[(1,3),(2,3)]')",line.sql,SAME,,
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES (line(point '(3,1)', point '(3,2)'))",line.sql,SAME,,
postgresql,postgresql,INSERT INTO LINE_TBL VALUES ('{}'),line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""{}"" LINE 1: INSERT INTO LINE_TBL VALUES ('{}')"
postgresql,postgresql,INSERT INTO LINE_TBL VALUES ('{0'),line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""{0"" LINE 1: INSERT INTO LINE_TBL VALUES ('{0')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,0}')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""{0,0}"" LINE 1: INSERT INTO LINE_TBL VALUES ('{0,0}')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,0,1')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""{0,0,1"" LINE 1: INSERT INTO LINE_TBL VALUES ('{0,0,1')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,0,1}')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid line specification: A and B cannot both be zero LINE 1: INSERT INTO LINE_TBL VALUES ('{0,0,1}')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('{0,0,1} x')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""{0,0,1} x"" LINE 1: INSERT INTO LINE_TBL VALUES ('{0,0,1} x')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('(3asdf,2 ,3,4r2)')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""(3asdf,2 ,3,4r2)"" LINE 1: INSERT INTO LINE_TBL VALUES ('(3asdf,2 ,3,4r2)')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[1,2,3, 4')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""[1,2,3, 4"" LINE 1: INSERT INTO LINE_TBL VALUES ('[1,2,3, 4')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[(,2),(3,4)]')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""[(,2),(3,4)]"" LINE 1: INSERT INTO LINE_TBL VALUES ('[(,2),(3,4)]')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[(1,2),(3,4)')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type line: ""[(1,2),(3,4)"" LINE 1: INSERT INTO LINE_TBL VALUES ('[(1,2),(3,4)')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES ('[(1,2),(1,2)]')",line.sql,DIFFERENT,InvalidTextRepresentation,"invalid line specification: must be two distinct points LINE 1: INSERT INTO LINE_TBL VALUES ('[(1,2),(1,2)]')"
postgresql,postgresql,"INSERT INTO LINE_TBL VALUES (line(point '(1,0)', point '(1,0)'))",line.sql,DIFFERENT,InvalidParameterValue,invalid line specification: must be two distinct points
postgresql,postgresql,"CREATE TABLE test_replica_identity (        id serial primary key,        keya text not null,        keyb text not null,        nonkey text,        CONSTRAINT test_replica_identity_unique_defer UNIQUE (keya, keyb) DEFERRABLE,        CONSTRAINT test_replica_identity_unique_nondefer UNIQUE (keya, keyb) )",replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity_othertable (id serial primary key),replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity_t3 (id serial constraint pk primary key deferrable),replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity2 (id int UNIQUE NOT NULL),replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity3 (id int NOT NULL),replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity4(id integer NOT NULL) PARTITION BY LIST (id),replica_identity.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_replica_identity4_1(id integer NOT NULL),replica_identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_replica_identity5 (a int not null, b int, c int, 	PRIMARY KEY (b, c))",replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity2,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity3,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity4,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity5,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity_othertable,replica_identity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_replica_identity_t3,replica_identity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bt_i4_heap ( 	seqno 		int4, 	random 		int4 )",btree_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bt_name_heap ( 	seqno 		name, 	random 		int4 )",btree_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bt_txt_heap ( 	seqno 		text, 	random 		int4 )",btree_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bt_f8_heap ( 	seqno 		float8, 	random 		int4 )",btree_index.sql,SAME,,
postgresql,postgresql,"insert into btree_bpchar values ('foo'), ('fool'), ('bar'), ('quux')",btree_index.sql,SAME,,
postgresql,postgresql,"insert into btree_bpchar select 'foo' from generate_series(1,1500)",btree_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE dedup_unique_test_table (a int) WITH (autovacuum_enabled=false),btree_index.sql,SAME,,
postgresql,postgresql,DO $$ BEGIN     FOR r IN 1..1350 LOOP         DELETE FROM dedup_unique_test_table;         INSERT INTO dedup_unique_test_table SELECT 1;     END LOOP; END$$,btree_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO dedup_unique_test_table SELECT i FROM generate_series(0,450) i",btree_index.sql,SAME,,
postgresql,postgresql,"create table btree_tall_tbl(id int4, t text)",btree_index.sql,SAME,,
postgresql,postgresql,"insert into btree_tall_tbl select g, repeat('x', 250) from generate_series(1, 130) g",btree_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE delete_test_table (a bigint, b bigint, c bigint, d bigint)",btree_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO delete_test_table SELECT i, 1, 2, 3 FROM generate_series(1,80000) i",btree_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO delete_test_table SELECT i, 1, 2, 3 FROM generate_series(1,1000) i",btree_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE btree_part (id int4) PARTITION BY RANGE (id),btree_index.sql,SAME,,
postgresql,postgresql,DROP TABLE btree_part,btree_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES ('a', 'b'), ('x', 'y')",union.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES ('ab'), ('xy')",union.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1c VALUES ('v', 'w'), ('c', 'd'), ('m', 'n'), ('e', 'f')",union.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2c VALUES ('vw'), ('cd'), ('mn'), ('ef')",union.sql,SAME,,
postgresql,postgresql,create table events (event_id int primary key),union.sql,SAME,,
postgresql,postgresql,create table other_events (event_id int primary key),union.sql,SAME,,
postgresql,postgresql,create table events_child () inherits (events),union.sql,SAME,,
postgresql,postgresql,"drop table events_child, events, other_events",union.sql,SAME,,
postgresql,postgresql,drop table t3,union.sql,SAME,,
postgresql,postgresql,CREATE TABLE functest1 (i int),create_function_sql.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION functest_S_16(a int, b int) RETURNS void     LANGUAGE SQL     BEGIN ATOMIC         INSERT INTO functest1 SELECT a + $2",create_function_sql.sql,DIFFERENT,SyntaxError,syntax error at end of input LINE 4:         INSERT INTO functest1 SELECT a + $2
postgresql,postgresql,DROP TABLE functest1 CASCADE,create_function_sql.sql,SAME,,
postgresql,postgresql,CREATE TABLE functest3 (a int),create_function_sql.sql,SAME,,
postgresql,postgresql,"INSERT INTO functest3 VALUES (1), (2)",create_function_sql.sql,SAME,,
postgresql,postgresql,DROP TABLE functest3 CASCADE,create_function_sql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE functest2 (a int, b int)",create_function_sql.sql,SAME,,
postgresql,postgresql,DROP TABLE functest2 CASCADE,create_function_sql.sql,SAME,,
postgresql,postgresql,CREATE TABLE functest3 (a int),create_function_sql.sql,SAME,,
postgresql,postgresql,"INSERT INTO functest3 VALUES (1), (2), (3)",create_function_sql.sql,SAME,,
postgresql,postgresql,DROP TABLE functest3 CASCADE,create_function_sql.sql,SAME,,
postgresql,postgresql,CREATE FUNCTION voidtest3(a int) RETURNS VOID LANGUAGE SQL AS $$ INSERT INTO sometable VALUES(a + 1) $$,create_function_sql.sql,SAME,,
postgresql,postgresql,CREATE FUNCTION voidtest4(a int) RETURNS VOID LANGUAGE SQL AS $$ INSERT INTO sometable VALUES(a - 1) RETURNING f1 $$,create_function_sql.sql,SAME,,
postgresql,postgresql,DROP TABLE tmp,misc.sql,DIFFERENT,UndefinedTable,"table ""tmp"" does not exist"
postgresql,postgresql,"CREATE TABLE hobbies_r ( 	name		text, 	person 		text )",misc.sql,SAME,,
postgresql,postgresql,"CREATE TABLE equipment_r ( 	name 		text, 	hobby		text )",misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO hobbies_r (name, person)    SELECT 'posthacking', p.name    FROM person* p    WHERE p.name = 'mike' or p.name = 'jeff'",misc.sql,DIFFERENT,UndefinedTable,"relation ""person"" does not exist LINE 3:    FROM person* p"
postgresql,postgresql,"INSERT INTO hobbies_r (name, person)    SELECT 'basketball', p.name    FROM person p    WHERE p.name = 'joe' or p.name = 'sally'",misc.sql,DIFFERENT,UndefinedTable,"relation ""person"" does not exist LINE 3:    FROM person p"
postgresql,postgresql,INSERT INTO hobbies_r (name) VALUES ('skywalking'),misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO equipment_r (name, hobby) VALUES ('advil', 'posthacking')",misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO equipment_r (name, hobby) VALUES ('peet''s coffee', 'posthacking')",misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO equipment_r (name, hobby) VALUES ('hightops', 'basketball')",misc.sql,SAME,,
postgresql,postgresql,"INSERT INTO equipment_r (name, hobby) VALUES ('guts', 'skywalking')",misc.sql,SAME,,
postgresql,postgresql,"create table part_pa_test(a int, b int) partition by range(a)",select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,create table part_pa_test_p1 partition of part_pa_test for values from (minvalue) to (0),select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,create table part_pa_test_p2 partition of part_pa_test for values from (0) to (maxvalue),select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,drop table part_pa_test,select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"create table bmscantest (a int, t text)",select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"insert into bmscantest select r, 'fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo' FROM generate_series(1,100000) r",select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,drop table bmscantest,select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE fooarr(f1 text, f2 int[], f3 text)",select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"INSERT INTO fooarr VALUES('1', ARRAY[1,2], 'one')",select_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"/*  * 1.test CREATE INDEX  *  * Deliberately avoid dropping objects in this section, to get some pg_dump  * coverage.  */  CREATE TABLE tbl_include_reg (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_reg SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_include_unique1 (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_unique1 SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_include_unique2 (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_unique2 SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_include_pk (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_pk SELECT 1, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_include_box (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_box SELECT 1, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_include_box_pk (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl_include_box_pk SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,"/*  * 2. Test CREATE TABLE with constraint  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, 				CONSTRAINT covering UNIQUE(c1,c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covering"" DETAIL:  Key (c1, c2)=(1, 2) already exists."
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, 				CONSTRAINT covering PRIMARY KEY(c1,c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covering"" DETAIL:  Key (c1, c2)=(1, 2) already exists."
postgresql,postgresql,"INSERT INTO tbl SELECT 1, NULL, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,NotNullViolation,"null value in column ""c2"" of relation ""tbl"" violates not-null constraint DETAIL:  Failing row contains (1, null, 3, (4,4),(4,4))."
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, NULL, NULL FROM generate_series(1,300) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, 				UNIQUE(c1,c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""tbl_c1_c2_c3_c4_key"" DETAIL:  Key (c1, c2)=(1, 2) already exists."
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, 				PRIMARY KEY(c1,c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""tbl_pkey"" DETAIL:  Key (c1, c2)=(1, 2) already exists."
postgresql,postgresql,"INSERT INTO tbl SELECT 1, NULL, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,NotNullViolation,"null value in column ""c2"" of relation ""tbl"" violates not-null constraint DETAIL:  Failing row contains (1, null, 3, (4,4),(4,4))."
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, NULL, NULL FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, 				EXCLUDE USING btree (c1 WITH =) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""tbl_c1_c3_c4_excl"" DETAIL:  Key (c1)=(1) conflicts with existing key (c1)=(1)."
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, NULL, NULL FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 3.0 Test ALTER TABLE DROP COLUMN.  * Any column deletion leads to index deletion.  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 int)",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 3.1 Test ALTER TABLE DROP COLUMN.  * Included column deletion leads to the index deletion,  * AS well AS key columns deletion. It's explained in documentation.  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box); CREATE UNIQUE INDEX tbl_idx ON tbl using btree(c1, c2) INCLUDE(c3,c4); SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname; ALTER TABLE tbl DROP COLUMN c3; SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname; DROP TABLE tbl;  /*  * 3.2 Test ALTER TABLE DROP COLUMN.  * Included column deletion leads to the index deletion.  * AS well AS key columns deletion. It's explained in documentation.  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 3.3 Test ALTER TABLE SET STATISTICS  */ CREATE TABLE tbl (c1 int, c2 int)",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 4. CREATE INDEX CONCURRENTLY  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,1000) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 5. REINDEX  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 7. Check various AMs. All but btree, gist and spgist must fail.  */ CREATE TABLE tbl (c1 int,c2 int, c3 box, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 8. Update, delete values in indexed table.  */ CREATE TABLE tbl (c1 int, c2 int, c3 int, c4 box)",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,"/*  * 9. Alter column type.  */ CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4))",index_including.sql,SAME,,
postgresql,postgresql,"INSERT INTO tbl SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x",index_including.sql,SAME,,
postgresql,postgresql,DROP TABLE tbl,index_including.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_is_json (js text),sqljson.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_is_json VALUES  (NULL),  (''),  ('123'),  ('""aaa ""'),  ('true'),  ('null'),  ('[]'),  ('[1, ""2"", {}]'),  ('{}'),  ('{ ""a"": 1, ""b"": null }'),  ('{ ""a"": 1, ""a"": null }'),  ('{ ""a"": 1, ""b"": [{ ""a"": 1 }, { ""a"": 2 }] }'),  ('{ ""a"": 1, ""b"": [{ ""a"": 1, ""b"": 0, ""a"": 2 }] }'),  ('aaa'),  ('{a:1}'),  ('[""a"",]')",sqljson.sql,SAME,,
postgresql,postgresql,CREATE TABLE slow_emp4000 ( 	home_base	 box ),create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE fast_emp4000 ( 	home_base	 box ),create_index.sql,SAME,,
postgresql,postgresql,INSERT INTO fast_emp4000 SELECT * FROM slow_emp4000,create_index.sql,SAME,,
postgresql,postgresql,INSERT INTO POINT_TBL(f1) VALUES (NULL),create_index.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES (NULL)"
postgresql,postgresql,"INSERT INTO gpolygon_tbl VALUES ( '(1000,0,0,1000)' )",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO gpolygon_tbl VALUES ( '(0,1000,1000,1000)' )",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE array_index_op_test ( 	seqno		int4, 	i			int4[], 	t			text[] )",create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE array_gin_test (a int[]),create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO array_gin_test SELECT ARRAY[1, g%5, g] FROM generate_series(1, 10000) g",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE array_gin_test,create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE unlogged_hash_table,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE unique_tbl (i int, t text)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (1, 'one')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (2, 'two')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'three')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (4, 'four')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (5, 'one')",create_index.sql,SAME,,
postgresql,postgresql,INSERT INTO unique_tbl (t) VALUES ('six'),create_index.sql,SAME,,
postgresql,postgresql,INSERT INTO unique_tbl (t) VALUES ('seven'),create_index.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_idx2"" DETAIL:  Key (i)=(null) already exists."
postgresql,postgresql,INSERT INTO unique_tbl (t) VALUES ('seven'),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE unique_tbl,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE func_index_heap (f1 text, f2 text)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('ABC','DEF')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('AB','CDEFG')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('QWE','RTY')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('ABCD', 'EF')",create_index.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""func_index_index"" DETAIL:  Key (textcat(f1, f2))=(ABCDEF) already exists."
postgresql,postgresql,INSERT INTO func_index_heap VALUES('QWERTY'),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE func_index_heap,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE func_index_heap (f1 text, f2 text)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('ABC','DEF')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('AB','CDEFG')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('QWE','RTY')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO func_index_heap VALUES('ABCD', 'EF')",create_index.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""func_index_index"" DETAIL:  Key ((f1 || f2))=(ABCDEF) already exists."
postgresql,postgresql,INSERT INTO func_index_heap VALUES('QWERTY'),create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE covering_index_heap (f1 int, f2 int, f3 text)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO covering_index_heap VALUES(1,1,'AAA')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO covering_index_heap VALUES(1,2,'AAA')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO covering_index_heap VALUES(1,2,'BBB')",create_index.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""covering_index_index"" DETAIL:  Key (f1, f2)=(1, 2) already exists."
postgresql,postgresql,"INSERT INTO covering_index_heap VALUES(1,4,'AAA')",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE covering_index_heap,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE concur_heap (f1 text, f2 text)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_heap VALUES  ('a','b')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_heap VALUES  ('b','b')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_heap VALUES ('b','x')",create_index.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""concur_index2"" DETAIL:  Key (f1)=(b) already exists."
postgresql,postgresql,"INSERT INTO concur_temp VALUES (1, 'foo'), (2, 'bar')",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_temp,create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_temp VALUES (1, 'foo'), (2, 'bar')",create_index.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"INSERT INTO concur_temp VALUES (1, 'foo'), (2, 'bar')",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_temp,create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_heap,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cwi_test( a int , b varchar(10), c char)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO cwi_test VALUES(1, 2), (3, 4), (5, 6)",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE cwi_test,create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE cwi_test(a int) PARTITION BY hash (a),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE cwi_test,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cwi_test(a int, b int)",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE cwi_test,create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE syscol_table (a INT),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE syscol_table,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE onek_with_null AS SELECT unique1, unique2 FROM onek",create_index.sql,DIFFERENT,UndefinedTable,"relation ""onek"" does not exist LINE 1: ...TE TABLE onek_with_null AS SELECT unique1, unique2 FROM onek"
postgresql,postgresql,"INSERT INTO onek_with_null (unique1,unique2) VALUES (NULL, -1), (NULL, NULL)",create_index.sql,DIFFERENT,UndefinedTable,"relation ""onek_with_null"" does not exist LINE 1: INSERT INTO onek_with_null (unique1,unique2) VALUES (NULL, -..."
postgresql,postgresql,DROP TABLE onek_with_null,create_index.sql,DIFFERENT,UndefinedTable,"table ""onek_with_null"" does not exist"
postgresql,postgresql,"CREATE TABLE dupindexcols AS   SELECT unique1 as id, stringu2::text as f1 FROM tenk1",create_index.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 2:   SELECT unique1 as id, stringu2::text as f1 FROM tenk1"
postgresql,postgresql,CREATE TABLE reindex_verbose(id integer primary key),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE reindex_verbose,create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_tab (c1 int),create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_tab2 (c1 int REFERENCES concur_reindex_tab),create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_reindex_tab VALUES  (1, 'a')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_reindex_tab VALUES  (2, 'a')",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE concur_reindex_tab3 (c1 int, c2 int4range, EXCLUDE USING gist (c2 WITH &&))",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_reindex_tab3 VALUES  (3, '[1,2]')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_reindex_tab3 VALUES  (4, '[2,4]')",create_index.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""concur_reindex_tab3_c2_excl"" DETAIL:  Key (c2)=([2,5)) conflicts with existing key (c2)=([1,3))."
postgresql,postgresql,CREATE TABLE testcomment (i int),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE testcomment,create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_clustered(i int),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_clustered,create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_replident(i int NOT NULL),create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_replident,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE concur_appclass_tab(i tsvector, j tsvector, k tsvector)",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_appclass_tab,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE concur_reindex_part (c1 int, c2 int) PARTITION BY RANGE (c1)",create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_part_0 PARTITION OF concur_reindex_part   FOR VALUES FROM (0) TO (10) PARTITION BY list (c2),create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_part_0_1 PARTITION OF concur_reindex_part_0   FOR VALUES IN (1),create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_part_0_2 PARTITION OF concur_reindex_part_0   FOR VALUES IN (2),create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_part_10 PARTITION OF concur_reindex_part   FOR VALUES FROM (10) TO (20) PARTITION BY list (c2),create_index.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE FUNCTION create_relfilenode_part(relname text, indname text)   RETURNS VOID AS   $func$   BEGIN   EXECUTE format('     CREATE TABLE %I AS       SELECT oid, relname, relfilenode, relkind, reltoastrelid       FROM pg_class       WHERE oid IN          (SELECT relid FROM pg_partition_tree(''%I''));', 	 relname, indname)",create_index.sql,DIFFERENT,SyntaxError,"unterminated dollar-quoted string at or near ""$func$   BEGIN   EXECUTE format('     CREATE TABLE %I AS       SELECT oid, relname, relfilenode, relkind, reltoastrelid       FROM pg_class       WHERE oid IN          (SELECT relid FROM pg_partition_tree(''%I''));', 	 relname, indname)"" LINE 3:   $func$"
postgresql,postgresql,DROP TABLE reindex_index_status,create_index.sql,DIFFERENT,UndefinedTable,"table ""reindex_index_status"" does not exist"
postgresql,postgresql,DROP TABLE reindex_index_status,create_index.sql,DIFFERENT,UndefinedTable,"table ""reindex_index_status"" does not exist"
postgresql,postgresql,DROP TABLE reindex_index_status,create_index.sql,DIFFERENT,UndefinedTable,"table ""reindex_index_status"" does not exist"
postgresql,postgresql,DROP TABLE reindex_index_status,create_index.sql,DIFFERENT,UndefinedTable,"table ""reindex_index_status"" does not exist"
postgresql,postgresql,DROP TABLE concur_reindex_part,create_index.sql,SAME,,
postgresql,postgresql,"DROP TABLE concur_reindex_tab, concur_reindex_tab2, concur_reindex_tab3",create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_tab4 (c1 int),create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_reindex_tab4 VALUES (1), (1), (2)",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_reindex_tab4,create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE concur_exprs_tab (c1 int , c2 boolean)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_exprs_tab (c1, c2) VALUES (1369652450, FALSE),   (414515746, TRUE),   (897778963, FALSE)",create_index.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_exprs_tab,create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_temp_tab_1 VALUES (1, 'foo'), (2, 'bar')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO concur_temp_tab_3 VALUES (1, 'foo'), (2, 'bar')",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE reindex_temp_before AS SELECT oid, relname, relfilenode, relkind, reltoastrelid   FROM pg_class   WHERE relname IN ('concur_temp_ind_1', 'concur_temp_ind_2')",create_index.sql,SAME,,
postgresql,postgresql,"DROP TABLE concur_temp_tab_1, concur_temp_tab_2, reindex_temp_before",create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE table1(col1 SERIAL PRIMARY KEY),create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO table1 SELECT generate_series(1,400)",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE table2(col1 SERIAL PRIMARY KEY, col2 TEXT NOT NULL)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO table2 SELECT generate_series(1,400), 'abc'",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE reindex_before AS SELECT oid, relname, relfilenode, relkind, reltoastrelid 	FROM pg_class 	where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex')",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO reindex_before SELECT oid, 'pg_toast_TABLE', relfilenode, relkind, reltoastrelid FROM pg_class WHERE oid IN 	(SELECT reltoastrelid FROM reindex_before WHERE reltoastrelid > 0)",create_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO reindex_before SELECT oid, 'pg_toast_TABLE_index', relfilenode, relkind, reltoastrelid FROM pg_class where oid in 	(select indexrelid from pg_index where indrelid in 		(select reltoastrelid from reindex_before where reltoastrelid > 0))",create_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE reindex_after AS SELECT oid, relname, relfilenode, relkind 	FROM pg_class 	where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex')",create_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE BOX_TBL (f1 box),box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(2.0,2.0,0.0,0.0)')",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(1.0,1.0,3.0,3.0)')",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('((-8, 2), (-2, -10))')",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(2.5, 2.5, 2.5,3.5)')",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(3.0, 3.0,3.0,3.0)')",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(2.3, 4.5)')",box.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type box: ""(2.3, 4.5)"" LINE 1: INSERT INTO BOX_TBL (f1) VALUES ('(2.3, 4.5)')"
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('[1, 2, 3, 4)')",box.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type box: ""[1, 2, 3, 4)"" LINE 1: INSERT INTO BOX_TBL (f1) VALUES ('[1, 2, 3, 4)')"
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4]')",box.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type box: ""(1, 2, 3, 4]"" LINE 1: INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4]')"
postgresql,postgresql,"INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4) x')",box.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type box: ""(1, 2, 3, 4) x"" LINE 1: INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4) x')"
postgresql,postgresql,INSERT INTO BOX_TBL (f1) VALUES ('asdfasdf(ad'),box.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type box: ""asdfasdf(ad"" LINE 1: INSERT INTO BOX_TBL (f1) VALUES ('asdfasdf(ad')"
postgresql,postgresql,"INSERT INTO box_temp 	SELECT box(point(i, i), point(i * 2, i * 2)) 	FROM generate_series(1, 50) AS i",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO box_temp 	VALUES (NULL), 		   ('(0,0)(0,100)'), 		   ('(-3,4.3333333333)(40,1)'), 		   ('(0,100)(0,infinity)'), 		   ('(-infinity,0)(0,infinity)'), 		   ('(-infinity,-infinity)(infinity,infinity)')",box.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quad_box_tbl (id int, b box)",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_box_tbl   SELECT (x - 1) * 100 + y, box(point(x * 10, y * 10), point(x * 10 + 5, y * 10 + 5))   FROM generate_series(1, 100) x,        generate_series(1, 100) y",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_box_tbl   SELECT i, '((200, 300),(210, 310))'   FROM generate_series(10001, 11000) AS i",box.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_box_tbl VALUES   (11001, NULL),   (11002, NULL),   (11003, '((-infinity,-infinity),(infinity,infinity))'),   (11004, '((-infinity,100),(-infinity,500))'),   (11005, '((-infinity,-infinity),(700,infinity))')",box.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quad_box_tbl_ord_seq1 AS SELECT rank() OVER (ORDER BY b <-> point '123,456') n, b <-> point '123,456' dist, id FROM quad_box_tbl",box.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quad_box_tbl_ord_seq2 AS SELECT rank() OVER (ORDER BY b <-> point '123,456') n, b <-> point '123,456' dist, id FROM quad_box_tbl WHERE b <@ box '((200,300),(500,600))'",box.sql,SAME,,
postgresql,postgresql,CREATE TABLE LSEG_TBL (s lseg),lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(1,2),(3,4)]')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('(0,0),(6,6)')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('10,-10 ,-3,-4')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[-1e6,2e2,3e5, -4e1]')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES (lseg(point(11, 22), point(33,44)))",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(-10,2),(-10,3)]')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(0,-20),(30,-20)]')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(NaN,1),(NaN,90)]')",lseg.sql,SAME,,
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('(3asdf,2 ,3,4r2)')",lseg.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type lseg: ""(3asdf,2 ,3,4r2)"" LINE 1: INSERT INTO LSEG_TBL VALUES ('(3asdf,2 ,3,4r2)')"
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[1,2,3, 4')",lseg.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type lseg: ""[1,2,3, 4"" LINE 1: INSERT INTO LSEG_TBL VALUES ('[1,2,3, 4')"
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(,2),(3,4)]')",lseg.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type lseg: ""[(,2),(3,4)]"" LINE 1: INSERT INTO LSEG_TBL VALUES ('[(,2),(3,4)]')"
postgresql,postgresql,"INSERT INTO LSEG_TBL VALUES ('[(1,2),(3,4)')",lseg.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type lseg: ""[(1,2),(3,4)"" LINE 1: INSERT INTO LSEG_TBL VALUES ('[(1,2),(3,4)')"
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int PRIMARY KEY, ptest2 text )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int REFERENCES PKTABLE MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE, ftest2 int )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 'Test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 'Test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (3, 'Test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (4, 'Test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (5, 'Test5')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (3, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (100, 2)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(100) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 text, PRIMARY KEY(ptest1, ptest2) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, CONSTRAINT constrname FOREIGN KEY(ftest1, ftest2)                        REFERENCES PKTABLE MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 'Test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 'Test1-2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 'Test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (3, 6, 'Test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (4, 8, 'Test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (5, 10, 'Test5')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 3, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 4, 8)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (3, 6, 12)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, NULL, 0)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (100, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname"" DETAIL:  Key (ftest1, ftest2)=(100, 2) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname"" DETAIL:  Key (ftest1, ftest2)=(2, 2) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname"" DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, NULL, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname"" DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values."
postgresql,postgresql,DROP TABLE PKTABLE CASCADE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 text, PRIMARY KEY(ptest1, ptest2) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int DEFAULT -1, ftest2 int DEFAULT -2, ftest3 int, CONSTRAINT constrname2 FOREIGN KEY(ftest1, ftest2)                        REFERENCES PKTABLE MATCH FULL ON DELETE SET DEFAULT ON UPDATE SET DEFAULT)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (-1, -2, 'The Default!')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 'Test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 'Test1-2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 'Test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (3, 6, 'Test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (4, 8, 'Test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (5, 10, 'Test5')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 3, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 4, 8)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (3, 6, 12)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, NULL, 0)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (100, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname2"" DETAIL:  Key (ftest1, ftest2)=(100, 2) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname2"" DETAIL:  Key (ftest1, ftest2)=(2, 2) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname2"" DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values."
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, NULL, 4)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname2"" DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values."
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table pktable because other objects depend on it DETAIL:  constraint constrname2 on table fktable depends on table pktable HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE PKTABLE CASCADE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int PRIMARY KEY, ptest2 text )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int REFERENCES PKTABLE MATCH FULL, ftest2 int )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 'Test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 'Test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (3, 'Test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (4, 'Test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (5, 'Test5')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (3, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (100, 2)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(100) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, PRIMARY KEY(ptest1, ptest2) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int, ftest2 int )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3 			FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, NULL, 3, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 7, 6)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname3"" DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, UNIQUE(ptest1, ptest2, ptest3) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3 			FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE (ptest1, ptest2, ptest3))",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, NULL, 'test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, NULL, 4, 'test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3 			FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE 			ON DELETE CASCADE ON UPDATE CASCADE)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, NULL, 3, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 7, 6)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname3"" DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int DEFAULT 0, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3 			FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE 			ON DELETE SET DEFAULT ON UPDATE SET NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 3, 4, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, NULL, 3, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 7, 6)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname3"" DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE ( ftest1 int DEFAULT 0, ftest2 int DEFAULT -1, ftest3 int DEFAULT -2, ftest4 int, CONSTRAINT constrname3 			FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE 			ON DELETE SET NULL ON UPDATE SET DEFAULT)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (2, -1, 5, 'test5')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 3, 4, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, 4, 5, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (2, NULL, 3, 3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES (1, 2, 7, 6)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""constrname3"" DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (tid int, id int, PRIMARY KEY (tid, id))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, id) REFERENCES PKTABLE ON DELETE SET NULL (bar))",foreign_key.sql,DIFFERENT,UndefinedColumn,"column ""bar"" referenced in foreign key constraint does not exist"
postgresql,postgresql,"CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, id) REFERENCES PKTABLE ON DELETE SET NULL (foo))",foreign_key.sql,DIFFERENT,InvalidColumnReference,"column ""foo"" referenced in ON DELETE SET action must be part of foreign key"
postgresql,postgresql,"CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, foo) REFERENCES PKTABLE ON UPDATE SET NULL (foo))",foreign_key.sql,DIFFERENT,FeatureNotSupported,"a column list with SET NULL is only supported for ON DELETE actions LINE 1: ...oo int, FOREIGN KEY (tid, foo) REFERENCES PKTABLE ON UPDATE ..."
postgresql,postgresql,"CREATE TABLE FKTABLE (   tid int, id int,   fk_id_del_set_null int,   fk_id_del_set_default int DEFAULT 0,   FOREIGN KEY (tid, fk_id_del_set_null) REFERENCES PKTABLE ON DELETE SET NULL (fk_id_del_set_null),   FOREIGN KEY (tid, fk_id_del_set_default) REFERENCES PKTABLE ON DELETE SET DEFAULT (fk_id_del_set_default) )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO PKTABLE VALUES (1, 0), (1, 1), (1, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO FKTABLE VALUES   (1, 1, 1, NULL),   (1, 2, NULL, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int PRIMARY KEY, someoid oid)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE_FAIL1 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest2) REFERENCES PKTABLE)",foreign_key.sql,DIFFERENT,UndefinedColumn,"column ""ftest2"" referenced in foreign key constraint does not exist"
postgresql,postgresql,"CREATE TABLE FKTABLE_FAIL2 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest1) REFERENCES PKTABLE(ptest2))",foreign_key.sql,DIFFERENT,UndefinedColumn,"column ""ptest2"" referenced in foreign key constraint does not exist"
postgresql,postgresql,"CREATE TABLE FKTABLE_FAIL3 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (tableoid) REFERENCES PKTABLE(someoid))",foreign_key.sql,DIFFERENT,FeatureNotSupported,system columns cannot be used in foreign keys
postgresql,postgresql,"CREATE TABLE FKTABLE_FAIL4 ( ftest1 oid, CONSTRAINT fkfail1 FOREIGN KEY (ftest1) REFERENCES PKTABLE(tableoid))",foreign_key.sql,DIFFERENT,FeatureNotSupported,system columns cannot be used in foreign keys
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 int, UNIQUE(ptest1, ptest2))",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE FKTABLE_FAIL1 (ftest1 int REFERENCES pktable(ptest1)),foreign_key.sql,DIFFERENT,InvalidForeignKey,"there is no unique constraint matching given keys for referenced table ""pktable"""
postgresql,postgresql,DROP TABLE FKTABLE_FAIL1,foreign_key.sql,DIFFERENT,UndefinedTable,"table ""fktable_fail1"" does not exist"
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE PKTABLE (ptest1 int PRIMARY KEY),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO PKTABLE VALUES(42),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable),foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable(ptest1)),foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,CREATE TABLE FKTABLE (ftest1 int8 REFERENCES pktable),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(42),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(43),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(43) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE FKTABLE (ftest1 numeric REFERENCES pktable),foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: numeric and integer."
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE PKTABLE (ptest1 numeric PRIMARY KEY),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO PKTABLE VALUES(42),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE FKTABLE (ftest1 int REFERENCES pktable),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(42),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(43),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(43) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, PRIMARY KEY(ptest1, ptest2))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: cidr and integer."
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest1, ptest2))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: cidr and integer."
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest2_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest2"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable(ptest1, ptest2))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest2_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest2"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest2, ptest1))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest2"" are of incompatible types: integer and inet."
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable(ptest2, ptest1))",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest1, ptest2))",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3, ptest4) REFERENCES pktable(ptest1, ptest2))",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3, ptest4) REFERENCES pktable)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3, ptest4) REFERENCES pktable(ptest2, ptest1))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_ptest3_ptest4_fkey"" cannot be implemented DETAIL:  Key columns ""ptest3"" and ""ptest2"" are of incompatible types: integer and inet."
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4, ptest3) REFERENCES pktable(ptest1, ptest2))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_ptest4_ptest3_fkey"" cannot be implemented DETAIL:  Key columns ""ptest4"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,"CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4, ptest3) REFERENCES pktable)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_ptest4_ptest3_fkey"" cannot be implemented DETAIL:  Key columns ""ptest4"" and ""ptest1"" are of incompatible types: inet and integer."
postgresql,postgresql,create table pktable_base (base1 int not null),foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable (ptest1 int, primary key(base1), unique(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,SAME,,
postgresql,postgresql,create table fktable (ftest1 int references pktable(base1)),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pktable(base1) values (1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pktable(base1) values (2),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fktable(ftest1) values (3),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(3) is not present in table ""pktable""."
postgresql,postgresql,insert into pktable(base1) values (3),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fktable(ftest1) values (3),foreign_key.sql,SAME,,
postgresql,postgresql,drop table fktable,foreign_key.sql,SAME,,
postgresql,postgresql,"create table fktable (ftest1 int, ftest2 int, foreign key(ftest1, ftest2) references pktable(base1, ptest1))",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable(base1, ptest1) values (1, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable(base1, ptest1) values (2, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into fktable(ftest1, ftest2) values (3, 1)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_ftest2_fkey"" DETAIL:  Key (ftest1, ftest2)=(3, 1) is not present in table ""pktable""."
postgresql,postgresql,"insert into pktable(base1,ptest1) values (3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into fktable(ftest1, ftest2) values (3, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,drop table fktable,foreign_key.sql,SAME,,
postgresql,postgresql,drop table pktable,foreign_key.sql,SAME,,
postgresql,postgresql,drop table pktable_base,foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable_base(base1 int not null, base2 int)",foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable(ptest1 int, ptest2 int, primary key(base1, ptest1), foreign key(base2, ptest2) references                                              pktable(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable (base1, ptest1, base2, ptest2) values (1, 1, 1, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable (base1, ptest1, base2, ptest2) values (2, 1, 1, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable (base1, ptest1, base2, ptest2) values (2, 2, 2, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable (base1, ptest1, base2, ptest2) values (1, 3, 2, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable (base1, ptest1, base2, ptest2) values (2, 3, 3, 2)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""pktable"" violates foreign key constraint ""pktable_base2_ptest2_fkey"" DETAIL:  Key (base2, ptest2)=(3, 2) is not present in table ""pktable""."
postgresql,postgresql,drop table pktable,foreign_key.sql,SAME,,
postgresql,postgresql,drop table pktable_base,foreign_key.sql,SAME,,
postgresql,postgresql,create table pktable_base(base1 int not null),foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable(ptest1 inet, primary key(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,SAME,,
postgresql,postgresql,"create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""base1"" are of incompatible types: cidr and integer."
postgresql,postgresql,"create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable(base1, ptest1))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""base1"" are of incompatible types: cidr and integer."
postgresql,postgresql,"create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest2_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest2"" and ""base1"" are of incompatible types: inet and integer."
postgresql,postgresql,"create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable(base1, ptest1))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest2_ftest1_fkey"" cannot be implemented DETAIL:  Key columns ""ftest2"" and ""base1"" are of incompatible types: inet and integer."
postgresql,postgresql,"create table fktable(ftest1 int, ftest2 inet, foreign key(ftest1, ftest2) references pktable(ptest1, base1))",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""fktable_ftest1_ftest2_fkey"" cannot be implemented DETAIL:  Key columns ""ftest1"" and ""ptest1"" are of incompatible types: integer and inet."
postgresql,postgresql,drop table pktable,foreign_key.sql,SAME,,
postgresql,postgresql,drop table pktable_base,foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable_base(base1 int not null, base2 int)",foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable(ptest1 inet, ptest2 inet[], primary key(base1, ptest1), foreign key(base2, ptest2) references                                              pktable(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_base2_ptest2_fkey"" cannot be implemented DETAIL:  Key columns ""ptest2"" and ""ptest1"" are of incompatible types: inet[] and inet."
postgresql,postgresql,"create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(base2, ptest2) references                                              pktable(ptest1, base1)) inherits (pktable_base)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_base2_ptest2_fkey"" cannot be implemented DETAIL:  Key columns ""base2"" and ""ptest1"" are of incompatible types: integer and inet."
postgresql,postgresql,"create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references                                              pktable(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_ptest2_base2_fkey"" cannot be implemented DETAIL:  Key columns ""ptest2"" and ""base1"" are of incompatible types: inet and integer."
postgresql,postgresql,"create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references                                              pktable(base1, ptest1)) inherits (pktable_base)",foreign_key.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""pktable_ptest2_base2_fkey"" cannot be implemented DETAIL:  Key columns ""ptest2"" and ""base1"" are of incompatible types: inet and integer."
postgresql,postgresql,drop table pktable,foreign_key.sql,DIFFERENT,UndefinedTable,"table ""pktable"" does not exist"
postgresql,postgresql,drop table pktable_base,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pktable ( 	id		INT4 PRIMARY KEY, 	other	INT4 )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fktable ( 	id		INT4 PRIMARY KEY, 	fk		INT4 REFERENCES pktable DEFERRABLE )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (5, 10)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_fk_fkey"" DETAIL:  Key (fk)=(10) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO fktable VALUES (10, 15)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pktable VALUES (15, 0)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE fktable, pktable",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pktable ( 	id		INT4 PRIMARY KEY, 	other	INT4 )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fktable ( 	id		INT4 PRIMARY KEY, 	fk		INT4 REFERENCES pktable DEFERRABLE INITIALLY DEFERRED )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (100, 200)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pktable VALUES (200, 500)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (500, 1000)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_fk_fkey"" DETAIL:  Key (fk)=(1000) is not present in table ""pktable""."
postgresql,postgresql,"DROP TABLE fktable, pktable",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pktable ( 	id		INT4 PRIMARY KEY, 	other	INT4 )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fktable ( 	id		INT4 PRIMARY KEY, 	fk		INT4 REFERENCES pktable DEFERRABLE )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (1000, 2000)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pktable VALUES (2000, 3)",foreign_key.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"DROP TABLE fktable, pktable",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pktable ( 	id		INT4 PRIMARY KEY, 	other	INT4 )",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fktable ( 	id		INT4 PRIMARY KEY, 	fk		INT4 REFERENCES pktable DEFERRABLE INITIALLY DEFERRED )",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (100, 200)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pktable, fktable",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pktable, fktable",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pktable VALUES (5, 10)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (0, 20)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (0, 20)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (0, 20)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (0, 20)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (1, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fktable VALUES (0, 20)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_fk_fkey"" DETAIL:  Key (fk)=(20) is not present in table ""pktable""."
postgresql,postgresql,"INSERT INTO users VALUES (1, 'Jozko')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO users VALUES (2, 'Ferko')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO users VALUES (3, 'Samko')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO tasks VALUES (1,1,NULL,NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO tasks VALUES (2,2,2,NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO tasks VALUES (3,3,3,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into selfref (a, b) values     (0, 0),     (1, 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into defp values (0), (1), (2)",foreign_key.sql,SAME,,
postgresql,postgresql,insert into defc values (2),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pp values(12),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pp values(11),foreign_key.sql,SAME,,
postgresql,postgresql,insert into cc values(13),foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pp, cc",foreign_key.sql,SAME,,
postgresql,postgresql,insert into pp values(12),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pp values(11),foreign_key.sql,SAME,,
postgresql,postgresql,insert into cc values(13),foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pp, cc",foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable2 (a int, b int, c int, d int, e int, primary key (d, e))",foreign_key.sql,SAME,,
postgresql,postgresql,"create table fktable2 (d int, e int, foreign key (d, e) references pktable2)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable2 values (1, 2, 3, 4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into fktable2 values (4, 5)",foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pktable2, fktable2",foreign_key.sql,SAME,,
postgresql,postgresql,create table pktable1 (a int primary key),foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable2 (a int, b int, primary key (a, b))",foreign_key.sql,SAME,,
postgresql,postgresql,"create table fktable2 (   a int,   b int,   very_very_long_column_name_to_exceed_63_characters int,   foreign key (very_very_long_column_name_to_exceed_63_characters) references pktable1,   foreign key (a, very_very_long_column_name_to_exceed_63_characters) references pktable2,   foreign key (a, very_very_long_column_name_to_exceed_63_characters) references pktable2 )",foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pktable1, pktable2, fktable2",foreign_key.sql,SAME,,
postgresql,postgresql,create table pktable2(f1 int primary key),foreign_key.sql,SAME,,
postgresql,postgresql,create table fktable2(f1 int references pktable2 deferrable initially deferred),foreign_key.sql,SAME,,
postgresql,postgresql,insert into pktable2 values(1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fktable2 values(1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fktable2 values(2),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fktable2 values(2),foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pktable2, fktable2",foreign_key.sql,SAME,,
postgresql,postgresql,"create table pktable2 (a float8, b float8, primary key (a, b))",foreign_key.sql,SAME,,
postgresql,postgresql,"create table fktable2 (x float8, y float8, foreign key (x, y) references pktable2 (a, b) on update cascade)",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into pktable2 values ('-0', '-0')",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into fktable2 values ('-0', '-0')",foreign_key.sql,SAME,,
postgresql,postgresql,"drop table pktable2, fktable2",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_notpartitioned_pk (fdrop1 int, a int, fdrop2 int, b int,   PRIMARY KEY (a, b))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk (b int, fdrop1 int, a int) PARTITION BY RANGE (a, b)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_1 (fdrop1 int, fdrop2 int, a int, fdrop3 int, b int)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_2 (b int, fdrop1 int, fdrop2 int, a int)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_3 (fdrop1 int, fdrop2 int, fdrop3 int, fdrop4 int, b int, a int)   PARTITION BY HASH (a)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_3_0 PARTITION OF fk_partitioned_fk_3 FOR VALUES WITH (MODULUS 5, REMAINDER 0)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_3_1 PARTITION OF fk_partitioned_fk_3 FOR VALUES WITH (MODULUS 5, REMAINDER 1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (500, 501)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_1"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(500, 501) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_1 (a,b) VALUES (500, 501)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_1"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(500, 501) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (1500, 1501)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_2"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(1500, 1501) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_2 (a,b) VALUES (1500, 1501)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_2"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(1500, 1501) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (2500, 2502)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3_1"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2500, 2502) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a,b) VALUES (2500, 2502)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3_1"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2500, 2502) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (2501, 2503)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3_0"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2501, 2503) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a,b) VALUES (2501, 2503)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3_0"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2501, 2503) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (500, 501), (1500, 1501),   (2500, 2502), (2501, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (500, 501)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (1500, 1501)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (2500, 2502)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (2501, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk (a,b) VALUES (2502, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE fk_notpartitioned_pk, fk_partitioned_fk",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_notpartitioned_pk (a INT, PRIMARY KEY(a), CHECK (a > 0))",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_partitioned_fk (a INT REFERENCES fk_notpartitioned_pk(a) PRIMARY KEY) PARTITION BY RANGE(a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_partitioned_fk_1 PARTITION OF fk_partitioned_fk FOR VALUES FROM (MINVALUE) TO (MAXVALUE),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk_notpartitioned_pk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk_partitioned_fk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE fk_notpartitioned_pk, fk_partitioned_fk",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_notpartitioned_pk (a int, b int, primary key (a, b))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk (a int default 2501, b int default 142857) PARTITION BY LIST (a)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_1 PARTITION OF fk_partitioned_fk FOR VALUES IN (NULL,500,501,502)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_2 PARTITION OF fk_partitioned_fk FOR VALUES IN (1500,1502)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_3 (a int, b int)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a, b) VALUES (2502, 2503)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2502, 2503) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, 2503)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_3"" violates foreign key constraint ""fk_partitioned_fk_a_b_fkey"" DETAIL:  Key (a, b)=(2502, 2503) is not present in table ""fk_notpartitioned_pk""."
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (2502, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk (a,b) VALUES (NULL, NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (1, 2)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_full (x int, y int) PARTITION BY RANGE (x)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_partitioned_fk_full_1 PARTITION OF fk_partitioned_fk_full DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_full VALUES (1, NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_full VALUES (1, NULL)",foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_partitioned_fk_full_1"" violates foreign key constraint ""fk_partitioned_fk_full_x_y_fkey"" DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values."
postgresql,postgresql,DROP TABLE fk_partitioned_fk_full,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk VALUES (2503, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (2502, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, 2503)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (2501, 142857)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (500, 100000), (2501, 100000)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk VALUES (500, 100000)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk_partitioned_fk_2,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_2 PARTITION OF fk_partitioned_fk FOR VALUES IN (1500,1502)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk_partitioned_fk,foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk_partitioned_fk_2,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_2 (b int, c text, a int, 	FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk ON UPDATE CASCADE ON DELETE CASCADE)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk_partitioned_fk_2,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_4 (a int, b int, FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk(a, b) ON UPDATE CASCADE ON DELETE CASCADE) PARTITION BY RANGE (b, a)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_4_1 PARTITION OF fk_partitioned_fk_4 FOR VALUES FROM (1,1) TO (100,100)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_4_2 (a int, b int, FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk(a, b) ON UPDATE SET NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_5 (a int, b int, 	FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk(a, b) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE, 	FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk(a, b) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE)   PARTITION BY RANGE (a)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_5_1 (a int, b int, FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk_partitioned_fk_2 (a int, b int) PARTITION BY RANGE (b)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_partitioned_fk_2_1 PARTITION OF fk_partitioned_fk_2 FOR VALUES FROM (0) TO (1000),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_partitioned_fk_2_2 PARTITION OF fk_partitioned_fk_2 FOR VALUES FROM (1000) TO (2000),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_partitioned_fk_2 VALUES (1600, 601), (1600, 1601)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk_notpartitioned_pk VALUES (1600, 601), (1600, 1601)",foreign_key.sql,SAME,,
postgresql,postgresql,"create table other_partitioned_fk(a int, b int) partition by list (a)",foreign_key.sql,SAME,,
postgresql,postgresql,create table other_partitioned_fk_1 partition of other_partitioned_fk   for values in (2048),foreign_key.sql,SAME,,
postgresql,postgresql,"insert into other_partitioned_fk   select 2048, x from generate_series(1,10) x",foreign_key.sql,SAME,,
postgresql,postgresql,"insert into fk_notpartitioned_pk (a, b)   select 2048, x from generate_series(1,10) x",foreign_key.sql,SAME,,
postgresql,postgresql,drop table other_partitioned_fk,foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE parted_self_fk (     id bigint NOT NULL PRIMARY KEY,     id_abc bigint,     FOREIGN KEY (id_abc) REFERENCES parted_self_fk(id) ) PARTITION BY RANGE (id)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part1_self_fk (     id bigint NOT NULL PRIMARY KEY,     id_abc bigint )",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE part2_self_fk PARTITION OF parted_self_fk FOR VALUES FROM (10) TO (20),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part3_self_fk (	 	id bigint NOT NULL PRIMARY KEY, 	id_abc bigint ) PARTITION BY RANGE (id)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE part32_self_fk PARTITION OF part3_self_fk FOR VALUES FROM (20) TO (30),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part33_self_fk ( 	id bigint NOT NULL PRIMARY KEY, 	id_abc bigint )",foreign_key.sql,SAME,,
postgresql,postgresql,"create schema fkpart0   create table pkey (a int primary key)   create table fk_part (a int) partition by list (a)   create table fk_part_1 partition of fk_part       (foreign key (a) references fkpart0.pkey) for values in (1)   create table fk_part_23 partition of fk_part       (foreign key (a) references fkpart0.pkey) for values in (2, 3)       partition by list (a)   create table fk_part_23_2 partition of fk_part_23 for values in (2)",foreign_key.sql,SAME,,
postgresql,postgresql,create table fkpart0.fk_part_4 partition of fkpart0.fk_part for values in (4),foreign_key.sql,SAME,,
postgresql,postgresql,"create table fkpart0.fk_part_56 partition of fkpart0.fk_part     for values in (5,6) partition by list (a)",foreign_key.sql,SAME,,
postgresql,postgresql,create table fkpart0.fk_part_56_5 partition of fkpart0.fk_part_56     for values in (5),foreign_key.sql,SAME,,
postgresql,postgresql,create schema fkpart1   create table pkey (a int primary key)   create table fk_part (a int) partition by list (a)   create table fk_part_1 partition of fk_part for values in (1) partition by list (a)   create table fk_part_1_1 partition of fk_part_1 for values in (1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fkpart1.fk_part values (1),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_part_1_1"" violates foreign key constraint ""fk_part_a_fkey"" DETAIL:  Key (a)=(1) is not present in table ""pkey""."
postgresql,postgresql,insert into fkpart1.pkey values (1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fkpart1.fk_part values (1),foreign_key.sql,SAME,,
postgresql,postgresql,create table fkpart1.fk_part_1_2 partition of fkpart1.fk_part_1 for values in (2),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fkpart1.fk_part_1 values (2),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk_part_1_2"" violates foreign key constraint ""fk_part_a_fkey"" DETAIL:  Key (a)=(2) is not present in table ""pkey""."
postgresql,postgresql,"create schema fkpart2   create table pkey (a int primary key)   create table fk_part (a int, constraint fkey foreign key (a) references fkpart2.pkey) partition by list (a)   create table fk_part_1 partition of fkpart2.fk_part for values in (1) partition by list (a)   create table fk_part_1_1 (a int, constraint my_fkey foreign key (a) references fkpart2.pkey)",foreign_key.sql,SAME,,
postgresql,postgresql,"create schema fkpart3   create table pkey (a int primary key)   create table fk_part (a int, constraint fkey foreign key (a) references fkpart3.pkey deferrable initially immediate) partition by list (a)   create table fk_part_1 partition of fkpart3.fk_part for values in (1) partition by list (a)   create table fk_part_1_1 partition of fkpart3.fk_part_1 for values in (1)   create table fk_part_2 partition of fkpart3.fk_part for values in (2)",foreign_key.sql,SAME,,
postgresql,postgresql,insert into fkpart3.fk_part values (1),foreign_key.sql,SAME,,
postgresql,postgresql,insert into fkpart3.pkey values (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk (a int PRIMARY KEY) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk1 PARTITION OF pk FOR VALUES FROM (0) TO (1000),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pk2 (b int, a int)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (0) TO (750),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk2 (b int, a int)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk3 PARTITION OF pk FOR VALUES FROM (2000) TO (3000),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk4 (LIKE pk),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pk5 (c int, b int, a int NOT NULL) PARTITION BY RANGE (a)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk51 PARTITION OF pk5 FOR VALUES FROM (4000) TO (4500),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk52 PARTITION OF pk5 FOR VALUES FROM (4500) TO (5000),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk3 PARTITION OF fk FOR VALUES FROM (3500) TO (5000),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT into fk VALUES (1),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk1"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(1) is not present in table ""pk""."
postgresql,postgresql,INSERT into fk VALUES (1000),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk2"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(1000) is not present in table ""pk""."
postgresql,postgresql,INSERT into fk VALUES (2000),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk2"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(2000) is not present in table ""pk""."
postgresql,postgresql,INSERT into fk VALUES (3000),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk2"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(3000) is not present in table ""pk""."
postgresql,postgresql,INSERT into fk VALUES (4000),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk3"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(4000) is not present in table ""pk""."
postgresql,postgresql,INSERT into fk VALUES (4500),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk3"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(4500) is not present in table ""pk""."
postgresql,postgresql,"INSERT into pk VALUES (1), (1000), (2000), (3000), (4000), (4500)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT into fk VALUES (1), (1000), (2000), (3000), (4000), (4500)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk (a int PRIMARY KEY) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk1 PARTITION OF droppk FOR VALUES FROM (0) TO (1000),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk_d PARTITION OF droppk DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk2 PARTITION OF droppk FOR VALUES FROM (1000) TO (2000)   PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk21 PARTITION OF droppk2 FOR VALUES FROM (1000) TO (1400),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE droppk2_d PARTITION OF droppk2 DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT into droppk VALUES (1), (1000), (1500), (2000)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE dropfk (a int REFERENCES droppk),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT into dropfk VALUES (1), (1000), (1500), (2000)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE droppk_d,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk_d because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk_d HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk2_d,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk2_d because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2_d HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk1,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk1 because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk1 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk2,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk2 because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk21,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk21 because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk21 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk_d,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk_d because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk_d HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk2_d,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk2_d because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2_d HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk1,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk1 because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk1 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE droppk2,foreign_key.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table droppk2 because other objects depend on it DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,CREATE TABLE pk (a int PRIMARY KEY) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk1 PARTITION OF pk FOR VALUES IN (1) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk11 PARTITION OF pk1 FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES IN (1) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk2 PARTITION OF pk FOR VALUES IN (2),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk3 (a int NOT NULL) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk31 PARTITION OF pk3 FOR VALUES IN (31),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pk32 (b int, a int NOT NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk2 PARTITION OF fk FOR VALUES IN (2),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk3 (b int, a int)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk4 (LIKE fk),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk4 VALUES (50),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk (a int PRIMARY KEY) PARTITION BY LIST (a),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pk1 PARTITION OF pk FOR VALUES IN (1, 2) PARTITION BY LIST (a)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk11 PARTITION OF pk1 FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk3 PARTITION OF pk FOR VALUES IN (3),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int REFERENCES pk DEFERRABLE INITIALLY IMMEDIATE),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk VALUES (1),foreign_key.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fk"" violates foreign key constraint ""fk_a_fkey"" DETAIL:  Key (a)=(1) is not present in table ""pk""."
postgresql,postgresql,INSERT INTO fk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO pk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pt(f1 int, f2 int, f3 int, PRIMARY KEY(f1,f2))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref(f1 int, f2 int, f3 int)   PARTITION BY list(f1)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref1 PARTITION OF ref FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref2 PARTITION OF ref FOR VALUES in (2),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pt VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pt, ref",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pt(f1 int, f2 int, f3 int, PRIMARY KEY(f1,f2))",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref(f1 int, f2 int, f3 int)   PARTITION BY list(f1)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref1_2 PARTITION OF ref FOR VALUES IN (1, 2) PARTITION BY list (f2)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref1 PARTITION OF ref1_2 FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref2 PARTITION OF ref1_2 FOR VALUES IN (2) PARTITION BY list (f2),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref22 PARTITION OF ref2 FOR VALUES IN (2),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pt VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pt, ref",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pt(f1 int, f2 int, f3 int, PRIMARY KEY(f1,f2))   PARTITION BY LIST(f1)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt1 PARTITION OF pt FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt2 PARTITION OF pt FOR VALUES IN (2),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref(f1 int, f2 int, f3 int)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pt VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pt, ref",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pt(f1 int, f2 int, f3 int, PRIMARY KEY(f1,f2))   PARTITION BY LIST(f1)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pt1_2 PARTITION OF pt FOR VALUES IN (1, 2) PARTITION BY LIST (f1)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt1 PARTITION OF pt1_2 FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt2 PARTITION OF pt1_2 FOR VALUES IN (2),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ref(f1 int, f2 int, f3 int)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pt VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref VALUES(1,2,3)",foreign_key.sql,SAME,,
postgresql,postgresql,"DROP TABLE pt, ref",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk (a int PRIMARY KEY) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk1 PARTITION OF pk FOR VALUES FROM (1) TO (100) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk11 PARTITION OF pk1 FOR VALUES FROM (1) TO (50),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE pk12 PARTITION OF pk1 FOR VALUES FROM (50) TO (100),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (1) TO (100) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_d PARTITION OF fk DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO pk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fk VALUES (1),foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pk VALUES (20), (50)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (1) TO (100) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_d PARTITION OF fk DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk VALUES (20), (50)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pk VALUES (20), (30), (50)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fk (id int, a int DEFAULT 50) PARTITION BY RANGE (a)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (1) TO (100) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_d PARTITION OF fk DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk VALUES (1, 20), (2, 30)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO pk VALUES (20), (30)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk (a int DEFAULT 50) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (1) TO (100) PARTITION BY RANGE (a),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fk_d PARTITION OF fk DEFAULT,foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fk VALUES (20), (30)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fk,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE SCHEMA fkpart7   CREATE TABLE pkpart (a int) PARTITION BY LIST (a)   CREATE TABLE pkpart1 PARTITION OF pkpart FOR VALUES IN (1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fkpart7.fk (a int REFERENCES fkpart7.pkpart),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE SCHEMA fkpart8   CREATE TABLE tbl1(f1 int PRIMARY KEY)   CREATE TABLE tbl2(f1 int REFERENCES tbl1 DEFERRABLE INITIALLY DEFERRED) PARTITION BY RANGE(f1)   CREATE TABLE tbl2_p1 PARTITION OF tbl2 FOR VALUES FROM (minvalue) TO (maxvalue),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart8.tbl1 VALUES(1),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart8.tbl2 VALUES(1),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE SCHEMA fkpart9   CREATE TABLE pk (a INT PRIMARY KEY) PARTITION BY RANGE (a)   CREATE TABLE fk (     fk_a INT REFERENCES pk(a) ON DELETE CASCADE   )   CREATE TABLE pk1 PARTITION OF pk FOR VALUES FROM (30) TO (50) PARTITION BY RANGE (a)   CREATE TABLE pk11 PARTITION OF pk1 FOR VALUES FROM (30) TO (40),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart9.pk VALUES (35),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart9.fk VALUES (35),foreign_key.sql,SAME,,
postgresql,postgresql,CREATE SCHEMA fkpart10   CREATE TABLE tbl1(f1 int PRIMARY KEY) PARTITION BY RANGE(f1)   CREATE TABLE tbl1_p1 PARTITION OF tbl1 FOR VALUES FROM (minvalue) TO (1)   CREATE TABLE tbl1_p2 PARTITION OF tbl1 FOR VALUES FROM (1) TO (maxvalue)   CREATE TABLE tbl2(f1 int REFERENCES tbl1 DEFERRABLE INITIALLY DEFERRED)   CREATE TABLE tbl3(f1 int PRIMARY KEY) PARTITION BY RANGE(f1)   CREATE TABLE tbl3_p1 PARTITION OF tbl3 FOR VALUES FROM (minvalue) TO (1)   CREATE TABLE tbl3_p2 PARTITION OF tbl3 FOR VALUES FROM (1) TO (maxvalue)   CREATE TABLE tbl4(f1 int REFERENCES tbl3 DEFERRABLE INITIALLY DEFERRED),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl1 VALUES (0), (1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl2 VALUES (0), (1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl3 VALUES (-2), (-1), (0)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl4 VALUES (-2), (-1)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl1 VALUES (0), (1)",foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart10.tbl1 VALUES (4),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart10.tbl1 VALUES (0),foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart10.tbl1 VALUES (0),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl3 VALUES (-2), (-1)",foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE fkpart10.tbl5(f1 int REFERENCES fkpart10.tbl3),foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart10.tbl5 VALUES (-2), (-1)",foreign_key.sql,SAME,,
postgresql,postgresql,INSERT INTO fkpart10.tbl5 VALUES (0),foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE SCHEMA fkpart11   CREATE TABLE pk (a INT PRIMARY KEY, b text) PARTITION BY LIST (a)   CREATE TABLE fk (     a INT,     CONSTRAINT fkey FOREIGN KEY (a) REFERENCES pk(a) ON UPDATE CASCADE ON DELETE CASCADE   )   CREATE TABLE fk_parted (     a INT PRIMARY KEY,     CONSTRAINT fkey FOREIGN KEY (a) REFERENCES pk(a) ON UPDATE CASCADE ON DELETE CASCADE   ) PARTITION BY LIST (a)   CREATE TABLE fk_another (     a INT,     CONSTRAINT fkey FOREIGN KEY (a) REFERENCES fk_parted (a) ON UPDATE CASCADE ON DELETE CASCADE   )   CREATE TABLE pk1 PARTITION OF pk FOR VALUES IN (1, 2) PARTITION BY LIST (a)   CREATE TABLE pk2 PARTITION OF pk FOR VALUES IN (3)   CREATE TABLE pk3 PARTITION OF pk FOR VALUES IN (4)   CREATE TABLE fk1 PARTITION OF fk_parted FOR VALUES IN (1, 2)   CREATE TABLE fk2 PARTITION OF fk_parted FOR VALUES IN (3)   CREATE TABLE fk3 PARTITION OF fk_parted FOR VALUES IN (4)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fkpart11.pk11 (b text, a int NOT NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fkpart11.pk12 (b text, c int, a int NOT NULL)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart11.pk VALUES (1, 'xxx'), (3, 'yyy')",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart11.fk VALUES (1), (3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart11.fk_parted VALUES (1), (3)",foreign_key.sql,SAME,,
postgresql,postgresql,"INSERT INTO fkpart11.fk_another VALUES (1), (3)",foreign_key.sql,SAME,,
postgresql,postgresql,DROP TABLE fkpart11.fk,foreign_key.sql,SAME,,
postgresql,postgresql,CREATE TABLE vactst (i INT),vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst VALUES (1),vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst VALUES (0),vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst SELECT * FROM vactst,vacuum.sql,SAME,,
postgresql,postgresql,INSERT INTO vactst VALUES (0),vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vaccluster (i INT PRIMARY KEY),vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vaccluster VALUES (1), (2)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vactst SELECT generate_series(1, 300)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vactst SELECT generate_series(301, 400)",vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pvactst (i INT, a INT[], p POINT) with (autovacuum_enabled = off)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO pvactst SELECT i, array[1,2,3], point(i, i+1) FROM generate_series(1,1000) i",vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE pvactst,vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE no_index_cleanup (i INT PRIMARY KEY, t TEXT)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO no_index_cleanup(i, t) VALUES (generate_series(1,30),     repeat('1234567890',269))",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO no_index_cleanup(i, t) VALUES (generate_series(31,60),     repeat('1234567890',269))",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vac_truncate_test VALUES (1, NULL), (NULL, NULL)",vacuum.sql,DIFFERENT,NotNullViolation,"null value in column ""i"" of relation ""vac_truncate_test"" violates not-null constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,DROP TABLE vac_truncate_test,vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE vacparted (a int, b char) PARTITION BY LIST (a)",vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vacparted1 PARTITION OF vacparted FOR VALUES IN (1),vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vacparted VALUES (1, 'a')",vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE vacparted_i (a int primary key, b varchar(100))   PARTITION BY HASH (a)",vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE vacparted_i1 PARTITION OF vacparted_i   FOR VALUES WITH (MODULUS 2, REMAINDER 0)",vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE vacparted_i2 PARTITION OF vacparted_i   FOR VALUES WITH (MODULUS 2, REMAINDER 1)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vacparted_i SELECT i, 'test_'|| i from generate_series(1,10) i",vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vacparted_i,vacuum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE vac_option_tab (a INT, t TEXT)",vacuum.sql,SAME,,
postgresql,postgresql,"INSERT INTO vac_option_tab SELECT a, 't' || a FROM generate_series(1, 10) AS a",vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vac_option_tab,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vaccluster,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vactst,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vacparted,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE no_index_cleanup,vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vacowned (a int),vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vacowned_parted (a int) PARTITION BY LIST (a),vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vacowned_part1 PARTITION OF vacowned_parted FOR VALUES IN (1),vacuum.sql,SAME,,
postgresql,postgresql,CREATE TABLE vacowned_part2 PARTITION OF vacowned_parted FOR VALUES IN (2),vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vacowned,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE vacowned_parted,vacuum.sql,SAME,,
postgresql,postgresql,DROP TABLE test_exists,drop_if_exists.sql,DIFFERENT,UndefinedTable,"table ""test_exists"" does not exist"
postgresql,postgresql,DROP TABLE IF EXISTS test_exists,drop_if_exists.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_exists (a int, b text)",drop_if_exists.sql,SAME,,
postgresql,postgresql,"CREATE RULE test_rule_exists AS ON INSERT TO test_exists     DO INSTEAD     INSERT INTO test_exists VALUES (NEW.a, NEW.b || NEW.a::text)",drop_if_exists.sql,SAME,,
postgresql,postgresql,DROP TABLE IF EXISTS test_exists,drop_if_exists.sql,SAME,,
postgresql,postgresql,DROP TABLE test_exists,drop_if_exists.sql,DIFFERENT,UndefinedTable,"table ""test_exists"" does not exist"
postgresql,postgresql,DROP TABLE IF EXISTS no_such_schema.foo,drop_if_exists.sql,SAME,,
postgresql,postgresql,"SET DateStyle = 'Postgres, MDY';  SHOW TimeZone;    SELECT timestamp with time zone '20011227 040506+08'; SELECT timestamp with time zone '20011227 040506-08'; SELECT timestamp with time zone '20011227 040506.789+08'; SELECT timestamp with time zone '20011227 040506.789-08'; SELECT timestamp with time zone '20011227T040506+08'; SELECT timestamp with time zone '20011227T040506-08'; SELECT timestamp with time zone '20011227T040506.789+08'; SELECT timestamp with time zone '20011227T040506.789-08'; SELECT timestamp with time zone '2001-12-27 04:05:06.789-08'; SELECT timestamp with time zone '2001.12.27 04:05:06.789-08'; SELECT timestamp with time zone '2001/12/27 04:05:06.789-08'; SELECT timestamp with time zone '12/27/2001 04:05:06.789-08'; SELECT timestamp with time zone '2001-12-27 04:05:06.789 MET DST'; SELECT timestamp with time zone '2001-12-27 allballs'; SELECT timestamp with time zone '27/12/2001 04:05:06.789-08'; set datestyle to dmy; SELECT timestamp with time zone '27/12/2001 04:05:06.789-08'; reset datestyle; SELECT timestamp with time zone 'J2452271+08'; SELECT timestamp with time zone 'J2452271-08'; SELECT timestamp with time zone 'J2452271.5+08'; SELECT timestamp with time zone 'J2452271.5-08'; SELECT timestamp with time zone 'J2452271 04:05:06+08'; SELECT timestamp with time zone 'J2452271 04:05:06-08'; SELECT timestamp with time zone 'J2452271T040506+08'; SELECT timestamp with time zone 'J2452271T040506-08'; SELECT timestamp with time zone 'J2452271T040506.789+08'; SELECT timestamp with time zone 'J2452271T040506.789-08'; SELECT timestamp with time zone '12.27.2001 04:05:06.789+08'; SELECT timestamp with time zone '12.27.2001 04:05:06.789-08'; SET DateStyle = 'German'; SELECT timestamp with time zone '27.12.2001 04:05:06.789+08'; SELECT timestamp with time zone '27.12.2001 04:05:06.789-08'; SET DateStyle = 'ISO'; SELECT time without time zone '040506.789+08'; SELECT time without time zone '040506.789-08'; SELECT time without time zone 'T040506.789+08'; SELECT time without time zone 'T040506.789-08'; SELECT time with time zone '040506.789+08'; SELECT time with time zone '040506.789-08'; SELECT time with time zone 'T040506.789+08'; SELECT time with time zone 'T040506.789-08'; SELECT time with time zone 'T040506.789 +08'; SELECT time with time zone 'T040506.789 -08'; SELECT time with time zone 'T040506.789 America/Los_Angeles'; SELECT time with time zone '2001-12-27 T040506.789 America/Los_Angeles'; SELECT time with time zone 'J2452271 T040506.789 America/Los_Angeles'; SET DateStyle = 'Postgres, MDY'; SELECT date 'J1520447' AS ""Confucius' Birthday""; SELECT date 'J0' AS ""Julian Epoch"";  SELECT date '1995-08-06  J J J'; SELECT date 'J J 1520447';  SELECT timestamp with time zone 'Y2001M12D27H04M05S06.789+08'; SELECT timestamp with time zone 'Y2001M12D27H04MM05S06.789-08';  SELECT date '1995-08-06 epoch'; SELECT date '1995-08-06 infinity'; SELECT date '1995-08-06 -infinity'; SELECT date 'today infinity'; SELECT date '-infinity infinity'; SELECT timestamp '1995-08-06 epoch'; SELECT timestamp '1995-08-06 infinity'; SELECT timestamp '1995-08-06 -infinity'; SELECT timestamp 'epoch 01:01:01'; SELECT timestamp 'infinity 01:01:01'; SELECT timestamp '-infinity 01:01:01'; SELECT timestamp 'now epoch'; SELECT timestamp '-infinity infinity'; SELECT timestamptz '1995-08-06 epoch'; SELECT timestamptz '1995-08-06 infinity'; SELECT timestamptz '1995-08-06 -infinity'; SELECT timestamptz 'epoch 01:01:01'; SELECT timestamptz 'infinity 01:01:01'; SELECT timestamptz '-infinity 01:01:01'; SELECT timestamptz 'now epoch'; SELECT timestamptz '-infinity infinity';   SELECT date '1981-02-03' + time '04:05:06' AS ""Date + Time""; SELECT date '1991-02-03' + time with time zone '04:05:06 PST' AS ""Date + Time PST""; SELECT date '2001-02-03' + time with time zone '04:05:06 UTC' AS ""Date + Time UTC""; SELECT date '1991-02-03' + interval '2 years' AS ""Add Two Years""; SELECT date '2001-12-13' - interval '2 years' AS ""Subtract Two Years""; SELECT date '1991-02-03' - time '04:05:06' AS ""Subtract Time""; SELECT date '1991-02-03' - time with time zone '04:05:06 UTC' AS ""Subtract Time UTC"";   SELECT timestamp without time zone '1996-03-01' - interval '1 second' AS ""Feb 29""; SELECT timestamp without time zone '1999-03-01' - interval '1 second' AS ""Feb 28""; SELECT timestamp without time zone '2000-03-01' - interval '1 second' AS ""Feb 29""; SELECT timestamp without time zone '1999-12-01' + interval '1 month - 1 second' AS ""Dec 31""; SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '106000000 days' AS ""Feb 23, 285506""; SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '107000000 days' AS ""Jan 20, 288244""; SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '109203489 days' AS ""Dec 31, 294276""; SELECT timestamp without time zone '2000-01-01' - interval '2483590 days' AS ""out of range""; SELECT timestamp without time zone '12/31/294276' - timestamp without time zone '12/23/1999' AS ""106751991 Days"";  SELECT (timestamp without time zone 'today' = (timestamp without time zone 'yesterday' + interval '1 day')) as ""True""; SELECT (timestamp without time zone 'today' = (timestamp without time zone 'tomorrow' - interval '1 day')) as ""True""; SELECT (timestamp without time zone 'today 10:30' = (timestamp without time zone 'yesterday' + interval '1 day 10 hr 30 min')) as ""True""; SELECT (timestamp without time zone '10:30 today' = (timestamp without time zone 'yesterday' + interval '1 day 10 hr 30 min')) as ""True""; SELECT (timestamp without time zone 'tomorrow' = (timestamp without time zone 'yesterday' + interval '2 days')) as ""True""; SELECT (timestamp without time zone 'tomorrow 16:00:00' = (timestamp without time zone 'today' + interval '1 day 16 hours')) as ""True""; SELECT (timestamp without time zone '16:00:00 tomorrow' = (timestamp without time zone 'today' + interval '1 day 16 hours')) as ""True""; SELECT (timestamp without time zone 'yesterday 12:34:56' = (timestamp without time zone 'tomorrow' - interval '2 days - 12:34:56')) as ""True""; SELECT (timestamp without time zone '12:34:56 yesterday' = (timestamp without time zone 'tomorrow' - interval '2 days - 12:34:56')) as ""True""; SELECT (timestamp without time zone 'tomorrow' > 'now') as ""True"";  SELECT date '1994-01-01' + time '11:00' AS ""Jan_01_1994_11am""; SELECT date '1994-01-01' + time '10:00' AS ""Jan_01_1994_10am""; SELECT date '1994-01-01' + timetz '11:00-5' AS ""Jan_01_1994_8am""; SELECT timestamptz(date '1994-01-01', time with time zone '11:00-5') AS ""Jan_01_1994_8am"";  SELECT d1 + interval '1 year' AS one_year FROM TIMESTAMP_TBL; SELECT d1 - interval '1 year' AS one_year FROM TIMESTAMP_TBL;  SELECT timestamp with time zone '1996-03-01' - interval '1 second' AS ""Feb 29""; SELECT timestamp with time zone '1999-03-01' - interval '1 second' AS ""Feb 28""; SELECT timestamp with time zone '2000-03-01' - interval '1 second' AS ""Feb 29""; SELECT timestamp with time zone '1999-12-01' + interval '1 month - 1 second' AS ""Dec 31""; SELECT timestamp with time zone '2000-01-01' - interval '2483590 days' AS ""out of range"";  SELECT (timestamp with time zone 'today' = (timestamp with time zone 'yesterday' + interval '1 day')) as ""True""; SELECT (timestamp with time zone 'today' = (timestamp with time zone 'tomorrow' - interval '1 day')) as ""True""; SELECT (timestamp with time zone 'tomorrow' = (timestamp with time zone 'yesterday' + interval '2 days')) as ""True""; SELECT (timestamp with time zone 'tomorrow' > 'now') as ""True"";  SET TIME ZONE 'CST7CDT,M4.1.0,M10.5.0'; SELECT timestamp with time zone '2005-04-02 12:00-07' + interval '1 day' as ""Apr 3, 12:00""; SELECT timestamp with time zone '2005-04-02 12:00-07' + interval '24 hours' as ""Apr 3, 13:00""; SELECT timestamp with time zone '2005-04-03 12:00-06' - interval '1 day' as ""Apr 2, 12:00""; SELECT timestamp with time zone '2005-04-03 12:00-06' - interval '24 hours' as ""Apr 2, 11:00""; RESET TIME ZONE;   SELECT timestamptz(date '1994-01-01', time '11:00') AS ""Jan_01_1994_10am""; SELECT timestamptz(date '1994-01-01', time '10:00') AS ""Jan_01_1994_9am""; SELECT timestamptz(date '1994-01-01', time with time zone '11:00-8') AS ""Jan_01_1994_11am""; SELECT timestamptz(date '1994-01-01', time with time zone '10:00-8') AS ""Jan_01_1994_10am""; SELECT timestamptz(date '1994-01-01', time with time zone '11:00-5') AS ""Jan_01_1994_8am"";  SELECT d1 + interval '1 year' AS one_year FROM TIMESTAMPTZ_TBL; SELECT d1 - interval '1 year' AS one_year FROM TIMESTAMPTZ_TBL;   SELECT CAST(time '01:02' AS interval) AS ""+01:02""; SELECT CAST(interval '02:03' AS time) AS ""02:03:00""; SELECT CAST(interval '-02:03' AS time) AS ""21:57:00""; SELECT CAST(interval '-9223372022400000000 us' AS time) AS ""00:00:00""; SELECT time '01:30' + interval '02:01' AS ""03:31:00""; SELECT time '01:30' - interval '02:01' AS ""23:29:00""; SELECT time '02:30' + interval '36:01' AS ""14:31:00""; SELECT time '03:30' + interval '1 month 04:01' AS ""07:31:00""; SELECT CAST(time with time zone '01:02-08' AS interval) AS ""+00:01""; SELECT CAST(interval '02:03' AS time with time zone) AS ""02:03:00-08""; SELECT time with time zone '01:30-08' - interval '02:01' AS ""23:29:00-08""; SELECT time with time zone '02:30-08' + interval '36:01' AS ""14:31:00-08"";   SELECT CAST(CAST(date 'today' + time with time zone '05:30'             + interval '02:01' AS time with time zone) AS time) AS ""07:31:00"";  SELECT CAST(cast(date 'today' + time with time zone '03:30'   + interval '1 month 04:01' as timestamp without time zone) AS time) AS ""07:31:00"";  SELECT t.d1 AS t, i.f1 AS i, t.d1 + i.f1 AS ""add"", t.d1 - i.f1 AS ""subtract""   FROM TIMESTAMP_TBL t, INTERVAL_TBL i   WHERE t.d1 BETWEEN '1990-01-01' AND '2001-01-01'     AND i.f1 BETWEEN '00:00' AND '23:00'   ORDER BY 1,2;  SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS ""add"", t.f1 - i.f1 AS ""subtract""   FROM TIME_TBL t, INTERVAL_TBL i   WHERE isfinite(i.f1)   ORDER BY 1,2;  SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS ""add"", t.f1 - i.f1 AS ""subtract""   FROM TIMETZ_TBL t, INTERVAL_TBL i   WHERE isfinite(i.f1)   ORDER BY 1,2;  SELECT (timestamp with time zone '2000-11-27', timestamp with time zone '2000-11-28')   OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS ""True"";  SELECT (timestamp with time zone '2000-11-26', timestamp with time zone '2000-11-27')   OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS ""False"";  SELECT (timestamp with time zone '2000-11-27', timestamp with time zone '2000-11-28')   OVERLAPS (timestamp with time zone '2000-11-27 12:00', interval '1 day') AS ""True"";  SELECT (timestamp with time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS ""False"";  SELECT (timestamp with time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp with time zone '2000-11-27', interval '12 hours') AS ""True"";  SELECT (timestamp with time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp with time zone '2000-11-27 12:00', interval '12 hours') AS ""False"";  SELECT (timestamp without time zone '2000-11-27', timestamp without time zone '2000-11-28')   OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS ""True"";  SELECT (timestamp without time zone '2000-11-26', timestamp without time zone '2000-11-27')   OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS ""False"";  SELECT (timestamp without time zone '2000-11-27', timestamp without time zone '2000-11-28')   OVERLAPS (timestamp without time zone '2000-11-27 12:00', interval '1 day') AS ""True"";  SELECT (timestamp without time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS ""False"";  SELECT (timestamp without time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp without time zone '2000-11-27', interval '12 hours') AS ""True"";  SELECT (timestamp without time zone '2000-11-27', interval '12 hours')   OVERLAPS (timestamp without time zone '2000-11-27 12:00', interval '12 hours') AS ""False"";  SELECT (time '00:00', time '01:00')   OVERLAPS (time '00:30', time '01:30') AS ""True"";  SELECT (time '00:00', interval '1 hour')   OVERLAPS (time '00:30', interval '1 hour') AS ""True"";  SELECT (time '00:00', interval '1 hour')   OVERLAPS (time '01:30', interval '1 hour') AS ""False"";  SELECT (time '00:00', interval '1 hour')   OVERLAPS (time '01:30', interval '1 day') AS ""False"";  CREATE TABLE TEMP_TIMESTAMP (f1 timestamp with time zone);   INSERT INTO TEMP_TIMESTAMP (f1)   SELECT d1 FROM TIMESTAMP_TBL   WHERE d1 BETWEEN '13-jun-1957' AND '1-jan-1997'    OR d1 BETWEEN '1-jan-1999' AND '1-jan-2010';  SELECT f1 AS ""timestamp""   FROM TEMP_TIMESTAMP   ORDER BY ""timestamp"";  SELECT d.f1 AS ""timestamp"", t.f1 AS ""interval"", d.f1 + t.f1 AS plus   FROM TEMP_TIMESTAMP d, INTERVAL_TBL t   ORDER BY plus, ""timestamp"", ""interval"";  SELECT d.f1 AS ""timestamp"", t.f1 AS ""interval"", d.f1 - t.f1 AS minus   FROM TEMP_TIMESTAMP d, INTERVAL_TBL t   ORDER BY minus, ""timestamp"", ""interval"";  SELECT d.f1 AS ""timestamp"",    timestamp with time zone '1980-01-06 00:00 GMT' AS gpstime_zero,    d.f1 - timestamp with time zone '1980-01-06 00:00 GMT' AS difference   FROM TEMP_TIMESTAMP d   ORDER BY difference;  SELECT d1.f1 AS timestamp1, d2.f1 AS timestamp2, d1.f1 - d2.f1 AS difference   FROM TEMP_TIMESTAMP d1, TEMP_TIMESTAMP d2   ORDER BY timestamp1, timestamp2, difference;   SELECT f1 AS ""timestamp"", date(f1) AS date   FROM TEMP_TIMESTAMP   WHERE f1 <> timestamp 'now'   ORDER BY date, ""timestamp"";  DROP TABLE TEMP_TIMESTAMP;   SELECT '2202020-10-05'::date::timestamp;   SELECT '2202020-10-05'::date > '2020-10-05'::timestamp as t; SELECT '2020-10-05'::timestamp > '2202020-10-05'::date as f;  SELECT '2202020-10-05'::date::timestamptz;   SELECT '2202020-10-05'::date > '2020-10-05'::timestamptz as t; SELECT '2020-10-05'::timestamptz > '2202020-10-05'::date as f;  SELECT '4714-11-24 BC'::date::timestamptz; SET TimeZone = 'UTC-2'; SELECT '4714-11-24 BC'::date::timestamptz;    SELECT '4714-11-24 BC'::date < '2020-10-05'::timestamptz as t; SELECT '2020-10-05'::timestamptz >= '4714-11-24 BC'::date as t;  SELECT '4714-11-24 BC'::timestamp < '2020-10-05'::timestamptz as t; SELECT '2020-10-05'::timestamptz >= '4714-11-24 BC'::timestamp as t;  RESET TimeZone;   explain (costs off) select count(*) from date_tbl   where f1 between '1997-01-01' and '1998-01-01'; select count(*) from date_tbl   where f1 between '1997-01-01' and '1998-01-01';  explain (costs off) select count(*) from date_tbl   where f1 not between '1997-01-01' and '1998-01-01'; select count(*) from date_tbl   where f1 not between '1997-01-01' and '1998-01-01';  explain (costs off) select count(*) from date_tbl   where f1 between symmetric '1997-01-01' and '1998-01-01'; select count(*) from date_tbl   where f1 between symmetric '1997-01-01' and '1998-01-01';  explain (costs off) select count(*) from date_tbl   where f1 not between symmetric '1997-01-01' and '1998-01-01'; select count(*) from date_tbl   where f1 not between symmetric '1997-01-01' and '1998-01-01';   SET DateStyle TO 'US,Postgres';  SHOW DateStyle;  SELECT d1 AS us_postgres FROM TIMESTAMP_TBL;  SET DateStyle TO 'US,ISO';  SELECT d1 AS us_iso FROM TIMESTAMP_TBL;  SET DateStyle TO 'US,SQL';  SHOW DateStyle;  SELECT d1 AS us_sql FROM TIMESTAMP_TBL;  SET DateStyle TO 'European,Postgres';  SHOW DateStyle;  INSERT INTO TIMESTAMP_TBL VALUES('13/06/1957');  SELECT count(*) as one FROM TIMESTAMP_TBL WHERE d1 = 'Jun 13 1957';  SELECT d1 AS european_postgres FROM TIMESTAMP_TBL;  SET DateStyle TO 'European,ISO';  SHOW DateStyle;  SELECT d1 AS european_iso FROM TIMESTAMP_TBL;  SET DateStyle TO 'European,SQL';  SHOW DateStyle;  SELECT d1 AS european_sql FROM TIMESTAMP_TBL;  RESET DateStyle;   SELECT to_timestamp('0097/Feb/16   SELECT to_timestamp('97/2/16 8:14:30', 'FMYYYY/FMMM/FMDD FMHH:FMMI:FMSS')",horology.sql,DIFFERENT,SyntaxError,"syntax error at or near ""97"" LINE 364: SELECT to_timestamp('97/2/16 8:14:30', 'FMYYYY/FMMM/FMDD FMH..."
postgresql,postgresql,"select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, 'Hello')",text.sql,SAME,,
postgresql,postgresql,"select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, NULL)",text.sql,SAME,,
postgresql,postgresql,"select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', NULL, 'Hello')",text.sql,SAME,,
postgresql,postgresql,"select format('INSERT INTO %I VALUES(%L,%L)', NULL, 10, 'Hello')",text.sql,DIFFERENT,NullValueNotAllowed,null values cannot be formatted as an SQL identifier
postgresql,postgresql,explain (costs off) create table parallel_write as     select length(stringu1) from tenk1 group by length(stringu1),write_parallel.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 2:     select length(stringu1) from tenk1 group by length(strin..."
postgresql,postgresql,create table parallel_write as     select length(stringu1) from tenk1 group by length(stringu1),write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,drop table parallel_write,write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,drop table parallel_write,write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,explain (costs off) create table parallel_write as execute prep_stmt,write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,create table parallel_write as execute prep_stmt,write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,drop table parallel_write,write_parallel.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE customer (        cid      int primary key,        name     text not null,        tel      text,        passwd	text )",select_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE credit_card (        cid      int references customer(cid),        cnum     text,        climit   int )",select_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE credit_usage (        cid      int references customer(cid),        ymd      date,        usage    int )",select_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO customer        VALUES (101, 'regress_alice', '+81-12-3456-7890', 'passwd123'),               (102, 'regress_bob',   '+01-234-567-8901', 'beafsteak'),               (103, 'regress_eve',   '+49-8765-43210',   'hamburger')",select_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO credit_card        VALUES (101, '1111-2222-3333-4444', 4000),               (102, '5555-6666-7777-8888', 3000),               (103, '9801-2345-6789-0123', 2000)",select_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO credit_usage        VALUES (101, '2011-09-15', 120), 	      (101, '2011-10-05',  90), 	      (101, '2011-10-18', 110), 	      (101, '2011-10-21', 200), 	      (101, '2011-11-10',  80), 	      (102, '2011-09-22', 300), 	      (102, '2011-10-12', 120), 	      (102, '2011-10-28', 200), 	      (103, '2011-10-15', 480)",select_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test1 (     a int,     b text COLLATE ""C"" NOT NULL )",collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int COLLATE ""C"",     b text )",collate.sql,DIFFERENT,DatatypeMismatch,"collations are not supported by type integer LINE 2:     a int COLLATE ""C"","
postgresql,postgresql,CREATE TABLE collate_test_like (     LIKE collate_test1 ),collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test2 (     a int,     b text COLLATE ""POSIX"" )",collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'Abc'), (3, 'bbc'), (4, 'ABD')",collate.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test2 SELECT * FROM collate_test1,collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test4 (     a int,     b testdomain_p )",collate.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test4 SELECT * FROM collate_test1,collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test5 (     a int,     b testdomain_p COLLATE ""C"" )",collate.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test5 SELECT * FROM collate_test1,collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test10 (     a int,     x text COLLATE ""C"",     y text COLLATE ""POSIX"" )",collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test10 VALUES (1, 'hij', 'hij'), (2, 'HIJ', 'HIJ')",collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2",collate.sql,DIFFERENT,IndeterminateCollation,"no collation was derived for column ""b"" with collatable type text HINT:  Use the COLLATE clause to set the collation explicitly."
postgresql,postgresql,"CREATE TABLE collate_test20 (f1 text COLLATE ""C"" PRIMARY KEY)",collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test20 VALUES ('foo'), ('bar')",collate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test21 (f2 text COLLATE ""POSIX"" REFERENCES collate_test20)",collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test21 VALUES ('foo'), ('bar')",collate.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test21 VALUES ('baz'),collate.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""collate_test21"" violates foreign key constraint ""collate_test21_f2_fkey"" DETAIL:  Key (f2)=(baz) is not present in table ""collate_test20""."
postgresql,postgresql,"CREATE TABLE collate_test22 (f2 text COLLATE ""POSIX"")",collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test22 VALUES ('foo'), ('bar'), ('baz')",collate.sql,SAME,,
postgresql,postgresql,CREATE TABLE collate_test23 (f1 text collate mycoll2),collate.sql,SAME,,
postgresql,postgresql,"INSERT INTO vctable VALUES ('foo' COLLATE ""C"")",collate.sql,SAME,,
postgresql,postgresql,CREATE TABLE TIMETZ_TBL (f1 time(2) with time zone),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('00:01 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('01:00 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('02:03 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('07:07 PST'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('08:08 EDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('11:59 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('12:00 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('12:01 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('23:59 PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('11:59:59.99 PM PDT'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('2003-03-07 15:36:39 America/New_York'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('2003-07-07 15:36:39 America/New_York'),timetz.sql,SAME,,
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('15:36:39 America/New_York'),timetz.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type time with time zone: ""15:36:39 America/New_York"" LINE 1: INSERT INTO TIMETZ_TBL VALUES ('15:36:39 America/New_York')"
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('15:36:39 m2'),timetz.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type time with time zone: ""15:36:39 m2"" LINE 1: INSERT INTO TIMETZ_TBL VALUES ('15:36:39 m2')"
postgresql,postgresql,INSERT INTO TIMETZ_TBL VALUES ('15:36:39 MSK m2'),timetz.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type time with time zone: ""15:36:39 MSK m2"" LINE 1: INSERT INTO TIMETZ_TBL VALUES ('15:36:39 MSK m2')"
postgresql,postgresql,"insert into copytest values('DOS',E'abc\r\ndef',1)",copy.sql,SAME,,
postgresql,postgresql,"insert into copytest values('Unix',E'abc\ndef',2)",copy.sql,SAME,,
postgresql,postgresql,"insert into copytest values('Mac',E'abc\rdef',3)",copy.sql,SAME,,
postgresql,postgresql,"insert into copytest values(E'esc\\ape',E'a\\r\\\r\\\n\\nb',4)",copy.sql,SAME,,
postgresql,postgresql,"create table parted_copytest ( 	a int, 	b int, 	c text ) partition by list (b)",copy.sql,SAME,,
postgresql,postgresql,"create table parted_copytest_a1 (c text, b int, a int)",copy.sql,SAME,,
postgresql,postgresql,"create table parted_copytest_a2 (a int, c text, b int)",copy.sql,SAME,,
postgresql,postgresql,"insert into parted_copytest select x,1,'One' from generate_series(1,1000) x",copy.sql,SAME,,
postgresql,postgresql,"insert into parted_copytest select x,2,'Two' from generate_series(1001,1010) x",copy.sql,SAME,,
postgresql,postgresql,"insert into parted_copytest select x,1,'One' from generate_series(1011,1020) x",copy.sql,SAME,,
postgresql,postgresql,drop table parted_copytest,copy.sql,SAME,,
postgresql,postgresql,"create table tab_progress_reporting ( 	name text, 	age int4, 	location point, 	salary int4, 	manager name )",copy.sql,SAME,,
postgresql,postgresql,drop table tab_progress_reporting,copy.sql,SAME,,
postgresql,postgresql,"create table header_copytest ( 	a int, 	b int, 	c text )",copy.sql,SAME,,
postgresql,postgresql,drop table header_copytest,copy.sql,SAME,,
postgresql,postgresql,drop table oversized_column_default,copy.sql,SAME,,
postgresql,postgresql,"CREATE TABLE parted_si (   id int not null,   data text not null,   rand float8 not null default random() ) PARTITION BY LIST((id % 2))",copy.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_si_p_even PARTITION OF parted_si FOR VALUES IN (0),copy.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_si_p_odd PARTITION OF parted_si FOR VALUES IN (1),copy.sql,SAME,,
postgresql,postgresql,DROP TABLE parted_si,copy.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quad_point_tbl AS     SELECT point(unique1,unique2) AS p FROM tenk1",create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 2:     SELECT point(unique1,unique2) AS p FROM tenk1"
postgresql,postgresql,"INSERT INTO quad_point_tbl     SELECT '(333.0,400.0)'::point FROM generate_series(1,1000)",create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""quad_point_tbl"" does not exist LINE 1: INSERT INTO quad_point_tbl"
postgresql,postgresql,"INSERT INTO quad_point_tbl VALUES (NULL), (NULL), (NULL)",create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""quad_point_tbl"" does not exist LINE 1: INSERT INTO quad_point_tbl VALUES (NULL), (NULL), (NULL)"
postgresql,postgresql,CREATE TABLE kd_point_tbl AS SELECT * FROM quad_point_tbl,create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""quad_point_tbl"" does not exist LINE 1: CREATE TABLE kd_point_tbl AS SELECT * FROM quad_point_tbl"
postgresql,postgresql,CREATE TABLE radix_text_tbl AS     SELECT name AS t FROM road WHERE name !~ '^[0-9]',create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""road"" does not exist LINE 2:     SELECT name AS t FROM road WHERE name !~ '[0-9]'"
postgresql,postgresql,"INSERT INTO radix_text_tbl     SELECT 'P0123456789abcdef' FROM generate_series(1,1000)",create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""radix_text_tbl"" does not exist LINE 1: INSERT INTO radix_text_tbl"
postgresql,postgresql,INSERT INTO radix_text_tbl VALUES ('P0123456789abcde'),create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""radix_text_tbl"" does not exist LINE 1: INSERT INTO radix_text_tbl VALUES ('P0123456789abcde')"
postgresql,postgresql,INSERT INTO radix_text_tbl VALUES ('P0123456789abcdefF'),create_index_spgist.sql,DIFFERENT,UndefinedTable,"relation ""radix_text_tbl"" does not exist LINE 1: INSERT INTO radix_text_tbl VALUES ('P0123456789abcdefF')"
postgresql,postgresql,CREATE TABLE attmp (initial int4),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp (a, b, c, d, e, f, g,    i,    k, l, m, n, p, q, r, s, t, 	v, w, x, y, z)    VALUES (4, 'name', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)', 	'c', 	314159, '(1,1)', '512', 	'1 2 3 4 5 6 7 8', true, '(1.1,1.1)', '(4.1,4.1,3.1,3.1)', 	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)', 	'epoch', '01:00:10', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}')",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp ( 	initial 	int4 ),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp (a, b, c, d, e, f, g,    i,   k, l, m, n, p, q, r, s, t, 	v, w, x, y, z)    VALUES (4, 'name', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)',         'c', 	314159, '(1,1)', '512', 	'1 2 3 4 5 6 7 8', true, '(1.1,1.1)', '(4.1,4.1,3.1,3.1)', 	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)', 	'epoch', '01:00:10', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}')",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp (regtable int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp_new,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp_new2,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_attmp (a int primary key) partition by range (a),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_attmp1 PARTITION OF part_attmp FOR VALUES FROM (0) TO (100),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE part_at2tmp,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp_array (id int),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp_array2 (id int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE _attmp_array,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp_array,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp_array (id int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE _attmp_array,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE alter_idx_rename_test (a INT),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE alter_idx_rename_test_parted (a INT) PARTITION BY LIST (a),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE alter_idx_rename_test_2,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE constraint_rename_test (a int CONSTRAINT con1 CHECK (a > 0), b int, c int)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE constraint_rename_test2 (a int CONSTRAINT con1 CHECK (a > 0), d int) INHERITS (constraint_rename_test)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE constraint_rename_test2,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE constraint_rename_test,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE constraint_rename_cache (a int,   CONSTRAINT chk_a CHECK (a > 0),   PRIMARY KEY (a))",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE like_constraint_rename_cache   (LIKE constraint_rename_cache INCLUDING ALL),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE constraint_rename_cache,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE like_constraint_rename_cache,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp2 (a int primary key),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE attmp3 (a int, b int)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE attmp4 (a int, b int, unique(a,b))",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE attmp5 (a int, b int)",alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO attmp2 values (1),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO attmp2 values (2),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO attmp2 values (3),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO attmp2 values (4),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp3 values (1,10)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp3 values (1,20)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp3 values (5,50)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp3 values (5,50)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp6 () INHERITS (attmp3),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp7 () INHERITS (attmp3),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp6 VALUES (6, 30), (7, 16)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO attmp7 VALUES (8, 18)",alter_table.sql,SAME,,
postgresql,postgresql,create table parent_noinh_convalid (a int),alter_table.sql,SAME,,
postgresql,postgresql,create table child_noinh_convalid () inherits (parent_noinh_convalid),alter_table.sql,SAME,,
postgresql,postgresql,insert into parent_noinh_convalid values (1),alter_table.sql,SAME,,
postgresql,postgresql,insert into child_noinh_convalid values (1),alter_table.sql,SAME,,
postgresql,postgresql,"drop table parent_noinh_convalid, child_noinh_convalid",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp7,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp6,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp5,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp4,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp3,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp2,alter_table.sql,SAME,,
postgresql,postgresql,"create table nv_parent (d date, check (false) no inherit not valid)",alter_table.sql,SAME,,
postgresql,postgresql,create table nv_child_2010 () inherits (nv_parent),alter_table.sql,SAME,,
postgresql,postgresql,create table nv_child_2011 () inherits (nv_parent),alter_table.sql,SAME,,
postgresql,postgresql,create table nv_child_2009 (check (d between '2009-01-01'::date and '2009-12-31'::date)) inherits (nv_parent),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO PKTABLE VALUES(42),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(42),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(43),alter_table.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(43) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO PKTABLE VALUES(42),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(42),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO FKTABLE VALUES(43),alter_table.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""fktable"" violates foreign key constraint ""fktable_ftest1_fkey"" DETAIL:  Key (ftest1)=(43) is not present in table ""pktable""."
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE FKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE PKTABLE,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc_test1"" DETAIL:  Failing row contains (2)."
postgresql,postgresql,insert into atacc1 (test) values (4),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (4),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 ( test int, test2 int, test3 int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2,test3) values (4,4,2)",alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc_test1"" DETAIL:  Failing row contains (4, 4, 2)."
postgresql,postgresql,"insert into atacc1 (test,test2,test3) values (4,4,5)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (test int check (test>3), test2 int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test2, test) values (3, 4)",alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_check"" DETAIL:  Failing row contains (4, 3)."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (test int),alter_table.sql,SAME,,
postgresql,postgresql,create table atacc2 (test2 int),alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc3 (test3 int) inherits (atacc1, atacc2)",alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc2 (test2) values (-3),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc2"" violates check constraint ""foo"" DETAIL:  Failing row contains (-3)."
postgresql,postgresql,insert into atacc2 (test2) values (3),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc3 (test2) values (-3),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc3"" violates check constraint ""foo"" DETAIL:  Failing row contains (null, -3, null)."
postgresql,postgresql,insert into atacc3 (test2) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc3,alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc2,alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (test int),alter_table.sql,SAME,,
postgresql,postgresql,create table atacc2 (test2 int),alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc3 (test3 int) inherits (atacc1, atacc2)",alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc3 (test2) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc2 cascade,alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (test int),alter_table.sql,SAME,,
postgresql,postgresql,create table atacc2 (test2 int) inherits (atacc1),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc2 (test) values (-3),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (-3),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""foo"" DETAIL:  Failing row contains (-3)."
postgresql,postgresql,insert into atacc1 (test) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc2,alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc_test1"" DETAIL:  Key (test)=(2) already exists."
postgresql,postgresql,insert into atacc1 (test) values (4),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 ( test int, test2 int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,4)",alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc_test1"" DETAIL:  Key (test, test2)=(4, 4) already exists."
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,5)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (5,4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (5,5)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (test int, test2 int, unique(test))",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test2, test) values (3, 3)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test2, test) values (2, 3)",alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc1_test_key"" DETAIL:  Key (test)=(3) already exists."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 ( id serial, test int)",alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc_test1"" DETAIL:  Key (test)=(2) already exists."
postgresql,postgresql,insert into atacc1 (test) values (4),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values(NULL),alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (4, null)."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (2),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (NULL),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (3),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 ( test int ),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (test) values (0),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (a int),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 values(1),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (a int primary key),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (a bigint, b int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values(1,1)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (a bigint, b int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values(1,2)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 ( test int, test2 int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,4)",alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc_test1"" DETAIL:  Key (test, test2)=(4, 4) already exists."
postgresql,postgresql,"insert into atacc1 (test,test2) values (NULL,3)",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (null, 3)."
postgresql,postgresql,"insert into atacc1 (test,test2) values (3, NULL)",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test2"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (3, null)."
postgresql,postgresql,"insert into atacc1 (test,test2) values (NULL,NULL)",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,"insert into atacc1 (test,test2) values (4,5)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (5,4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test,test2) values (5,5)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (test int, test2 int, primary key(test))",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test2, test) values (3, 3)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (test2, test) values (2, 3)",alter_table.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""atacc1_pkey"" DETAIL:  Key (test)=(3) already exists."
postgresql,postgresql,"insert into atacc1 (test2, test) values (1, NULL)",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (null, 1)."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table atacc1 (test int not null),alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 values (null),alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""test"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (null)."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (test_a int, test_b int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values (null, 1)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values (2, null)",alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,create table parent (a int),alter_table.sql,SAME,,
postgresql,postgresql,create table child (b varchar(255)) inherits (parent),alter_table.sql,SAME,,
postgresql,postgresql,insert into parent values (NULL),alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""a"" of relation ""parent"" violates not-null constraint DETAIL:  Failing row contains (null)."
postgresql,postgresql,"insert into child (a, b) values (NULL, 'foo')",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""a"" of relation ""child"" violates not-null constraint DETAIL:  Failing row contains (null, foo)."
postgresql,postgresql,insert into parent values (NULL),alter_table.sql,SAME,,
postgresql,postgresql,"insert into child (a, b) values (NULL, 'foo')",alter_table.sql,SAME,,
postgresql,postgresql,drop table child,alter_table.sql,SAME,,
postgresql,postgresql,drop table parent,alter_table.sql,SAME,,
postgresql,postgresql,"create table def_test ( 	c1	int4 default 5, 	c2	text default 'initial_default' )",alter_table.sql,SAME,,
postgresql,postgresql,insert into def_test default values,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_test default values,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_test default values,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_test default values,alter_table.sql,SAME,,
postgresql,postgresql,create rule def_view_test_ins as 	on insert to def_view_test 	do instead insert into def_test select new.*,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_view_test default values,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_view_test default values,alter_table.sql,SAME,,
postgresql,postgresql,insert into def_view_test default values,alter_table.sql,SAME,,
postgresql,postgresql,drop table def_test,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (a int4 not null, b int4, c int4 not null, d int4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values (1, 2, 3, 4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values (10, 11, 12, 13)",alter_table.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into atacc1 values (10, 11, 12, 13)"
postgresql,postgresql,"insert into atacc1 values (default, 11, 12, 13)",alter_table.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into atacc1 values (default, 11, 12, 13)"
postgresql,postgresql,"insert into atacc1 values (11, 12, 13)",alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1 (a) values (10),alter_table.sql,DIFFERENT,UndefinedColumn,"column ""a"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (a) values (10)"
postgresql,postgresql,insert into atacc1 (a) values (default),alter_table.sql,DIFFERENT,UndefinedColumn,"column ""a"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (a) values (default)"
postgresql,postgresql,"insert into atacc1 (a,b,c,d) values (10,11,12,13)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""a"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (a,b,c,d) values (10,11,12,13)"
postgresql,postgresql,"insert into atacc1 (a,b,c,d) values (default,11,12,13)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""a"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (a,b,c,d) values (default,11,12,13)"
postgresql,postgresql,"insert into atacc1 (b,c,d) values (11,12,13)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 (""........pg.dropped.1........"") values (10)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""........pg.dropped.1........"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (""........pg.dropped.1........"") values (..."
postgresql,postgresql,"insert into atacc1 (""........pg.dropped.1........"") values (default)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""........pg.dropped.1........"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (""........pg.dropped.1........"") values (..."
postgresql,postgresql,"insert into atacc1 (""........pg.dropped.1........"",b,c,d) values (10,11,12,13)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""........pg.dropped.1........"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (""........pg.dropped.1........"",b,c,d) va..."
postgresql,postgresql,"insert into atacc1 (""........pg.dropped.1........"",b,c,d) values (default,11,12,13)",alter_table.sql,DIFFERENT,UndefinedColumn,"column ""........pg.dropped.1........"" of relation ""atacc1"" does not exist LINE 1: insert into atacc1 (""........pg.dropped.1........"",b,c,d) va..."
postgresql,postgresql,create table atacc2 (id int4 unique),alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc2,alter_table.sql,SAME,,
postgresql,postgresql,"insert into atacc1 values (21, 22, 23)",alter_table.sql,SAME,,
postgresql,postgresql,create table attest1 as select * from atacc1,alter_table.sql,SAME,,
postgresql,postgresql,drop table attest1,alter_table.sql,SAME,,
postgresql,postgresql,drop table attest2,alter_table.sql,SAME,,
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table atacc1 (id serial primary key, value int check (value < 10))",alter_table.sql,SAME,,
postgresql,postgresql,insert into atacc1(value) values (100),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_value_check"" DETAIL:  Failing row contains (1, 100)."
postgresql,postgresql,insert into atacc1(value) values (100),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_value_check"" DETAIL:  Failing row contains (2, 100)."
postgresql,postgresql,"insert into atacc1(id, value) values (null, 0)",alter_table.sql,DIFFERENT,NotNullViolation,"null value in column ""id"" of relation ""atacc1"" violates not-null constraint DETAIL:  Failing row contains (null, 0)."
postgresql,postgresql,drop table atacc1,alter_table.sql,SAME,,
postgresql,postgresql,"create table parent (a int, b int, c int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into parent values (1, 2, 3)",alter_table.sql,SAME,,
postgresql,postgresql,create table child (d varchar(255)) inherits (parent),alter_table.sql,SAME,,
postgresql,postgresql,"insert into child values (12, 13, 'testing')",alter_table.sql,SAME,,
postgresql,postgresql,drop table child,alter_table.sql,SAME,,
postgresql,postgresql,drop table parent,alter_table.sql,SAME,,
postgresql,postgresql,"create table parent (a float8, b numeric(10,4), c text collate ""C"")",alter_table.sql,SAME,,
postgresql,postgresql,create table child (a float4) inherits (parent),alter_table.sql,DIFFERENT,DatatypeMismatch,"column ""a"" has a type conflict DETAIL:  double precision versus real"
postgresql,postgresql,"create table child (b decimal(10,7)) inherits (parent)",alter_table.sql,DIFFERENT,DatatypeMismatch,"column ""b"" has a type conflict DETAIL:  numeric(10,4) versus numeric(10,7)"
postgresql,postgresql,"create table child (c text collate ""POSIX"") inherits (parent)",alter_table.sql,DIFFERENT,CollationMismatch,"column ""c"" has a collation conflict DETAIL:  ""C"" versus ""POSIX"""
postgresql,postgresql,"create table child (a double precision, b decimal(10,4)) inherits (parent)",alter_table.sql,SAME,,
postgresql,postgresql,drop table child,alter_table.sql,SAME,,
postgresql,postgresql,drop table parent,alter_table.sql,SAME,,
postgresql,postgresql,"create table attest (a int4, b int4, c int4)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into attest values (1,2,3)",alter_table.sql,SAME,,
postgresql,postgresql,drop table attest,alter_table.sql,SAME,,
postgresql,postgresql,"create table dropColumn (a int, b int, e int)",alter_table.sql,SAME,,
postgresql,postgresql,create table dropColumnChild (c int) inherits (dropColumn),alter_table.sql,SAME,,
postgresql,postgresql,create table dropColumnAnother (d int) inherits (dropColumnChild),alter_table.sql,SAME,,
postgresql,postgresql,create table renameColumn (a int),alter_table.sql,SAME,,
postgresql,postgresql,create table renameColumnChild (b int) inherits (renameColumn),alter_table.sql,SAME,,
postgresql,postgresql,create table renameColumnAnother (c int) inherits (renameColumnChild),alter_table.sql,SAME,,
postgresql,postgresql,"create table p1 (f1 int, f2 int)",alter_table.sql,SAME,,
postgresql,postgresql,create table c1 (f1 int not null) inherits(p1),alter_table.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,alter_table.sql,SAME,,
postgresql,postgresql,"create table p1 (f1 int, f2 int)",alter_table.sql,SAME,,
postgresql,postgresql,create table c1 () inherits(p1),alter_table.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,alter_table.sql,SAME,,
postgresql,postgresql,"create table p1 (f1 int, f2 int)",alter_table.sql,SAME,,
postgresql,postgresql,create table c1 () inherits(p1),alter_table.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,alter_table.sql,SAME,,
postgresql,postgresql,"create table p1 (f1 int, f2 int)",alter_table.sql,SAME,,
postgresql,postgresql,create table c1 (f1 int not null) inherits(p1),alter_table.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,alter_table.sql,SAME,,
postgresql,postgresql,"create table p1(id int, name text)",alter_table.sql,SAME,,
postgresql,postgresql,"create table p2(id2 int, name text, height int)",alter_table.sql,SAME,,
postgresql,postgresql,"create table c1(age int) inherits(p1,p2)",alter_table.sql,SAME,,
postgresql,postgresql,create table gc1() inherits (c1),alter_table.sql,SAME,,
postgresql,postgresql,create table dropColumnExists (),alter_table.sql,SAME,,
postgresql,postgresql,"drop table p1, p2 cascade",alter_table.sql,SAME,,
postgresql,postgresql,create table depth0(),alter_table.sql,SAME,,
postgresql,postgresql,create table depth1(c text) inherits (depth0),alter_table.sql,SAME,,
postgresql,postgresql,create table depth2() inherits (depth1),alter_table.sql,SAME,,
postgresql,postgresql,create table p1 (f1 int),alter_table.sql,SAME,,
postgresql,postgresql,"create table c1 (f2 text, f3 int) inherits (p1)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into p1 values (1,2,'abc')",alter_table.sql,SAME,,
postgresql,postgresql,"insert into c1 values(11,'xyz',33,0)",alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""c1"" violates check constraint ""p1_a1_check"" DETAIL:  Failing row contains (11, xyz, 33, 0)."
postgresql,postgresql,"insert into c1 values(11,'xyz',33,22)",alter_table.sql,SAME,,
postgresql,postgresql,drop table p1 cascade,alter_table.sql,SAME,,
postgresql,postgresql,"insert into foo values('bb','cc','dd')",alter_table.sql,SAME,,
postgresql,postgresql,"insert into foo values('qq','rr')",alter_table.sql,SAME,,
postgresql,postgresql,"create table anothertab (atcol1 serial8, atcol2 boolean, 	constraint anothertab_chk check (atcol1 <= 3))",alter_table.sql,SAME,,
postgresql,postgresql,"insert into anothertab (atcol1, atcol2) values (default, true)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into anothertab (atcol1, atcol2) values (default, false)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into anothertab (atcol1, atcol2) values (45, null)",alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""anothertab"" violates check constraint ""anothertab_chk"" DETAIL:  Failing row contains (45, null)."
postgresql,postgresql,"insert into anothertab (atcol1, atcol2) values (default, null)",alter_table.sql,SAME,,
postgresql,postgresql,drop table anothertab,alter_table.sql,SAME,,
postgresql,postgresql,"create table anothertab(f1 int primary key, f2 int unique,                         f3 int, f4 int, f5 int)",alter_table.sql,SAME,,
postgresql,postgresql,drop table anothertab,alter_table.sql,SAME,,
postgresql,postgresql,"create table another (f1 int, f2 text, f3 text)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into another values(1, 'one', 'uno')",alter_table.sql,SAME,,
postgresql,postgresql,"insert into another values(2, 'two', 'due')",alter_table.sql,SAME,,
postgresql,postgresql,"insert into another values(3, 'three', 'tre')",alter_table.sql,SAME,,
postgresql,postgresql,drop table another,alter_table.sql,SAME,,
postgresql,postgresql,create table skip_wal_skip_rewrite_index (c varchar(10) primary key),alter_table.sql,SAME,,
postgresql,postgresql,"create table at_tab1 (a int, b text)",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_tab2 (x int, y at_tab1)",alter_table.sql,SAME,,
postgresql,postgresql,drop table at_tab2,alter_table.sql,SAME,,
postgresql,postgresql,"create table at_tab2 (x int, y text, check((x,y)::at_tab1 = (1,'42')::at_tab1))",alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_tab2 values(1,'42')",alter_table.sql,DIFFERENT,DatatypeMismatch,ROW() column has type text instead of type character varying
postgresql,postgresql,"drop table at_tab1, at_tab2",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_tab1 (a int, b text) partition by list(a)",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_tab2 (x int, y at_tab1)",alter_table.sql,SAME,,
postgresql,postgresql,"drop table at_tab1, at_tab2",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_partitioned (a int, b text) partition by range (a)",alter_table.sql,SAME,,
postgresql,postgresql,create table at_part_1 partition of at_partitioned for values from (0) to (1000),alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_partitioned values (512, '0.123')",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_part_2 (b text, a int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_part_2 values ('1.234', 1024)",alter_table.sql,SAME,,
postgresql,postgresql,drop table at_partitioned,alter_table.sql,SAME,,
postgresql,postgresql,"create table at_partitioned(id int, name varchar(64), unique (id, name))   partition by hash(id)",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_partitioned_0 partition of at_partitioned   for values with (modulus 2, remainder 0)",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_partitioned_1 partition of at_partitioned   for values with (modulus 2, remainder 1)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_partitioned values(1, 'foo')",alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_partitioned values(3, 'bar')",alter_table.sql,SAME,,
postgresql,postgresql,drop table at_partitioned,alter_table.sql,SAME,,
postgresql,postgresql,"create table test_storage (a text, c text storage plain)",alter_table.sql,SAME,,
postgresql,postgresql,"create table test_storage_failed (a text, b int storage extended)",alter_table.sql,DIFFERENT,FeatureNotSupported,column data type integer can only have storage PLAIN
postgresql,postgresql,"CREATE TABLE test_inh_check (a float check (a > 10.2), b float)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_inh_check_child() INHERITS(test_inh_check),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_type_diff (f1 int),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_type_diff_c (extra smallint) INHERITS (test_type_diff),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_type_diff_c VALUES (1, 2, 3)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_type_diff2 (int_two int2, int_four int4, int_eight int8)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_type_diff2_c1 (int_four int4, int_eight int8, int_two int2)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_type_diff2_c2 (int_eight int8, int_two int2, int_four int4)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_type_diff2_c3 (int_two int2, int_four int4, int_eight int8)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_type_diff2_c1 VALUES (1, 2, 3)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_type_diff2_c2 VALUES (4, 5, 6)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_type_diff2_c3 VALUES (7, 8, 9)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE check_fk_presence_1 (id int PRIMARY KEY, t text)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE check_fk_presence_2 (id int REFERENCES check_fk_presence_1, t text)",alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE check_fk_presence_1, check_fk_presence_2",alter_table.sql,SAME,,
postgresql,postgresql,"create table at_base_table(id int, stuff text)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into at_base_table values (23, 'skidoo')",alter_table.sql,SAME,,
postgresql,postgresql,drop table at_base_table,alter_table.sql,SAME,,
postgresql,postgresql,create rule v1_upd_rule as on update to v1   do also insert into log values (new.*),alter_table.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE rewrite_test(col text),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO rewrite_test VALUES ('something'),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO rewrite_test VALUES (NULL),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE rewrite_test,alter_table.sql,SAME,,
postgresql,postgresql,"create table alterlock (f1 int primary key, f2 text)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into alterlock values (1, 'foo')",alter_table.sql,SAME,,
postgresql,postgresql,"create table alterlock2 (f3 int primary key, f1 int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into alterlock2 values (1, 1)",alter_table.sql,SAME,,
postgresql,postgresql,drop table alterlock2,alter_table.sql,SAME,,
postgresql,postgresql,drop table alterlock,alter_table.sql,SAME,,
postgresql,postgresql,"create table alter1.t1(f1 serial primary key, f2 int check (f2 > 0))",alter_table.sql,SAME,,
postgresql,postgresql,insert into alter1.t1(f2) values(11),alter_table.sql,SAME,,
postgresql,postgresql,insert into alter1.t1(f2) values(12),alter_table.sql,SAME,,
postgresql,postgresql,insert into alter2.t1(f2) values(13),alter_table.sql,SAME,,
postgresql,postgresql,insert into alter2.t1(f2) values(14),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_tbl1 (x int, y test_type1)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE test_tbl1,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_tbl1 (x int, y text)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE test_tbl1,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_tbl2 OF test_type2,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_tbl2_subclass () INHERITS (test_tbl2),alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE test_tbl2_subclass, test_tbl2",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_tblx (x int, y test_typex check ((y).a > 0))",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE test_tblx,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_tbl3 (c) AS SELECT '(1)'::test_type3,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt0 (x int NOT NULL, y numeric(8,2))",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt1 (x int, y bigint)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt2 (x int, y numeric(9,2))",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt3 (y numeric(8,2), x int)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE tt4 (x int),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt5 (x int, y numeric(8,2), z int)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE tt6 () INHERITS (tt0),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tt7 (x int, q text, y numeric(8,2))",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_drop_constr_parent (c text CHECK (c IS NOT NULL)),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_drop_constr_child () INHERITS (test_drop_constr_parent),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO test_drop_constr_child (c) VALUES (NULL),alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""test_drop_constr_child"" violates check constraint ""test_drop_constr_parent_c_check"" DETAIL:  Failing row contains (null)."
postgresql,postgresql,DROP TABLE test_drop_constr_parent CASCADE,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE tt8(a int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE alter2.tt8,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE tt9(c integer),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE tt9,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE comment_test (   id int,   positive_col int CHECK (positive_col > 0),   indexed_col int,   CONSTRAINT comment_test_pk PRIMARY KEY (id))",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE comment_test_child (   id text CONSTRAINT comment_test_child_fk REFERENCES comment_test),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE pg_catalog.new_system_table(),alter_table.sql,DIFFERENT,InsufficientPrivilege,permission denied for schema pg_catalog LINE 1: CREATE TABLE pg_catalog.new_system_table()
postgresql,postgresql,"CREATE TABLE new_system_table(id serial primary key, othercol text)",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO old_system_table(othercol) VALUES ('somedata'), ('otherdata')",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE old_system_table,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE unlogged3,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE unlogged2,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE unlogged1,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE logged1(f1 SERIAL PRIMARY KEY, f2 TEXT)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE logged2(f1 SERIAL PRIMARY KEY, f2 INTEGER REFERENCES logged1)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE logged3(f1 SERIAL PRIMARY KEY, f2 INTEGER REFERENCES logged3)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE logged3,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE logged2,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE logged1,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_add_column(c1 integer),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE test_add_column,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE ataddindex(f1 INT),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO ataddindex VALUES (42), (43)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE ataddindex,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE ataddindex(f1 VARCHAR(10)),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO ataddindex(f1) VALUES ('foo'), ('a')",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE ataddindex,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ataddindex(id int, ref_id int)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE ataddindex,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ataddindex(id int, ref_id int)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE ataddindex,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE atnotnull1 (),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	b int ) PARTITION BY RANGE (a, (a+b+1))",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE nonpartitioned ( 	a int, 	b int )",alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE partitioned, nonpartitioned",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE unparted ( 	a int ),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part (like unparted),alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE unparted, fail_part",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_parted ( 	a int NOT NULL, 	b char(2) COLLATE ""C"", 	CONSTRAINT check_a CHECK (a > 0) ) PARTITION BY LIST (a)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part (LIKE list_parted),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE not_owned_by_me (LIKE list_parted),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE owned_by_me ( 	a int ) PARTITION BY LIST (a),alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE owned_by_me, not_owned_by_me",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE parent (LIKE list_parted),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE child () INHERITS (parent),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE parent CASCADE,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE perm_part (a int),alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE temp_parted, perm_part",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part OF mytype,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part (like list_parted, c int)",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part (a int NOT NULL),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part ( 	b char(3), 	a int NOT NULL )",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part ( 	b char(2) COLLATE ""C"", 	a int NOT NULL )",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_1 ( 	a int NOT NULL, 	b char(2) COLLATE ""C"", 	CONSTRAINT check_a CHECK (a > 0) )",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part (LIKE part_1 INCLUDING CONSTRAINTS),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE def_part (LIKE list_parted INCLUDING CONSTRAINTS),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_def_part (LIKE part_1 INCLUDING CONSTRAINTS),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_parted2 ( 	a int, 	b char ) PARTITION BY LIST (a)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_2 (LIKE list_parted2),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_2 VALUES (3, 'a')",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE list_parted2_def PARTITION OF list_parted2 DEFAULT,alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO list_parted2_def VALUES (11, 'z')",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_3 (LIKE list_parted2),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_3_4 ( 	LIKE list_parted2, 	CONSTRAINT check_a CHECK (a IN (3)) )",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_55_66 PARTITION OF list_parted2 FOR VALUES IN (55, 66)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted ( 	a int, 	b int ) PARTITION BY RANGE (a, b)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part1 ( 	a int NOT NULL CHECK (a = 1), 	b int NOT NULL CHECK (b >= 1 AND b <= 10) )",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO part1 VALUES (1, 10)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part2 ( 	a int NOT NULL CHECK (a = 1), 	b int NOT NULL CHECK (b >= 10 AND b < 18) )",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE partr_def1 PARTITION OF range_parted DEFAULT,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE partr_def2 (LIKE part1 INCLUDING CONSTRAINTS),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO partr_def1 VALUES (2, 10)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part3 (LIKE range_parted),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_5 ( 	LIKE list_parted2 ) PARTITION BY LIST (b),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_5_a PARTITION OF part_5 FOR VALUES IN ('a'),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_5_a (a, b) VALUES (6, 'a')",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_6 ( 	c int, 	LIKE list_parted2, 	CONSTRAINT check_a CHECK (a IS NOT NULL AND a = 6) )",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_7 ( 	LIKE list_parted2, 	CONSTRAINT check_a CHECK (a IS NOT NULL AND a = 7) ) PARTITION BY LIST (b)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_7_a_null ( 	c int, 	d int, 	e int, 	LIKE list_parted2,   	CONSTRAINT check_b CHECK (b IS NULL OR b = 'a'), 	CONSTRAINT check_a CHECK (a IS NOT NULL AND a = 7) )",alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_7 (a, b) VALUES (8, null), (9, 'a')",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part5_def PARTITION OF part_5 DEFAULT PARTITION BY LIST(a),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part5_def_p1 PARTITION OF part5_def FOR VALUES IN (5),alter_table.sql,SAME,,
postgresql,postgresql,"INSERT INTO part5_def_p1 VALUES (5, 'y')",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part5_p1 (LIKE part_5),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quuux (a int, b text) PARTITION BY LIST (a)",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE quuux_default PARTITION OF quuux DEFAULT PARTITION BY LIST (b),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE quuux_default1 PARTITION OF quuux_default ( 	CONSTRAINT check_1 CHECK (a IS NOT NULL AND a = 1) ) FOR VALUES IN ('b'),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quuux1 (a int, b text)",alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE quuux2 (a int, b text)",alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE quuux1, quuux2",alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE quuux1 PARTITION OF quuux FOR VALUES IN (1),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE quuux2 PARTITION OF quuux FOR VALUES IN (2),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE quuux,alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_parted ( 	a int, 	b int ) PARTITION BY HASH (a part_test_int4_ops)",alter_table.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,"CREATE TABLE hpart_1 PARTITION OF hash_parted FOR VALUES WITH (MODULUS 4, REMAINDER 0)",alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,CREATE TABLE fail_part (LIKE hpart_1),alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hpart_1"" does not exist LINE 1: CREATE TABLE fail_part (LIKE hpart_1)"
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,DIFFERENT,UndefinedTable,"table ""fail_part"" does not exist"
postgresql,postgresql,CREATE TABLE hpart_2 (LIKE hash_parted),alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist LINE 1: CREATE TABLE hpart_2 (LIKE hash_parted)"
postgresql,postgresql,"INSERT INTO hpart_2 VALUES (3, 0)",alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hpart_2"" does not exist LINE 1: INSERT INTO hpart_2 VALUES (3, 0)"
postgresql,postgresql,CREATE TABLE hpart_5 ( 	LIKE hash_parted ) PARTITION BY LIST (b),alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist LINE 2:  LIKE hash_parted"
postgresql,postgresql,"CREATE TABLE hpart_5_a PARTITION OF hpart_5 FOR VALUES IN ('1', '2', '3')",alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hpart_5"" does not exist"
postgresql,postgresql,"INSERT INTO hpart_5_a (a, b) VALUES (7, 1)",alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hpart_5_a"" does not exist LINE 1: INSERT INTO hpart_5_a (a, b) VALUES (7, 1)"
postgresql,postgresql,CREATE TABLE fail_part(LIKE hash_parted),alter_table.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist LINE 1: CREATE TABLE fail_part(LIKE hash_parted)"
postgresql,postgresql,DROP TABLE fail_part,alter_table.sql,DIFFERENT,UndefinedTable,"table ""fail_part"" does not exist"
postgresql,postgresql,CREATE TABLE regular_table (a int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE regular_table,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE not_a_part (a int),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE not_a_part,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE part_3_4,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE range_parted2 (     a int ) PARTITION BY RANGE(a),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_rp PARTITION OF range_parted2 FOR VALUES FROM (0) to (100),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE range_parted2,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE part_rp,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE range_parted2 ( 	a int ) PARTITION BY RANGE(a),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_rp PARTITION OF range_parted2 FOR VALUES FROM (0) to (100),alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_rpd PARTITION OF range_parted2 DEFAULT,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE part_rpd,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_rp100 PARTITION OF range_parted2 (CHECK (a>=123 AND a<133 AND a IS NOT NULL)) FOR VALUES FROM (100) to (200),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE range_parted2,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_no_parts (a int) PARTITION BY LIST (a),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE parted_no_parts,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE inh_test () INHERITS (part_2),alter_table.sql,DIFFERENT,WrongObjectType,"cannot inherit from partition ""part_2"""
postgresql,postgresql,CREATE TABLE inh_test (LIKE part_2),alter_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE list_parted, list_parted2, range_parted",alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE fail_def_part,alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE hash_parted,alter_table.sql,DIFFERENT,UndefinedTable,"table ""hash_parted"" does not exist"
postgresql,postgresql,"create table p (a int, b int) partition by range (a, b)",alter_table.sql,SAME,,
postgresql,postgresql,"create table p1 (b int, a int not null) partition by range (b)",alter_table.sql,SAME,,
postgresql,postgresql,create table p11 (like p1),alter_table.sql,SAME,,
postgresql,postgresql,"insert into p1 (a, b) values (2, 3)",alter_table.sql,SAME,,
postgresql,postgresql,drop table p,alter_table.sql,SAME,,
postgresql,postgresql,drop table p1,alter_table.sql,SAME,,
postgresql,postgresql,create table parted_validate_test (a int) partition by list (a),alter_table.sql,SAME,,
postgresql,postgresql,"create table parted_validate_test_1 partition of parted_validate_test for values in (0, 1)",alter_table.sql,SAME,,
postgresql,postgresql,drop table parted_validate_test,alter_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE attmp(i integer),alter_table.sql,SAME,,
postgresql,postgresql,INSERT INTO attmp VALUES (1),alter_table.sql,SAME,,
postgresql,postgresql,DROP TABLE attmp,alter_table.sql,SAME,,
postgresql,postgresql,create table defpart_attach_test (a int) partition by list (a),alter_table.sql,SAME,,
postgresql,postgresql,create table defpart_attach_test1 partition of defpart_attach_test for values in (1),alter_table.sql,SAME,,
postgresql,postgresql,"create table defpart_attach_test_d (b int, a int)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into defpart_attach_test_d values (1), (2)",alter_table.sql,SAME,,
postgresql,postgresql,create table defpart_attach_test_2 (like defpart_attach_test_d),alter_table.sql,SAME,,
postgresql,postgresql,drop table defpart_attach_test,alter_table.sql,SAME,,
postgresql,postgresql,create table perm_part_parent (a int) partition by list (a),alter_table.sql,SAME,,
postgresql,postgresql,create table perm_part_child (a int),alter_table.sql,SAME,,
postgresql,postgresql,drop table perm_part_parent cascade,alter_table.sql,SAME,,
postgresql,postgresql,drop table temp_part_parent cascade,alter_table.sql,SAME,,
postgresql,postgresql,create table tab_part_attach (a int) partition by list (a),alter_table.sql,SAME,,
postgresql,postgresql,create or replace function func_part_attach() returns trigger   language plpgsql as $$   begin     execute 'create table tab_part_attach_1 (a int)';     execute 'alter table tab_part_attach attach partition tab_part_attach_1 for values in (1)';     return null;   end $$,alter_table.sql,SAME,,
postgresql,postgresql,insert into tab_part_attach values (1),alter_table.sql,DIFFERENT,ObjectInUse,"cannot ALTER TABLE ""tab_part_attach"" because it is being used by active queries in this session CONTEXT:  SQL statement ""alter table tab_part_attach attach partition tab_part_attach_1 for values in (1)"" PL/pgSQL function func_part_attach() line 4 at EXECUTE"
postgresql,postgresql,drop table tab_part_attach,alter_table.sql,SAME,,
postgresql,postgresql,create table at_test_sql_partop (a int) partition by range (a at_test_sql_partop),alter_table.sql,DIFFERENT,UndefinedObject,"operator class ""at_test_sql_partop"" does not exist for access method ""btree"""
postgresql,postgresql,create table at_test_sql_partop_1 (a int),alter_table.sql,SAME,,
postgresql,postgresql,drop table at_test_sql_partop,alter_table.sql,DIFFERENT,UndefinedTable,"table ""at_test_sql_partop"" does not exist"
postgresql,postgresql,"/* Test case for bug #16242 */  create table bar1 (a integer, b integer not null default 1)   partition by range (a)",alter_table.sql,SAME,,
postgresql,postgresql,create table bar2 (a integer),alter_table.sql,SAME,,
postgresql,postgresql,insert into bar2 values (1),alter_table.sql,SAME,,
postgresql,postgresql,/* End test case for bug #16242 */  /* Test case for bug #17409 */  create table attbl (p1 int constraint pk_attbl primary key),alter_table.sql,SAME,,
postgresql,postgresql,create table atref (c1 int references attbl(p1)),alter_table.sql,SAME,,
postgresql,postgresql,"drop table attbl, atref",alter_table.sql,SAME,,
postgresql,postgresql,create table attbl (p1 int constraint pk_attbl primary key),alter_table.sql,SAME,,
postgresql,postgresql,create table atref (c1 int references attbl(p1)),alter_table.sql,SAME,,
postgresql,postgresql,"drop table attbl, atref",alter_table.sql,SAME,,
postgresql,postgresql,/* End test case for bug #17409 */  create table alttype_cluster (a int),alter_table.sql,SAME,,
postgresql,postgresql,drop table alttype_cluster,alter_table.sql,SAME,,
postgresql,postgresql,"create table target_parted (a int, b int) partition by list (a)",alter_table.sql,SAME,,
postgresql,postgresql,"create table attach_parted (a int, b int) partition by list (b)",alter_table.sql,SAME,,
postgresql,postgresql,create table attach_parted_part1 partition of attach_parted for values in (1),alter_table.sql,SAME,,
postgresql,postgresql,"insert into attach_parted_part1 values (1, 1)",alter_table.sql,SAME,,
postgresql,postgresql,"insert into attach_parted_part1 values (2, 1)",alter_table.sql,DIFFERENT,CheckViolation,"new row for relation ""attach_parted_part1"" violates partition constraint DETAIL:  Failing row contains (2, 1)."
postgresql,postgresql,"insert into attach_parted_part1 values (2, 1)",alter_table.sql,SAME,,
postgresql,postgresql,create table alter1.t1 (a int),alter_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test1 (     a int,     b text COLLATE ""en-x-icu"" NOT NULL )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""ja_JP.eucjp-x-icu"" )",collate.icu.utf8.sql,DIFFERENT,UndefinedObject,"collation ""ja_JP.eucjp-x-icu"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""ja_JP.eucjp-x-icu"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""foo-x-icu"" )",collate.icu.utf8.sql,DIFFERENT,UndefinedObject,"collation ""foo-x-icu"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""foo-x-icu"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int COLLATE ""en-x-icu"",     b text )",collate.icu.utf8.sql,DIFFERENT,DatatypeMismatch,"collations are not supported by type integer LINE 2:     a int COLLATE ""en-x-icu"","
postgresql,postgresql,CREATE TABLE collate_test_like (     LIKE collate_test1 ),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test2 (     a int,     b text COLLATE ""sv-x-icu"" )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test3 (     a int,     b text COLLATE ""C"" )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'ÃÂ¤bc'), (3, 'bbc'), (4, 'ABC')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test2 SELECT * FROM collate_test1,collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test3 SELECT * FROM collate_test1,collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test4 (     a int,     b testdomain_sv )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test4 SELECT * FROM collate_test1,collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test5 (     a int,     b testdomain_sv COLLATE ""en-x-icu"" )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test5 SELECT * FROM collate_test1,collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test10 (     a int,     x text COLLATE ""en-x-icu"",     y text COLLATE ""tr-x-icu"" )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test10 VALUES (1, 'hij', 'hij'), (2, 'HIJ', 'HIJ')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test6 (     a int,     b text COLLATE ""en-x-icu"" )",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test6 VALUES (1, 'abc'), (2, 'ABC'), (3, '123'), (4, 'ab1'),                                  (5, 'a1!'), (6, 'a c'), (7, '!.;'), (8, '   '),                                  (9, 'ÃÂ¤bÃÂ§'), (10, 'ÃÂBÃÂ')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3",collate.icu.utf8.sql,DIFFERENT,IndeterminateCollation,"no collation was derived for column ""b"" with collatable type text HINT:  Use the COLLATE clause to set the collation explicitly."
postgresql,postgresql,"CREATE TABLE collate_dep_test1 (a int, b text COLLATE test0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_dep_test4t (a int, b text)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"DROP TABLE collate_dep_test1, collate_dep_test4t",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test7 (a text),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test7 VALUES ('Abernathy'), ('apple'), ('bird'), ('Boston'), ('Graham'), ('green')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,DROP TABLE test7,collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test6 (a int, b text)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test6 VALUES (1, U&'\00E4bc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test6 VALUES (2, U&'\0061\0308bc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test6a (a int, b text[])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test6a VALUES (1, ARRAY[U&'\00E4bc'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test6a VALUES (2, ARRAY[U&'\0061\0308bc'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test1cs (x text COLLATE case_sensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test2cs (x text COLLATE case_sensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test3cs (x text COLLATE case_sensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test1cs VALUES ('abc'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test2cs VALUES ('ABC'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test3cs VALUES ('abc'), ('ABC'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test1cs VALUES ('ABC'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test1ci (x text COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test2ci (x text COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test3ci (x text COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test1ci VALUES ('abc'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test2ci VALUES ('ABC'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test3ci VALUES ('abc'), ('ABC'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test1ci VALUES ('ABC'),collate.icu.utf8.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""test1ci_x_idx"" DETAIL:  Key (x)=(ABC) already exists."
postgresql,postgresql,CREATE TABLE test1bpci (x char(3) COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test2bpci (x char(3) COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test3bpci (x char(3) COLLATE case_insensitive),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test1bpci VALUES ('abc'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test2bpci VALUES ('ABC'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test3bpci VALUES ('abc'), ('ABC'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test1bpci VALUES ('ABC'),collate.icu.utf8.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""test1bpci_x_idx"" DETAIL:  Key (x)=(ABC) already exists."
postgresql,postgresql,"CREATE TABLE test4c (x text COLLATE ""C"")",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test4c VALUES ('abc'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO outer_text VALUES ('a', 'a')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO outer_text VALUES ('b', 'a')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO outer_text VALUES ('A', NULL)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO outer_text VALUES ('B', NULL)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO inner_text VALUES ('a', NULL)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test4 (a int, b text)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test4 VALUES (1, 'cote'), (2, 'cÃÂ´te'), (3, 'cotÃÂ©'), (4, 'cÃÂ´tÃÂ©')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test10pk (x text COLLATE case_sensitive PRIMARY KEY),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test10pk VALUES ('abc'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test10fk (x text COLLATE case_insensitive REFERENCES test10pk (x) ON UPDATE CASCADE ON DELETE CASCADE),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test10fk VALUES ('abc'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test10fk VALUES ('ABC'),collate.icu.utf8.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""test10fk"" violates foreign key constraint ""test10fk_x_fkey"" DETAIL:  Key (x)=(ABC) is not present in table ""test10pk""."
postgresql,postgresql,INSERT INTO test10fk VALUES ('xyz'),collate.icu.utf8.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""test10fk"" violates foreign key constraint ""test10fk_x_fkey"" DETAIL:  Key (x)=(xyz) is not present in table ""test10pk""."
postgresql,postgresql,CREATE TABLE test11pk (x text COLLATE case_insensitive PRIMARY KEY),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test11pk VALUES ('abc'), ('def'), ('ghi')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test11fk (x text COLLATE case_sensitive REFERENCES test11pk (x) ON UPDATE CASCADE ON DELETE CASCADE),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test11fk VALUES ('abc'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test11fk VALUES ('ABC'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,INSERT INTO test11fk VALUES ('xyz'),collate.icu.utf8.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""test11fk"" violates foreign key constraint ""test11fk_x_fkey"" DETAIL:  Key (x)=(xyz) is not present in table ""test11pk""."
postgresql,postgresql,"CREATE TABLE test20 (a int, b text COLLATE case_insensitive) PARTITION BY LIST (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test20_1 PARTITION OF test20 FOR VALUES IN ('abc'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test20 VALUES (1, 'abc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test20 VALUES (2, 'ABC')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test21 (a int, b text COLLATE case_insensitive) PARTITION BY RANGE (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test21_1 PARTITION OF test21 FOR VALUES FROM ('ABC') TO ('DEF'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test21 VALUES (1, 'abc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test21 VALUES (2, 'ABC')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22 (a int, b text COLLATE case_sensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22_0 PARTITION OF test22 FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22_1 PARTITION OF test22 FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test22 VALUES (1, 'def')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test22 VALUES (2, 'DEF')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22a (a int, b text[] COLLATE case_sensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22a_0 PARTITION OF test22a FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test22a_1 PARTITION OF test22a FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test22a VALUES (1, ARRAY['def'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test22a VALUES (2, ARRAY['DEF'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23 (a int, b text COLLATE case_insensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23_0 PARTITION OF test23 FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23_1 PARTITION OF test23 FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test23 VALUES (1, 'def')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test23 VALUES (2, 'DEF')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23a (a int, b text[] COLLATE case_insensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23a_0 PARTITION OF test23a FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test23a_1 PARTITION OF test23a FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test23a VALUES (1, ARRAY['def'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test23a VALUES (2, ARRAY['DEF'])",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test30 (a int, b char(3) COLLATE case_insensitive) PARTITION BY LIST (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test30_1 PARTITION OF test30 FOR VALUES IN ('abc'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test30 VALUES (1, 'abc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test30 VALUES (2, 'ABC')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test31 (a int, b char(3) COLLATE case_insensitive) PARTITION BY RANGE (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,CREATE TABLE test31_1 PARTITION OF test31 FOR VALUES FROM ('ABC') TO ('DEF'),collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test31 VALUES (1, 'abc')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test31 VALUES (2, 'ABC')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test32 (a int, b char(3) COLLATE case_sensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test32_0 PARTITION OF test32 FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test32_1 PARTITION OF test32 FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test32 VALUES (1, 'def')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test32 VALUES (2, 'DEF')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test33 (a int, b char(3) COLLATE case_insensitive) PARTITION BY HASH (b)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test33_0 PARTITION OF test33 FOR VALUES WITH (MODULUS 2, REMAINDER 0)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test33_1 PARTITION OF test33 FOR VALUES WITH (MODULUS 2, REMAINDER 1)",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test33 VALUES (1, 'def')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"INSERT INTO test33 VALUES (2, 'DEF')",collate.icu.utf8.sql,SAME,,
postgresql,postgresql,"create table basictest            ( testint4 domainint4            , testtext domaintext            , testvarchar domainvarchar            , testnumeric domainnumeric            )",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO basictest values ('88', 'haha', 'short', '123.12')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO basictest values ('88', 'haha', 'short text', '123.12')",domain.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(5)
postgresql,postgresql,"INSERT INTO basictest values ('88', 'haha', 'short', '123.1212')",domain.sql,SAME,,
postgresql,postgresql,drop table basictest,domain.sql,SAME,,
postgresql,postgresql,"create table domarrtest            ( testint4arr domainint4arr            , testchar4arr domainchar4arr             )",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values ('{2,2}', '{{""a"",""b""},{""c"",""d""}}')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values ('{{2,2},{2,2}}', '{{""a"",""b""}}')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values ('{2,2}', '{{""a"",""b""},{""c"",""d""},{""e"",""f""}}')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values ('{2,2}', '{{""a""},{""c""}}')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values (NULL, '{{""a"",""b"",""c""},{""d"",""e"",""f""}}')",domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO domarrtest values (NULL, '{{""toolong"",""b"",""c""},{""d"",""e"",""f""}}')",domain.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(4)
postgresql,postgresql,"INSERT INTO domarrtest (testint4arr[1], testint4arr[3]) values (11,22)",domain.sql,SAME,,
postgresql,postgresql,drop table domarrtest,domain.sql,SAME,,
postgresql,postgresql,create table dcomptable (d1 dcomptype unique),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (row(1,2)::dcomptype)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (row(3,4)::comptype)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (row(1,2)::dcomptype)",domain.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""dcomptable_d1_key"" DETAIL:  Key (d1)=((1,2)) already exists."
postgresql,postgresql,insert into dcomptable (d1.r) values(11),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (row(1,2)::comptype)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (row(2,1)::comptype)",domain.sql,DIFFERENT,CheckViolation,"value for domain dcomptype violates check constraint ""c1"""
postgresql,postgresql,insert into dcomptable (d1.r) values(99),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable (d1.r, d1.i) values(99, 100)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable (d1.r, d1.i) values(100, 99)",domain.sql,DIFFERENT,CheckViolation,"value for domain dcomptype violates check constraint ""c1"""
postgresql,postgresql,drop table dcomptable,domain.sql,SAME,,
postgresql,postgresql,create table dcomptable (d1 dcomptypea unique),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(1,2)]::dcomptypea)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(3,4), row(5,6)]::comptype[])",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(7,8)::comptype, row(9,10)::comptype])",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(1,2)]::dcomptypea)",domain.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""dcomptable_d1_key"" DETAIL:  Key (d1)=({""(1,2)""}) already exists."
postgresql,postgresql,"insert into dcomptable (d1[1]) values(row(9,10))",domain.sql,SAME,,
postgresql,postgresql,insert into dcomptable (d1[1].r) values(11),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(1,2)]::comptype[])",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable values (array[row(2,1)]::comptype[])",domain.sql,DIFFERENT,CheckViolation,"value for domain dcomptypea violates check constraint ""c1"""
postgresql,postgresql,insert into dcomptable (d1[1].r) values(99),domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable (d1[1].r, d1[1].i) values(99, 100)",domain.sql,SAME,,
postgresql,postgresql,"insert into dcomptable (d1[1].r, d1[1].i) values(100, 99)",domain.sql,DIFFERENT,CheckViolation,"value for domain dcomptypea violates check constraint ""c1"""
postgresql,postgresql,drop table dcomptable,domain.sql,SAME,,
postgresql,postgresql,create table pitable (f1 posint[]),domain.sql,SAME,,
postgresql,postgresql,insert into pitable values(array[42]),domain.sql,SAME,,
postgresql,postgresql,insert into pitable values(array[-1]),domain.sql,DIFFERENT,CheckViolation,"value for domain posint violates check constraint ""posint_check"""
postgresql,postgresql,insert into pitable values('{0}'),domain.sql,DIFFERENT,CheckViolation,"value for domain posint violates check constraint ""posint_check"" LINE 1: insert into pitable values('{0}')"
postgresql,postgresql,drop table pitable,domain.sql,SAME,,
postgresql,postgresql,create table vc4table (f1 vc4[]),domain.sql,SAME,,
postgresql,postgresql,insert into vc4table values(array['too long']),domain.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(4)
postgresql,postgresql,insert into vc4table values(array['too long']::vc4[]),domain.sql,SAME,,
postgresql,postgresql,drop table vc4table,domain.sql,SAME,,
postgresql,postgresql,create table dposintatable (f1 dposinta[]),domain.sql,SAME,,
postgresql,postgresql,insert into dposintatable values(array[array[42]]),domain.sql,DIFFERENT,DatatypeMismatch,"column ""f1"" is of type dposinta[] but expression is of type integer[] LINE 1: insert into dposintatable values(array[array[42]])                                           HINT:  You will need to rewrite or cast the expression."
postgresql,postgresql,insert into dposintatable values(array[array[42]::posint[]]),domain.sql,DIFFERENT,DatatypeMismatch,"column ""f1"" is of type dposinta[] but expression is of type posint[] LINE 1: insert into dposintatable values(array[array[42]::posint[]])                                           HINT:  You will need to rewrite or cast the expression."
postgresql,postgresql,insert into dposintatable values(array[array[42]::dposinta]),domain.sql,SAME,,
postgresql,postgresql,drop table dposintatable,domain.sql,SAME,,
postgresql,postgresql,create table dcomptable (f1 dcomptype[]),domain.sql,SAME,,
postgresql,postgresql,insert into dcomptable values (null),domain.sql,SAME,,
postgresql,postgresql,drop table dcomptable,domain.sql,SAME,,
postgresql,postgresql,"create table nulltest            ( col1 dnotnull            , col2 dnotnull NULL              , col3 dnull    NOT NULL            , col4 dnull            , col5 dcheck CHECK (col5 IN ('c', 'd'))            )",domain.sql,SAME,,
postgresql,postgresql,INSERT INTO nulltest DEFAULT VALUES,domain.sql,DIFFERENT,NotNullViolation,domain dnotnull does not allow null values
postgresql,postgresql,"INSERT INTO nulltest values ('a', 'b', 'c', 'd', 'c')",domain.sql,SAME,,
postgresql,postgresql,"insert into nulltest values ('a', 'b', 'c', 'd', NULL)",domain.sql,DIFFERENT,NotNullViolation,domain dcheck does not allow null values
postgresql,postgresql,"insert into nulltest values ('a', 'b', 'c', 'd', 'a')",domain.sql,DIFFERENT,CheckViolation,"new row for relation ""nulltest"" violates check constraint ""nulltest_col5_check"" DETAIL:  Failing row contains (a, b, c, d, a)."
postgresql,postgresql,"INSERT INTO nulltest values (NULL, 'b', 'c', 'd', 'd')",domain.sql,DIFFERENT,NotNullViolation,domain dnotnull does not allow null values
postgresql,postgresql,"INSERT INTO nulltest values ('a', NULL, 'c', 'd', 'c')",domain.sql,DIFFERENT,NotNullViolation,domain dnotnull does not allow null values
postgresql,postgresql,"INSERT INTO nulltest values ('a', 'b', NULL, 'd', 'c')",domain.sql,DIFFERENT,NotNullViolation,"null value in column ""col3"" of relation ""nulltest"" violates not-null constraint DETAIL:  Failing row contains (a, b, null, d, c)."
postgresql,postgresql,"INSERT INTO nulltest values ('a', 'b', 'c', NULL, 'd')",domain.sql,SAME,,
postgresql,postgresql,drop table nulltest,domain.sql,SAME,,
postgresql,postgresql,"create table defaulttest             ( col1 ddef1             , col2 ddef2             , col3 ddef3             , col4 ddef4 PRIMARY KEY             , col5 ddef1 NOT NULL DEFAULT NULL             , col6 ddef2 DEFAULT '88'             , col7 ddef4 DEFAULT 8000             , col8 ddef5             )",domain.sql,SAME,,
postgresql,postgresql,insert into defaulttest(col4) values(0),domain.sql,DIFFERENT,NotNullViolation,"null value in column ""col5"" of relation ""defaulttest"" violates not-null constraint DETAIL:  Failing row contains (3, 12, 5, 0, null, 88, 8000, 12.12)."
postgresql,postgresql,insert into defaulttest default values,domain.sql,SAME,,
postgresql,postgresql,insert into defaulttest(col4) values(0),domain.sql,DIFFERENT,NotNullViolation,"null value in column ""col5"" of relation ""defaulttest"" violates not-null constraint DETAIL:  Failing row contains (3, 12, 5, 0, null, 88, 8000, 12.12)."
postgresql,postgresql,insert into defaulttest default values,domain.sql,SAME,,
postgresql,postgresql,insert into defaulttest default values,domain.sql,SAME,,
postgresql,postgresql,drop table defaulttest cascade,domain.sql,SAME,,
postgresql,postgresql,"create table domnotnull ( col1 dnotnulltest , col2 dnotnulltest )",domain.sql,SAME,,
postgresql,postgresql,insert into domnotnull default values,domain.sql,SAME,,
postgresql,postgresql,create table domdeftest (col1 ddef1),domain.sql,SAME,,
postgresql,postgresql,insert into domdeftest default values,domain.sql,SAME,,
postgresql,postgresql,insert into domdeftest default values,domain.sql,SAME,,
postgresql,postgresql,insert into domdeftest default values,domain.sql,SAME,,
postgresql,postgresql,drop table domdeftest,domain.sql,SAME,,
postgresql,postgresql,create table domcontest (col1 con),domain.sql,SAME,,
postgresql,postgresql,insert into domcontest values (1),domain.sql,SAME,,
postgresql,postgresql,insert into domcontest values (2),domain.sql,SAME,,
postgresql,postgresql,insert into domcontest values (-5),domain.sql,DIFFERENT,CheckViolation,"value for domain con violates check constraint ""con_check"""
postgresql,postgresql,insert into domcontest values (42),domain.sql,DIFFERENT,CheckViolation,"value for domain con violates check constraint ""t"""
postgresql,postgresql,insert into domcontest values (5),domain.sql,SAME,,
postgresql,postgresql,insert into domcontest values (-5),domain.sql,DIFFERENT,CheckViolation,"value for domain con violates check constraint ""con_check"""
postgresql,postgresql,insert into domcontest values (42),domain.sql,SAME,,
postgresql,postgresql,"create table domconnotnulltest ( col1 connotnull , col2 connotnull )",domain.sql,SAME,,
postgresql,postgresql,insert into domconnotnulltest default values,domain.sql,SAME,,
postgresql,postgresql,drop table domconnotnulltest,domain.sql,SAME,,
postgresql,postgresql,CREATE TABLE thethings (stuff things),domain.sql,SAME,,
postgresql,postgresql,INSERT INTO thethings (stuff) VALUES (55),domain.sql,SAME,,
postgresql,postgresql,create table domtab (col1 integer),domain.sql,SAME,,
postgresql,postgresql,insert into domtab (col1) values (null),domain.sql,SAME,,
postgresql,postgresql,insert into domtab (col1) values (5),domain.sql,SAME,,
postgresql,postgresql,insert into dtest values('x123'),domain.sql,SAME,,
postgresql,postgresql,insert into dtest values('x1234'),domain.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(4)
postgresql,postgresql,insert into dtest values('y1234'),domain.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(4)
postgresql,postgresql,insert into dtest values('y123'),domain.sql,DIFFERENT,CheckViolation,"value for domain dtop violates check constraint ""dinter_check"""
postgresql,postgresql,insert into dtest values('yz23'),domain.sql,DIFFERENT,CheckViolation,"value for domain dtop violates check constraint ""dinter_check"""
postgresql,postgresql,insert into dtest values('xz23'),domain.sql,DIFFERENT,CheckViolation,"value for domain dtop violates check constraint ""dtop_check"""
postgresql,postgresql,drop table dtest,domain.sql,SAME,,
postgresql,postgresql,"create table domain_test (a int, b int)",domain.sql,SAME,,
postgresql,postgresql,"insert into domain_test values (1, 2)",domain.sql,SAME,,
postgresql,postgresql,"insert into domain_test values (1, 2)",domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 ddtest1),domain.sql,SAME,,
postgresql,postgresql,insert into ddtest2 values(row(-1)),domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 ddtest1[]),domain.sql,SAME,,
postgresql,postgresql,insert into ddtest2 values('{(-1)}'),domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 ddtest1d),domain.sql,SAME,,
postgresql,postgresql,insert into ddtest2 values('(-1)'),domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 ddtest1d),domain.sql,SAME,,
postgresql,postgresql,insert into ddtest2 values('{(-1)}'),domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 rposint),domain.sql,SAME,,
postgresql,postgresql,"insert into ddtest2 values('(-1,3]')",domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,create table ddtest2(f1 posint2),domain.sql,SAME,,
postgresql,postgresql,insert into ddtest2 values(11),domain.sql,DIFFERENT,CheckViolation,"value for domain posint2 violates check constraint ""posint2_check"""
postgresql,postgresql,insert into ddtest2 values(-2),domain.sql,DIFFERENT,CheckViolation,"value for domain posint2 violates check constraint ""c1"""
postgresql,postgresql,insert into ddtest2 values(2),domain.sql,SAME,,
postgresql,postgresql,drop table ddtest2,domain.sql,SAME,,
postgresql,postgresql,"insert into op values (array[1,2])",domain.sql,SAME,,
postgresql,postgresql,"insert into op values (array[2,1])",domain.sql,DIFFERENT,CheckViolation,"value for domain orderedpair violates check constraint ""orderedpair_check"""
postgresql,postgresql,create table dom_table (x inotnull),domain.sql,SAME,,
postgresql,postgresql,insert into dom_table values ('1'),domain.sql,SAME,,
postgresql,postgresql,insert into dom_table values (1),domain.sql,SAME,,
postgresql,postgresql,insert into dom_table values (null),domain.sql,DIFFERENT,CheckViolation,"value for domain inotnull violates check constraint ""inotnull_check"""
postgresql,postgresql,drop table dom_table,domain.sql,SAME,,
postgresql,postgresql,"INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing)     SELECT         ('00000000-0000-0000-0000-'||to_char(g.i, '000000000000FM'))::uuid abort_increasing,         ('00000000-0000-0000-0000-'||to_char(20000 - g.i, '000000000000FM'))::uuid abort_decreasing,         (to_char(g.i % 10009, '00000000FM')||'-0000-0000-0000-'||to_char(g.i, '000000000000FM'))::uuid noabort_increasing,         (to_char(((20000 - g.i) % 10009), '00000000FM')||'-0000-0000-0000-'||to_char(20000 - g.i, '000000000000FM'))::uuid noabort_decreasing     FROM generate_series(0, 20000, 1) g(i)",tuplesort.sql,SAME,,
postgresql,postgresql,INSERT INTO abbrev_abort_uuids(id) VALUES(0),tuplesort.sql,SAME,,
postgresql,postgresql,INSERT INTO abbrev_abort_uuids DEFAULT VALUES,tuplesort.sql,SAME,,
postgresql,postgresql,INSERT INTO abbrev_abort_uuids DEFAULT VALUES,tuplesort.sql,SAME,,
postgresql,postgresql,"INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing)     SELECT abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing     FROM abbrev_abort_uuids     WHERE (id < 10 OR id > 19990) AND id % 3 = 0 AND abort_increasing is not null",tuplesort.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_mark_restore(col1, col2, col12)    SELECT a.i, b.i, a.i * b.i FROM generate_series(1, 500) a(i), generate_series(1, 5) b(i)",tuplesort.sql,SAME,,
postgresql,postgresql,DROP TABLE INET_TBL,inet.sql,DIFFERENT,UndefinedTable,"table ""inet_tbl"" does not exist"
postgresql,postgresql,"CREATE TABLE INET_TBL (c cidr, i inet)",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1', '192.168.1.226/24')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1.0/26', '192.168.1.226')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1', '192.168.1.0/24')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1', '192.168.1.0/25')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1', '192.168.1.255/24')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1', '192.168.1.255/25')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10', '10.1.2.3/8')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10.0.0.0', '10.1.2.3/8')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10.1.2.3', '10.1.2.3/32')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10.1.2', '10.1.2.3/24')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10.1', '10.1.2.3/16')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10', '10.1.2.3/8')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10', '11.1.2.3/8')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10', '9.1.2.3/8')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10:23::f1', '10:23::f1/64')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10:23::8000/113', '10:23::ffff')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('::ffff:1.2.3.4', '::4.3.2.1/24')",inet.sql,SAME,,
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('192.168.1.2/30', '192.168.1.226')",inet.sql,DIFFERENT,InvalidTextRepresentation,"invalid cidr value: ""192.168.1.2/30"" LINE 1: INSERT INTO INET_TBL (c, i) VALUES ('192.168.1.2/30', '192.1...                                              DETAIL:  Value has bits set to right of mask."
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('1234::1234::1234', '::1.2.3.4')",inet.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type cidr: ""1234::1234::1234"" LINE 1: INSERT INTO INET_TBL (c, i) VALUES ('1234::1234::1234', '::1..."
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES (cidr('192.168.1.2/30'), '192.168.1.226')",inet.sql,DIFFERENT,InvalidTextRepresentation,"invalid cidr value: ""192.168.1.2/30"" LINE 1: INSERT INTO INET_TBL (c, i) VALUES (cidr('192.168.1.2/30'), ...                                                   DETAIL:  Value has bits set to right of mask."
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES (cidr('ffff:ffff:ffff:ffff::/24'), '::192.168.1.226')",inet.sql,DIFFERENT,InvalidTextRepresentation,"invalid cidr value: ""ffff:ffff:ffff:ffff::/24"" LINE 1: INSERT INTO INET_TBL (c, i) VALUES (cidr('ffff:ffff:ffff:fff...                                                   DETAIL:  Value has bits set to right of mask."
postgresql,postgresql,"INSERT INTO INET_TBL (c, i) VALUES ('10', '10::/8')",inet.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mchash (a int, b text, c jsonb)   PARTITION BY HASH (a part_test_int4_ops, b part_test_text_ops)",hash_part.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,"CREATE TABLE mchash1   PARTITION OF mchash FOR VALUES WITH (MODULUS 4, REMAINDER 0)",hash_part.sql,DIFFERENT,UndefinedTable,"relation ""mchash"" does not exist"
postgresql,postgresql,"CREATE TABLE mcinthash (a int, b int, c jsonb)   PARTITION BY HASH (a part_test_int4_ops, b part_test_int4_ops)",hash_part.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,create table text_hashp (a text) partition by hash (a),hash_part.sql,SAME,,
postgresql,postgresql,"create table text_hashp0 partition of text_hashp for values with (modulus 2, remainder 0)",hash_part.sql,SAME,,
postgresql,postgresql,"create table text_hashp1 partition of text_hashp for values with (modulus 2, remainder 1)",hash_part.sql,SAME,,
postgresql,postgresql,DROP TABLE mchash,hash_part.sql,DIFFERENT,UndefinedTable,"table ""mchash"" does not exist"
postgresql,postgresql,DROP TABLE mcinthash,hash_part.sql,DIFFERENT,UndefinedTable,"table ""mcinthash"" does not exist"
postgresql,postgresql,DROP TABLE text_hashp,hash_part.sql,SAME,,
postgresql,postgresql,CREATE TABLE tenant_table (i integer),create_role.sql,SAME,,
postgresql,postgresql,DROP TABLE tenant_table,create_role.sql,SAME,,
postgresql,postgresql,CREATE TABLE tenant2_table (i integer),create_role.sql,SAME,,
postgresql,postgresql,DROP TABLE tenant2_table,create_role.sql,SAME,,
postgresql,postgresql,DROP TABLE tenant_table,create_role.sql,DIFFERENT,UndefinedTable,"table ""tenant_table"" does not exist"
postgresql,postgresql,"create table inserttest (col1 int4, col2 int4 NOT NULL, col3 text default 'testing')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT, DEFAULT)",insert.sql,DIFFERENT,NotNullViolation,"null value in column ""col2"" of relation ""inserttest"" violates not-null constraint DETAIL:  Failing row contains (null, null, testing)."
postgresql,postgresql,"insert into inserttest (col2, col3) values (3, DEFAULT)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (col1, col2, col3) values (DEFAULT, 5, DEFAULT)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest values (DEFAULT, 5, 'test')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest values (DEFAULT, 7)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT)",insert.sql,DIFFERENT,SyntaxError,"INSERT has more target columns than expressions LINE 1: insert into inserttest (col1, col2, col3) values (DEFAULT, D..."
postgresql,postgresql,"insert into inserttest (col1, col2, col3) values (1, 2)",insert.sql,DIFFERENT,SyntaxError,"INSERT has more target columns than expressions LINE 1: insert into inserttest (col1, col2, col3) values (1, 2)"
postgresql,postgresql,"insert into inserttest (col1) values (1, 2)",insert.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into inserttest (col1) values (1, 2)"
postgresql,postgresql,"insert into inserttest (col1) values (DEFAULT, DEFAULT)",insert.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into inserttest (col1) values (DEFAULT, DEFAULT)"
postgresql,postgresql,"insert into inserttest values(10, 20, '40'), (-1, 2, DEFAULT),     ((select 2), (select i from (values(3)) as foo (i)), 'values are fun!')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest values(30, 50, repeat('x', 10000))",insert.sql,SAME,,
postgresql,postgresql,drop table inserttest,insert.sql,SAME,,
postgresql,postgresql,"CREATE TABLE large_tuple_test (a int, b text) WITH (fillfactor = 10)",insert.sql,SAME,,
postgresql,postgresql,"INSERT INTO large_tuple_test (select 1, NULL)",insert.sql,SAME,,
postgresql,postgresql,"INSERT INTO large_tuple_test (select 2, repeat('a', 1000))",insert.sql,SAME,,
postgresql,postgresql,"INSERT INTO large_tuple_test (select 3, NULL)",insert.sql,SAME,,
postgresql,postgresql,"INSERT INTO large_tuple_test (select 4, repeat('a', 8126))",insert.sql,SAME,,
postgresql,postgresql,DROP TABLE large_tuple_test,insert.sql,SAME,,
postgresql,postgresql,"create table inserttest (f1 int, f2 int[],                          f3 insert_test_type, f4 insert_test_type[])",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f2[1], f2[2]) values (1,2)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f2[1], f2[2]) values (3,4), (5,6)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f2[1], f2[2]) select 7,8",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f2[1], f2[2]) values (1,default)",insert.sql,DIFFERENT,FeatureNotSupported,"cannot set an array element to DEFAULT LINE 1: insert into inserttest (f2[1], f2[2]) values (1,default)"
postgresql,postgresql,"insert into inserttest (f3.if1, f3.if2) values (1,array['foo'])",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f3.if1, f3.if2) values (1,'{foo}'), (2,'{bar}')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f3.if1, f3.if2) select 3, '{baz,quux}'",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f3.if1, f3.if2) values (1,default)",insert.sql,DIFFERENT,FeatureNotSupported,"cannot set a subfield to DEFAULT LINE 1: insert into inserttest (f3.if1, f3.if2) values (1,default)"
postgresql,postgresql,"insert into inserttest (f3.if2[1], f3.if2[2]) values ('foo', 'bar')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f3.if2[1], f3.if2[2]) values ('foo', 'bar'), ('baz', 'quux')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f3.if2[1], f3.if2[2]) select 'bear', 'beer'",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f4[1].if2[1], f4[1].if2[2]) values ('foo', 'bar')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f4[1].if2[1], f4[1].if2[2]) values ('foo', 'bar'), ('baz', 'quux')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttest (f4[1].if2[1], f4[1].if2[2]) select 'bear', 'beer'",insert.sql,SAME,,
postgresql,postgresql,"create table inserttest2 (f1 bigint, f2 text)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule1 as on insert to inserttest2 do also   insert into inserttest (f3.if2[1], f3.if2[2])   values (new.f1,new.f2)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule2 as on insert to inserttest2 do also   insert into inserttest (f4[1].if1, f4[1].if2[2])   values (1,'fool'),(new.f1,new.f2)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule3 as on insert to inserttest2 do also   insert into inserttest (f4[1].if1, f4[1].if2[2])   select new.f1, new.f2",insert.sql,SAME,,
postgresql,postgresql,drop table inserttest2,insert.sql,SAME,,
postgresql,postgresql,drop table inserttest,insert.sql,SAME,,
postgresql,postgresql,"create table inserttesta (f1 int, f2 insert_pos_ints)",insert.sql,SAME,,
postgresql,postgresql,"create table inserttestb (f3 insert_test_domain, f4 insert_test_domain[])",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) values (1,2)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) values (3,4), (5,6)",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) select 7,8",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) values (1,default)",insert.sql,DIFFERENT,FeatureNotSupported,"cannot set an array element to DEFAULT LINE 1: insert into inserttesta (f2[1], f2[2]) values (1,default)"
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) values (0,2)",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_pos_ints violates check constraint ""insert_pos_ints_check"""
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) values (3,4), (0,6)",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_pos_ints violates check constraint ""insert_pos_ints_check"""
postgresql,postgresql,"insert into inserttesta (f2[1], f2[2]) select 0,8",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_pos_ints violates check constraint ""insert_pos_ints_check"""
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) values (1,array['foo'])",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) values (1,'{foo}'), (2,'{bar}')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) select 3, '{baz,quux}'",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) values (1,default)",insert.sql,DIFFERENT,FeatureNotSupported,"cannot set a subfield to DEFAULT LINE 1: insert into inserttestb (f3.if1, f3.if2) values (1,default)"
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) values (1,array[null])",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_test_domain violates check constraint ""insert_test_domain_check"""
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) values (1,'{null}'), (2,'{bar}')",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_test_domain violates check constraint ""insert_test_domain_check"""
postgresql,postgresql,"insert into inserttestb (f3.if1, f3.if2) select 3, '{null,quux}'",insert.sql,DIFFERENT,CheckViolation,"value for domain insert_test_domain violates check constraint ""insert_test_domain_check"""
postgresql,postgresql,"insert into inserttestb (f3.if2[1], f3.if2[2]) values ('foo', 'bar')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3.if2[1], f3.if2[2]) values ('foo', 'bar'), ('baz', 'quux')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3.if2[1], f3.if2[2]) select 'bear', 'beer'",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3, f4[1].if2[1], f4[1].if2[2]) values (row(1,'{x}'), 'foo', 'bar')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3, f4[1].if2[1], f4[1].if2[2]) values (row(1,'{x}'), 'foo', 'bar'), (row(2,'{y}'), 'baz', 'quux')",insert.sql,SAME,,
postgresql,postgresql,"insert into inserttestb (f3, f4[1].if2[1], f4[1].if2[2]) select row(1,'{x}')::insert_test_domain, 'bear', 'beer'",insert.sql,SAME,,
postgresql,postgresql,"create table inserttest2 (f1 bigint, f2 text)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule1 as on insert to inserttest2 do also   insert into inserttestb (f3.if2[1], f3.if2[2])   values (new.f1,new.f2)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule2 as on insert to inserttest2 do also   insert into inserttestb (f4[1].if1, f4[1].if2[2])   values (1,'fool'),(new.f1,new.f2)",insert.sql,SAME,,
postgresql,postgresql,"create rule irule3 as on insert to inserttest2 do also   insert into inserttestb (f4[1].if1, f4[1].if2[2])   select new.f1, new.f2",insert.sql,SAME,,
postgresql,postgresql,drop table inserttest2,insert.sql,SAME,,
postgresql,postgresql,drop table inserttesta,insert.sql,SAME,,
postgresql,postgresql,drop table inserttestb,insert.sql,SAME,,
postgresql,postgresql,create table inserttesta (f1 insert_nnarray),insert.sql,SAME,,
postgresql,postgresql,insert into inserttesta (f1[1]) values (1),insert.sql,DIFFERENT,CheckViolation,"value for domain insert_nnarray violates check constraint ""insert_nnarray_check"""
postgresql,postgresql,"insert into inserttesta (f1[1], f1[2]) values (1, 2)",insert.sql,SAME,,
postgresql,postgresql,create table inserttestb (f1 insert_test_domain),insert.sql,SAME,,
postgresql,postgresql,insert into inserttestb (f1.if1) values (1),insert.sql,DIFFERENT,CheckViolation,"value for domain insert_test_domain violates check constraint ""insert_test_domain_check"""
postgresql,postgresql,"insert into inserttestb (f1.if1, f1.if2) values (1, '{foo}')",insert.sql,SAME,,
postgresql,postgresql,drop table inserttesta,insert.sql,SAME,,
postgresql,postgresql,drop table inserttestb,insert.sql,SAME,,
postgresql,postgresql,"create table range_parted ( 	a text, 	b int ) partition by range (a, (b+0))",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('a', 11)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""range_parted"" found for row DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 11)."
postgresql,postgresql,"create table part1 partition of range_parted for values from ('a', 1) to ('a', 10)",insert.sql,SAME,,
postgresql,postgresql,"create table part2 partition of range_parted for values from ('a', 10) to ('a', 20)",insert.sql,SAME,,
postgresql,postgresql,"create table part3 partition of range_parted for values from ('b', 1) to ('b', 10)",insert.sql,SAME,,
postgresql,postgresql,"create table part4 partition of range_parted for values from ('b', 10) to ('b', 20)",insert.sql,SAME,,
postgresql,postgresql,"insert into part1 values ('a', 11)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part1"" violates partition constraint DETAIL:  Failing row contains (a, 11)."
postgresql,postgresql,"insert into part1 values ('b', 1)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part1"" violates partition constraint DETAIL:  Failing row contains (b, 1)."
postgresql,postgresql,"insert into part1 values ('a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into part4 values ('b', 21)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part4"" violates partition constraint DETAIL:  Failing row contains (b, 21)."
postgresql,postgresql,"insert into part4 values ('a', 10)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part4"" violates partition constraint DETAIL:  Failing row contains (a, 10)."
postgresql,postgresql,"insert into part4 values ('b', 10)",insert.sql,SAME,,
postgresql,postgresql,insert into part1 values (null),insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part1"" violates partition constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,insert into part1 values (1),insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part1"" violates partition constraint DETAIL:  Failing row contains (1, null)."
postgresql,postgresql,"create table list_parted ( 	a text, 	b int ) partition by list (lower(a))",insert.sql,SAME,,
postgresql,postgresql,"create table part_aa_bb partition of list_parted FOR VALUES IN ('aa', 'bb')",insert.sql,SAME,,
postgresql,postgresql,"create table part_cc_dd partition of list_parted FOR VALUES IN ('cc', 'dd')",insert.sql,SAME,,
postgresql,postgresql,create table part_null partition of list_parted FOR VALUES IN (null),insert.sql,SAME,,
postgresql,postgresql,"insert into part_aa_bb values ('cc', 1)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_aa_bb"" violates partition constraint DETAIL:  Failing row contains (cc, 1)."
postgresql,postgresql,"insert into part_aa_bb values ('AAa', 1)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_aa_bb"" violates partition constraint DETAIL:  Failing row contains (AAa, 1)."
postgresql,postgresql,insert into part_aa_bb values (null),insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_aa_bb"" violates partition constraint DETAIL:  Failing row contains (null, null)."
postgresql,postgresql,"insert into part_cc_dd values ('cC', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into part_null values (null, 0)",insert.sql,SAME,,
postgresql,postgresql,"create table part_ee_ff partition of list_parted for values in ('ee', 'ff') partition by range (b)",insert.sql,SAME,,
postgresql,postgresql,create table part_ee_ff1 partition of part_ee_ff for values from (1) to (10),insert.sql,SAME,,
postgresql,postgresql,create table part_ee_ff2 partition of part_ee_ff for values from (10) to (20),insert.sql,SAME,,
postgresql,postgresql,create table part_default partition of list_parted default,insert.sql,SAME,,
postgresql,postgresql,"insert into part_default values ('aa', 2)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_default"" violates partition constraint DETAIL:  Failing row contains (aa, 2)."
postgresql,postgresql,"insert into part_default values (null, 2)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_default"" violates partition constraint DETAIL:  Failing row contains (null, 2)."
postgresql,postgresql,"insert into part_default values ('Zz', 2)",insert.sql,SAME,,
postgresql,postgresql,drop table part_default,insert.sql,SAME,,
postgresql,postgresql,"create table part_xx_yy partition of list_parted for values in ('xx', 'yy') partition by list (a)",insert.sql,SAME,,
postgresql,postgresql,create table part_xx_yy_p1 partition of part_xx_yy for values in ('xx'),insert.sql,SAME,,
postgresql,postgresql,create table part_xx_yy_defpart partition of part_xx_yy default,insert.sql,SAME,,
postgresql,postgresql,create table part_default partition of list_parted default partition by range(b),insert.sql,SAME,,
postgresql,postgresql,create table part_default_p1 partition of part_default for values from (20) to (30),insert.sql,SAME,,
postgresql,postgresql,create table part_default_p2 partition of part_default for values from (30) to (40),insert.sql,SAME,,
postgresql,postgresql,"insert into part_ee_ff1 values ('EE', 11)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_ee_ff1"" violates partition constraint DETAIL:  Failing row contains (EE, 11)."
postgresql,postgresql,"insert into part_default_p2 values ('gg', 43)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_default_p2"" violates partition constraint DETAIL:  Failing row contains (gg, 43)."
postgresql,postgresql,"insert into part_ee_ff1 values ('cc', 1)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_ee_ff1"" violates partition constraint DETAIL:  Failing row contains (cc, 1)."
postgresql,postgresql,"insert into part_default values ('gg', 43)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""part_default"" found for row DETAIL:  Partition key of the failing row contains (b) = (43)."
postgresql,postgresql,"insert into part_ee_ff1 values ('ff', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into part_ee_ff2 values ('ff', 11)",insert.sql,SAME,,
postgresql,postgresql,"insert into part_default_p1 values ('cd', 25)",insert.sql,SAME,,
postgresql,postgresql,"insert into part_default_p2 values ('de', 35)",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values ('ab', 21)",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values ('xx', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values ('yy', 2)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('a', 0)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""range_parted"" found for row DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 0)."
postgresql,postgresql,"insert into range_parted values ('a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('a', 10)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('a', 20)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""range_parted"" found for row DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 20)."
postgresql,postgresql,"insert into range_parted values ('b', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('b', 10)",insert.sql,SAME,,
postgresql,postgresql,insert into range_parted values ('a'),insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""range_parted"" found for row DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, null)."
postgresql,postgresql,create table part_def partition of range_parted default,insert.sql,SAME,,
postgresql,postgresql,"insert into part_def values ('b', 10)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""part_def"" violates partition constraint DETAIL:  Failing row contains (b, 10)."
postgresql,postgresql,"insert into part_def values ('c', 10)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values (null, null)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('a', null)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values (null, 19)",insert.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('b', 20)",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values (null, 1)",insert.sql,SAME,,
postgresql,postgresql,insert into list_parted (a) values ('aA'),insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values ('EE', 0)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""part_ee_ff"" found for row DETAIL:  Partition key of the failing row contains (b) = (0)."
postgresql,postgresql,"insert into part_ee_ff values ('EE', 0)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""part_ee_ff"" found for row DETAIL:  Partition key of the failing row contains (b) = (0)."
postgresql,postgresql,"insert into list_parted values ('EE', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into part_ee_ff values ('EE', 10)",insert.sql,SAME,,
postgresql,postgresql,create table part_gg partition of list_parted for values in ('gg') partition by range (b),insert.sql,SAME,,
postgresql,postgresql,create table part_gg1 partition of part_gg for values from (minvalue) to (1),insert.sql,SAME,,
postgresql,postgresql,create table part_gg2 partition of part_gg for values from (1) to (10) partition by range (b),insert.sql,SAME,,
postgresql,postgresql,create table part_gg2_1 partition of part_gg2 for values from (1) to (5),insert.sql,SAME,,
postgresql,postgresql,create table part_gg2_2 partition of part_gg2 for values from (5) to (10),insert.sql,SAME,,
postgresql,postgresql,create table part_ee_ff3 partition of part_ee_ff for values from (20) to (30) partition by range (b),insert.sql,SAME,,
postgresql,postgresql,create table part_ee_ff3_1 partition of part_ee_ff3 for values from (20) to (25),insert.sql,SAME,,
postgresql,postgresql,create table part_ee_ff3_2 partition of part_ee_ff3 for values from (25) to (30),insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted values ('aa'), ('cc')",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted select 'Ff', s.a from generate_series(1, 29) s(a)",insert.sql,SAME,,
postgresql,postgresql,"insert into list_parted select 'gg', s.a from generate_series(1, 9) s(a)",insert.sql,SAME,,
postgresql,postgresql,insert into list_parted (b) values (1),insert.sql,SAME,,
postgresql,postgresql,create table hash_parted ( 	a int ) partition by hash (a part_test_int4_ops),insert.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,"create table hpart0 partition of hash_parted for values with (modulus 4, remainder 0)",insert.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart1 partition of hash_parted for values with (modulus 4, remainder 1)",insert.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart2 partition of hash_parted for values with (modulus 4, remainder 2)",insert.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart3 partition of hash_parted for values with (modulus 4, remainder 3)",insert.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"insert into hash_parted values(generate_series(1,10))",insert.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist LINE 1: insert into hash_parted values(generate_series(1,10))"
postgresql,postgresql,"insert into hpart0 values(12),(16)",insert.sql,DIFFERENT,UndefinedTable,"relation ""hpart0"" does not exist LINE 1: insert into hpart0 values(12),(16)"
postgresql,postgresql,insert into hpart0 values(11),insert.sql,DIFFERENT,UndefinedTable,"relation ""hpart0"" does not exist LINE 1: insert into hpart0 values(11)"
postgresql,postgresql,insert into hpart3 values(11),insert.sql,DIFFERENT,UndefinedTable,"relation ""hpart3"" does not exist LINE 1: insert into hpart3 values(11)"
postgresql,postgresql,"drop table range_parted, list_parted",insert.sql,SAME,,
postgresql,postgresql,drop table hash_parted,insert.sql,DIFFERENT,UndefinedTable,"table ""hash_parted"" does not exist"
postgresql,postgresql,create table list_parted (a int) partition by list (a),insert.sql,SAME,,
postgresql,postgresql,create table part_default partition of list_parted default,insert.sql,SAME,,
postgresql,postgresql,insert into part_default values (null),insert.sql,SAME,,
postgresql,postgresql,insert into part_default values (1),insert.sql,SAME,,
postgresql,postgresql,insert into part_default values (-1),insert.sql,SAME,,
postgresql,postgresql,drop table list_parted,insert.sql,SAME,,
postgresql,postgresql,"create table mlparted (a int, b int) partition by range (a, b)",insert.sql,SAME,,
postgresql,postgresql,"create table mlparted1 (b int not null, a int not null) partition by range ((b+0))",insert.sql,SAME,,
postgresql,postgresql,create table mlparted11 (like mlparted1),insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 2)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted (a, b) values (1, 5)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted1"" found for row DETAIL:  Partition key of the failing row contains ((b + 0)) = (5)."
postgresql,postgresql,"insert into mlparted values (1, 2)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted11"" violates check constraint ""check_b"" DETAIL:  Failing row contains (1, 4)."
postgresql,postgresql,"insert into mlparted1 (a, b) values (2, 3)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted1"" violates partition constraint DETAIL:  Failing row contains (3, 2)."
postgresql,postgresql,"create table lparted_nonullpart (a int, b char) partition by list (b)",insert.sql,SAME,,
postgresql,postgresql,create table lparted_nonullpart_a partition of lparted_nonullpart for values in ('a'),insert.sql,SAME,,
postgresql,postgresql,insert into lparted_nonullpart values (1),insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""lparted_nonullpart"" found for row DETAIL:  Partition key of the failing row contains (b) = (null)."
postgresql,postgresql,drop table lparted_nonullpart,insert.sql,SAME,,
postgresql,postgresql,create table mlparted12 partition of mlparted1 for values from (5) to (10),insert.sql,SAME,,
postgresql,postgresql,"create table mlparted2 (b int not null, a int not null)",insert.sql,SAME,,
postgresql,postgresql,"create table mlparted3 partition of mlparted for values from (1, 20) to (1, 30)",insert.sql,SAME,,
postgresql,postgresql,create table mlparted4 (like mlparted),insert.sql,SAME,,
postgresql,postgresql,"with ins (a, b, c) as   (insert into mlparted (b, a) select s.a, 1 from generate_series(2, 39) s(a) returning tableoid::regclass, *)   select a, b, min(c), max(c) from ins group by a, b order by 1",insert.sql,SAME,,
postgresql,postgresql,"create table mlparted5 (c text, a int not null, b int not null) partition by list (c)",insert.sql,SAME,,
postgresql,postgresql,"create table mlparted5a (a int not null, c text, b int not null)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 45, 'a')",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted5a"" violates check constraint ""check_b"" DETAIL:  Failing row contains (1, 45, a)."
postgresql,postgresql,"insert into mlparted5 (a, b, c) values (1, 40, 'a')",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted5a"" violates partition constraint DETAIL:  Failing row contains (b, 1, 40)."
postgresql,postgresql,drop table mlparted5,insert.sql,SAME,,
postgresql,postgresql,create table mlparted_def partition of mlparted default partition by range(a),insert.sql,SAME,,
postgresql,postgresql,create table mlparted_def1 partition of mlparted_def for values from (40) to (50),insert.sql,SAME,,
postgresql,postgresql,create table mlparted_def2 partition of mlparted_def for values from (50) to (60),insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (40, 100)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted_def1 values (42, 100)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted_def2 values (54, 50)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (70, 100)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted_def"" found for row DETAIL:  Partition key of the failing row contains (a) = (70)."
postgresql,postgresql,"insert into mlparted_def1 values (52, 50)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted_def1"" violates partition constraint DETAIL:  Failing row contains (52, 50, null)."
postgresql,postgresql,"insert into mlparted_def2 values (34, 50)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mlparted_def2"" violates partition constraint DETAIL:  Failing row contains (34, 50, null)."
postgresql,postgresql,create table mlparted_defd partition of mlparted_def default,insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (70, 100)",insert.sql,SAME,,
postgresql,postgresql,"create table mlparted5 partition of mlparted   for values from (1, 40) to (1, 50) partition by range (c)",insert.sql,SAME,,
postgresql,postgresql,create table mlparted5_ab partition of mlparted5   for values from ('a') to ('c') partition by list (c),insert.sql,SAME,,
postgresql,postgresql,create table mlparted5_cd partition of mlparted5   for values from ('c') to ('e') partition by list (c),insert.sql,SAME,,
postgresql,postgresql,create table mlparted5_a partition of mlparted5_ab for values in ('a'),insert.sql,SAME,,
postgresql,postgresql,"create table mlparted5_b (d int, b int, c text, a int)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 2, 'a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 40, 'a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 45, 'b', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 45, 'c', 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted5_cd"" found for row DETAIL:  Partition key of the failing row contains (c) = (c)."
postgresql,postgresql,"insert into mlparted values (1, 45, 'f', 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted5"" found for row DETAIL:  Partition key of the failing row contains (c) = (f)."
postgresql,postgresql,"insert into mlparted values (1, 2, 'a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 40, 'a', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 45, 'b', 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mlparted values (1, 45, 'c', 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted5_cd"" found for row DETAIL:  Partition key of the failing row contains (c) = (c)."
postgresql,postgresql,"insert into mlparted values (1, 45, 'f', 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mlparted5"" found for row DETAIL:  Partition key of the failing row contains (c) = (f)."
postgresql,postgresql,drop table mlparted5,insert.sql,SAME,,
postgresql,postgresql,"create table key_desc (a int, b int) partition by list ((a+0))",insert.sql,SAME,,
postgresql,postgresql,create table key_desc_1 partition of key_desc for values in (1) partition by range (b),insert.sql,SAME,,
postgresql,postgresql,"insert into key_desc values (1, 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""key_desc_1"" found for row DETAIL:  Partition key of the failing row contains (b) = (1)."
postgresql,postgresql,"insert into key_desc values (1, 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""key_desc_1"" found for row DETAIL:  Partition key of the failing row contains (b) = (1)."
postgresql,postgresql,"insert into key_desc values (2, 1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""key_desc"" found for row DETAIL:  Partition key of the failing row contains ((a + 0)) = (2)."
postgresql,postgresql,"drop table key_desc, key_desc_1",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted (a int, b int, c int) partition by range (a, abs(b), c)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted0 partition of mcrparted for values from (minvalue, 0, 0) to (1, maxvalue, maxvalue)",insert.sql,DIFFERENT,DatatypeMismatch,"every bound following MINVALUE must also be MINVALUE LINE 1: ...partition of mcrparted for values from (minvalue, 0, 0) to (..."
postgresql,postgresql,"create table mcrparted2 partition of mcrparted for values from (10, 6, minvalue) to (10, maxvalue, minvalue)",insert.sql,DIFFERENT,DatatypeMismatch,"every bound following MAXVALUE must also be MAXVALUE LINE 1: ...or values from (10, 6, minvalue) to (10, maxvalue, minvalue)"
postgresql,postgresql,"create table mcrparted4 partition of mcrparted for values from (21, minvalue, 0) to (30, 20, minvalue)",insert.sql,DIFFERENT,DatatypeMismatch,"every bound following MINVALUE must also be MINVALUE LINE 1: ...ition of mcrparted for values from (21, minvalue, 0) to (30,..."
postgresql,postgresql,"create table mcrparted0 partition of mcrparted for values from (minvalue, minvalue, minvalue) to (1, maxvalue, maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted1 partition of mcrparted for values from (2, 1, minvalue) to (10, 5, 10)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted2 partition of mcrparted for values from (10, 6, minvalue) to (10, maxvalue, maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted3 partition of mcrparted for values from (11, 1, 1) to (20, 10, 10)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted4 partition of mcrparted for values from (21, minvalue, minvalue) to (30, 20, maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted5 partition of mcrparted for values from (30, 21, 20) to (maxvalue, maxvalue, maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (null, null, null)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mcrparted"" found for row DETAIL:  Partition key of the failing row contains (a, abs(b), c) = (null, null, null)."
postgresql,postgresql,"insert into mcrparted values (0, 1, 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted0 values (0, 1, 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (9, 1000, 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted1 values (9, 1000, 1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (10, 5, -1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted1 values (10, 5, -1)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (2, 1, 0)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted1 values (2, 1, 0)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (10, 6, 1000)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted2 values (10, 6, 1000)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (10, 1000, 1000)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted2 values (10, 1000, 1000)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values (11, 1, -1)",insert.sql,DIFFERENT,CheckViolation,"no partition of relation ""mcrparted"" found for row DETAIL:  Partition key of the failing row contains (a, abs(b), c) = (11, 1, -1)."
postgresql,postgresql,"insert into mcrparted3 values (11, 1, -1)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mcrparted3"" violates partition constraint DETAIL:  Failing row contains (11, 1, -1)."
postgresql,postgresql,"insert into mcrparted values (30, 21, 20)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted5 values (30, 21, 20)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted4 values (30, 21, 20)",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""mcrparted4"" violates partition constraint DETAIL:  Failing row contains (30, 21, 20)."
postgresql,postgresql,drop table mcrparted,insert.sql,SAME,,
postgresql,postgresql,"create table brtrigpartcon (a int, b text) partition by list (a)",insert.sql,SAME,,
postgresql,postgresql,create table brtrigpartcon1 partition of brtrigpartcon for values in (1),insert.sql,SAME,,
postgresql,postgresql,"insert into brtrigpartcon values (1, 'hi there')",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""brtrigpartcon1"" violates partition constraint DETAIL:  Failing row contains (2, hi there)."
postgresql,postgresql,"insert into brtrigpartcon1 values (1, 'hi there')",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""brtrigpartcon1"" violates partition constraint DETAIL:  Failing row contains (2, hi there)."
postgresql,postgresql,"create table inserttest3 (f1 text default 'foo', f2 text default 'bar', f3 int)",insert.sql,SAME,,
postgresql,postgresql,"with result as (insert into brtrigpartcon values (1, 'hi there') returning 1)   insert into inserttest3 (f3) select * from result",insert.sql,DIFFERENT,CheckViolation,"new row for relation ""brtrigpartcon1"" violates partition constraint DETAIL:  Failing row contains (2, hi there)."
postgresql,postgresql,drop table inserttest3,insert.sql,SAME,,
postgresql,postgresql,drop table brtrigpartcon,insert.sql,SAME,,
postgresql,postgresql,"create table donothingbrtrig_test (a int, b text) partition by list (a)",insert.sql,SAME,,
postgresql,postgresql,"create table donothingbrtrig_test1 (b text, a int)",insert.sql,SAME,,
postgresql,postgresql,"create table donothingbrtrig_test2 (c text, b text, a int)",insert.sql,SAME,,
postgresql,postgresql,"insert into donothingbrtrig_test values (1, 'foo'), (2, 'bar')",insert.sql,SAME,,
postgresql,postgresql,drop table donothingbrtrig_test,insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted (a text, b int) partition by range(a, b)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted1_lt_b partition of mcrparted for values from (minvalue, minvalue) to ('b', minvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted2_b partition of mcrparted for values from ('b', minvalue) to ('c', minvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted3_c_to_common partition of mcrparted for values from ('c', minvalue) to ('common', minvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted4_common_lt_0 partition of mcrparted for values from ('common', minvalue) to ('common', 0)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted5_common_0_to_10 partition of mcrparted for values from ('common', 0) to ('common', 10)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted6_common_ge_10 partition of mcrparted for values from ('common', 10) to ('common', maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted7_gt_common_lt_d partition of mcrparted for values from ('common', maxvalue) to ('d', minvalue)",insert.sql,SAME,,
postgresql,postgresql,"create table mcrparted8_ge_d partition of mcrparted for values from ('d', minvalue) to (maxvalue, maxvalue)",insert.sql,SAME,,
postgresql,postgresql,"insert into mcrparted values ('aaa', 0), ('b', 0), ('bz', 10), ('c', -10),     ('comm', -10), ('common', -10), ('common', 0), ('common', 10),     ('commons', 0), ('d', -10), ('e', 0)",insert.sql,SAME,,
postgresql,postgresql,drop table mcrparted,insert.sql,SAME,,
postgresql,postgresql,create table returningwrtest (a int) partition by list (a),insert.sql,SAME,,
postgresql,postgresql,create table returningwrtest1 partition of returningwrtest for values in (1),insert.sql,SAME,,
postgresql,postgresql,insert into returningwrtest values (1) returning returningwrtest,insert.sql,SAME,,
postgresql,postgresql,"create table returningwrtest2 (b text, c int, a int)",insert.sql,SAME,,
postgresql,postgresql,"insert into returningwrtest values (2, 'foo') returning returningwrtest",insert.sql,SAME,,
postgresql,postgresql,drop table returningwrtest,insert.sql,SAME,,
postgresql,postgresql,"CREATE TABLE macaddr_data (a int, b macaddr)",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (1, '08:00:2b:01:02:03')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (2, '08-00-2b-01-02-03')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (3, '08002b:010203')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (4, '08002b-010203')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (5, '0800.2b01.0203')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (6, '0800-2b01-0203')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (7, '08002b010203')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (8, '0800:2b01:0203')",macaddr.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type macaddr: ""0800:2b01:0203"" LINE 1: INSERT INTO macaddr_data VALUES (8, '0800:2b01:0203')"
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (9, 'not even close')",macaddr.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type macaddr: ""not even close"" LINE 1: INSERT INTO macaddr_data VALUES (9, 'not even close')"
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (10, '08:00:2b:01:02:04')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (11, '08:00:2b:01:02:02')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (12, '08:00:2a:01:02:03')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (13, '08:00:2c:01:02:03')",macaddr.sql,SAME,,
postgresql,postgresql,"INSERT INTO macaddr_data VALUES (14, '08:00:2a:01:02:04')",macaddr.sql,SAME,,
postgresql,postgresql,DROP TABLE macaddr_data,macaddr.sql,SAME,,
postgresql,postgresql,"insert into gstest4 values (1,1,b'0000','1'), (2,2,b'0001','1'),        (3,4,b'0010','2'), (4,8,b'0011','2'),        (5,16,b'0000','2'), (6,32,b'0001','2'),        (7,64,b'0010','1'), (8,128,b'0011','1')",groupingsets.sql,SAME,,
postgresql,postgresql,"create table bug_16784(i int, j int)",groupingsets.sql,SAME,,
postgresql,postgresql,"insert into bug_16784 select g/10, g from generate_series(1,40) g",groupingsets.sql,SAME,,
postgresql,postgresql,"create table gs_data_1 as select g%1000 as g1000, g%100 as g100, g%10 as g10, g    from generate_series(0,1999) g",groupingsets.sql,SAME,,
postgresql,postgresql,"create table gs_group_1 as select g100, g10, sum(g::numeric), count(*), max(g::text) from gs_data_1 group by cube (g1000, g100,g10)",groupingsets.sql,SAME,,
postgresql,postgresql,"create table gs_hash_1 as select g100, g10, sum(g::numeric), count(*), max(g::text) from gs_data_1 group by cube (g1000, g100,g10)",groupingsets.sql,SAME,,
postgresql,postgresql,drop table gs_group_1,groupingsets.sql,SAME,,
postgresql,postgresql,drop table gs_hash_1,groupingsets.sql,SAME,,
postgresql,postgresql,CREATE TABLE test_pg_c_utf8 (   t TEXT COLLATE PG_C_UTF8 ),collate.utf8.sql,DIFFERENT,UndefinedObject,"collation ""pg_c_utf8"" for encoding ""UTF8"" does not exist LINE 2:   t TEXT COLLATE PG_C_UTF8"
postgresql,postgresql,"INSERT INTO test_pg_c_utf8 VALUES   ('abc DEF 123abc'),   ('ÃÂ¡bc sÃÂs ÃÂss DÃÂF'),   ('ÃÂxxÃÂ ÃÂxxÃÂ ÃÂxxÃÂ'),   ('ÃÂºÃÂºÃÂº'),   ('Ã¢Â±Â¥Ã¢Â±Â¥Ã¢Â±Â¥'),   ('Ã¢Â±Â¥ÃÂº')",collate.utf8.sql,DIFFERENT,UndefinedTable,"relation ""test_pg_c_utf8"" does not exist LINE 1: INSERT INTO test_pg_c_utf8 VALUES"
postgresql,postgresql,DROP TABLE test_pg_c_utf8,collate.utf8.sql,DIFFERENT,UndefinedTable,"table ""test_pg_c_utf8"" does not exist"
postgresql,postgresql,CREATE TABLE ref_table (id integer PRIMARY KEY),foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE ref_table,foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a),foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE lt1,foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a),foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE lt1,foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a),foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE lt1_part1   PARTITION OF lt1 FOR VALUES FROM (0) TO (1000)   PARTITION BY RANGE (a),foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE lt1,foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE use_ft1_column_type (x ft1),foreign_data.sql,DIFFERENT,UndefinedObject,"type ""ft1"" does not exist LINE 1: CREATE TABLE use_ft1_column_type (x ft1)"
postgresql,postgresql,DROP TABLE use_ft1_column_type,foreign_data.sql,DIFFERENT,UndefinedTable,"table ""use_ft1_column_type"" does not exist"
postgresql,postgresql,"CREATE TABLE fd_pt1 ( 	c1 integer NOT NULL, 	c2 text, 	c3 date )",foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE ct3() INHERITS(ft2),foreign_data.sql,DIFFERENT,UndefinedTable,"relation ""ft2"" does not exist"
postgresql,postgresql,"INSERT INTO fd_pt1 VALUES (1, 'fd_pt1'::text, '1994-01-01'::date)",foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE fd_pt1 CASCADE,foreign_data.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fd_pt2 ( 	c1 integer NOT NULL, 	c2 text, 	c3 date ) PARTITION BY LIST (c1)",foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE fd_pt2,foreign_data.sql,SAME,,
postgresql,postgresql,DROP TABLE temp_parted,foreign_data.sql,SAME,,
postgresql,postgresql,CREATE TABLE BOOLTBL1 (f1 bool),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL1 (f1) VALUES (bool 't'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL1 (f1) VALUES (bool 'True'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL1 (f1) VALUES (bool 'true'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL1 (f1) VALUES (bool 'f'),boolean.sql,SAME,,
postgresql,postgresql,CREATE TABLE BOOLTBL2 (f1 bool),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL2 (f1) VALUES (bool 'f'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL2 (f1) VALUES (bool 'false'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL2 (f1) VALUES (bool 'False'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL2 (f1) VALUES (bool 'FALSE'),boolean.sql,SAME,,
postgresql,postgresql,INSERT INTO BOOLTBL2 (f1)    VALUES (bool 'XXX'),boolean.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type boolean: ""XXX"" LINE 2:    VALUES (bool 'XXX')"
postgresql,postgresql,"CREATE TABLE BOOLTBL3 (d text, b bool, o int)",boolean.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOOLTBL3 (d, b, o) VALUES ('true', true, 1)",boolean.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOOLTBL3 (d, b, o) VALUES ('false', false, 2)",boolean.sql,SAME,,
postgresql,postgresql,"INSERT INTO BOOLTBL3 (d, b, o) VALUES ('null', null, 3)",boolean.sql,SAME,,
postgresql,postgresql,"CREATE TABLE booltbl4(isfalse bool, istrue bool, isnul bool)",boolean.sql,SAME,,
postgresql,postgresql,"INSERT INTO booltbl4 VALUES (false, true, null)",boolean.sql,SAME,,
postgresql,postgresql,DROP TABLE  BOOLTBL1,boolean.sql,SAME,,
postgresql,postgresql,DROP TABLE  BOOLTBL2,boolean.sql,SAME,,
postgresql,postgresql,DROP TABLE  BOOLTBL3,boolean.sql,SAME,,
postgresql,postgresql,DROP TABLE  BOOLTBL4,boolean.sql,SAME,,
postgresql,postgresql,"create table gen_part (   key1 integer not null,   key2 integer not null ) partition by list (key1)",explain.sql,SAME,,
postgresql,postgresql,create table gen_part_1   partition of gen_part for values in (1)   partition by range (key2),explain.sql,SAME,,
postgresql,postgresql,create table gen_part_1_1   partition of gen_part_1 for values from (1) to (2),explain.sql,SAME,,
postgresql,postgresql,create table gen_part_1_2   partition of gen_part_1 for values from (2) to (3),explain.sql,SAME,,
postgresql,postgresql,create table gen_part_2   partition of gen_part for values in (2),explain.sql,SAME,,
postgresql,postgresql,drop table gen_part,explain.sql,SAME,,
postgresql,postgresql,drop table,errors.sql,DIFFERENT,SyntaxError,syntax error at end of input LINE 1: drop table
postgresql,postgresql,drop table nonesuch,errors.sql,DIFFERENT,UndefinedTable,"table ""nonesuch"" does not exist"
postgresql,postgresql,CREATE TABLE,errors.sql,DIFFERENT,SyntaxError,syntax error at end of input LINE 1: CREATE TABLE
postgresql,postgresql,CREATE TABLE  INSERT INTO foo VALUES(123) foo,errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""INTO"" LINE 3: INSERT INTO foo VALUES(123) foo"
postgresql,postgresql,INSERT INTO 123 VALUES(123),errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""123"" LINE 1: INSERT INTO 123"
postgresql,postgresql,INSERT INTO foo VALUES(123) 123,errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""123"" LINE 2: VALUES(123) 123"
postgresql,postgresql,"CREATE TABLE foo   (id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, 	id3 INTEGER NOT NUL,    id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL)",errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NUL"" LINE 3:  id3 INTEGER NOT NUL,"
postgresql,postgresql,"CREATE TABLE foo(id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL)",errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NUL"" LINE 1: ...OT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL,"
postgresql,postgresql,"CREATE TABLE foo( id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL, id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY)",errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NUL"" LINE 2: id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQ..."
postgresql,postgresql,"CREATE TABLE foo(id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL)",errors.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NUL"" LINE 1: ...L, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 I..."
postgresql,postgresql,"CREATE TABLE xacttest (a smallint, b real)",transactions.sql,SAME,,
postgresql,postgresql,"INSERT INTO xacttest VALUES   (56, 7.8),   (100, 99.097),   (0, 0.09561),   (42, 324.78)",transactions.sql,SAME,,
postgresql,postgresql,"INSERT INTO xacttest (a, b) VALUES (777, 777.777)",transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE disappear (a int4),transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE writetest (a int),transactions.sql,SAME,,
postgresql,postgresql,DROP TABLE writetest,transactions.sql,DIFFERENT,ReadOnlySqlTransaction,cannot execute DROP TABLE in a read-only transaction
postgresql,postgresql,INSERT INTO writetest VALUES (1),transactions.sql,DIFFERENT,ReadOnlySqlTransaction,cannot execute INSERT in a read-only transaction
postgresql,postgresql,CREATE TABLE test AS SELECT * FROM writetest,transactions.sql,DIFFERENT,ReadOnlySqlTransaction,cannot execute CREATE TABLE AS in a read-only transaction
postgresql,postgresql,DROP TABLE writetest,transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_foobar (a int),transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_foo (a int),transactions.sql,SAME,,
postgresql,postgresql,DROP TABLE trans_foo,transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_bar (a int),transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_baz (a int),transactions.sql,SAME,,
postgresql,postgresql,drop TABLE trans_foobar,transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_barbaz (a int),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_foo VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT into trans_bar VALUES (1),transactions.sql,DIFFERENT,UndefinedTable,"relation ""trans_bar"" does not exist LINE 1: INSERT into trans_bar VALUES (1)"
postgresql,postgresql,INSERT into trans_barbaz VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_foo VALUES (2),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_foo VALUES (3),transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE savepoints (a int),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (2),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (3),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (4),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (5),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (6),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (7),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (8),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (9),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (10),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (11),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (12),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (13),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (14),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (15),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (16),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (17),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (18),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (19),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (20),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (21),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO savepoints VALUES (22),transactions.sql,SAME,,
postgresql,postgresql,DROP TABLE savepoints,transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE koju (a INT UNIQUE),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO koju VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO koju VALUES (1),transactions.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""koju_a_key"" DETAIL:  Key (a)=(1) already exists."
postgresql,postgresql,CREATE TABLE koju (a INT UNIQUE),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO koju VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO koju VALUES (1),transactions.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""koju_a_key"" DETAIL:  Key (a)=(1) already exists."
postgresql,postgresql,DROP TABLE trans_foo,transactions.sql,SAME,,
postgresql,postgresql,DROP TABLE trans_baz,transactions.sql,SAME,,
postgresql,postgresql,DROP TABLE trans_barbaz,transactions.sql,SAME,,
postgresql,postgresql,create table revalidate_bug (c float8 unique),transactions.sql,SAME,,
postgresql,postgresql,insert into revalidate_bug values (1),transactions.sql,SAME,,
postgresql,postgresql,insert into revalidate_bug values (inverse(0)),transactions.sql,SAME,,
postgresql,postgresql,drop table revalidate_bug,transactions.sql,SAME,,
postgresql,postgresql,create table trans_abc (a int),transactions.sql,SAME,,
postgresql,postgresql,insert into trans_abc values (5),transactions.sql,SAME,,
postgresql,postgresql,insert into trans_abc values (10),transactions.sql,SAME,,
postgresql,postgresql,create table trans_abc (a int),transactions.sql,SAME,,
postgresql,postgresql,insert into trans_abc values (5),transactions.sql,SAME,,
postgresql,postgresql,insert into trans_abc values (10),transactions.sql,SAME,,
postgresql,postgresql,insert into trans_abc values (15),transactions.sql,SAME,,
postgresql,postgresql,CREATE FUNCTION create_temp_tab() RETURNS text LANGUAGE plpgsql AS $$ BEGIN   CREATE TEMP TABLE new_table (f1 float8);   INSERT INTO new_table SELECT invert(0.0);   RETURN 'foo'; END $$,transactions.sql,SAME,,
postgresql,postgresql,CREATE TABLE trans_abc (a int),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES (1),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES (2),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES ('error'),transactions.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""error"" LINE 1: INSERT INTO trans_abc VALUES ('error')"
postgresql,postgresql,INSERT INTO trans_abc VALUES (3),transactions.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO trans_abc VALUES (4),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES ('error'),transactions.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""error"" LINE 1: INSERT INTO trans_abc VALUES ('error')"
postgresql,postgresql,INSERT INTO trans_abc VALUES (5),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES (6),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES ('error'),transactions.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""error"" LINE 1: INSERT INTO trans_abc VALUES ('error')"
postgresql,postgresql,DROP TABLE trans_abc,transactions.sql,SAME,,
postgresql,postgresql,insert into i_table values(1)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(1)\"
postgresql,postgresql,insert into i_table values(2)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(2)\"
postgresql,postgresql,insert into i_table values(3)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(3)\"
postgresql,postgresql,insert into i_table values(4)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(4)\"
postgresql,postgresql,insert into i_table values(5),transactions.sql,SAME,,
postgresql,postgresql,insert into i_table values(6),transactions.sql,SAME,,
postgresql,postgresql,insert into i_table values(7)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(7)\"
postgresql,postgresql,insert into i_table values(8)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(8)\"
postgresql,postgresql,insert into i_table values(9)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: insert into i_table values(9)\"
postgresql,postgresql,CREATE TABLE trans_abc (a int),transactions.sql,SAME,,
postgresql,postgresql,INSERT INTO trans_abc VALUES (7)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (7)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (8)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (8)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (9)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (9)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (10)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (10)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (11)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (11)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (12)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (12)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (13)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (13)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (14)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (14)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (15)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (15)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (16)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (16)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (17)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (17)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (18)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (18)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (19)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (19)\"
postgresql,postgresql,INSERT INTO trans_abc VALUES (20)\,transactions.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO trans_abc VALUES (20)\"
postgresql,postgresql,DROP TABLE trans_abc,transactions.sql,SAME,,
postgresql,postgresql,"CREATE TABLE clstr_tst_s (rf_a SERIAL PRIMARY KEY, 	b INT)",cluster.sql,SAME,,
postgresql,postgresql,"CREATE TABLE clstr_tst (a SERIAL PRIMARY KEY, 	b INT, 	c TEXT, 	d TEXT, 	CONSTRAINT clstr_tst_con FOREIGN KEY (b) REFERENCES clstr_tst_s)",cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) VALUES (0),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) SELECT b FROM clstr_tst_s,cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) SELECT b FROM clstr_tst_s,cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) SELECT b FROM clstr_tst_s,cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) SELECT b FROM clstr_tst_s,cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_tst_s (b) SELECT b FROM clstr_tst_s,cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstr_tst_inh () INHERITS (clstr_tst),cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (11, 'once')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (10, 'diez')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (31, 'treinta y uno')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (22, 'veintidos')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (3, 'tres')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (20, 'veinte')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (23, 'veintitres')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (21, 'veintiuno')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (4, 'cuatro')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (14, 'catorce')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (2, 'dos')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (18, 'dieciocho')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (27, 'veintisiete')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (25, 'veinticinco')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (13, 'trece')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (28, 'veintiocho')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (32, 'treinta y dos')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (5, 'cinco')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (29, 'veintinueve')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (1, 'uno')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (24, 'veinticuatro')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (30, 'treinta')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (12, 'doce')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (17, 'diecisiete')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (9, 'nueve')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (19, 'diecinueve')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (26, 'veintiseis')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (15, 'quince')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (7, 'siete')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (16, 'dieciseis')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (8, 'ocho')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c, d) VALUES (6, 'seis', repeat('xyzzy', 100000))",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst_inh VALUES (0, 100, 'in child table')",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_tst (b, c) VALUES (1111, 'this should fail')",cluster.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""clstr_tst"" violates foreign key constraint ""clstr_tst_con"" DETAIL:  Key (b)=(1111) is not present in table ""clstr_tst_s""."
postgresql,postgresql,CREATE TABLE clstr_1 (a INT PRIMARY KEY),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstr_2 (a INT PRIMARY KEY),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstr_3 (a INT PRIMARY KEY),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_2 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_2 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_3 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_3 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_2 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_2 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_3 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_3 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (2),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clstr_1 VALUES (1),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clustertest (key int PRIMARY KEY),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clustertest VALUES (10),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clustertest VALUES (20),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clustertest VALUES (30),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clustertest VALUES (40),cluster.sql,SAME,,
postgresql,postgresql,INSERT INTO clustertest VALUES (50),cluster.sql,SAME,,
postgresql,postgresql,"insert into clstr_temp values (2, 'two'), (1, 'one')",cluster.sql,SAME,,
postgresql,postgresql,drop table clstr_temp,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clustertest,cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clustertest (f1 int PRIMARY KEY),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart (a int) PARTITION BY RANGE (a),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart1 PARTITION OF clstrpart FOR VALUES FROM (1) TO (10) PARTITION BY RANGE (a),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart11 PARTITION OF clstrpart1 FOR VALUES FROM (1) TO (5),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart12 PARTITION OF clstrpart1 FOR VALUES FROM (5) TO (10) PARTITION BY RANGE (a),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart2 PARTITION OF clstrpart FOR VALUES FROM (10) TO (20),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart3 PARTITION OF clstrpart DEFAULT PARTITION BY RANGE (a),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE clstrpart33 PARTITION OF clstrpart3 DEFAULT,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clstrpart,cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptnowner(i int unique) PARTITION BY LIST (i),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptnowner1 PARTITION OF ptnowner FOR VALUES IN (1),cluster.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptnowner2 PARTITION OF ptnowner FOR VALUES IN (2),cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE ptnowner,cluster.sql,SAME,,
postgresql,postgresql,create table clstr_4 as select * from tenk1,cluster.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 1: create table clstr_4 as select * from tenk1"
postgresql,postgresql,"CREATE TABLE clstr_expression(id serial primary key, a int, b text COLLATE ""C"")",cluster.sql,SAME,,
postgresql,postgresql,"INSERT INTO clstr_expression(a, b) SELECT g.i % 42, 'prefix'||g.i FROM generate_series(1, 133) g(i)",cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clustertest,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clstr_1,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clstr_2,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clstr_3,cluster.sql,SAME,,
postgresql,postgresql,DROP TABLE clstr_4,cluster.sql,DIFFERENT,UndefinedTable,"table ""clstr_4"" does not exist"
postgresql,postgresql,DROP TABLE clstr_expression,cluster.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO ro_view13 VALUES (3, 'Row 3')",updatable_views.sql,DIFFERENT,ObjectNotInPrerequisiteState,"cannot insert into view ""ro_view13"" DETAIL:  Views that do not select from a single table or view are not automatically updatable. HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule."
postgresql,postgresql,"INSERT INTO rw_view14 VALUES (null, 3, 'Row 3')",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""ctid"" of view ""rw_view14"" DETAIL:  View columns that refer to system columns are not updatable."
postgresql,postgresql,"INSERT INTO rw_view14 (a, b) VALUES (3, 'Row 3')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view15 VALUES (3, 'ROW 3')",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""upper"" of view ""rw_view15"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (3),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT DO NOTHING,updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO NOTHING,updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO UPDATE set a = excluded.a,updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO UPDATE set upper = 'blarg',updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""upper"" of view ""rw_view15"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,INSERT INTO rw_view15 (a) VALUES (4),updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""upper"" of view ""rw_view15"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,"INSERT INTO rw_view16 VALUES (3, 'Row 3', 3)",updatable_views.sql,DIFFERENT,SyntaxError,"multiple assignments to same column ""a"""
postgresql,postgresql,"INSERT INTO rw_view16 (a, b) VALUES (3, 'Row 3')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO ro_view17 VALUES (3, 'ROW 3')",updatable_views.sql,DIFFERENT,ObjectNotInPrerequisiteState,"cannot insert into view ""ro_view1"" DETAIL:  Views containing DISTINCT are not automatically updatable. HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule."
postgresql,postgresql,"CREATE RULE rw_view16_ins_rule AS ON INSERT TO rw_view16   WHERE NEW.a > 0 DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, NEW.b)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view16 (a, b) VALUES (3, 'Row 3')",updatable_views.sql,DIFFERENT,ObjectNotInPrerequisiteState,"cannot insert into view ""rw_view16"" DETAIL:  Views with conditional DO INSTEAD rules are not automatically updatable. HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule."
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (3, 'Row 3')",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 (a) VALUES (4),updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl_hist(ts timestamptz default now(), a int, b text)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE RULE base_tbl_log AS ON INSERT TO rw_view1 DO ALSO   INSERT INTO base_tbl_hist(a,b) VALUES(new.a, new.b)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (9, DEFAULT), (10, DEFAULT)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl_hist,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (3, 'Row 3')",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 (aaa) VALUES (4),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1   DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, NEW.b) RETURNING *",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (3, 'Row 3') RETURNING *",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION rw_view1_trig_fn() RETURNS trigger AS $$ BEGIN   IF TG_OP = 'INSERT' THEN     INSERT INTO base_tbl VALUES (NEW.a, NEW.b);     RETURN NEW;   ELSIF TG_OP = 'UPDATE' THEN     UPDATE base_tbl SET b=NEW.b WHERE a=OLD.a;     RETURN NEW;   ELSIF TG_OP = 'DELETE' THEN     DELETE FROM base_tbl WHERE a=OLD.a;     RETURN OLD;   END IF; END; $$ LANGUAGE plpgsql",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (3, 'Row 3') RETURNING *",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl(a int, b text, c float)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1', 1.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 2', 2.0, 2)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 3', 3.0, 3)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES ('Row 3', 3.0, 3)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES ('Row 4', 4.0, 4)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (5, 'Row 5', 5.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 5', 5.0, 5)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES ('Row 6', 6.0, 6)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl(a int, b text, c float)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1', 1.0)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl(a int, b text, c float)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1', 1.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 2', 2.0, 2)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 3', 3.0, 3)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl(a int, b text, c float)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1', 1.0)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified', c serial)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (2, 'Row 2')",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO base_tbl VALUES (3),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (4, 'Row 4')",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 (aa) VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (2, 'Row 2')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (3, 'Row 3')",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, b int)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1,2), (4,5), (3,-3)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (7,-8)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, arr int[])",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1,ARRAY[2]), (3,ARRAY[4])",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl(a float),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl SELECT i/10.0 FROM generate_series(1,10) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (null, null, 1.1, null)",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""ctid"" of view ""rw_view1"" DETAIL:  View columns that refer to system columns are not updatable."
postgresql,postgresql,"INSERT INTO rw_view1 (s, c, a) VALUES (null, null, 1.1)",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""s"" of view ""rw_view1"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,"INSERT INTO rw_view1 (a) VALUES (1.1) RETURNING a, s, c",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (null, null, null, 1.1, null)",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""t"" of view ""rw_view2"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,"INSERT INTO rw_view2(s, c, base_a) VALUES (null, null, 1.1)",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""s"" of view ""rw_view1"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,INSERT INTO rw_view2(base_a) VALUES (1.1) RETURNING t,updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view3 VALUES (null, null, null, null)",updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""t"" of view ""rw_view3"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,INSERT INTO rw_view3(s) VALUES (null),updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""s"" of view ""rw_view1"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (id int, idplus1 int GENERATED ALWAYS AS (id + 1) STORED)",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO base_tbl (id) VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 (id) VALUES (2),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl (id, idplus1) VALUES (3, DEFAULT)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 (id, idplus1) VALUES (4, DEFAULT)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl (id, idplus1) VALUES (5, 6)",updatable_views.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""idplus1"" DETAIL:  Column ""idplus1"" is a generated column."
postgresql,postgresql,"INSERT INTO rw_view1 (id, idplus1) VALUES (6, 7)",updatable_views.sql,DIFFERENT,GeneratedAlways,"cannot insert a non-DEFAULT value into column ""idplus1"" DETAIL:  Column ""idplus1"" is a generated column."
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl_parent (a int),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl_child (CHECK (a > 0)) INHERITS (base_tbl_parent),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl_parent SELECT * FROM generate_series(-8, -1)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl_child SELECT * FROM generate_series(1, 8)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (-100), (100)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (-200), (200)",updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE other_tbl_parent (id int),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE other_tbl_child () INHERITS (other_tbl_parent),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO other_tbl_parent VALUES (7),(200)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO other_tbl_child VALUES (8),(100)",updatable_views.sql,SAME,,
postgresql,postgresql,"DROP TABLE base_tbl_parent, base_tbl_child CASCADE",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE other_tbl_parent CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, b int DEFAULT 10)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1,2), (2,3), (1,-1)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES(3,4)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES(4,3)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (4, 3)."
postgresql,postgresql,"INSERT INTO rw_view1 VALUES(5,null)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (5, null)."
postgresql,postgresql,INSERT INTO rw_view1(a) VALUES (9),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1(a) VALUES (10),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (10, 10)."
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl (a int),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-5),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (-5)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (15),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view2"" DETAIL:  Failing row contains (15)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-10),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (20),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view2"" DETAIL:  Failing row contains (20)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-20),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (-20)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (30),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view2"" DETAIL:  Failing row contains (30)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (30),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl (a int),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 VALUES (-1),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-2),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (2),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view3 VALUES (-3),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view2"" DETAIL:  Failing row contains (-3)."
postgresql,postgresql,INSERT INTO rw_view3 VALUES (3),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, b int[])",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (1, ARRAY[1,2,3])",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (10, ARRAY[4,5])",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (10, {4,5})."
postgresql,postgresql,"PREPARE ins(int, int[]) AS INSERT INTO rw_view1 VALUES($1, $2)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl (a int),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref_tbl (a int PRIMARY KEY),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO ref_tbl SELECT * FROM generate_series(1,10)",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view1 VALUES (15),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (15)."
postgresql,postgresql,EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,"DROP TABLE base_tbl, ref_tbl CASCADE",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, b int)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (5,0)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (15, 20)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view1"" DETAIL:  Failing row contains (15, 10)."
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (a int, b int)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION rw_view1_trig_fn() RETURNS trigger AS $$ BEGIN   IF TG_OP = 'INSERT' THEN     INSERT INTO base_tbl VALUES (NEW.a, 10);     RETURN NEW;   ELSIF TG_OP = 'UPDATE' THEN     UPDATE base_tbl SET a=NEW.a WHERE a=OLD.a;     RETURN NEW;   ELSIF TG_OP = 'DELETE' THEN     DELETE FROM base_tbl WHERE a=OLD.a;     RETURN OLD;   END IF; END; $$ LANGUAGE plpgsql",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-5),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""rw_view2"" DETAIL:  Failing row contains (-5)."
postgresql,postgresql,INSERT INTO rw_view2 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (50),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (100),updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1   DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, 10)",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (-10),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (20),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO rw_view2 VALUES (5),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE base_tbl (a int),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1   DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view2 VALUES (2,3)",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl (person text, visibility text)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES ('Tom', 'public'),                             ('Dick', 'private'),                             ('Harry', 'public')",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE base_tbl(id int PRIMARY KEY, data text, deleted boolean)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO base_tbl VALUES (1, 'Row 1', false), (2, 'Row 2', true)",updatable_views.sql,SAME,,
postgresql,postgresql,"EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (2, 'New row 2')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO rw_view1 VALUES (2, 'New row 2')",updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE base_tbl CASCADE,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (a int, b float, c text)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 SELECT i,i,'t1' FROM generate_series(1,10) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE t11 (d text) INHERITS (t1),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t11 SELECT i,i,'t11','t11d' FROM generate_series(1,10) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE t12 (e int[]) INHERITS (t1),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t12 SELECT i,i,'t12','{1,2}'::int[] FROM generate_series(1,10) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t111 () INHERITS (t11, t12)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t111 SELECT i,i,'t111','t111d','{1,1,1}'::int[] FROM generate_series(1,10) g(i)",updatable_views.sql,SAME,,
postgresql,postgresql,"DROP TABLE t1, t11, t12, t111 CASCADE",updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx1 (a integer),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx2 (b integer),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx3 (c integer),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO vx1 values (1),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx1,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx2,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx3,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx1 (a integer),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx2 (b integer),updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE tx3 (c integer),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO vx1 VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO vx1 VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx1,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx2,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx3,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tx1 (a integer, b integer)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tx2 (b integer, c integer)",updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tx3 (c integer, d integer)",updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO vx1 VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,INSERT INTO vx1 VALUES (1),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx1,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx2,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE tx3,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (a int, b text, c int)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (1, 'one', 10)",updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE t2 (cc int),updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES (10), (20)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO v2 VALUES (2, 'two', 20)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO v2 VALUES (-2, 'minus two', 20)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""v1"" DETAIL:  Failing row contains (-2, minus two, 20)."
postgresql,postgresql,"INSERT INTO v2 VALUES (3, 'three', 30)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""v2"" DETAIL:  Failing row contains (3, three, 30)."
postgresql,postgresql,DROP TABLE t2,updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE t1,updatable_views.sql,SAME,,
postgresql,postgresql,CREATE TABLE t1 (a int),updatable_views.sql,SAME,,
postgresql,postgresql,DROP TABLE t1,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (a int, b text)",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO v1 VALUES (1, 'ok')",updatable_views.sql,SAME,,
postgresql,postgresql,"INSERT INTO v1 VALUES (-1, 'invalid')",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""v1"" DETAIL:  Failing row contains (-1, invalid)."
postgresql,postgresql,DROP TABLE t1,updatable_views.sql,SAME,,
postgresql,postgresql,"create table uv_pt (a int, b int, v varchar) partition by range (a, b)",updatable_views.sql,SAME,,
postgresql,postgresql,"create table uv_pt1 (b int not null, v varchar, a int not null) partition by range (b)",updatable_views.sql,SAME,,
postgresql,postgresql,create table uv_pt11 (like uv_pt1),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_ptv values (1, 2)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_ptv_wco values (1, 2)",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""uv_ptv_wco"" DETAIL:  Failing row contains (1, 2, null)."
postgresql,postgresql,"drop table uv_pt, uv_pt1, uv_pt11",updatable_views.sql,SAME,,
postgresql,postgresql,create table wcowrtest (a int) partition by list (a),updatable_views.sql,SAME,,
postgresql,postgresql,create table wcowrtest1 partition of wcowrtest for values in (1),updatable_views.sql,SAME,,
postgresql,postgresql,insert into wcowrtest_v values (1),updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""wcowrtest_v"" DETAIL:  Failing row contains (1)."
postgresql,postgresql,"create table wcowrtest2 (b text, c int, a int)",updatable_views.sql,SAME,,
postgresql,postgresql,"create table sometable (a int, b text)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into sometable values (1, 'a'), (2, 'b')",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into wcowrtest_v2 values (2, 'no such row in sometable')",updatable_views.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""wcowrtest_v2"" DETAIL:  Failing row contains (2, no such row in sometable)."
postgresql,postgresql,"drop table wcowrtest, sometable",updatable_views.sql,SAME,,
postgresql,postgresql,"create table uv_iocu_tab (a text unique, b float)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_tab values ('xyxyxy', 0)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (a, b) values ('xyxyxy', 1)    on conflict (a) do update set b = uv_iocu_view.b",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (a, b) values ('xyxyxy', 1)    on conflict (a) do update set b = excluded.b",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (a, b) values ('xyxyxy', 3)    on conflict (a) do update set b = cast(excluded.two as float)",updatable_views.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into uv_iocu_view (a, b) values ('xyxyxy', 3)    on conflict (a) do update set b = excluded.b where excluded.c > 0",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (a, b) values ('xyxyxy', 3)    on conflict (a) do update set b = excluded.b where excluded.c > 0",updatable_views.sql,SAME,,
postgresql,postgresql,drop table uv_iocu_tab,updatable_views.sql,SAME,,
postgresql,postgresql,"create table uv_iocu_tab (a int unique, b text)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (aa,bb) values (1,'x')",updatable_views.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into uv_iocu_view (aa,bb) values (1,'y')    on conflict (aa) do update set bb = 'Rejected: '||excluded.*    where excluded.aa > 0    and excluded.bb != ''    and excluded.cc is not null",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (aa,bb) values (1,'y')    on conflict (aa) do update set bb = 'Rejected: '||excluded.*    where excluded.aa > 0    and excluded.bb != ''    and excluded.cc is not null",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into uv_iocu_view (aa,bb) values (1,'x')",updatable_views.sql,SAME,,
postgresql,postgresql,insert into uv_iocu_view (aa) values (1)    on conflict (aa) do update set bb = 'Rejected: '||excluded.*,updatable_views.sql,SAME,,
postgresql,postgresql,insert into uv_iocu_view (aa) values (1)    on conflict (aa) do update set bb = 'Rejected: '||excluded.*,updatable_views.sql,SAME,,
postgresql,postgresql,insert into uv_iocu_view (aa) values (1)    on conflict (aa) do update set bb = 'Rejected: '||excluded.*,updatable_views.sql,SAME,,
postgresql,postgresql,insert into uv_iocu_view (aa) values (1)    on conflict (aa) do update set cc = 'XXX',updatable_views.sql,DIFFERENT,FeatureNotSupported,"cannot insert into column ""cc"" of view ""uv_iocu_view"" DETAIL:  View columns that are not columns of their base relation are not updatable."
postgresql,postgresql,drop table uv_iocu_tab,updatable_views.sql,SAME,,
postgresql,postgresql,"create table base_tbl(a int unique, b text, c float)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tbl values (1,'xxx',1.0)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view1 values ('yyy',2.0,1)   on conflict (aa) do update set bb = excluded.cc",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view1 values ('yyy',2.0,1)   on conflict (aa) do update set bb = rw_view1.cc",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view1 values ('yyy',2.0,1)   on conflict (aa) do update set bb = excluded.bb",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view1 values ('zzz',2.0,1)   on conflict (aa) do update set bb = rw_view1.bb||'xxx'",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view1 values ('zzz',2.0,1)   on conflict (aa) do update set cc = 3.0",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view2 (aa,bb) values (1,'xxx')   on conflict (aa) do update set bb = excluded.bb",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view3 (aa,bb) values (1,'xxx')   on conflict (aa) do update set bb = excluded.bb",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view4 (aa,bb) values (1,'yyy')   on conflict (aa) do update set bb = excluded.bb",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into rw_view5 (aa,bb) values (1,'yyy')   on conflict (aa) do update set bb = excluded.bb",updatable_views.sql,SAME,,
postgresql,postgresql,drop table base_tbl,updatable_views.sql,SAME,,
postgresql,postgresql,"create table base_tab_def (a int, b text default 'Table default',                            c text default 'Table default', d text, e text)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def values (1),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (2), (3)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (4, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (5, default, default, default, default),                                 (6, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def_view values (11),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (12), (13)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (14, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (15, default, default, default, default),                                      (16, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (17), (default)",updatable_views.sql,SAME,,
postgresql,postgresql,"create function base_tab_def_view_instrig_func() returns trigger as $$ begin   insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e);   return new; end; $$ language plpgsql",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def values (1),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (2), (3)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (4, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (5, default, default, default, default),                                 (6, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def_view values (11),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (12), (13)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (14, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (15, default, default, default, default),                                      (16, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (17), (default)",updatable_views.sql,SAME,,
postgresql,postgresql,"create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view   do instead insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def values (1),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (2), (3)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (4, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (5, default, default, default, default),                                 (6, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def_view values (11),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (12), (13)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (14, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (15, default, default, default, default),                                      (16, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (17), (default)",updatable_views.sql,SAME,,
postgresql,postgresql,"create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view   do also insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def values (1),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (2), (3)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (4, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def values (5, default, default, default, default),                                 (6, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,insert into base_tab_def_view values (11),updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (12), (13)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (14, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (15, default, default, default, default),                                      (16, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (17), (default)",updatable_views.sql,SAME,,
postgresql,postgresql,"create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view   do also insert into base_tab_def (a, b, e) select new.a, new.b, 'xxx'",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (1, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_def_view values (2, default, default, default, default),                                      (3, default, default, default, default)",updatable_views.sql,SAME,,
postgresql,postgresql,drop table base_tab_def,updatable_views.sql,SAME,,
postgresql,postgresql,"create table base_tab (a serial, b int[], c text, d text default 'Table default')",updatable_views.sql,SAME,,
postgresql,postgresql,"insert into base_tab_view (b[1], b[2], c, b[5], b[4], a, b[3]) values (1, 2, default, 5, 4, default, 3), (10, 11, 'C value', 14, 13, 100, 12)",updatable_views.sql,SAME,,
postgresql,postgresql,drop table base_tab,updatable_views.sql,SAME,,
postgresql,postgresql,"CREATE TABLE utf8_verification_inputs (inbytes bytea, description text PRIMARY KEY)",conversion.sql,SAME,,
postgresql,postgresql,"insert into utf8_verification_inputs  values   ('\x66006f',	'NUL byte'),   ('\xaf',		'bare continuation'),   ('\xc5',		'missing second byte in 2-byte char'),   ('\xc080',	'smallest 2-byte overlong'),   ('\xc1bf',	'largest 2-byte overlong'),   ('\xc280',	'next 2-byte after overlongs'),   ('\xdfbf',	'largest 2-byte'),   ('\xe9af',	'missing third byte in 3-byte char'),   ('\xe08080',	'smallest 3-byte overlong'),   ('\xe09fbf',	'largest 3-byte overlong'),   ('\xe0a080',	'next 3-byte after overlong'),   ('\xed9fbf',	'last before surrogates'),   ('\xeda080',	'smallest surrogate'),   ('\xedbfbf',	'largest surrogate'),   ('\xee8080',	'next after surrogates'),   ('\xefbfbf',	'largest 3-byte'),   ('\xf1afbf',	'missing fourth byte in 4-byte char'),   ('\xf0808080',	'smallest 4-byte overlong'),   ('\xf08fbfbf',	'largest 4-byte overlong'),   ('\xf0908080',	'next 4-byte after overlong'),   ('\xf48fbfbf',	'largest 4-byte'),   ('\xf4908080',	'smallest too large'),   ('\xfa9a9a8a8a',	'5-byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE utf8_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into utf8_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\xc3a4c3b6',	'valid, extra latin chars'),   ('\xd184d0bed0be',	'valid, cyrillic'),   ('\x666f6fe8b1a1',	'valid, kanji/Chinese'),   ('\xe382abe3829a',	'valid, two chars that combine to one in EUC_JIS_2004'),   ('\xe382ab',		'only first half of combined char in EUC_JIS_2004'),   ('\xe382abe382',	'incomplete combination when converted EUC_JIS_2004'),   ('\xecbd94eb81bceba6ac', 'valid, Hangul, Korean'),   ('\x666f6fefa8aa',	'valid, needs mapping function to convert to GB18030'),   ('\x66e8b1ff6f6f',	'invalid byte sequence'),   ('\x66006f',		'invalid, NUL byte'),   ('\x666f6fe8b100',	'invalid, NUL byte'),   ('\x666f6fe8b1',	'incomplete character at end')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE euc_jis_2004_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into euc_jis_2004_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\x666f6fbedd',	'valid'),   ('\xa5f7',		'valid, translates to two UTF-8 chars '),   ('\xbeddbe',		'incomplete char '),   ('\x666f6f00bedd',	'invalid, NUL byte'),   ('\x666f6fbe00dd',	'invalid, NUL byte'),   ('\x666f6fbedd00',	'invalid, NUL byte'),   ('\xbe04',		'invalid byte sequence')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shiftjis2004_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into shiftjis2004_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\x666f6f8fdb',	'valid'),   ('\x666f6f81c0',	'valid, no translation to UTF-8'),   ('\x666f6f82f5',	'valid, translates to two UTF-8 chars '),   ('\x666f6f8fdb8f',	'incomplete char '),   ('\x666f6f820a',	'incomplete char, followed by newline '),   ('\x666f6f008fdb',	'invalid, NUL byte'),   ('\x666f6f8f00db',	'invalid, NUL byte'),   ('\x666f6f8fdb00',	'invalid, NUL byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE gb18030_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into gb18030_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\x666f6fcff3',	'valid'),   ('\x666f6f8431a530',	'valid, no translation to UTF-8'),   ('\x666f6f84309c38',	'valid, translates to UTF-8 by mapping function'),   ('\x666f6f84309c',	'incomplete char '),   ('\x666f6f84309c0a',	'incomplete char, followed by newline '),   ('\x666f6f84309c3800', 'invalid, NUL byte'),   ('\x666f6f84309c0038', 'invalid, NUL byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE iso8859_5_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into iso8859_5_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\xe4dede',		'valid'),   ('\x00',		'invalid, NUL byte'),   ('\xe400dede',	'invalid, NUL byte'),   ('\xe4dede00',	'invalid, NUL byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE big5_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into big5_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\x666f6fb648',	'valid'),   ('\x666f6fa27f',	'valid, no translation to UTF-8'),   ('\x666f6fb60048',	'invalid, NUL byte'),   ('\x666f6fb64800',	'invalid, NUL byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mic_inputs (inbytes bytea, description text)",conversion.sql,SAME,,
postgresql,postgresql,"insert into mic_inputs  values   ('\x666f6f',		'valid, pure ASCII'),   ('\x8bc68bcf8bcf',	'valid (in KOI8R)'),   ('\x8bc68bcf8b',	'invalid,incomplete char'),   ('\x92bedd',		'valid (in SHIFT_JIS)'),   ('\x92be',		'invalid, incomplete char)'),   ('\x666f6f95a3c1',	'valid (in Big5)'),   ('\x666f6f95a3',	'invalid, incomplete char'),   ('\x9200bedd',	'invalid, NUL byte'),   ('\x92bedd00',	'invalid, NUL byte'),   ('\x8b00c68bcf8bcf',	'invalid, NUL byte')",conversion.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_having (a int, b int, c char(8), d char)",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (0, 1, 'XXXX', 'A')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (1, 2, 'AAAA', 'b')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (2, 2, 'AAAA', 'c')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (3, 3, 'BBBB', 'D')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (4, 3, 'BBBB', 'e')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (5, 3, 'bbbb', 'F')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (6, 4, 'cccc', 'g')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (7, 4, 'cccc', 'h')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (8, 4, 'CCCC', 'I')",select_having.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_having VALUES (9, 4, 'CCCC', 'j')",select_having.sql,SAME,,
postgresql,postgresql,DROP TABLE test_having,select_having.sql,SAME,,
postgresql,postgresql,"CREATE TABLE update_test (     a   INT DEFAULT 10,     b   INT,     c   TEXT )",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE upsert_test (     a   INT PRIMARY KEY,     b   TEXT )",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO update_test VALUES (5, 10, 'foo')",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO update_test(b, a) VALUES (15, 10)",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO update_test SELECT a,b+1,c FROM update_test",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES(1, 'Boo'), (3, 'Zoo')",update.sql,SAME,,
postgresql,postgresql,"WITH aaa AS (SELECT 1 AS a, 'Foo' AS b) INSERT INTO upsert_test   VALUES (1, 'Bar') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b, a FROM aaa) RETURNING *",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES (1, 'Baz'), (3, 'Zaz') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b || ', Correlated', a from upsert_test i WHERE i.a = upsert_test.a)   RETURNING *",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES (1, 'Bat'), (3, 'Zot') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b || ', Excluded', a from upsert_test i WHERE i.a = excluded.a)   RETURNING *",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES (2, 'Beeble') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b || ', Excluded', a from upsert_test i WHERE i.a = excluded.a)   RETURNING tableoid::regclass, xmin = pg_current_xact_id()::xid AS xmin_correct, xmax = 0 AS xmax_correct",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES (2, 'Brox') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b || ', Excluded', a from upsert_test i WHERE i.a = excluded.a)   RETURNING tableoid::regclass, xmin = pg_current_xact_id()::xid AS xmin_correct, xmax = pg_current_xact_id()::xid AS xmax_correct",update.sql,SAME,,
postgresql,postgresql,DROP TABLE update_test,update.sql,SAME,,
postgresql,postgresql,DROP TABLE upsert_test,update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE upsert_test (     a   INT PRIMARY KEY,     b   TEXT ) PARTITION BY LIST (a)",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE upsert_test_1 PARTITION OF upsert_test FOR VALUES IN (1),update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE upsert_test_2 (b TEXT, a INT PRIMARY KEY)",update.sql,SAME,,
postgresql,postgresql,"INSERT INTO upsert_test VALUES(1, 'Boo'), (2, 'Zoo')",update.sql,SAME,,
postgresql,postgresql,"WITH aaa AS (SELECT 1 AS a, 'Foo' AS b) INSERT INTO upsert_test   VALUES (1, 'Bar') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT b, a FROM aaa) RETURNING *",update.sql,SAME,,
postgresql,postgresql,"WITH aaa AS (SELECT 1 AS ctea, ' Foo' AS cteb) INSERT INTO upsert_test   VALUES (1, 'Bar'), (2, 'Baz') ON CONFLICT(a)   DO UPDATE SET (b, a) = (SELECT upsert_test.b||cteb, upsert_test.a FROM aaa) RETURNING *",update.sql,SAME,,
postgresql,postgresql,DROP TABLE upsert_test,update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted ( 	a text, 	b bigint, 	c numeric, 	d int, 	e varchar ) PARTITION BY RANGE (a, b)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_b_20_b_30 (e varchar, c numeric, a text, b bigint, d int)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_b_10_b_20 (e varchar, c numeric, a text, b bigint, d int) PARTITION BY RANGE (c)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_b_1_b_10 PARTITION OF range_parted FOR VALUES FROM ('b', 1) TO ('b', 10)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_a_10_a_20 PARTITION OF range_parted FOR VALUES FROM ('a', 10) TO ('a', 20)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_a_1_a_10 PARTITION OF range_parted FOR VALUES FROM ('a', 1) TO ('a', 10)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_c_100_200 (e varchar, c numeric, a text, b bigint, d int) PARTITION BY range (abs(d))",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_d_1_15 PARTITION OF part_c_100_200 FOR VALUES FROM (1) TO (15),update.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_d_15_20 PARTITION OF part_c_100_200 FOR VALUES FROM (15) TO (20),update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_c_1_100 (e varchar, d int, c numeric, b bigint, a text)",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE mintab(c1 int),update.sql,SAME,,
postgresql,postgresql,INSERT into mintab VALUES (120),update.sql,SAME,,
postgresql,postgresql,DROP TABLE mintab,update.sql,SAME,,
postgresql,postgresql,create table part_def partition of range_parted default,update.sql,SAME,,
postgresql,postgresql,"insert into range_parted values ('c', 9)",update.sql,SAME,,
postgresql,postgresql,DROP TABLE range_parted,update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_parted ( 	a text, 	b int ) PARTITION BY list (a)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_part1  PARTITION OF list_parted for VALUES in ('a', 'b')",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE list_default PARTITION OF list_parted default,update.sql,SAME,,
postgresql,postgresql,"INSERT into list_part1 VALUES ('a', 1)",update.sql,SAME,,
postgresql,postgresql,"INSERT into list_default VALUES ('d', 10)",update.sql,SAME,,
postgresql,postgresql,DROP TABLE list_parted,update.sql,SAME,,
postgresql,postgresql,"create table utrtest (a int, b text) partition by list (a)",update.sql,SAME,,
postgresql,postgresql,"create table utr1 (a int check (a in (1)), q text, b text)",update.sql,SAME,,
postgresql,postgresql,"create table utr2 (a int check (a in (2)), b text)",update.sql,SAME,,
postgresql,postgresql,"insert into utrtest values (1, 'foo')   returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok",update.sql,SAME,,
postgresql,postgresql,"insert into utrtest values (2, 'bar')   returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok",update.sql,DIFFERENT,FeatureNotSupported,cannot retrieve a system column in this context
postgresql,postgresql,"insert into utrtest values (2, 'bar')   returning *, tableoid::regclass",update.sql,SAME,,
postgresql,postgresql,drop table utrtest,update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_parted (a numeric, b int, c int8) PARTITION BY list (a)",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE sub_parted PARTITION OF list_parted for VALUES in (1) PARTITION BY list (b),update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sub_part1(b int, c int8, a numeric)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sub_part2(b int, c int8, a numeric)",update.sql,SAME,,
postgresql,postgresql,"CREATE TABLE list_part1(a numeric, b int, c int8)",update.sql,SAME,,
postgresql,postgresql,"INSERT into list_parted VALUES (2,5,50)",update.sql,SAME,,
postgresql,postgresql,"INSERT into list_parted VALUES (3,6,60)",update.sql,SAME,,
postgresql,postgresql,"INSERT into sub_parted VALUES (1,1,60)",update.sql,SAME,,
postgresql,postgresql,"INSERT into sub_parted VALUES (1,2,10)",update.sql,SAME,,
postgresql,postgresql,CREATE TABLE non_parted (id int),update.sql,SAME,,
postgresql,postgresql,"INSERT into non_parted VALUES (1), (1), (1), (2), (2), (2), (3), (3), (3)",update.sql,SAME,,
postgresql,postgresql,DROP TABLE non_parted,update.sql,SAME,,
postgresql,postgresql,DROP TABLE list_parted,update.sql,SAME,,
postgresql,postgresql,"create table hash_parted ( 	a int, 	b int ) partition by hash (a custom_opclass, b custom_opclass)",update.sql,DIFFERENT,UndefinedObject,"operator class ""custom_opclass"" does not exist for access method ""hash"""
postgresql,postgresql,"create table hpart1 partition of hash_parted for values with (modulus 2, remainder 1)",update.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart2 partition of hash_parted for values with (modulus 4, remainder 2)",update.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart3 partition of hash_parted for values with (modulus 8, remainder 0)",update.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"create table hpart4 partition of hash_parted for values with (modulus 8, remainder 4)",update.sql,DIFFERENT,UndefinedTable,"relation ""hash_parted"" does not exist"
postgresql,postgresql,"insert into hpart1 values (1, 1)",update.sql,DIFFERENT,UndefinedTable,"relation ""hpart1"" does not exist LINE 1: insert into hpart1 values (1, 1)"
postgresql,postgresql,"insert into hpart2 values (2, 5)",update.sql,DIFFERENT,UndefinedTable,"relation ""hpart2"" does not exist LINE 1: insert into hpart2 values (2, 5)"
postgresql,postgresql,"insert into hpart4 values (3, 4)",update.sql,DIFFERENT,UndefinedTable,"relation ""hpart4"" does not exist LINE 1: insert into hpart4 values (3, 4)"
postgresql,postgresql,drop table hash_parted,update.sql,DIFFERENT,UndefinedTable,"table ""hash_parted"" does not exist"
postgresql,postgresql,"CREATE TABLE ext_stats_test (x text, y int, z int)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE ext_stats_test,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ab1 (a INTEGER, b INTEGER, c INTEGER)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE ab1,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ab1 (a INTEGER, b INTEGER)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ab1 SELECT a, a%23 FROM generate_series(1, 1000) a",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE ab1,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ab1 (a INTEGER, b INTEGER)",stats_ext.sql,SAME,,
postgresql,postgresql,CREATE TABLE ab1c () INHERITS (ab1),stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ab1 VALUES (1,1)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE ab1 CASCADE,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE stxdinh(a int, b int)",stats_ext.sql,SAME,,
postgresql,postgresql,CREATE TABLE stxdinh1() INHERITS(stxdinh),stats_ext.sql,SAME,,
postgresql,postgresql,CREATE TABLE stxdinh2() INHERITS(stxdinh),stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO stxdinh SELECT mod(a,50), mod(a,100) FROM generate_series(0, 1999) a",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO stxdinh1 SELECT mod(a,100), mod(a,100) FROM generate_series(0, 999) a",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO stxdinh2 SELECT mod(a,100), mod(a,100) FROM generate_series(0, 999) a",stats_ext.sql,SAME,,
postgresql,postgresql,"DROP TABLE stxdinh, stxdinh1, stxdinh2",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE stxdinp(i int, a int, b int) PARTITION BY RANGE (i)",stats_ext.sql,SAME,,
postgresql,postgresql,CREATE TABLE stxdinp1 PARTITION OF stxdinp FOR VALUES FROM (1) TO (100),stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO stxdinp SELECT 1, a/100, a/100 FROM generate_series(1, 999) a",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE stxdinp,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ab1 (a INTEGER, b INTEGER, c TIMESTAMP, d TIMESTAMPTZ)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ab1 SELECT x / 10, x / 3,     '2020-10-01'::timestamp + x * interval '1 day',     '2020-10-01'::timestamptz + x * interval '1 day' FROM generate_series(1, 100) x",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE ab1,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tststats.t (a int, b int, c text)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tststats.pt (a int, b int, c text) PARTITION BY RANGE (a, b)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tststats.pt1 PARTITION OF tststats.pt FOR VALUES FROM (-10, -10) TO (10, 10)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ndistinct (     filler1 TEXT,     filler2 NUMERIC,     a INT,     b INT,     filler3 DATE,     c INT,     d INT ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ndistinct (a, b, c, filler1)      SELECT i/100, i/100, i/100, (i/100) || ' dollars and zero cents'        FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ndistinct (a, b, c, filler1)      SELECT mod(i,13), mod(i,17), mod(i,19),             mod(i,23) || ' dollars and zero cents'        FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO ndistinct (a, b, c, d)      SELECT mod(i,3), mod(i,9), mod(i,5), mod(i,20)        FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE functional_dependencies (     filler1 TEXT,     filler2 NUMERIC,     a INT,     b TEXT,     filler3 DATE,     c INT,     d TEXT ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO functional_dependencies (a, b, c, filler1)      SELECT mod(i, 5), mod(i, 7), mod(i, 11), i FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO functional_dependencies (a, b, c, filler1)      SELECT i, i, i, i FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO functional_dependencies (a, b, c, filler1)      SELECT mod(i,100), mod(i,50), mod(i,25), i FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE functional_dependencies_multi ( 	a INTEGER, 	b INTEGER, 	c INTEGER, 	d INTEGER ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO functional_dependencies_multi (a, b, c, d)     SELECT          mod(i,7),          mod(i,7),          mod(i,11),          mod(i,11)     FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE functional_dependencies_multi,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mcv_lists (     filler1 TEXT,     filler2 NUMERIC,     a INT,     b VARCHAR,     filler3 DATE,     c INT,     d TEXT,     ia INT[] ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, filler1)      SELECT mod(i,37), mod(i,41), mod(i,43), mod(i,47) FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, filler1)      SELECT i, i, i, i FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, ia, filler1)      SELECT mod(i,100), mod(i,50), mod(i,25), array[mod(i,25)], i        FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, filler1)      SELECT i, i, i, i FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, filler1)      SELECT          (CASE WHEN mod(i,100) = 1 THEN NULL ELSE mod(i,100) END),          (CASE WHEN mod(i,50) = 1  THEN NULL ELSE mod(i,50) END),          (CASE WHEN mod(i,25) = 1  THEN NULL ELSE mod(i,25) END),          i      FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c) SELECT 1, 2, 3 FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists (a, b, c, d)      SELECT          NULL,           (CASE WHEN mod(i,2) = 0 THEN NULL ELSE 'x' END),          (CASE WHEN mod(i,2) = 0 THEN NULL ELSE 0 END),          (CASE WHEN mod(i,2) = 0 THEN NULL ELSE 'x' END)      FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mcv_lists_uuid (     a UUID,     b UUID,     c UUID ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_uuid (a, b, c)      SELECT          fipshash(mod(i,100)::text)::uuid,          fipshash(mod(i,50)::text)::uuid,          fipshash(mod(i,25)::text)::uuid      FROM generate_series(1,5000) s(i)",stats_ext.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 3:          fipshash(mod(i,100)::text)::uuid,                   HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,DROP TABLE mcv_lists_uuid,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mcv_lists_arrays (     a TEXT[],     b NUMERIC[],     c INT[] ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_arrays (a, b, c)      SELECT          ARRAY[fipshash((i/100)::text), fipshash((i/100-1)::text), fipshash((i/100+1)::text)],          ARRAY[(i/100-1)::numeric/1000, (i/100)::numeric/1000, (i/100+1)::numeric/1000],          ARRAY[(i/100-1), i/100, (i/100+1)]      FROM generate_series(1,5000) s(i)",stats_ext.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 3:          ARRAY[fipshash((i/100)::text), fipshash((i/100-1)::...                         HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"CREATE TABLE mcv_lists_bool (     a BOOL,     b BOOL,     c BOOL ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_bool (a, b, c)      SELECT          (mod(i,2) = 0), (mod(i,4) = 0), (mod(i,8) = 0)      FROM generate_series(1,10000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mcv_lists_partial (     a INT,     b INT,     c INT )",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_partial (a, b, c)      SELECT          mod(i,10),          mod(i,10),          mod(i,10)      FROM generate_series(0,999) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_partial (a, b, c)      SELECT          i,          i,          i      FROM generate_series(0,99) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_partial (a, b, c)      SELECT          i,          i,          i      FROM generate_series(0,3999) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE mcv_lists_partial,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mcv_lists_multi ( 	a INTEGER, 	b INTEGER, 	c INTEGER, 	d INTEGER ) WITH (autovacuum_enabled = off)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO mcv_lists_multi (a, b, c, d)     SELECT          mod(i,5),          mod(i,5),          mod(i,7),          mod(i,7)     FROM generate_series(1,5000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE mcv_lists_multi,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE expr_stats (a int, b int, c int)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO expr_stats SELECT mod(i,10), mod(i,10), mod(i,10) FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE expr_stats,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE expr_stats (a int, b int, c int)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO expr_stats SELECT mod(i,10), mod(i,10), mod(i,10) FROM generate_series(1,1000) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE expr_stats,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE expr_stats (a int, b name, c text)",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO expr_stats SELECT mod(i,10), fipshash(mod(i,10)::text), fipshash(mod(i,10)::text) FROM generate_series(1,1000) s(i)",stats_ext.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 1: INSERT INTO expr_stats SELECT mod(i,10), fipshash(mod(i,10):...                                                   HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,DROP TABLE expr_stats,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE expr_stats_incompatible_test (     c0 double precision,     c1 boolean NOT NULL )",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO expr_stats_incompatible_test VALUES (1234,false), (5678,true)",stats_ext.sql,SAME,,
postgresql,postgresql,DROP TABLE expr_stats_incompatible_test,stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tststats.priv_test_tbl (     a int,     b int )",stats_ext.sql,SAME,,
postgresql,postgresql,"INSERT INTO tststats.priv_test_tbl      SELECT mod(i,5), mod(i,10) FROM generate_series(1,100) s(i)",stats_ext.sql,SAME,,
postgresql,postgresql,"create table stts_t1 (a int, b int)",stats_ext.sql,SAME,,
postgresql,postgresql,"create table stts_t2 (a int, b int, c int)",stats_ext.sql,SAME,,
postgresql,postgresql,"create table stts_t3 (col1 int, col2 int, col3 int)",stats_ext.sql,SAME,,
postgresql,postgresql,"insert into stts_t1 select i,i from generate_series(1,100) i",stats_ext.sql,SAME,,
postgresql,postgresql,"drop table stts_t1, stts_t2, stts_t3",stats_ext.sql,SAME,,
postgresql,postgresql,"CREATE TABLE J1_TBL (   i integer,   j integer,   t text )",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE J2_TBL (   i integer,   k integer )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (1, 4, 'one')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (2, 3, 'two')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (3, 2, 'three')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (4, 1, 'four')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (5, 0, 'five')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (6, 6, 'six')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (7, 7, 'seven')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (8, 8, 'eight')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (0, NULL, 'zero')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (NULL, NULL, 'null')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J1_TBL VALUES (NULL, 0, 'zero')",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (1, -1)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (2, 2)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (3, -3)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (2, 4)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (5, -5)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (5, -5)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (0, NULL)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (NULL, NULL)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO J2_TBL VALUES (NULL, 0)",join.sql,SAME,,
postgresql,postgresql,insert into onerow default values,join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (name TEXT, n INTEGER)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t2 (name TEXT, n INTEGER)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t3 (name TEXT, n INTEGER)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES ( 'bb', 11 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES ( 'bb', 12 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES ( 'cc', 22 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES ( 'ee', 42 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES ( 'bb', 13 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES ( 'cc', 23 )",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES ( 'dd', 33 )",join.sql,SAME,,
postgresql,postgresql,"insert into x values (1,11)",join.sql,SAME,,
postgresql,postgresql,"insert into x values (2,22)",join.sql,SAME,,
postgresql,postgresql,"insert into x values (3,null)",join.sql,SAME,,
postgresql,postgresql,"insert into x values (4,44)",join.sql,SAME,,
postgresql,postgresql,"insert into x values (5,null)",join.sql,SAME,,
postgresql,postgresql,"insert into y values (1,111)",join.sql,SAME,,
postgresql,postgresql,"insert into y values (2,222)",join.sql,SAME,,
postgresql,postgresql,"insert into y values (3,333)",join.sql,SAME,,
postgresql,postgresql,"insert into y values (4,null)",join.sql,SAME,,
postgresql,postgresql,DROP TABLE t1,join.sql,SAME,,
postgresql,postgresql,DROP TABLE t2,join.sql,SAME,,
postgresql,postgresql,DROP TABLE t3,join.sql,SAME,,
postgresql,postgresql,DROP TABLE J1_TBL,join.sql,SAME,,
postgresql,postgresql,DROP TABLE J2_TBL,join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (5, 10)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (15, 20)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (100, 100)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 VALUES (200, 1000)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t2 VALUES (200, 2000)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES (5, 20)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES (6, 7)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES (7, 8)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO t3 VALUES (500, 100)",join.sql,SAME,,
postgresql,postgresql,"insert into t2a values (200, 2001)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO tt1 VALUES (1, 11)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO tt1 VALUES (2, NULL)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO tt2 VALUES (21, 11)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO tt2 VALUES (22, 11)",join.sql,SAME,,
postgresql,postgresql,"insert into tt3 select x, repeat('xyzzy', 100) from generate_series(1,10000) x",join.sql,SAME,,
postgresql,postgresql,"insert into tt4 values (0),(1),(9999)",join.sql,SAME,,
postgresql,postgresql,"insert into tt5 values(1, 10)",join.sql,SAME,,
postgresql,postgresql,"insert into tt5 values(1, 11)",join.sql,SAME,,
postgresql,postgresql,"insert into tt6 values(1, 9)",join.sql,SAME,,
postgresql,postgresql,"insert into tt6 values(1, 2)",join.sql,SAME,,
postgresql,postgresql,"insert into tt6 values(2, 9)",join.sql,SAME,,
postgresql,postgresql,insert into xx values (1),join.sql,SAME,,
postgresql,postgresql,insert into xx values (2),join.sql,SAME,,
postgresql,postgresql,insert into xx values (3),join.sql,SAME,,
postgresql,postgresql,"insert into yy values (101, 1)",join.sql,SAME,,
postgresql,postgresql,"insert into yy values (201, 2)",join.sql,SAME,,
postgresql,postgresql,"insert into yy values (301, NULL)",join.sql,SAME,,
postgresql,postgresql,insert into zt1 values(53),join.sql,SAME,,
postgresql,postgresql,insert into zt2 values(53),join.sql,SAME,,
postgresql,postgresql,insert into a (code) values ('p'),join.sql,SAME,,
postgresql,postgresql,insert into a (code) values ('q'),join.sql,SAME,,
postgresql,postgresql,"insert into b (a, num) values ('p', 1)",join.sql,SAME,,
postgresql,postgresql,"insert into b (a, num) values ('p', 2)",join.sql,SAME,,
postgresql,postgresql,"insert into c (name, a) values ('A', 'p')",join.sql,SAME,,
postgresql,postgresql,"insert into c (name, a) values ('B', 'q')",join.sql,SAME,,
postgresql,postgresql,"insert into c (name, a) values ('C', null)",join.sql,SAME,,
postgresql,postgresql,"insert into nt1 values (1,true,true)",join.sql,SAME,,
postgresql,postgresql,"insert into nt1 values (2,true,false)",join.sql,SAME,,
postgresql,postgresql,"insert into nt1 values (3,false,false)",join.sql,SAME,,
postgresql,postgresql,"insert into nt2 values (1,1,true,true)",join.sql,SAME,,
postgresql,postgresql,"insert into nt2 values (2,2,true,false)",join.sql,SAME,,
postgresql,postgresql,"insert into nt2 values (3,3,false,false)",join.sql,SAME,,
postgresql,postgresql,"insert into nt3 values (1,1,true)",join.sql,SAME,,
postgresql,postgresql,"insert into nt3 values (2,2,false)",join.sql,SAME,,
postgresql,postgresql,"insert into nt3 values (3,3,true)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO a VALUES (0, 0), (1, NULL)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO b VALUES (0, 0), (1, NULL)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO c VALUES (0), (1)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO d VALUES (1,3), (2,2), (3,1)",join.sql,SAME,,
postgresql,postgresql,"insert into parent values (1, 10), (2, 20), (3, 30)",join.sql,SAME,,
postgresql,postgresql,"insert into child values (1, 100), (4, 400)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO a VALUES (0), (1)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO b VALUES (0, 0), (1, NULL)",join.sql,SAME,,
postgresql,postgresql,"insert into innertab values(123, 42)",join.sql,SAME,,
postgresql,postgresql,insert into t values (1),join.sql,SAME,,
postgresql,postgresql,"insert into t values (1,1), (2,2)",join.sql,SAME,,
postgresql,postgresql,"insert into parttbl values (11), (12)",join.sql,SAME,,
postgresql,postgresql,"create table sj (a int unique, b int, c int unique)",join.sql,SAME,,
postgresql,postgresql,"insert into sj values (1, null, 2), (null, 2, null), (2, 1, 1)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO sj VALUES (3, 1, 3)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tab_with_flag ( id INT PRIMARY KEY, is_flag SMALLINT)",join.sql,SAME,,
postgresql,postgresql,DROP TABLE tab_with_flag,join.sql,SAME,,
postgresql,postgresql,"create table sk (a int, b int)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE emp1 (id SERIAL PRIMARY KEY NOT NULL, code int)",join.sql,SAME,,
postgresql,postgresql,"INSERT INTO emp1 VALUES (1, 1), (2, 1)",join.sql,SAME,,
postgresql,postgresql,"insert into emp1 values (1, 1)",join.sql,SAME,,
postgresql,postgresql,"insert into emp1 values (2, 1)",join.sql,SAME,,
postgresql,postgresql,"create table sl(a int, b int, c int)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sj_t1 (id serial, a int)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sj_t2 (id serial, a int)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sj_t3 (id serial, a int)",join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sj_t4 (id serial, a int)",join.sql,SAME,,
postgresql,postgresql,"create table join_pt1 (a int, b int, c varchar) partition by range(a)",join.sql,SAME,,
postgresql,postgresql,create table join_pt1p1 partition of join_pt1 for values from (0) to (100) partition by range(b),join.sql,SAME,,
postgresql,postgresql,create table join_pt1p2 partition of join_pt1 for values from (100) to (200),join.sql,SAME,,
postgresql,postgresql,create table join_pt1p1p1 partition of join_pt1p1 for values from (0) to (100),join.sql,SAME,,
postgresql,postgresql,"insert into join_pt1 values (1, 1, 'x'), (101, 101, 'y')",join.sql,SAME,,
postgresql,postgresql,"create table join_ut1 (a int, b int, c varchar)",join.sql,SAME,,
postgresql,postgresql,"insert into join_ut1 values (101, 101, 'y'), (2, 2, 'z')",join.sql,SAME,,
postgresql,postgresql,drop table join_pt1,join.sql,SAME,,
postgresql,postgresql,drop table join_ut1,join.sql,SAME,,
postgresql,postgresql,"create table fkest (x integer, x10 integer, x10b integer, x100 integer)",join.sql,SAME,,
postgresql,postgresql,"insert into fkest select x, x/10, x/10, x/100 from generate_series(1,1000) x",join.sql,SAME,,
postgresql,postgresql,"create table fkest (a int, b int, c int unique, primary key(a,b))",join.sql,SAME,,
postgresql,postgresql,"create table fkest1 (a int, b int, primary key(a,b))",join.sql,SAME,,
postgresql,postgresql,"insert into fkest select x/10, x%10, x from generate_series(1,1000) x",join.sql,SAME,,
postgresql,postgresql,"insert into fkest1 select x/10, x%10 from generate_series(1,1000) x",join.sql,SAME,,
postgresql,postgresql,create table j1 (id int primary key),join.sql,SAME,,
postgresql,postgresql,create table j2 (id int primary key),join.sql,SAME,,
postgresql,postgresql,create table j3 (id int),join.sql,SAME,,
postgresql,postgresql,"insert into j1 values(1),(2),(3)",join.sql,SAME,,
postgresql,postgresql,"insert into j2 values(1),(2),(3)",join.sql,SAME,,
postgresql,postgresql,"insert into j3 values(1),(1)",join.sql,SAME,,
postgresql,postgresql,drop table j1,join.sql,SAME,,
postgresql,postgresql,drop table j2,join.sql,SAME,,
postgresql,postgresql,drop table j3,join.sql,SAME,,
postgresql,postgresql,"create table j1 (id1 int, id2 int, primary key(id1,id2))",join.sql,SAME,,
postgresql,postgresql,"create table j2 (id1 int, id2 int, primary key(id1,id2))",join.sql,SAME,,
postgresql,postgresql,"create table j3 (id1 int, id2 int, primary key(id1,id2))",join.sql,SAME,,
postgresql,postgresql,"insert into j1 values(1,1),(1,2)",join.sql,SAME,,
postgresql,postgresql,"insert into j2 values(1,1)",join.sql,SAME,,
postgresql,postgresql,"insert into j3 values(1,1)",join.sql,SAME,,
postgresql,postgresql,"insert into j2 values(1,2)",join.sql,SAME,,
postgresql,postgresql,drop table j1,join.sql,SAME,,
postgresql,postgresql,drop table j2,join.sql,SAME,,
postgresql,postgresql,drop table j3,join.sql,SAME,,
postgresql,postgresql,"create table j3 as select unique1, tenthous from onek",join.sql,DIFFERENT,UndefinedTable,"relation ""onek"" does not exist LINE 1: create table j3 as select unique1, tenthous from onek"
postgresql,postgresql,drop table j3,join.sql,DIFFERENT,UndefinedTable,"table ""j3"" does not exist"
postgresql,postgresql,"CREATE TABLE indtoasttest(descr text, cnt int DEFAULT 0, f1 text, f2 text)",indirect_toast.sql,SAME,,
postgresql,postgresql,"INSERT INTO indtoasttest(descr, f1, f2) VALUES('two-compressed', repeat('1234567890',1000), repeat('1234567890',1000))",indirect_toast.sql,SAME,,
postgresql,postgresql,"INSERT INTO indtoasttest(descr, f1, f2) VALUES('two-toasted', repeat('1234567890',30000), repeat('1234567890',50000))",indirect_toast.sql,SAME,,
postgresql,postgresql,"INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-compressed,one-null', NULL, repeat('1234567890',1000))",indirect_toast.sql,SAME,,
postgresql,postgresql,"INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-toasted,one-null', NULL, repeat('1234567890',50000))",indirect_toast.sql,SAME,,
postgresql,postgresql,"INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-toasted,one-null, via indirect', repeat('1234567890',30000), NULL)",indirect_toast.sql,DIFFERENT,UndefinedFunction,function make_tuple_indirect(indtoasttest) does not exist LINE 1: NEW := make_tuple_indirect(NEW)                 HINT:  No function matches the given name and argument types. You might need to add explicit type casts. QUERY:  NEW := make_tuple_indirect(NEW) CONTEXT:  PL/pgSQL function update_using_indirect() line 3 at assignment
postgresql,postgresql,DROP TABLE indtoasttest,indirect_toast.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_chunk_id (a TEXT, b TEXT STORAGE EXTERNAL)",misc_functions.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_chunk_id VALUES ('x', repeat('x', 8192))",misc_functions.sql,SAME,,
postgresql,postgresql,DROP TABLE test_chunk_id,misc_functions.sql,SAME,,
postgresql,postgresql,"CREATE TABLE TIMESTAMP_TBL (d1 timestamp(2) without time zone);   BEGIN;  INSERT INTO TIMESTAMP_TBL VALUES ('today'); INSERT INTO TIMESTAMP_TBL VALUES ('yesterday'); INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow'); INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow EST'); INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow zulu');  SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'today'; SELECT count(*) AS Three FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'tomorrow'; SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'yesterday';  COMMIT;  DELETE FROM TIMESTAMP_TBL;   INSERT INTO TIMESTAMP_TBL VALUES ('now'); SELECT pg_sleep(0.1);  BEGIN; INSERT INTO TIMESTAMP_TBL VALUES ('now'); SELECT pg_sleep(0.1); INSERT INTO TIMESTAMP_TBL VALUES ('now'); SELECT pg_sleep(0.1); SELECT count(*) AS two FROM TIMESTAMP_TBL WHERE d1 = timestamp(2) without time zone 'now'; SELECT count(d1) AS three, count(DISTINCT d1) AS two FROM TIMESTAMP_TBL; COMMIT;  TRUNCATE TIMESTAMP_TBL;  INSERT INTO TIMESTAMP_TBL VALUES ('-infinity'); INSERT INTO TIMESTAMP_TBL VALUES ('infinity'); INSERT INTO TIMESTAMP_TBL VALUES ('epoch');  SELECT timestamp 'infinity' = timestamp '+infinity' AS t;  INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01 1997 PST');  INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.000001 1997 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.999999 1997 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.4 1997 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.5 1997 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.6 1997 PST');  INSERT INTO TIMESTAMP_TBL VALUES ('1997-01-02'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-01-02 03:04:05'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01-08'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01-0800'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 -08:00'); INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 -0800'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 17:32:01 -07:00'); INSERT INTO TIMESTAMP_TBL VALUES ('2001-09-22T18:19:20');  INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 08:14:01 GMT+8'); INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 13:14:02 GMT-1'); INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 12:14:03 GMT-2'); INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 03:14:04 PST+8'); INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 02:14:05 MST+7:00');  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997 -0800'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 5:32PM 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('1997/02/10 17:32:01-0800'); INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb-10-1997 17:32:01 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('02-10-1997 17:32:01 PST'); INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 PST'); set datestyle to ymd; INSERT INTO TIMESTAMP_TBL VALUES ('97FEB10 5:32:01PM UTC'); INSERT INTO TIMESTAMP_TBL VALUES ('97/02/10 17:32:01 UTC'); reset datestyle; INSERT INTO TIMESTAMP_TBL VALUES ('1997.041 17:32:01 UTC'); INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 America/New_York'); INSERT INTO TIMESTAMP_TBL VALUES ('19970710 173201 America/Does_not_exist');  SELECT pg_input_is_valid('now', 'timestamp'); SELECT pg_input_is_valid('garbage', 'timestamp'); SELECT pg_input_is_valid('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamp'); SELECT * FROM pg_input_error_info('garbage', 'timestamp'); SELECT * FROM pg_input_error_info('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamp');  INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 18:32:01 PDT');  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 11 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 12 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 13 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 14 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 15 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997');  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097 BC'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0597'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1097'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1697'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1797'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1897'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 2097');  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1996'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1996'); INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1996'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1996'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1996'); INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1997'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1999'); INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2000'); INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 2000'); INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2001');  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 -0097'); INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 5097 BC');  SELECT d1 FROM TIMESTAMP_TBL;  SELECT '4714-11-24 00:00:00 BC'::timestamp; SELECT '4714-11-23 23:59:59 BC'::timestamp;   SELECT '294276-12-31 23:59:59'::timestamp; SELECT '294277-01-01 00:00:00'::timestamp;    SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 > timestamp without time zone '1997-01-02';  SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 < timestamp without time zone '1997-01-02';  SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 = timestamp without time zone '1997-01-02';  SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 != timestamp without time zone '1997-01-02';  SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 <= timestamp without time zone '1997-01-02';  SELECT d1 FROM TIMESTAMP_TBL    WHERE d1 >= timestamp without time zone '1997-01-02';  SELECT d1 - timestamp without time zone '1997-01-02' AS diff    FROM TIMESTAMP_TBL WHERE d1 BETWEEN '1902-01-01' AND '2038-01-01';  SELECT date_trunc( 'week', timestamp '2004-02-29 15:44:17.71393' ) AS week_trunc;   SELECT   str,   interval,   date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2001-01-01') AS equal FROM (   VALUES   ('week', '7 d'),   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamp '2020-02-29 15:44:17.71393')) ts (ts);  SELECT   str,   interval,   date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2000-01-01 BC') AS equal FROM (   VALUES   ('week', '7 d'),   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamp '0055-6-10 15:44:17.71393 BC')) ts (ts);  SELECT   str,   interval,   date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2020-03-02') AS equal FROM (   VALUES   ('week', '7 d'),   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamp '2020-02-29 15:44:17.71393')) ts (ts);  SELECT   str,   interval,   date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '0055-06-17 BC') AS equal FROM (   VALUES   ('week', '7 d'),   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamp '0055-6-10 15:44:17.71393 BC')) ts (ts);  SELECT   interval,   ts,   origin,   date_bin(interval::interval, ts, origin) FROM (   VALUES   ('15 days'),   ('2 hours'),   ('1 hour 30 minutes'),   ('15 minutes'),   ('10 seconds'),   ('100 milliseconds'),   ('250 microseconds') ) intervals (interval), (VALUES (timestamp '2020-02-11 15:44:17.71393')) ts (ts), (VALUES (timestamp '2001-01-01')) origin (origin);  SELECT date_bin('5 min'::interval, timestamp '2020-02-01 01:01:01', timestamp '2020-02-01 00:02:30');  SELECT date_bin('30 minutes'::interval, timestamp '2024-02-01 15:00:00', timestamp '2024-02-01 17:00:00');  SELECT date_bin('5 months'::interval, timestamp '2020-02-01 01:01:01', timestamp '2001-01-01'); SELECT date_bin('5 years'::interval,  timestamp '2020-02-01 01:01:01', timestamp '2001-01-01');  SELECT date_bin('0 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');  SELECT date_bin('-2 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');  select date_bin('15 minutes'::interval, timestamp '294276-12-30', timestamp '4000-12-20 BC'); select date_bin('200000000 days'::interval, '2024-02-01'::timestamp, '2024-01-01'::timestamp); select date_bin('365000 days'::interval, '4400-01-01 BC'::timestamp, '4000-01-01 BC'::timestamp);  SELECT d1 - timestamp without time zone '1997-01-02' AS diff   FROM TIMESTAMP_TBL   WHERE d1 BETWEEN timestamp without time zone '1902-01-01'    AND timestamp without time zone '2038-01-01';  SELECT d1 as ""timestamp"",    date_part( 'year', d1) AS year, date_part( 'month', d1) AS month,    date_part( 'day', d1) AS day, date_part( 'hour', d1) AS hour,    date_part( 'minute', d1) AS minute, date_part( 'second', d1) AS second    FROM TIMESTAMP_TBL;  SELECT d1 as ""timestamp"",    date_part( 'quarter', d1) AS quarter, date_part( 'msec', d1) AS msec,    date_part( 'usec', d1) AS usec    FROM TIMESTAMP_TBL;  SELECT d1 as ""timestamp"",    date_part( 'isoyear', d1) AS isoyear, date_part( 'week', d1) AS week,    date_part( 'isodow', d1) AS isodow, date_part( 'dow', d1) AS dow,    date_part( 'doy', d1) AS doy    FROM TIMESTAMP_TBL;  SELECT d1 as ""timestamp"",    date_part( 'decade', d1) AS decade,    date_part( 'century', d1) AS century,    date_part( 'millennium', d1) AS millennium,    round(date_part( 'julian', d1)) AS julian,    date_part( 'epoch', d1) AS epoch    FROM TIMESTAMP_TBL;  SELECT d1 as ""timestamp"",    extract(microseconds from d1) AS microseconds,    extract(milliseconds from d1) AS milliseconds,    extract(seconds from d1) AS seconds,    round(extract(julian from d1)) AS julian,    extract(epoch from d1) AS epoch    FROM TIMESTAMP_TBL;  SELECT date_part('epoch', '294270-01-01 00:00:00'::timestamp); SELECT extract(epoch from '294270-01-01 00:00:00'::timestamp); SELECT extract(epoch from '5000-01-01 00:00:00'::timestamp);  SELECT timestamp '294276-12-31 23:59:59' - timestamp '1999-12-23 19:59:04.224193' AS ok; SELECT timestamp '294276-12-31 23:59:59' - timestamp '1999-12-23 19:59:04.224192' AS overflows;  SELECT to_char(d1, 'DAY Day day DY Dy dy MONTH Month month RM MON Mon mon')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, 'FMDAY FMDay FMday FMMONTH FMMonth FMmonth FMRM')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, 'Y,YYY YYYY YYY YY Y CC Q MM WW DDD DD D J')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, 'FMY,YYY FMYYYY FMYYY FMYY FMY FMCC FMQ FMMM FMWW FMDDD FMDD FMD FMJ')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, 'HH HH12 HH24 MI SS SSSS')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, E'""HH:MI:SS is"" HH:MI:SS ""\\""text between quote marks\\""""')    FROM TIMESTAMP_TBL;  SELECT to_char(d1, 'HH24    FROM TIMESTAMP_TBL",timestamp.sql,DIFFERENT,SyntaxError,"unterminated quoted string at or near ""'HH24    FROM TIMESTAMP_TBL"" LINE 316: SELECT to_char(d1, 'HH24"
postgresql,postgresql,"CREATE TABLE test_missing_target (a int, b int, c char(8), d char)",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (0, 1, 'XXXX', 'A')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (1, 2, 'ABAB', 'b')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (2, 2, 'ABAB', 'c')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (3, 3, 'BBBB', 'D')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (4, 3, 'BBBB', 'e')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (5, 3, 'bbbb', 'F')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (6, 4, 'cccc', 'g')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (7, 4, 'cccc', 'h')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (8, 4, 'CCCC', 'I')",select_implicit.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_missing_target VALUES (9, 4, 'CCCC', 'j')",select_implicit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_missing_target2 AS SELECT count(*) FROM test_missing_target x, test_missing_target y 	WHERE x.a = y.a 	GROUP BY x.b ORDER BY x.b",select_implicit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_missing_target3 AS SELECT count(x.b) FROM test_missing_target x, test_missing_target y 	WHERE x.a = y.a 	GROUP BY x.b/2 ORDER BY x.b/2",select_implicit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_missing_target,select_implicit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_missing_target2,select_implicit.sql,SAME,,
postgresql,postgresql,DROP TABLE test_missing_target3,select_implicit.sql,SAME,,
postgresql,postgresql,"create table rtest_t1 (a int4, b int4)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t2 (a int4, b int4)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t3 (a int4, b int4)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_v1_ins as on insert to rtest_v1 do instead 	insert into rtest_t1 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_system (sysname text, sysdesc text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_interface (sysname text, ifname text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_person (pname text, pdesc text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_admin (pname text, sysname text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_emp (ename char(20), salary numeric)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_emplog (ename char(20), who name, action char(10), newsal numeric, oldsal numeric)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_empmass (ename char(20), salary numeric)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_emp_ins as on insert to rtest_emp do 	insert into rtest_emplog values (new.ename, current_user, 			'hired', new.salary, '0.00')",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_emp_upd as on update to rtest_emp where new.salary != old.salary do 	insert into rtest_emplog values (new.ename, current_user, 			'honored', new.salary, old.salary)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_emp_del as on delete to rtest_emp do 	insert into rtest_emplog values (old.ename, current_user, 			'fired', '0.00', old.salary)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t4 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t5 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t6 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t7 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t8 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_t9 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_t4_ins1 as on insert to rtest_t4 		where new.a >= 10 and new.a < 20 do instead 	insert into rtest_t5 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_t4_ins2 as on insert to rtest_t4 		where new.a >= 20 and new.a < 30 do 	insert into rtest_t6 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_t5_ins as on insert to rtest_t5 		where new.a > 15 do 	insert into rtest_t7 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_t6_ins as on insert to rtest_t6 		where new.a > 25 do instead 	insert into rtest_t8 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,create table rtest_order1 (a int4),rules.sql,SAME,,
postgresql,postgresql,"create table rtest_order2 (a int4, b int4, c text)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_order_r3 as on insert to rtest_order1 do instead 	insert into rtest_order2 values (new.a, nextval('rtest_seq'), 		'rule 3 - this should run 3rd')",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_order_r4 as on insert to rtest_order1 		where a < 100 do instead 	insert into rtest_order2 values (new.a, nextval('rtest_seq'), 		'rule 4 - this should run 4th')",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_order_r2 as on insert to rtest_order1 do 	insert into rtest_order2 values (new.a, nextval('rtest_seq'), 		'rule 2 - this should run 2nd')",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_order_r1 as on insert to rtest_order1 do instead 	insert into rtest_order2 values (new.a, nextval('rtest_seq'), 		'rule 1 - this should run 1st')",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_nothn1 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_nothn2 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_nothn3 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_nothn4 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create rule rtest_nothn_r3 as on insert to rtest_nothn2 	where new.a >= 100 do instead 	insert into rtest_nothn3 values (new.a, new.b)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t2 values (1, 21)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t2 values (2, 22)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t2 values (3, 23)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t3 values (1, 31)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t3 values (2, 32)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t3 values (3, 33)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t3 values (4, 34)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t3 values (5, 35)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 values (1, 11)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 values (2, 12)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 values (1, 11)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 values (2, 12)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 values (2, 13)",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_v1 select * from rtest_t2,rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 (b, a) select b, a from rtest_t2",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_v1 (a) select a from rtest_t3,rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_v1 select rtest_t2.a, rtest_t3.b     from rtest_t2, rtest_t3     where rtest_t2.a = rtest_t3.a",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_v1 select * from rtest_t3,rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_system values ('orion', 'Linux Jan Wieck')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_system values ('notjw', 'WinNT Jan Wieck (notebook)')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_system values ('neptun', 'Fileserver')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_interface values ('orion', 'eth0')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_interface values ('orion', 'eth1')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_interface values ('notjw', 'eth0')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_interface values ('neptun', 'eth0')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_person values ('jw', 'Jan Wieck')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_person values ('bm', 'Bruce Momjian')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_admin values ('jw', 'orion')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_admin values ('jw', 'notjw')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_admin values ('bm', 'neptun')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_emp values ('wiecc', '5000.00')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_emp values ('gates', '80000.00')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_empmass values ('meyer', '4000.00')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_empmass values ('maier', '5000.00')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_empmass values ('mayr', '6000.00')",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_emp select * from rtest_empmass,rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (1, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (2, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (10, 'Record should go to rtest_t5')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (15, 'Record should go to rtest_t5')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (19, 'Record should go to rtest_t5 and t7')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (20, 'Record should go to rtest_t4 and t6')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (26, 'Record should go to rtest_t4 and t8')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (28, 'Record should go to rtest_t4 and t8')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (30, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 values (40, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (1, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (2, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (10, 'Record should go to rtest_t5')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (15, 'Record should go to rtest_t5')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (19, 'Record should go to rtest_t5 and t7')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (20, 'Record should go to rtest_t4 and t6')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (26, 'Record should go to rtest_t4 and t8')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (28, 'Record should go to rtest_t4 and t8')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (30, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t9 values (40, 'Record should go to rtest_t4')",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_t4 select * from rtest_t9 where a < 20,rules.sql,SAME,,
postgresql,postgresql,insert into rtest_t4 select * from rtest_t9 where b ~ 'and t8',rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_t4 select a + 1, b from rtest_t9 where a in (20, 30, 40)",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_order1 values (1),rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (1, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (2, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (10, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (19, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (20, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (29, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (30, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (39, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (40, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (50, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn1 values (60, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn2 values (10, 'too small')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn2 values (50, 'too small')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn2 values (100, 'OK')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn2 values (200, 'OK')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (1, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (2, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (10, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (19, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (20, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (29, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (30, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (39, 'don''t want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (40, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (50, 'want this')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (60, 'want this')",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_nothn1 select * from rtest_nothn4,rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (10, 'too small')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (50, 'too small')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (100, 'OK')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_nothn4 values (200, 'OK')",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_nothn2 select * from rtest_nothn4,rules.sql,SAME,,
postgresql,postgresql,"create table rtest_view1 (a int4, b text, v bool)",rules.sql,SAME,,
postgresql,postgresql,create table rtest_view2 (a int4),rules.sql,SAME,,
postgresql,postgresql,"create table rtest_view3 (a int4, b text)",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_view4 (a int4, b text, c int4)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (1, 'item 1', 't')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (2, 'item 2', 't')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (3, 'item 3', 't')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (4, 'item 4', 'f')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (5, 'item 5', 't')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (6, 'item 6', 'f')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (7, 'item 7', 't')",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_view1 values (8, 'item 8', 't')",rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (2),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (2),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (4),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (5),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (7),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (7),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (7),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view2 values (7),rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view3 select * from rtest_vview1 where a < 7,rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view3 select * from rtest_vview2 where a != 5 and b !~ '2',rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view3 select * from rtest_vview3,rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view4 select * from rtest_vview4 where 3 > refcount,rules.sql,SAME,,
postgresql,postgresql,insert into rtest_view4 select * from rtest_vview5 where a > 2 and refcount = 0,rules.sql,SAME,,
postgresql,postgresql,"create table rtest_comp ( 	part	text, 	unit	char(4), 	size	float )",rules.sql,SAME,,
postgresql,postgresql,"create table rtest_unitfact ( 	unit	char(4), 	factor	float )",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_unitfact values ('m', 100.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_unitfact values ('cm', 1.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_unitfact values ('inch', 2.54)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p1', 'm', 5.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p2', 'm', 3.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p3', 'cm', 5.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p4', 'cm', 15.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p5', 'inch', 7.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into rtest_comp values ('p6', 'inch', 4.4)",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shoe_data ( 	shoename   char(10),       	sh_avail   integer,        	slcolor    char(10),       	slminlen   float,          	slmaxlen   float,          	slunit     char(8)         )",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shoelace_data ( 	sl_name    char(10),       	sl_avail   integer,        	sl_color   char(10),       	sl_len     float,          	sl_unit    char(8)         )",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE unit ( 	un_name    char(8),        	un_fact    float           )",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO unit VALUES ('cm', 1.0)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO unit VALUES ('m', 100.0)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO unit VALUES ('inch', 2.54)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoe_data VALUES ('sh1', 2, 'black', 70.0, 90.0, 'cm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoe_data VALUES ('sh2', 0, 'black', 30.0, 40.0, 'inch')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoe_data VALUES ('sh3', 4, 'brown', 50.0, 65.0, 'cm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoe_data VALUES ('sh4', 3, 'brown', 40.0, 50.0, 'inch')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl1', 5, 'black', 80.0, 'cm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl2', 6, 'black', 100.0, 'cm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl3', 0, 'black', 35.0 , 'inch')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl4', 8, 'black', 40.0 , 'inch')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl5', 4, 'brown', 1.0 , 'm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl6', 0, 'brown', 0.9 , 'm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl7', 7, 'brown', 60 , 'cm')",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_data VALUES ('sl8', 1, 'brown', 40 , 'inch')",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shoelace_log (         sl_name    char(10),               sl_avail   integer,                log_who    name,                   log_when   timestamp           )",rules.sql,SAME,,
postgresql,postgresql,"CREATE RULE log_shoelace AS ON UPDATE TO shoelace_data         WHERE NEW.sl_avail != OLD.sl_avail         DO INSERT INTO shoelace_log VALUES (                                         NEW.sl_name,                                         NEW.sl_avail,                                         'Al Bundy',                                         'epoch'                                     )",rules.sql,SAME,,
postgresql,postgresql,"CREATE RULE shoelace_ins AS ON INSERT TO shoelace         DO INSTEAD         INSERT INTO shoelace_data VALUES (                NEW.sl_name,                NEW.sl_avail,                NEW.sl_color,                NEW.sl_len,                NEW.sl_unit)",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shoelace_arrive (         arr_name    char(10),         arr_quant   integer     )",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE shoelace_ok (         ok_name     char(10),         ok_quant    integer     )",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_arrive VALUES ('sl3', 10)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_arrive VALUES ('sl6', 20)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO shoelace_arrive VALUES ('sl8', 20)",rules.sql,SAME,,
postgresql,postgresql,insert into shoelace_ok select * from shoelace_arrive,rules.sql,SAME,,
postgresql,postgresql,"insert into shoelace values ('sl9', 0, 'pink', 35.0, 'inch', 0.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into shoelace values ('sl10', 1000, 'magenta', 40.0, 'inch', 0.0)",rules.sql,SAME,,
postgresql,postgresql,"insert into shoelace values ('sl10', 1000, 'magenta', 40.0, 'inch', 0.0)   on conflict do nothing",rules.sql,DIFFERENT,FeatureNotSupported,INSERT with ON CONFLICT clause cannot be used with table that has INSERT or UPDATE rules
postgresql,postgresql,create table rules_foo (f1 int),rules.sql,SAME,,
postgresql,postgresql,create table rules_foo2 (f1 int),rules.sql,SAME,,
postgresql,postgresql,insert into rules_foo values(1),rules.sql,SAME,,
postgresql,postgresql,insert into rules_foo values(1001),rules.sql,SAME,,
postgresql,postgresql,create rule rules_foorule as on insert to rules_foo where f1 < 100 do instead insert into rules_foo2 values (f1),rules.sql,DIFFERENT,UndefinedColumn,"column ""f1"" does not exist LINE 2: do instead insert into rules_foo2 values (f1)                                                    DETAIL:  There are columns named ""f1"", but they are in tables that cannot be referenced from this part of the query. HINT:  Try using a table-qualified name."
postgresql,postgresql,create rule rules_foorule as on insert to rules_foo where f1 < 100 do instead insert into rules_foo2 values (new.f1),rules.sql,SAME,,
postgresql,postgresql,insert into rules_foo values(2),rules.sql,SAME,,
postgresql,postgresql,insert into rules_foo values(100),rules.sql,SAME,,
postgresql,postgresql,drop table rules_foo,rules.sql,SAME,,
postgresql,postgresql,drop table rules_foo2,rules.sql,SAME,,
postgresql,postgresql,"create table pparent (pid int, txt text)",rules.sql,SAME,,
postgresql,postgresql,"insert into pparent values (1,'parent1')",rules.sql,SAME,,
postgresql,postgresql,"insert into pparent values (2,'parent2')",rules.sql,SAME,,
postgresql,postgresql,"create table cchild (pid int, descrip text)",rules.sql,SAME,,
postgresql,postgresql,"insert into cchild values (1,'descrip1')",rules.sql,SAME,,
postgresql,postgresql,"create rule rrule as   on update to vview do instead (   insert into cchild (pid, descrip)     select old.pid, new.descrip where old.descrip isnull",rules.sql,DIFFERENT,SyntaxError,"syntax error at end of input LINE 5:     select old.pid, new.descrip where old.descrip isnull"
postgresql,postgresql,drop table pparent,rules.sql,SAME,,
postgresql,postgresql,drop table cchild,rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ruletest_tbl (a int, b int)",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ruletest_tbl2 (a int, b int)",rules.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE RULE myrule AS ON INSERT TO ruletest_tbl 	DO INSTEAD INSERT INTO ruletest_tbl2 VALUES (10, 10)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO ruletest_tbl VALUES (99, 99)",rules.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE RULE myrule AS ON INSERT TO ruletest_tbl 	DO INSTEAD INSERT INTO ruletest_tbl2 VALUES (1000, 1000)",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO ruletest_tbl VALUES (99, 99)",rules.sql,SAME,,
postgresql,postgresql,"create table rule_and_refint_t1 ( 	id1a integer, 	id1b integer,  	primary key (id1a, id1b) )",rules.sql,SAME,,
postgresql,postgresql,"create table rule_and_refint_t2 ( 	id2a integer, 	id2c integer,  	primary key (id2a, id2c) )",rules.sql,SAME,,
postgresql,postgresql,"create table rule_and_refint_t3 ( 	id3a integer, 	id3b integer, 	id3c integer, 	data text,  	primary key (id3a, id3b, id3c),  	foreign key (id3a, id3b) references rule_and_refint_t1 (id1a, id1b), 	foreign key (id3a, id3c) references rule_and_refint_t2 (id2a, id2c) )",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t1 values (1, 11)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t1 values (1, 12)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t1 values (2, 21)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t1 values (2, 22)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t2 values (1, 11)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t2 values (1, 12)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t2 values (2, 21)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t2 values (2, 22)",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 11, 11, 'row1')",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 11, 12, 'row2')",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 12, 11, 'row3')",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 12, 12, 'row4')",rules.sql,SAME,,
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 11, 13, 'row5')",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3c_fkey"" DETAIL:  Key (id3a, id3c)=(1, 13) is not present in table ""rule_and_refint_t2""."
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 13, 11, 'row6')",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3b_fkey"" DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table ""rule_and_refint_t1""."
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 13, 11, 'row6')   on conflict do nothing",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3b_fkey"" DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table ""rule_and_refint_t1""."
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 13, 11, 'row6')   on conflict (id3a, id3b, id3c) do update   set id3b = excluded.id3b",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3b_fkey"" DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table ""rule_and_refint_t1""."
postgresql,postgresql,"insert into shoelace values ('sl9', 0, 'pink', 35.0, 'inch', 0.0)   on conflict (sl_name) do update   set sl_avail = excluded.sl_avail",rules.sql,DIFFERENT,FeatureNotSupported,INSERT with ON CONFLICT clause cannot be used with table that has INSERT or UPDATE rules
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 11, 13, 'row7')",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3c_fkey"" DETAIL:  Key (id3a, id3c)=(1, 13) is not present in table ""rule_and_refint_t2""."
postgresql,postgresql,"insert into rule_and_refint_t3 values (1, 13, 11, 'row8')",rules.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""rule_and_refint_t3"" violates foreign key constraint ""rule_and_refint_t3_id3a_id3b_fkey"" DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table ""rule_and_refint_t1""."
postgresql,postgresql,"create table rules_fooview (x int, y text)",rules.sql,SAME,,
postgresql,postgresql,drop table rules_fooview,rules.sql,SAME,,
postgresql,postgresql,"create table rules_fooview (x int, y text) partition by list (x)",rules.sql,SAME,,
postgresql,postgresql,create table rules_fooview_part partition of rules_fooview for values in (1),rules.sql,SAME,,
postgresql,postgresql,drop table rules_fooview,rules.sql,SAME,,
postgresql,postgresql,"create table id (id serial primary key, name text)",rules.sql,SAME,,
postgresql,postgresql,create table test_1 (id integer primary key) inherits (id),rules.sql,SAME,,
postgresql,postgresql,create table test_2 (id integer primary key) inherits (id),rules.sql,SAME,,
postgresql,postgresql,create table test_3 (id integer primary key) inherits (id),rules.sql,SAME,,
postgresql,postgresql,insert into test_1 (name) values ('Test 1'),rules.sql,SAME,,
postgresql,postgresql,insert into test_1 (name) values ('Test 2'),rules.sql,SAME,,
postgresql,postgresql,insert into test_2 (name) values ('Test 3'),rules.sql,SAME,,
postgresql,postgresql,insert into test_2 (name) values ('Test 4'),rules.sql,SAME,,
postgresql,postgresql,insert into test_3 (name) values ('Test 5'),rules.sql,SAME,,
postgresql,postgresql,insert into test_3 (name) values ('Test 6'),rules.sql,SAME,,
postgresql,postgresql,drop table id cascade,rules.sql,SAME,,
postgresql,postgresql,create rule t1_ins_1 as on insert to t1 	where new.a >= 0 and new.a < 10 	do instead 	insert into t1_1 values (new.a),rules.sql,SAME,,
postgresql,postgresql,create rule t1_ins_2 as on insert to t1 	where new.a >= 10 and new.a < 20 	do instead 	insert into t1_2 values (new.a),rules.sql,SAME,,
postgresql,postgresql,"insert into t1 select * from generate_series(5,19,1) g",rules.sql,SAME,,
postgresql,postgresql,"create table rules_base(f1 int, f2 int)",rules.sql,SAME,,
postgresql,postgresql,"insert into rules_base values(1,2), (11,12)",rules.sql,SAME,,
postgresql,postgresql,drop table rules_base,rules.sql,SAME,,
postgresql,postgresql,"create table rules_src(f1 int, f2 int default 0)",rules.sql,SAME,,
postgresql,postgresql,"create table rules_log(f1 int, f2 int, tag text, id serial)",rules.sql,SAME,,
postgresql,postgresql,"insert into rules_src values(1,2), (11,12)",rules.sql,SAME,,
postgresql,postgresql,"create rule r1 as on update to rules_src do also   insert into rules_log values(old.*, 'old', default), (new.*, 'new', default)",rules.sql,SAME,,
postgresql,postgresql,"create rule r3 as on insert to rules_src do also   insert into rules_log values(null, null, '-', default), (new.*, 'new', default)",rules.sql,SAME,,
postgresql,postgresql,"insert into rules_src values(22,23), (33,default)",rules.sql,SAME,,
postgresql,postgresql,"create rule r5 as on insert to rules_src do instead insert into rules_log AS trgt SELECT NEW.* RETURNING trgt.f1, trgt.f2",rules.sql,SAME,,
postgresql,postgresql,"create rule r7 as on delete to rules_src do instead   with wins as (insert into int4_tbl as trgt values (0) returning *),        wupd as (update int4_tbl trgt set f1 = f1+1 returning *),        wdel as (delete from int4_tbl trgt where f1 = 0 returning *)   insert into rules_log AS trgt select old.* from wins, wupd, wdel   returning trgt.f1, trgt.f2",rules.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 2:   with wins as (insert into int4_tbl as trgt values (0) retu..."
postgresql,postgresql,"create table rule_t1(f1 int, f2 int)",rules.sql,SAME,,
postgresql,postgresql,"create table rule_dest(f1 int, f2 int[], tag text)",rules.sql,SAME,,
postgresql,postgresql,"drop table rule_t1, rule_dest",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rule_t1(a int, b text DEFAULT 'xxx', c int)",rules.sql,SAME,,
postgresql,postgresql,CREATE RULE v1_ins AS ON INSERT TO rule_v1   DO ALSO INSERT INTO rule_t1   SELECT * FROM (SELECT a + 10 FROM rule_t1 WHERE a = NEW.a) tt,rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO rule_v1 VALUES (1, 'a'), (2, 'b')",rules.sql,SAME,,
postgresql,postgresql,DROP TABLE rule_t1 CASCADE,rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE rule_t1 (a INT),rules.sql,SAME,,
postgresql,postgresql,CREATE RULE InsertRule AS     ON INSERT TO rule_v1     DO INSTEAD         INSERT INTO rule_t1 VALUES(new.a),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO rule_v1 VALUES(1),rules.sql,SAME,,
postgresql,postgresql,DROP TABLE rule_t1,rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hats ( 	hat_name    char(10) primary key, 	hat_color   char(10)       )",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hat_data ( 	hat_name    char(10), 	hat_color   char(10)       )",rules.sql,SAME,,
postgresql,postgresql,"CREATE RULE hat_nosert AS ON INSERT TO hats     DO INSTEAD     INSERT INTO hat_data VALUES (            NEW.hat_name,            NEW.hat_color)         ON CONFLICT (hat_name COLLATE ""C"" bpchar_pattern_ops) WHERE hat_color = 'green'         DO NOTHING         RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h7', 'black') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h7', 'black') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"CREATE RULE hat_nosert_all AS ON INSERT TO hats     DO INSTEAD     INSERT INTO hat_data VALUES (            NEW.hat_name,            NEW.hat_color)         ON CONFLICT         DO NOTHING         RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h7', 'black') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"CREATE RULE hat_upsert AS ON INSERT TO hats     DO INSTEAD     INSERT INTO hat_data VALUES (            NEW.hat_name,            NEW.hat_color)         ON CONFLICT (hat_name)         DO UPDATE            SET hat_name = hat_data.hat_name, hat_color = excluded.hat_color            WHERE excluded.hat_color <>  'forbidden' AND hat_data.* != excluded.*         RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h8', 'black') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h8', 'white') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"INSERT INTO hats VALUES ('h8', 'forbidden') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"explain (costs off) INSERT INTO hats VALUES ('h8', 'forbidden') RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"WITH data(hat_name, hat_color) AS MATERIALIZED (     VALUES ('h8', 'green'),         ('h9', 'blue'),         ('h7', 'forbidden') ) INSERT INTO hats     SELECT * FROM data RETURNING *",rules.sql,SAME,,
postgresql,postgresql,"EXPLAIN (costs off) WITH data(hat_name, hat_color) AS MATERIALIZED (     VALUES ('h8', 'green'),         ('h9', 'blue'),         ('h7', 'forbidden') ) INSERT INTO hats     SELECT * FROM data RETURNING *",rules.sql,SAME,,
postgresql,postgresql,drop table hats,rules.sql,SAME,,
postgresql,postgresql,drop table hat_data,rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE rules_parted_table (a int) PARTITION BY LIST (a),rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE rules_parted_table_1 PARTITION OF rules_parted_table FOR VALUES IN (1),rules.sql,SAME,,
postgresql,postgresql,CREATE RULE rules_parted_table_insert AS ON INSERT to rules_parted_table     DO INSTEAD INSERT INTO rules_parted_table_1 VALUES (NEW.*),rules.sql,SAME,,
postgresql,postgresql,DROP TABLE rules_parted_table,rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rule_merge1 (a int, b text)",rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rule_merge2 (a int, b text)",rules.sql,SAME,,
postgresql,postgresql,CREATE RULE rule1 AS ON INSERT TO rule_merge1 	DO INSTEAD INSERT INTO rule_merge2 VALUES (NEW.*),rules.sql,SAME,,
postgresql,postgresql,"CREATE TABLE sf_target(id int, data text, filling int[])",rules.sql,SAME,,
postgresql,postgresql,DROP TABLE sf_target,rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE ruletest1 (a int),rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE ruletest2 (b int),rules.sql,SAME,,
postgresql,postgresql,CREATE RULE rule1 AS ON INSERT TO ruletest1     DO INSTEAD INSERT INTO ruletest2 VALUES (NEW.*),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest1 VALUES (1),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest1 VALUES (2),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest1 VALUES (3),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest1 VALUES (4),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest1 VALUES (5),rules.sql,SAME,,
postgresql,postgresql,DROP TABLE ruletest1,rules.sql,SAME,,
postgresql,postgresql,DROP TABLE ruletest2,rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE ruletest_t1 (x int),rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE ruletest_t2 (x int),rules.sql,SAME,,
postgresql,postgresql,CREATE RULE rule1 AS ON INSERT TO ruletest_v1     DO INSTEAD INSERT INTO ruletest_t2 VALUES (NEW.*),rules.sql,SAME,,
postgresql,postgresql,INSERT INTO ruletest_v1 VALUES (1),rules.sql,SAME,,
postgresql,postgresql,CREATE TABLE ruletest_t3 (x int),rules.sql,SAME,,
postgresql,postgresql,CREATE RULE rule2 AS ON UPDATE TO ruletest_t1     DO INSTEAD INSERT INTO ruletest_t2 VALUES (OLD.*),rules.sql,SAME,,
postgresql,postgresql,DROP TABLE ruletest_t3,rules.sql,SAME,,
postgresql,postgresql,DROP TABLE ruletest_t2,rules.sql,SAME,,
postgresql,postgresql,DROP TABLE ruletest_t1,rules.sql,SAME,,
postgresql,postgresql,"create table ec0 (ff int8 primary key, f1 int8, f2 int8)",equivclass.sql,SAME,,
postgresql,postgresql,"create table ec1 (ff int8 primary key, f1 int8alias1, f2 int8alias2)",equivclass.sql,DIFFERENT,UndefinedObject,"type ""int8alias1"" does not exist LINE 1: create table ec1 (ff int8 primary key, f1 int8alias1, f2 int..."
postgresql,postgresql,"create table ec2 (xf int8 primary key, x1 int8alias1, x2 int8alias2)",equivclass.sql,DIFFERENT,UndefinedObject,"type ""int8alias1"" does not exist LINE 1: create table ec2 (xf int8 primary key, x1 int8alias1, x2 int..."
postgresql,postgresql,"CREATE TABLE ptif_test (a int, b int) PARTITION BY range (a)",partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test0 PARTITION OF ptif_test   FOR VALUES FROM (minvalue) TO (0) PARTITION BY list (b),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test01 PARTITION OF ptif_test0 FOR VALUES IN (1),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test1 PARTITION OF ptif_test   FOR VALUES FROM (0) TO (100) PARTITION BY list (b),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test11 PARTITION OF ptif_test1 FOR VALUES IN (1),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test2 PARTITION OF ptif_test   FOR VALUES FROM (100) TO (200),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_test3 PARTITION OF ptif_test   FOR VALUES FROM (200) TO (maxvalue) PARTITION BY list (b),partition_info.sql,SAME,,
postgresql,postgresql,DROP TABLE ptif_test,partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_normal_table(a int),partition_info.sql,SAME,,
postgresql,postgresql,DROP TABLE ptif_normal_table,partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_li_parent (),partition_info.sql,SAME,,
postgresql,postgresql,CREATE TABLE ptif_li_child () INHERITS (ptif_li_parent),partition_info.sql,SAME,,
postgresql,postgresql,"DROP TABLE ptif_li_parent, ptif_li_child",partition_info.sql,SAME,,
postgresql,postgresql,"INSERT INTO y VALUES ('Jackson, Sam', E'\\h')",copy2.sql,SAME,,
postgresql,postgresql,"INSERT INTO y VALUES ('It is ""perfect"".',E'\t')",copy2.sql,SAME,,
postgresql,postgresql,"INSERT INTO y VALUES ('', NULL)",copy2.sql,SAME,,
postgresql,postgresql,"INSERT INTO testnull VALUES (1, E'\\0'), (NULL, NULL)",copy2.sql,SAME,,
postgresql,postgresql,CREATE TABLE vistest (LIKE testeoc),copy2.sql,DIFFERENT,UndefinedTable,"relation ""testeoc"" does not exist LINE 1: CREATE TABLE vistest (LIKE testeoc)"
postgresql,postgresql,INSERT INTO vistest VALUES ('z'),copy2.sql,DIFFERENT,UndefinedTable,"relation ""vistest"" does not exist LINE 1: INSERT INTO vistest VALUES ('z')"
postgresql,postgresql,CREATE FUNCTION truncate_in_subxact() RETURNS VOID AS $$ BEGIN 	TRUNCATE vistest; EXCEPTION   WHEN OTHERS THEN 	INSERT INTO vistest VALUES ('subxact failure'); END; $$ language plpgsql,copy2.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO vistest VALUES ('z'),copy2.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,create table check_con_tbl (f1 int),copy2.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rls_t1 (a int, b int, c int)",copy2.sql,SAME,,
postgresql,postgresql,"CREATE TABLE instead_of_insert_tbl(id serial, name text)",copy2.sql,SAME,,
postgresql,postgresql,test1  CREATE FUNCTION fun_instead_of_insert_tbl() RETURNS trigger AS $$ BEGIN   INSERT INTO instead_of_insert_tbl (name) VALUES (NEW.str);   RETURN NULL; END; $$ LANGUAGE plpgsql,copy2.sql,DIFFERENT,SyntaxError,"syntax error at or near ""test1"" LINE 1: test1"
postgresql,postgresql,"CREATE TABLE check_ign_err (n int, m int[], k int)",copy2.sql,SAME,,
postgresql,postgresql,CREATE TABLE hard_err(foo widget),copy2.sql,DIFFERENT,UndefinedObject,"type ""widget"" does not exist LINE 1: CREATE TABLE hard_err(foo widget)"
postgresql,postgresql,1	{1}	3	abc  DROP TABLE forcetest,copy2.sql,DIFFERENT,SyntaxError,"syntax error at or near ""1"" LINE 1: 1 {1} 3 abc"
postgresql,postgresql,DROP TABLE vistest,copy2.sql,DIFFERENT,UndefinedTable,"table ""vistest"" does not exist"
postgresql,postgresql,"DROP TABLE x, y",copy2.sql,SAME,,
postgresql,postgresql,DROP TABLE rls_t1 CASCADE,copy2.sql,SAME,,
postgresql,postgresql,DROP TABLE instead_of_insert_tbl,copy2.sql,SAME,,
postgresql,postgresql,DROP TABLE check_ign_err,copy2.sql,SAME,,
postgresql,postgresql,DROP TABLE hard_err,copy2.sql,DIFFERENT,UndefinedTable,"table ""hard_err"" does not exist"
postgresql,postgresql,"CREATE TABLE tidrangescan(id integer, data text)",tidrangescan.sql,SAME,,
postgresql,postgresql,"INSERT INTO tidrangescan SELECT i,repeat('x', 100) FROM generate_series(1,200) AS s(i)",tidrangescan.sql,SAME,,
postgresql,postgresql,DROP TABLE tidrangescan,tidrangescan.sql,SAME,,
postgresql,postgresql,"create table simple as   select generate_series(1, 20000) AS id, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'",join_hash.sql,SAME,,
postgresql,postgresql,"create table bigger_than_it_looks as   select generate_series(1, 20000) as id, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'",join_hash.sql,SAME,,
postgresql,postgresql,"create table extremely_skewed (id int, t text)",join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"insert into extremely_skewed   select 42 as id, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'   from generate_series(1, 20000)",join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"create table wide as select generate_series(1, 2) as id, rpad('', 320000, 'x') as t",join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"create table join_foo as select generate_series(1, 3) as id, 'xxxxx'::text as t",join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"create table join_bar as select generate_series(1, 10000) as id, 'xxxxx'::text as t",join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE hjtest_matchbits_t1(id int),join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE hjtest_matchbits_t2(id int),join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO hjtest_matchbits_t1 VALUES (1),join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO hjtest_matchbits_t2 VALUES (2),join_hash.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE hjtest_1 (a text, b int, id int, c bool)",join_hash.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hjtest_2 (a bool, id int, b text, c int)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_1(a, b, id, c) VALUES ('text', 2, 1, false)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_1(a, b, id, c) VALUES ('text', 1, 2, false)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_1(a, b, id, c) VALUES ('text', 20, 1, false)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_1(a, b, id, c) VALUES ('text', 1, 1, false)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_2(a, id, b, c) VALUES (true, 1, 'another', 2)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_2(a, id, b, c) VALUES (true, 3, 'another', 7)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_2(a, id, b, c) VALUES (true, 1, 'another', 90)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_2(a, id, b, c) VALUES (true, 1, 'another', 3)",join_hash.sql,SAME,,
postgresql,postgresql,"INSERT INTO hjtest_2(a, id, b, c) VALUES (true, 1, 'text', 1)",join_hash.sql,SAME,,
postgresql,postgresql,CREATE TABLE TIME_TBL (f1 time(2)),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('00:00'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('01:00'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('02:03 PST'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('11:59 EDT'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('12:00'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('12:01'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('23:59'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('11:59:59.99 PM'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('2003-03-07 15:36:39 America/New_York'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('2003-07-07 15:36:39 America/New_York'),time.sql,SAME,,
postgresql,postgresql,INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York'),time.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type time: ""15:36:39 America/New_York"" LINE 1: INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York')"
postgresql,postgresql,"CREATE TABLE rngfunc2(rngfuncid int, f2 int)",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc2 VALUES(1, 11)",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc2 VALUES(2, 22)",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc2 VALUES(1, 111)",rangefuncs.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rngfunc (rngfuncid int, rngfuncsubid int, rngfuncname text, primary key(rngfuncid,rngfuncsubid))",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc VALUES(1,1,'Joe')",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc VALUES(1,2,'Ed')",rangefuncs.sql,SAME,,
postgresql,postgresql,"INSERT INTO rngfunc VALUES(2,1,'Mary')",rangefuncs.sql,SAME,,
postgresql,postgresql,DROP TABLE rngfunc2,rangefuncs.sql,SAME,,
postgresql,postgresql,DROP TABLE rngfunc,rangefuncs.sql,SAME,,
postgresql,postgresql,create function insert_tt(text) returns int as $$ insert into tt(data) values($1) returning f1 $$ language sql,rangefuncs.sql,SAME,,
postgresql,postgresql,"create or replace function insert_tt(text) returns int as $$ insert into tt(data) values($1),($1||$1) returning f1 $$ language sql",rangefuncs.sql,SAME,,
postgresql,postgresql,"create or replace function insert_tt2(text,text) returns setof int as $$ insert into tt(data) values($1),($2) returning f1 $$ language sql",rangefuncs.sql,SAME,,
postgresql,postgresql,create rule insert_tt_rule as on insert to tt do also   insert into tt_log values(new.*),rangefuncs.sql,SAME,,
postgresql,postgresql,"create function testrngfunc() returns record as $$   insert into rngfunc values (1,2) returning *; $$ language sql",rangefuncs.sql,SAME,,
postgresql,postgresql,"create function testrngfunc() returns setof record as $$   insert into rngfunc values (1,2), (3,4) returning *; $$ language sql",rangefuncs.sql,SAME,,
postgresql,postgresql,"insert into users values ('id',1,'email',true,11,true)",rangefuncs.sql,SAME,,
postgresql,postgresql,"insert into users values ('id2',2,'email2',true,12,true)",rangefuncs.sql,SAME,,
postgresql,postgresql,drop table users,rangefuncs.sql,SAME,,
postgresql,postgresql,CREATE TABLE unknowntab ( 	u unknown     ),create_table.sql,DIFFERENT,InvalidTableDefinition,"column ""u"" has pseudo-type unknown"
postgresql,postgresql,"CREATE TABLE tas_case WITH (""Fillfactor"" = 10) AS SELECT 1 a",create_table.sql,DIFFERENT,InvalidParameterValue,"unrecognized parameter ""Fillfactor"""
postgresql,postgresql,DROP TABLE unlogged2,create_table.sql,SAME,,
postgresql,postgresql,INSERT INTO unlogged1 VALUES (42),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE pg_temp.implicitly_temp (a int primary key),create_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE unlogged1, public.unlogged2",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE as_select1 AS SELECT * FROM pg_class WHERE relkind = 'r',create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE as_select1 AS SELECT * FROM pg_class WHERE relkind = 'r',create_table.sql,DIFFERENT,DuplicateTable,"relation ""as_select1"" already exists"
postgresql,postgresql,CREATE TABLE IF NOT EXISTS as_select1 AS SELECT * FROM pg_class WHERE relkind = 'r',create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE as_select1,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE as_select1 AS EXECUTE select1,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE as_select1 AS EXECUTE select1,create_table.sql,DIFFERENT,DuplicateTable,"relation ""as_select1"" already exists"
postgresql,postgresql,CREATE TABLE IF NOT EXISTS as_select1 AS EXECUTE select1,create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE as_select1,create_table.sql,SAME,,
postgresql,postgresql,"SELECT 'CREATE TABLE extra_wide_table(firstc text, '|| array_to_string(array_agg('c'||i||' bool'),',')||', lastc text);' FROM generate_series(1, 1100) g(i) INSERT INTO extra_wide_table(firstc, lastc) VALUES('first col', 'last col')",create_table.sql,DIFFERENT,SyntaxError,"syntax error at or near ""INSERT"" LINE 3: INSERT INTO extra_wide_table(firstc, lastc) VALUES('first co..."
postgresql,postgresql,CREATE TABLE withoid() WITH OIDS,create_table.sql,DIFFERENT,SyntaxError,"syntax error at or near ""OIDS"" LINE 1: CREATE TABLE withoid() WITH OIDS"
postgresql,postgresql,CREATE TABLE withoid() WITH (oids),create_table.sql,DIFFERENT,FeatureNotSupported,tables declared WITH OIDS are not supported
postgresql,postgresql,CREATE TABLE withoid() WITH (oids = true),create_table.sql,DIFFERENT,FeatureNotSupported,tables declared WITH OIDS are not supported
postgresql,postgresql,DROP TABLE withoutoid,create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE withoutoid,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE default_expr_column (id int DEFAULT (id)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in DEFAULT expression LINE 1: CREATE TABLE default_expr_column (id int DEFAULT (id))
postgresql,postgresql,CREATE TABLE default_expr_column (id int DEFAULT (bar.id)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in DEFAULT expression LINE 1: CREATE TABLE default_expr_column (id int DEFAULT (bar.id))
postgresql,postgresql,CREATE TABLE default_expr_agg_column (id int DEFAULT (avg(id))),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in DEFAULT expression LINE 1: ...ATE TABLE default_expr_agg_column (id int DEFAULT (avg(id)))
postgresql,postgresql,CREATE TABLE default_expr_non_column (a int DEFAULT (avg(non_existent))),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in DEFAULT expression LINE 1: ...TABLE default_expr_non_column (a int DEFAULT (avg(non_existe...
postgresql,postgresql,CREATE TABLE default_expr_agg (a int DEFAULT (avg(1))),create_table.sql,DIFFERENT,GroupingError,aggregate functions are not allowed in DEFAULT expressions LINE 1: CREATE TABLE default_expr_agg (a int DEFAULT (avg(1)))
postgresql,postgresql,CREATE TABLE default_expr_agg (a int DEFAULT (select 1)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use subquery in DEFAULT expression LINE 1: CREATE TABLE default_expr_agg (a int DEFAULT (select 1))
postgresql,postgresql,"CREATE TABLE default_expr_agg (a int DEFAULT (generate_series(1,3)))",create_table.sql,DIFFERENT,FeatureNotSupported,set-returning functions are not allowed in DEFAULT expressions LINE 1: CREATE TABLE default_expr_agg (a int DEFAULT (generate_serie...
postgresql,postgresql,CREATE TABLE remember_create_subid (c int),create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE remember_create_subid,create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE remember_create_subid,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE remember_node_subid (c int),create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE remember_node_subid,create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE remember_node_subid,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) INHERITS (some_table) PARTITION BY LIST (a),create_table.sql,DIFFERENT,InvalidObjectDefinition,cannot create partitioned table as inheritance child
postgresql,postgresql,"CREATE TABLE partitioned ( 	a1 int, 	a2 int ) PARTITION BY LIST (a1, a2)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"cannot use ""list"" partition strategy with more than one column"
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE (retset(a)),create_table.sql,DIFFERENT,FeatureNotSupported,set-returning functions are not allowed in partition key expressions
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE ((avg(a))),create_table.sql,DIFFERENT,GroupingError,aggregate functions are not allowed in partition key expressions
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	b int ) PARTITION BY RANGE ((avg(a) OVER (PARTITION BY b)))",create_table.sql,DIFFERENT,WindowingError,window functions are not allowed in partition key expressions
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY LIST ((a LIKE (SELECT 1))),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use subquery in partition key expression
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE ((42)),create_table.sql,DIFFERENT,InvalidObjectDefinition,cannot use constant expression as partition key
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE (const_func()),create_table.sql,DIFFERENT,InvalidObjectDefinition,cannot use constant expression as partition key
postgresql,postgresql,CREATE TABLE partitioned (     a int ) PARTITION BY MAGIC (a),create_table.sql,DIFFERENT,InvalidParameterValue,"unrecognized partitioning strategy ""magic"""
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE (b),create_table.sql,DIFFERENT,UndefinedColumn,"column ""b"" named in partition key does not exist LINE 3: ) PARTITION BY RANGE (b)"
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE (xmin),create_table.sql,DIFFERENT,InvalidObjectDefinition,"cannot use system column ""xmin"" in partition key LINE 3: ) PARTITION BY RANGE (xmin)"
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	b int ) PARTITION BY RANGE (((a, b)))",create_table.sql,DIFFERENT,InvalidTableDefinition,partition key column 1 has pseudo-type record
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	b int ) PARTITION BY RANGE (a, ('unknown'))",create_table.sql,DIFFERENT,InvalidTableDefinition,partition key column 2 has pseudo-type unknown
postgresql,postgresql,CREATE TABLE partitioned ( 	a int ) PARTITION BY RANGE (immut_func(a)),create_table.sql,DIFFERENT,InvalidObjectDefinition,functions in partition key expression must be marked IMMUTABLE
postgresql,postgresql,CREATE TABLE partitioned ( 	a point ) PARTITION BY LIST (a),create_table.sql,DIFFERENT,UndefinedObject,"data type point has no default operator class for access method ""btree"" HINT:  You must specify a btree operator class or define a default btree operator class for the data type."
postgresql,postgresql,CREATE TABLE partitioned ( 	a point ) PARTITION BY LIST (a point_ops),create_table.sql,DIFFERENT,UndefinedObject,"operator class ""point_ops"" does not exist for access method ""btree"""
postgresql,postgresql,CREATE TABLE partitioned ( 	a point ) PARTITION BY RANGE (a),create_table.sql,DIFFERENT,UndefinedObject,"data type point has no default operator class for access method ""btree"" HINT:  You must specify a btree operator class or define a default btree operator class for the data type."
postgresql,postgresql,CREATE TABLE partitioned ( 	a point ) PARTITION BY RANGE (a point_ops),create_table.sql,DIFFERENT,UndefinedObject,"operator class ""point_ops"" does not exist for access method ""btree"""
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	CONSTRAINT check_a CHECK (a > 0) NO INHERIT ) PARTITION BY RANGE (a)",create_table.sql,DIFFERENT,InvalidTableDefinition,"cannot add NO INHERIT constraint to partitioned table ""partitioned"""
postgresql,postgresql,"CREATE TABLE partitioned ( 	a int, 	b int, 	c text, 	d text ) PARTITION BY RANGE (a oid_ops, plusone(b), c collate ""default"", d collate ""C"")",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE partitioned2 ( 	a int, 	b text ) PARTITION BY RANGE ((a+1), substr(b, 1, 5))",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail () INHERITS (partitioned2),create_table.sql,DIFFERENT,WrongObjectType,"cannot inherit from partitioned table ""partitioned2"""
postgresql,postgresql,"INSERT INTO partitioned2 VALUES (1, 'hello')",create_table.sql,DIFFERENT,CheckViolation,"no partition of relation ""partitioned2"" found for row DETAIL:  Partition key of the failing row contains ((a + 1), substr(b, 1, 5)) = (2, hello)."
postgresql,postgresql,"CREATE TABLE part2_1 PARTITION OF partitioned2 FOR VALUES FROM (-1, 'aaaaa') TO (100, 'ccccc')",create_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE partitioned, partitioned2",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned (a int, b int)   partition by list ((row(a, b)::partitioned))",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned1   partition of partitioned for values in ('(1,2)'::partitioned)",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned2   partition of partitioned for values in ('(2,4)'::partitioned)",create_table.sql,SAME,,
postgresql,postgresql,drop table partitioned,create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned (a int, b int)   partition by list ((partitioned))",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned1   partition of partitioned for values in ('(1,2)')",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned2   partition of partitioned for values in ('(2,4)')",create_table.sql,SAME,,
postgresql,postgresql,drop table partitioned,create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned ( 	a intdom1, 	b text ) partition by range (a)",create_table.sql,SAME,,
postgresql,postgresql,"create table partitioned ( 	a intdom1, 	b text ) partition by range (plusone(a))",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE list_parted ( 	a int ) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_p1 PARTITION OF list_parted FOR VALUES IN ('1'),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_p2 PARTITION OF list_parted FOR VALUES IN (2),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_p3 PARTITION OF list_parted FOR VALUES IN ((2+1)),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_null PARTITION OF list_parted FOR VALUES IN (null),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (somename),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 1: ..._expr_fail PARTITION OF list_parted FOR VALUES IN (somename)
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (somename.somename),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 1: ...expr_fail PARTITION OF list_parted FOR VALUES IN (somename.s...
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (a),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 1: ...t_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (a)
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(a)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 1: ...us_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(a))
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(somename)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 1: ..._fail PARTITION OF list_parted FOR VALUES IN (sum(somename))
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(1)),create_table.sql,DIFFERENT,GroupingError,aggregate functions are not allowed in partition bound LINE 1: ...us_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(1))
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN ((select 1)),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use subquery in partition bound LINE 1: ...expr_fail PARTITION OF list_parted FOR VALUES IN ((select 1)...
postgresql,postgresql,"CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (generate_series(4, 6))",create_table.sql,DIFFERENT,FeatureNotSupported,set-returning functions are not allowed in partition bound LINE 1: ...expr_fail PARTITION OF list_parted FOR VALUES IN (generate_s...
postgresql,postgresql,"CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN ((1+1) collate ""POSIX"")",create_table.sql,DIFFERENT,DatatypeMismatch,"collations are not supported by type integer LINE 1: ...ail PARTITION OF list_parted FOR VALUES IN ((1+1) collate ""P..."
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES IN (),create_table.sql,DIFFERENT,SyntaxError,"syntax error at or near "")"" LINE 1: ...TE TABLE fail_part PARTITION OF list_parted FOR VALUES IN ()"
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES FROM (1) TO (2),create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a list partition LINE 1: ...BLE fail_part PARTITION OF list_parted FOR VALUES FROM (1) T...
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a list partition LINE 1: ...BLE fail_part PARTITION OF list_parted FOR VALUES WITH (MODU...
postgresql,postgresql,CREATE TABLE part_default PARTITION OF list_parted DEFAULT,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_default_part PARTITION OF list_parted DEFAULT,create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_default_part"" conflicts with existing default partition ""part_default"" LINE 1: ...ATE TABLE fail_default_part PARTITION OF list_parted DEFAULT"
postgresql,postgresql,CREATE TABLE bools ( 	a bool ) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE bools_true PARTITION OF bools FOR VALUES IN (1),create_table.sql,DIFFERENT,DatatypeMismatch,"specified value cannot be cast to type boolean for column ""a"" LINE 1: CREATE TABLE bools_true PARTITION OF bools FOR VALUES IN (1)"
postgresql,postgresql,DROP TABLE bools,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE moneyp ( 	a money ) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE moneyp_10 PARTITION OF moneyp FOR VALUES IN (10),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE moneyp_11 PARTITION OF moneyp FOR VALUES IN ('11'),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE moneyp_12 PARTITION OF moneyp FOR VALUES IN (to_char(12, '99')::int)",create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE moneyp,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE bigintp ( 	a bigint ) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE bigintp_10 PARTITION OF bigintp FOR VALUES IN (10),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE bigintp_10_2 PARTITION OF bigintp FOR VALUES IN ('10'),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""bigintp_10_2"" would overlap partition ""bigintp_10"" LINE 1: ...TABLE bigintp_10_2 PARTITION OF bigintp FOR VALUES IN ('10')"
postgresql,postgresql,DROP TABLE bigintp,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE range_parted ( 	a date ) PARTITION BY RANGE (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (somename) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 2:   FOR VALUES FROM (somename) TO ('2019-01-01')
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (somename.somename) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 2:   FOR VALUES FROM (somename.somename) TO ('2019-01-01')
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (a) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 2:   FOR VALUES FROM (a) TO ('2019-01-01')
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (max(a)) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 2:   FOR VALUES FROM (max(a)) TO ('2019-01-01')
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (max(somename)) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use column reference in partition bound expression LINE 2:   FOR VALUES FROM (max(somename)) TO ('2019-01-01')
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (max('2019-02-01'::date)) TO ('2019-01-01'),create_table.sql,DIFFERENT,GroupingError,aggregate functions are not allowed in partition bound LINE 2:   FOR VALUES FROM (max('2019-02-01'::date)) TO ('2019-01-01'...
postgresql,postgresql,CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM ((select 1)) TO ('2019-01-01'),create_table.sql,DIFFERENT,FeatureNotSupported,cannot use subquery in partition bound LINE 2:   FOR VALUES FROM ((select 1)) TO ('2019-01-01')
postgresql,postgresql,"CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted   FOR VALUES FROM (generate_series(1, 3)) TO ('2019-01-01')",create_table.sql,DIFFERENT,FeatureNotSupported,"set-returning functions are not allowed in partition bound LINE 2:   FOR VALUES FROM (generate_series(1, 3)) TO ('2019-01-01')"
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES IN ('a'),create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a range partition LINE 1: ...ABLE fail_part PARTITION OF range_parted FOR VALUES IN ('a')
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a range partition LINE 1: ...LE fail_part PARTITION OF range_parted FOR VALUES WITH (MODU...
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM ('a', 1) TO ('z')",create_table.sql,DIFFERENT,InvalidTableDefinition,FROM must specify exactly one value per partitioning column
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM ('a') TO ('z', 1)",create_table.sql,DIFFERENT,InvalidTableDefinition,TO must specify exactly one value per partitioning column
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM (null) TO (maxvalue),create_table.sql,DIFFERENT,InvalidObjectDefinition,cannot specify NULL in range bound
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a range partition LINE 1: ...LE fail_part PARTITION OF range_parted FOR VALUES WITH (MODU...
postgresql,postgresql,CREATE TABLE hash_parted ( 	a int ) PARTITION BY HASH (a),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hpart_1 PARTITION OF hash_parted FOR VALUES WITH (MODULUS 10, REMAINDER 0)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hpart_2 PARTITION OF hash_parted FOR VALUES WITH (MODULUS 50, REMAINDER 1)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hpart_3 PARTITION OF hash_parted FOR VALUES WITH (MODULUS 200, REMAINDER 2)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hpart_4 PARTITION OF hash_parted FOR VALUES WITH (MODULUS 10, REMAINDER 3)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 25, REMAINDER 3)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"every hash partition modulus must be a factor of the next larger modulus DETAIL:  The new modulus 25 is not divisible by 10, the modulus of existing partition ""hpart_4""."
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 150, REMAINDER 3)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"every hash partition modulus must be a factor of the next larger modulus DETAIL:  The new modulus 150 is not a factor of 200, the modulus of existing partition ""hpart_3""."
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 100, REMAINDER 3)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""hpart_4"" LINE 1: ...BLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODU..."
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES FROM ('a', 1) TO ('z')",create_table.sql,DIFFERENT,InvalidTableDefinition,"invalid bound specification for a hash partition LINE 1: ...BLE fail_part PARTITION OF hash_parted FOR VALUES FROM ('a',..."
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES IN (1000),create_table.sql,DIFFERENT,InvalidTableDefinition,invalid bound specification for a hash partition LINE 1: ...ABLE fail_part PARTITION OF hash_parted FOR VALUES IN (1000)
postgresql,postgresql,CREATE TABLE fail_default_part PARTITION OF hash_parted DEFAULT,create_table.sql,DIFFERENT,InvalidTableDefinition,a hash-partitioned table may not have a default partition
postgresql,postgresql,CREATE TABLE unparted ( 	a int ),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF unparted FOR VALUES IN ('a'),create_table.sql,DIFFERENT,InvalidObjectDefinition,"""unparted"" is not partitioned"
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF unparted FOR VALUES WITH (MODULUS 2, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"""unparted"" is not partitioned"
postgresql,postgresql,DROP TABLE unparted,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF temp_parted FOR VALUES IN ('a'),create_table.sql,DIFFERENT,WrongObjectType,"cannot create a permanent relation as partition of temporary relation ""temp_parted"""
postgresql,postgresql,DROP TABLE temp_parted,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE list_parted2 ( 	a varchar ) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_null_z PARTITION OF list_parted2 FOR VALUES IN (null, 'z')",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_ab PARTITION OF list_parted2 FOR VALUES IN ('a', 'b')",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE list_parted2_def PARTITION OF list_parted2 DEFAULT,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN (null),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part_null_z"" LINE 1: ...BLE fail_part PARTITION OF list_parted2 FOR VALUES IN (null)"
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN ('b', 'c')",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part_ab"" LINE 1: ...fail_part PARTITION OF list_parted2 FOR VALUES IN ('b', 'c')"
postgresql,postgresql,INSERT INTO list_parted2 VALUES('X'),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN ('W', 'X', 'Y')",create_table.sql,DIFFERENT,CheckViolation,"updated partition constraint for default partition ""list_parted2_def"" would be violated by some row"
postgresql,postgresql,CREATE TABLE range_parted2 ( 	a int ) PARTITION BY RANGE (a),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (0),create_table.sql,DIFFERENT,InvalidObjectDefinition,"empty range bound specified for partition ""fail_part"" LINE 1: ...l_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (0)                                                                DETAIL:  Specified lower bound (1) is greater than or equal to upper bound (0)."
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (1),create_table.sql,DIFFERENT,InvalidObjectDefinition,"empty range bound specified for partition ""fail_part"" LINE 1: ...l_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (1)                                                                DETAIL:  Specified lower bound (1) is greater than or equal to upper bound (1)."
postgresql,postgresql,CREATE TABLE part0 PARTITION OF range_parted2 FOR VALUES FROM (minvalue) TO (1),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (minvalue) TO (2),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part0"" LINE 1: ..._part PARTITION OF range_parted2 FOR VALUES FROM (minvalue) ..."
postgresql,postgresql,CREATE TABLE part1 PARTITION OF range_parted2 FOR VALUES FROM (1) TO (10),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (-1) TO (1),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part0"" LINE 1: ..._part PARTITION OF range_parted2 FOR VALUES FROM (-1) TO (1)"
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (9) TO (maxvalue),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part1"" LINE 1: ..._part PARTITION OF range_parted2 FOR VALUES FROM (9) TO (max..."
postgresql,postgresql,CREATE TABLE part2 PARTITION OF range_parted2 FOR VALUES FROM (20) TO (30),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part3 PARTITION OF range_parted2 FOR VALUES FROM (30) TO (40),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (30),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part2"" LINE 1: ...part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (30)"
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (50),create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part2"" LINE 1: ...part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (50)"
postgresql,postgresql,CREATE TABLE range2_default PARTITION OF range_parted2 DEFAULT,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_default_part PARTITION OF range_parted2 DEFAULT,create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_default_part"" conflicts with existing default partition ""range2_default"" LINE 1: ...E TABLE fail_default_part PARTITION OF range_parted2 DEFAULT"
postgresql,postgresql,INSERT INTO range_parted2 VALUES (85),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (80) TO (90),create_table.sql,DIFFERENT,CheckViolation,"updated partition constraint for default partition ""range2_default"" would be violated by some row"
postgresql,postgresql,CREATE TABLE part4 PARTITION OF range_parted2 FOR VALUES FROM (90) TO (100),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted3 ( 	a int, 	b int ) PARTITION BY RANGE (a, (b+1))",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part00 PARTITION OF range_parted3 FOR VALUES FROM (0, minvalue) TO (0, maxvalue)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (0, minvalue) TO (0, 1)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part00"" LINE 1: ..._part PARTITION OF range_parted3 FOR VALUES FROM (0, minvalu..."
postgresql,postgresql,"CREATE TABLE part10 PARTITION OF range_parted3 FOR VALUES FROM (1, minvalue) TO (1, 1)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part11 PARTITION OF range_parted3 FOR VALUES FROM (1, 1) TO (1, 10)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part12 PARTITION OF range_parted3 FOR VALUES FROM (1, 10) TO (1, maxvalue)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (1, 10) TO (1, 20)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part12"" LINE 1: ...rt PARTITION OF range_parted3 FOR VALUES FROM (1, 10) TO (1,..."
postgresql,postgresql,CREATE TABLE range3_default PARTITION OF range_parted3 DEFAULT,create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (1, minvalue) TO (1, maxvalue)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""part10"" LINE 1: ..._part PARTITION OF range_parted3 FOR VALUES FROM (1, minvalu..."
postgresql,postgresql,CREATE TABLE hash_parted2 ( 	a varchar ) PARTITION BY HASH (a),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE h2part_1 PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 4, REMAINDER 2)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE h2part_2 PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 8, REMAINDER 0)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE h2part_3 PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 8, REMAINDER 4)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE h2part_4 PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 8, REMAINDER 5)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 2, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidObjectDefinition,"partition ""fail_part"" would overlap partition ""h2part_4"" LINE 1: ...LE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODU..."
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 0, REMAINDER 1)",create_table.sql,DIFFERENT,InvalidTableDefinition,modulus for hash partition must be an integer value greater than zero
postgresql,postgresql,"CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 8, REMAINDER 8)",create_table.sql,DIFFERENT,InvalidTableDefinition,remainder for hash partition must be less than modulus
postgresql,postgresql,"CREATE TABLE parted ( 	a text, 	b int NOT NULL DEFAULT 0, 	CONSTRAINT check_a CHECK (length(a) > 0) ) PARTITION BY LIST (a)",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_a PARTITION OF parted FOR VALUES IN ('a'),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_b PARTITION OF parted ( 	b NOT NULL, 	b DEFAULT 1, 	b CHECK (b >= 0), 	CONSTRAINT check_a CHECK (length(a) > 0) ) FOR VALUES IN ('b')",create_table.sql,DIFFERENT,DuplicateColumn,"column ""b"" specified more than once"
postgresql,postgresql,"CREATE TABLE part_b PARTITION OF parted ( 	b NOT NULL DEFAULT 1, 	CONSTRAINT check_a CHECK (length(a) > 0), 	CONSTRAINT check_b CHECK (b >= 0) ) FOR VALUES IN ('b')",create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE fail_part_col_not_found PARTITION OF parted FOR VALUES IN ('c') PARTITION BY RANGE (c),create_table.sql,DIFFERENT,UndefinedColumn,"column ""c"" named in partition key does not exist LINE 1: ...RTITION OF parted FOR VALUES IN ('c') PARTITION BY RANGE (c)"
postgresql,postgresql,CREATE TABLE part_c PARTITION OF parted (b WITH OPTIONS NOT NULL DEFAULT 0) FOR VALUES IN ('c') PARTITION BY RANGE ((b)),create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_c_1_10 PARTITION OF part_c FOR VALUES FROM (1) TO (10),create_table.sql,SAME,,
postgresql,postgresql,"create table parted_notnull_inh_test (a int default 1, b int not null default 0) partition by list (a)",create_table.sql,SAME,,
postgresql,postgresql,"create table parted_notnull_inh_test1 partition of parted_notnull_inh_test (a not null, b default 1) for values in (1)",create_table.sql,SAME,,
postgresql,postgresql,insert into parted_notnull_inh_test (b) values (null),create_table.sql,DIFFERENT,NotNullViolation,"null value in column ""b"" of relation ""parted_notnull_inh_test1"" violates not-null constraint DETAIL:  Failing row contains (1, null)."
postgresql,postgresql,drop table parted_notnull_inh_test,create_table.sql,SAME,,
postgresql,postgresql,"create table parted_boolean_col (a bool, b text) partition by list(a)",create_table.sql,SAME,,
postgresql,postgresql,create table parted_boolean_less partition of parted_boolean_col   for values in ('foo' < 'bar'),create_table.sql,SAME,,
postgresql,postgresql,create table parted_boolean_greater partition of parted_boolean_col   for values in ('foo' > 'bar'),create_table.sql,SAME,,
postgresql,postgresql,drop table parted_boolean_col,create_table.sql,SAME,,
postgresql,postgresql,"create table parted_collate_must_match (a text collate ""C"", b text collate ""C"")   partition by range (a)",create_table.sql,SAME,,
postgresql,postgresql,"create table parted_collate_must_match1 partition of parted_collate_must_match   (a collate ""POSIX"") for values from ('a') to ('m')",create_table.sql,SAME,,
postgresql,postgresql,"create table parted_collate_must_match2 partition of parted_collate_must_match   (b collate ""POSIX"") for values from ('m') to ('z')",create_table.sql,SAME,,
postgresql,postgresql,drop table parted_collate_must_match,create_table.sql,SAME,,
postgresql,postgresql,"create table test_part_coll_posix (a text) partition by range (a collate ""POSIX"")",create_table.sql,SAME,,
postgresql,postgresql,"create table test_part_coll partition of test_part_coll_posix for values from ('a' collate ""C"") to ('g')",create_table.sql,SAME,,
postgresql,postgresql,create table test_part_coll2 partition of test_part_coll_posix for values from ('g') to ('m'),create_table.sql,SAME,,
postgresql,postgresql,"create table test_part_coll_cast partition of test_part_coll_posix for values from (name 'm' collate ""C"") to ('s')",create_table.sql,SAME,,
postgresql,postgresql,create table test_part_coll_cast2 partition of test_part_coll_posix for values from (name 's') to ('z'),create_table.sql,SAME,,
postgresql,postgresql,drop table test_part_coll_posix,create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted4 (a int, b int, c int) PARTITION BY RANGE (abs(a), abs(b), c)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE unbounded_range_part PARTITION OF range_parted4 FOR VALUES FROM (MINVALUE, MINVALUE, MINVALUE) TO (MAXVALUE, MAXVALUE, MAXVALUE)",create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE unbounded_range_part,create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted4_1 PARTITION OF range_parted4 FOR VALUES FROM (MINVALUE, MINVALUE, MINVALUE) TO (1, MAXVALUE, MAXVALUE)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted4_2 PARTITION OF range_parted4 FOR VALUES FROM (3, 4, 5) TO (6, 7, MAXVALUE)",create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE range_parted4_3 PARTITION OF range_parted4 FOR VALUES FROM (6, 8, MINVALUE) TO (9, MAXVALUE, MAXVALUE)",create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE range_parted4,create_table.sql,SAME,,
postgresql,postgresql,CREATE TABLE partkey_t (a int4) PARTITION BY RANGE (a test_int4_ops),create_table.sql,DIFFERENT,UndefinedObject,"operator class ""test_int4_ops"" does not exist for access method ""btree"""
postgresql,postgresql,CREATE TABLE partkey_t_1 PARTITION OF partkey_t FOR VALUES FROM (0) TO (1000),create_table.sql,DIFFERENT,UndefinedTable,"relation ""partkey_t"" does not exist"
postgresql,postgresql,INSERT INTO partkey_t VALUES (100),create_table.sql,DIFFERENT,UndefinedTable,"relation ""partkey_t"" does not exist LINE 1: INSERT INTO partkey_t VALUES (100)"
postgresql,postgresql,INSERT INTO partkey_t VALUES (200),create_table.sql,DIFFERENT,UndefinedTable,"relation ""partkey_t"" does not exist LINE 1: INSERT INTO partkey_t VALUES (200)"
postgresql,postgresql,"DROP TABLE parted, list_parted, range_parted, list_parted2, range_parted2, range_parted3",create_table.sql,SAME,,
postgresql,postgresql,"DROP TABLE partkey_t, hash_parted, hash_parted2",create_table.sql,DIFFERENT,UndefinedTable,"table ""partkey_t"" does not exist"
postgresql,postgresql,"CREATE TABLE parted_col_comment (a int, b text) PARTITION BY LIST (a)",create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE parted_col_comment,create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE parted_col_comment (a int, b text) PARTITION BY LIST (a) WITH (fillfactor=100)",create_table.sql,DIFFERENT,WrongObjectType,cannot specify storage parameters for a partitioned table HINT:  Specify storage parameters for its leaf partitions instead.
postgresql,postgresql,CREATE TABLE arrlp (a int[]) PARTITION BY LIST (a),create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE arrlp12 PARTITION OF arrlp FOR VALUES IN ('{1}', '{2}')",create_table.sql,SAME,,
postgresql,postgresql,DROP TABLE arrlp,create_table.sql,SAME,,
postgresql,postgresql,create table boolspart (a bool) partition by list (a),create_table.sql,SAME,,
postgresql,postgresql,create table boolspart_t partition of boolspart for values in (true),create_table.sql,SAME,,
postgresql,postgresql,create table boolspart_f partition of boolspart for values in (false),create_table.sql,SAME,,
postgresql,postgresql,drop table boolspart,create_table.sql,SAME,,
postgresql,postgresql,create table perm_parted (a int) partition by list (a),create_table.sql,SAME,,
postgresql,postgresql,create table perm_part partition of temp_parted default,create_table.sql,DIFFERENT,WrongObjectType,"cannot create a permanent relation as partition of temporary relation ""temp_parted"""
postgresql,postgresql,drop table perm_parted cascade,create_table.sql,SAME,,
postgresql,postgresql,drop table temp_parted cascade,create_table.sql,SAME,,
postgresql,postgresql,create table tab_part_create (a int) partition by list (a),create_table.sql,SAME,,
postgresql,postgresql,create or replace function func_part_create() returns trigger   language plpgsql as $$   begin     execute 'create table tab_part_create_1 partition of tab_part_create for values in (1)';     return null;   end $$,create_table.sql,SAME,,
postgresql,postgresql,insert into tab_part_create values (1),create_table.sql,DIFFERENT,ObjectInUse,"cannot CREATE TABLE .. PARTITION OF ""tab_part_create"" because it is being used by active queries in this session CONTEXT:  SQL statement ""create table tab_part_create_1 partition of tab_part_create for values in (1)"" PL/pgSQL function func_part_create() line 3 at EXECUTE"
postgresql,postgresql,drop table tab_part_create,create_table.sql,SAME,,
postgresql,postgresql,create table volatile_partbound_test (partkey timestamp) partition by range (partkey),create_table.sql,SAME,,
postgresql,postgresql,create table volatile_partbound_test1 partition of volatile_partbound_test for values from (minvalue) to (current_timestamp),create_table.sql,SAME,,
postgresql,postgresql,create table volatile_partbound_test2 partition of volatile_partbound_test for values from (current_timestamp) to (maxvalue),create_table.sql,SAME,,
postgresql,postgresql,insert into volatile_partbound_test values (current_timestamp),create_table.sql,SAME,,
postgresql,postgresql,drop table volatile_partbound_test,create_table.sql,SAME,,
postgresql,postgresql,"create table defcheck (a int, b int) partition by list (b)",create_table.sql,SAME,,
postgresql,postgresql,"create table defcheck_def (a int, c int, b int)",create_table.sql,SAME,,
postgresql,postgresql,"create table defcheck_1 partition of defcheck for values in (1, null)",create_table.sql,SAME,,
postgresql,postgresql,"insert into defcheck_def values (0, 0)",create_table.sql,SAME,,
postgresql,postgresql,create table defcheck_0 partition of defcheck for values in (0),create_table.sql,DIFFERENT,CheckViolation,"updated partition constraint for default partition ""defcheck_def"" would be violated by some row"
postgresql,postgresql,drop table defcheck,create_table.sql,SAME,,
postgresql,postgresql,"create table part_column_drop (   useless_1 int,   id int,   useless_2 int,   d int,   b int,   useless_3 int ) partition by range (id)",create_table.sql,SAME,,
postgresql,postgresql,create table part_column_drop_1_10 partition of   part_column_drop for values from (1) to (10),create_table.sql,SAME,,
postgresql,postgresql,drop table part_column_drop,create_table.sql,SAME,,
postgresql,postgresql,"CREATE TABLE TIMESTAMPTZ_TBL (d1 timestamp(2) with time zone);   BEGIN;  INSERT INTO TIMESTAMPTZ_TBL VALUES ('today'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('yesterday'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow EST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow zulu');  SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'today'; SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow'; SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'yesterday'; SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow EST'; SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow zulu';  COMMIT;  DELETE FROM TIMESTAMPTZ_TBL;   INSERT INTO TIMESTAMPTZ_TBL VALUES ('now'); SELECT pg_sleep(0.1);  BEGIN; INSERT INTO TIMESTAMPTZ_TBL VALUES ('now'); SELECT pg_sleep(0.1); INSERT INTO TIMESTAMPTZ_TBL VALUES ('now'); SELECT pg_sleep(0.1); SELECT count(*) AS two FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp(2) with time zone 'now'; SELECT count(d1) AS three, count(DISTINCT d1) AS two FROM TIMESTAMPTZ_TBL; COMMIT;  TRUNCATE TIMESTAMPTZ_TBL;  INSERT INTO TIMESTAMPTZ_TBL VALUES ('-infinity'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('infinity'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('epoch');  SELECT timestamptz 'infinity' = timestamptz '+infinity' AS t;  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01 1997 PST');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.000001 1997 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.999999 1997 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.4 1997 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.5 1997 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.6 1997 PST');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-01-02'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-01-02 03:04:05'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01-08'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01-0800'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01 -08:00'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 -0800'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-06-10 17:32:01 -07:00'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('2001-09-22T18:19:20');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 08:14:01 GMT+8'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 13:14:02 GMT-1'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 12:14:03 GMT-2'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 03:14:04 PST+8'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 02:14:05 MST+7:00');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997 -0800'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 5:32PM 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997/02/10 17:32:01-0800'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb-10-1997 17:32:01 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('02-10-1997 17:32:01 PST'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 PST'); set datestyle to ymd; INSERT INTO TIMESTAMPTZ_TBL VALUES ('97FEB10 5:32:01PM UTC'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('97/02/10 17:32:01 UTC'); reset datestyle; INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997.041 17:32:01 UTC');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 America/New_York'); SELECT '19970210 173201' AT TIME ZONE 'America/New_York'; INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America/New_York'); SELECT '19970710 173201' AT TIME ZONE 'America/New_York'; INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America/Does_not_exist'); SELECT '19970710 173201' AT TIME ZONE 'America/Does_not_exist';  SELECT '20500710 173201 Europe/Helsinki'::timestamptz;  SELECT '20500110 173201 Europe/Helsinki'::timestamptz;   SELECT '205000-07-10 17:32:01 Europe/Helsinki'::timestamptz;  SELECT '205000-01-10 17:32:01 Europe/Helsinki'::timestamptz;   SELECT pg_input_is_valid('now', 'timestamptz'); SELECT pg_input_is_valid('garbage', 'timestamptz'); SELECT pg_input_is_valid('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamptz'); SELECT * FROM pg_input_error_info('garbage', 'timestamptz'); SELECT * FROM pg_input_error_info('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamptz');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-06-10 18:32:01 PDT');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 11 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 12 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 13 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 14 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 15 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1997');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0097 BC'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0097'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0597'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1097'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1697'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1797'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1897'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 2097');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 28 17:32:01 1996'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1996'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mar 01 17:32:01 1996'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 30 17:32:01 1996'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1996'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 28 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mar 01 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 30 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1997'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1999'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 2000'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 2000'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 2001');  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 -0097'); INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 5097 BC');  SELECT 'Wed Jul 11 10:51:14 America/New_York 2001'::timestamptz; SELECT 'Wed Jul 11 10:51:14 GMT-4 2001'::timestamptz; SELECT 'Wed Jul 11 10:51:14 GMT+4 2001'::timestamptz; SELECT 'Wed Jul 11 10:51:14 PST-03:00 2001'::timestamptz; SELECT 'Wed Jul 11 10:51:14 PST+03:00 2001'::timestamptz;  SELECT d1 FROM TIMESTAMPTZ_TBL;  SELECT '4714-11-24 00:00:00+00 BC'::timestamptz; SELECT '4714-11-23 16:00:00-08 BC'::timestamptz; SELECT 'Sun Nov 23 16:00:00 4714 PST BC'::timestamptz; SELECT '4714-11-23 23:59:59+00 BC'::timestamptz;   SELECT '294276-12-31 23:59:59+00'::timestamptz; SELECT '294276-12-31 15:59:59-08'::timestamptz; SELECT '294277-01-01 00:00:00+00'::timestamptz;   SELECT '294277-12-31 16:00:00-08'::timestamptz;    SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 > timestamp with time zone '1997-01-02';  SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 < timestamp with time zone '1997-01-02';  SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 = timestamp with time zone '1997-01-02';  SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 != timestamp with time zone '1997-01-02';  SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 <= timestamp with time zone '1997-01-02';  SELECT d1 FROM TIMESTAMPTZ_TBL    WHERE d1 >= timestamp with time zone '1997-01-02';  SELECT d1 - timestamp with time zone '1997-01-02' AS diff    FROM TIMESTAMPTZ_TBL WHERE d1 BETWEEN '1902-01-01' AND '2038-01-01';  SELECT date_trunc( 'week', timestamp with time zone '2004-02-29 15:44:17.71393' ) AS week_trunc;  SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'Australia/Sydney') as sydney_trunc;   SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'GMT') as gmt_trunc;   SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'VET') as vet_trunc;    SELECT   str,   interval,   date_trunc(str, ts, 'Australia/Sydney') = date_bin(interval::interval, ts, timestamp with time zone '2001-01-01+11') AS equal FROM (   VALUES   ('day', '1 d'),   ('hour', '1 h'),   ('minute', '1 m'),   ('second', '1 s'),   ('millisecond', '1 ms'),   ('microsecond', '1 us') ) intervals (str, interval), (VALUES (timestamptz '2020-02-29 15:44:17.71393+00')) ts (ts);  SELECT   interval,   ts,   origin,   date_bin(interval::interval, ts, origin) FROM (   VALUES   ('15 days'),   ('2 hours'),   ('1 hour 30 minutes'),   ('15 minutes'),   ('10 seconds'),   ('100 milliseconds'),   ('250 microseconds') ) intervals (interval), (VALUES (timestamptz '2020-02-11 15:44:17.71393')) ts (ts), (VALUES (timestamptz '2001-01-01')) origin (origin);  SELECT date_bin('5 min'::interval, timestamptz '2020-02-01 01:01:01+00', timestamptz '2020-02-01 00:02:30+00');  SELECT date_bin('30 minutes'::interval, timestamptz '2024-02-01 15:00:00', timestamptz '2024-02-01 17:00:00');  SELECT date_bin('5 months'::interval, timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00'); SELECT date_bin('5 years'::interval,  timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00');  SELECT date_bin('0 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');  SELECT date_bin('-2 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');  select date_bin('15 minutes'::interval, timestamptz '294276-12-30', timestamptz '4000-12-20 BC'); select date_bin('200000000 days'::interval, '2024-02-01'::timestamptz, '2024-01-01'::timestamptz); select date_bin('365000 days'::interval, '4400-01-01 BC'::timestamptz, '4000-01-01 BC'::timestamptz);  SELECT d1 - timestamp with time zone '1997-01-02' AS diff   FROM TIMESTAMPTZ_TBL   WHERE d1 BETWEEN timestamp with time zone '1902-01-01' AND timestamp with time zone '2038-01-01';  SELECT d1 as timestamptz,    date_part( 'year', d1) AS year, date_part( 'month', d1) AS month,    date_part( 'day', d1) AS day, date_part( 'hour', d1) AS hour,    date_part( 'minute', d1) AS minute, date_part( 'second', d1) AS second    FROM TIMESTAMPTZ_TBL;  SELECT d1 as timestamptz,    date_part( 'quarter', d1) AS quarter, date_part( 'msec', d1) AS msec,    date_part( 'usec', d1) AS usec    FROM TIMESTAMPTZ_TBL;  SELECT d1 as timestamptz,    date_part( 'isoyear', d1) AS isoyear, date_part( 'week', d1) AS week,    date_part( 'isodow', d1) AS isodow, date_part( 'dow', d1) AS dow,    date_part( 'doy', d1) AS doy    FROM TIMESTAMPTZ_TBL;  SELECT d1 as timestamptz,    date_part( 'decade', d1) AS decade,    date_part( 'century', d1) AS century,    date_part( 'millennium', d1) AS millennium,    round(date_part( 'julian', d1)) AS julian,    date_part( 'epoch', d1) AS epoch    FROM TIMESTAMPTZ_TBL;  SELECT d1 as timestamptz,    date_part( 'timezone', d1) AS timezone,    date_part( 'timezone_hour', d1) AS timezone_hour,    date_part( 'timezone_minute', d1) AS timezone_minute    FROM TIMESTAMPTZ_TBL;  SELECT d1 as ""timestamp"",    extract(microseconds from d1) AS microseconds,    extract(milliseconds from d1) AS milliseconds,    extract(seconds from d1) AS seconds,    round(extract(julian from d1)) AS julian,    extract(epoch from d1) AS epoch    FROM TIMESTAMPTZ_TBL;  SELECT date_part('epoch', '294270-01-01 00:00:00+00'::timestamptz); SELECT extract(epoch from '294270-01-01 00:00:00+00'::timestamptz); SELECT extract(epoch from '5000-01-01 00:00:00+00'::timestamptz);  SELECT timestamptz '294276-12-31 23:59:59 UTC' - timestamptz '1999-12-23 19:59:04.224193 UTC' AS ok; SELECT timestamptz '294276-12-31 23:59:59 UTC' - timestamptz '1999-12-23 19:59:04.224192 UTC' AS overflows;  SELECT to_char(d1, 'DAY Day day DY Dy dy MONTH Month month RM MON Mon mon')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, 'FMDAY FMDay FMday FMMONTH FMMonth FMmonth FMRM')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, 'Y,YYY YYYY YYY YY Y CC Q MM WW DDD DD D J')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, 'FMY,YYY FMYYYY FMYYY FMYY FMY FMCC FMQ FMMM FMWW FMDDD FMDD FMD FMJ')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, 'HH HH12 HH24 MI SS SSSS')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, E'""HH:MI:SS is"" HH:MI:SS ""\\""text between quote marks\\""""')    FROM TIMESTAMPTZ_TBL;  SELECT to_char(d1, 'HH24    FROM TIMESTAMPTZ_TBL",timestamptz.sql,DIFFERENT,SyntaxError,"unterminated quoted string at or near ""'HH24    FROM TIMESTAMPTZ_TBL"" LINE 298: SELECT to_char(d1, 'HH24"
postgresql,postgresql,"CREATE TABLE TIMESTAMPTZ_TST (a int , b timestamptz)",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(1, 'Sat Mar 12 23:58:48 1000 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(2, 'Sat Mar 12 23:58:48 10000 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(3, 'Sat Mar 12 23:58:48 100000 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(3, '10000 Mar 12 23:58:48 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(4, '100000312 23:58:48 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,"INSERT INTO TIMESTAMPTZ_TST VALUES(4, '1000000312 23:58:48 IST')",timestamptz.sql,SAME,,
postgresql,postgresql,DROP TABLE TIMESTAMPTZ_TST,timestamptz.sql,SAME,,
postgresql,postgresql,insert into tmptz values ('2017-01-18 00:00+00'),timestamptz.sql,SAME,,
postgresql,postgresql,"CREATE TABLE user_logins(id serial, who text)",event_trigger_login.sql,SAME,,
postgresql,postgresql,CREATE FUNCTION on_login_proc() RETURNS event_trigger AS $$ BEGIN   INSERT INTO user_logins (who) VALUES (SESSION_USER);   RAISE NOTICE 'You are welcome!'; END; $$ LANGUAGE plpgsql,event_trigger_login.sql,SAME,,
postgresql,postgresql,DROP TABLE user_logins,event_trigger_login.sql,SAME,,
postgresql,postgresql,DROP TABLE pcachetest,plancache.sql,DIFFERENT,UndefinedTable,"table ""pcachetest"" does not exist"
postgresql,postgresql,create function cache_test(int) returns int as $$ declare total int; begin 	create temp table t1(f1 int); 	insert into t1 values($1); 	insert into t1 values(11); 	insert into t1 values(12); 	insert into t1 values(13); 	select sum(f1) into total from t1; 	drop table t1; 	return total; end $$ language plpgsql,plancache.sql,SAME,,
postgresql,postgresql,create schema s1   create table abc (f1 int),plancache.sql,SAME,,
postgresql,postgresql,create schema s2   create table abc (f1 int),plancache.sql,SAME,,
postgresql,postgresql,insert into s1.abc values(123),plancache.sql,SAME,,
postgresql,postgresql,insert into s2.abc values(456),plancache.sql,SAME,,
postgresql,postgresql,"create function cachebug() returns void as $$ declare r int; begin   drop table if exists temptable cascade;   create temp table temptable as select * from generate_series(1,3) as f1;   create temp view vv as select * from temptable;   for r in select * from vv loop     raise notice '%', r;   end loop; end$$ language plpgsql",plancache.sql,SAME,,
postgresql,postgresql,create table pc_list_parted (a int) partition by list(a),plancache.sql,SAME,,
postgresql,postgresql,create table pc_list_part_null partition of pc_list_parted for values in (null),plancache.sql,SAME,,
postgresql,postgresql,create table pc_list_part_1 partition of pc_list_parted for values in (1),plancache.sql,SAME,,
postgresql,postgresql,create table pc_list_part_def partition of pc_list_parted default,plancache.sql,SAME,,
postgresql,postgresql,prepare pstmt_def_insert (int) as insert into pc_list_part_def values($1),plancache.sql,SAME,,
postgresql,postgresql,create table pc_list_part_2 partition of pc_list_parted for values in (2),plancache.sql,SAME,,
postgresql,postgresql,drop table pc_list_part_1,plancache.sql,SAME,,
postgresql,postgresql,"drop table pc_list_parted, pc_list_part_null",plancache.sql,SAME,,
postgresql,postgresql,create table test_mode (a int),plancache.sql,SAME,,
postgresql,postgresql,"insert into test_mode select 1 from generate_series(1,1000) union all select 2",plancache.sql,SAME,,
postgresql,postgresql,drop table test_mode,plancache.sql,SAME,,
postgresql,postgresql,"CREATE TABLE distinct_group_1 AS SELECT DISTINCT g%1000 FROM generate_series(0,9999) g",select_distinct.sql,SAME,,
postgresql,postgresql,"CREATE TABLE distinct_group_2 AS SELECT DISTINCT (g%1000)::text FROM generate_series(0,9999) g",select_distinct.sql,SAME,,
postgresql,postgresql,"CREATE TABLE distinct_hash_1 AS SELECT DISTINCT g%1000 FROM generate_series(0,9999) g",select_distinct.sql,SAME,,
postgresql,postgresql,"CREATE TABLE distinct_hash_2 AS SELECT DISTINCT (g%1000)::text FROM generate_series(0,9999) g",select_distinct.sql,SAME,,
postgresql,postgresql,DROP TABLE distinct_hash_1,select_distinct.sql,SAME,,
postgresql,postgresql,DROP TABLE distinct_hash_2,select_distinct.sql,SAME,,
postgresql,postgresql,DROP TABLE distinct_group_1,select_distinct.sql,SAME,,
postgresql,postgresql,DROP TABLE distinct_group_2,select_distinct.sql,SAME,,
postgresql,postgresql,INSERT INTO DISTTABLE VALUES(1),select_distinct.sql,SAME,,
postgresql,postgresql,INSERT INTO DISTTABLE VALUES(2),select_distinct.sql,SAME,,
postgresql,postgresql,INSERT INTO DISTTABLE VALUES(3),select_distinct.sql,SAME,,
postgresql,postgresql,INSERT INTO DISTTABLE VALUES(NULL),select_distinct.sql,SAME,,
postgresql,postgresql,"SELECT 1 AS one WHERE 1 IN (SELECT 1);  SELECT 1 AS zero WHERE 1 NOT IN (SELECT 1);  SELECT 1 AS zero WHERE 1 IN (SELECT 2);   SELECT * FROM (SELECT 1 AS x) ss; SELECT * FROM ((SELECT 1 AS x)) ss;  SELECT * FROM ((SELECT 1 AS x)), ((SELECT * FROM ((SELECT 2 AS y))));  (SELECT 2) UNION SELECT 2; ((SELECT 2)) UNION SELECT 2;  SELECT ((SELECT 2) UNION SELECT 2); SELECT (((SELECT 2)) UNION SELECT 2);  SELECT (SELECT ARRAY[1,2,3])[1]; SELECT ((SELECT ARRAY[1,2,3]))[2]; SELECT (((SELECT ARRAY[1,2,3])))[3];   CREATE TABLE SUBSELECT_TBL (   f1 integer,   f2 integer,   f3 float );  INSERT INTO SUBSELECT_TBL VALUES (1, 2, 3); INSERT INTO SUBSELECT_TBL VALUES (2, 3, 4); INSERT INTO SUBSELECT_TBL VALUES (3, 4, 5); INSERT INTO SUBSELECT_TBL VALUES (1, 1, 1); INSERT INTO SUBSELECT_TBL VALUES (2, 2, 2); INSERT INTO SUBSELECT_TBL VALUES (3, 3, 3); INSERT INTO SUBSELECT_TBL VALUES (6, 7, 8); INSERT INTO SUBSELECT_TBL VALUES (8, 9, NULL);  SELECT * FROM SUBSELECT_TBL;   SELECT f1 AS ""Constant Select"" FROM SUBSELECT_TBL   WHERE f1 IN (SELECT 1);  SELECT f1 AS ""Uncorrelated Field"" FROM SUBSELECT_TBL   WHERE f1 IN (SELECT f2 FROM SUBSELECT_TBL);  SELECT f1 AS ""Uncorrelated Field"" FROM SUBSELECT_TBL   WHERE f1 IN (SELECT f2 FROM SUBSELECT_TBL WHERE     f2 IN (SELECT f1 FROM SUBSELECT_TBL));  SELECT f1, f2   FROM SUBSELECT_TBL   WHERE (f1, f2) NOT IN (SELECT f2, CAST(f3 AS int4) FROM SUBSELECT_TBL                          WHERE f3 IS NOT NULL);   SELECT f1 AS ""Correlated Field"", f2 AS ""Second Field""   FROM SUBSELECT_TBL upper   WHERE f1 IN (SELECT f2 FROM SUBSELECT_TBL WHERE f1 = upper.f1);  SELECT f1 AS ""Correlated Field"", f3 AS ""Second Field""   FROM SUBSELECT_TBL upper   WHERE f1 IN     (SELECT f2 FROM SUBSELECT_TBL WHERE CAST(upper.f2 AS float) = f3);  SELECT f1 AS ""Correlated Field"", f3 AS ""Second Field""   FROM SUBSELECT_TBL upper   WHERE f3 IN (SELECT upper.f1 + f2 FROM SUBSELECT_TBL                WHERE f2 = CAST(f3 AS integer));  SELECT f1 AS ""Correlated Field""   FROM SUBSELECT_TBL   WHERE (f1, f2) IN (SELECT f2, CAST(f3 AS int4) FROM SUBSELECT_TBL                      WHERE f3 IS NOT NULL);   EXPLAIN (VERBOSE, COSTS OFF) SELECT ROW(1, 2) = (SELECT f1, f2) AS eq FROM SUBSELECT_TBL;  SELECT ROW(1, 2) = (SELECT f1, f2) AS eq FROM SUBSELECT_TBL;  EXPLAIN (VERBOSE, COSTS OFF) SELECT ROW(1, 2) = (SELECT 3, 4) AS eq FROM SUBSELECT_TBL;  SELECT ROW(1, 2) = (SELECT 3, 4) AS eq FROM SUBSELECT_TBL;  SELECT ROW(1, 2) = (SELECT f1, f2 FROM SUBSELECT_TBL);     SELECT count FROM (SELECT COUNT(DISTINCT name) FROM road); SELECT COUNT(*) FROM (SELECT DISTINCT name FROM road);  SELECT * FROM (SELECT * FROM int4_tbl), (VALUES (123456)) WHERE f1 = column1;  CREATE VIEW view_unnamed_ss AS SELECT * FROM (SELECT * FROM (SELECT abs(f1) AS a1 FROM int4_tbl)),               (SELECT * FROM int8_tbl)   WHERE a1 < 10 AND q1 > a1 ORDER BY q1, q2;  SELECT * FROM view_unnamed_ss;   DROP VIEW view_unnamed_ss;   CREATE VIEW view_unnamed_ss_locking AS SELECT * FROM (SELECT * FROM int4_tbl), int8_tbl AS unnamed_subquery   WHERE f1 = q1   FOR UPDATE OF unnamed_subquery;   DROP VIEW view_unnamed_ss_locking;   SELECT ss.f1 AS ""Correlated Field"", ss.f3 AS ""Second Field""   FROM SUBSELECT_TBL ss   WHERE f1 NOT IN (SELECT f1+1 FROM INT4_TBL                    WHERE f1 != ss.f1 AND f1 < 2147483647);  select q1, float8(count(*)) / (select count(*) from int8_tbl) from int8_tbl group by q1 order by q1;   SELECT *, pg_typeof(f1) FROM   (SELECT 'foo' AS f1 FROM generate_series(1,3)) ss ORDER BY 1;   explain (verbose, costs off) select '42' union all select '43'; explain (verbose, costs off) select '42' union all select 43;  explain (verbose, costs off) select 1 = all (select (select 1)); select 1 = all (select (select 1));  explain (costs off) select * from int4_tbl o where exists   (select 1 from int4_tbl i where i.f1=o.f1 limit null); explain (costs off) select * from int4_tbl o where not exists   (select 1 from int4_tbl i where i.f1=o.f1 limit 1); explain (costs off) select * from int4_tbl o where exists   (select 1 from int4_tbl i where i.f1=o.f1 limit 0);   select count(*) from   (select 1 from tenk1 a    where unique1 IN (select hundred from tenk1 b)) ss; select count(distinct ss.ten) from   (select ten from tenk1 a    where unique1 IN (select hundred from tenk1 b)) ss; select count(*) from   (select 1 from tenk1 a    where unique1 IN (select distinct hundred from tenk1 b)) ss; select count(distinct ss.ten) from   (select ten from tenk1 a    where unique1 IN (select distinct hundred from tenk1 b)) ss;   CREATE TEMP TABLE foo (id integer); CREATE TEMP TABLE bar (id1 integer, id2 integer);  INSERT INTO foo VALUES (1);  INSERT INTO bar VALUES (1, 1); INSERT INTO bar VALUES (2, 2); INSERT INTO bar VALUES (3, 1);  SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT DISTINCT id1, id2 FROM bar) AS s); SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT id1,id2 FROM bar GROUP BY id1,id2) AS s); SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT id1, id2 FROM bar UNION                       SELECT id1, id2 FROM bar) AS s);  SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT DISTINCT ON (id2) id1, id2 FROM bar) AS s); SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT id2 FROM bar GROUP BY id2) AS s); SELECT * FROM foo WHERE id IN     (SELECT id2 FROM (SELECT id2 FROM bar UNION                       SELECT id2 FROM bar) AS s);   CREATE TABLE orderstest (     approver_ref integer,     po_ref integer,     ordercanceled boolean );  INSERT INTO orderstest VALUES (1, 1, false); INSERT INTO orderstest VALUES (66, 5, false); INSERT INTO orderstest VALUES (66, 6, false); INSERT INTO orderstest VALUES (66, 7, false); INSERT INTO orderstest VALUES (66, 1, true); INSERT INTO orderstest VALUES (66, 8, false); INSERT INTO orderstest VALUES (66, 1, false); INSERT INTO orderstest VALUES (77, 1, false); INSERT INTO orderstest VALUES (1, 1, false); INSERT INTO orderstest VALUES (66, 1, false); INSERT INTO orderstest VALUES (1, 1, false);  CREATE VIEW orders_view AS SELECT *, (SELECT CASE    WHEN ord.approver_ref=1 THEN '  END) AS ""Approved"", (SELECT CASE  WHEN ord.ordercanceled  THEN 'Canceled'  ELSE   (SELECT CASE 		WHEN ord.po_ref=1 		THEN 		 (SELECT CASE 				WHEN ord.approver_ref=1 				THEN ' 				ELSE 'Approved' 			END) 		ELSE 'PO' 	END) END) AS ""Status"", (CASE  WHEN ord.ordercanceled  THEN 'Canceled'  ELSE   (CASE 		WHEN ord.po_ref=1 		THEN 		 (CASE 				WHEN ord.approver_ref=1 				THEN ' 				ELSE 'Approved' 			END) 		ELSE 'PO' 	END) END) AS ""Status_OK"" FROM orderstest ord",subselect.sql,DIFFERENT,SyntaxError,"syntax error at or near ""Canceled"" LINE 212:  THEN 'Canceled'"
postgresql,postgresql,DROP TABLE orderstest cascade,subselect.sql,DIFFERENT,UndefinedTable,"table ""orderstest"" does not exist"
postgresql,postgresql,"create rule shipped_view_insert as on insert to shipped_view do instead     insert into shipped values('wt', new.ordnum, new.partnum, new.value)",subselect.sql,SAME,,
postgresql,postgresql,"insert into parts (partnum, cost) values (1, 1234.56)",subselect.sql,SAME,,
postgresql,postgresql,"insert into shipped_view (ordnum, partnum, value)     values (0, 1, (select cost from parts where partnum = '1'))",subselect.sql,SAME,,
postgresql,postgresql,"insert into numeric_table values (1), (1.000000000000000000001), (2), (3)",subselect.sql,SAME,,
postgresql,postgresql,"insert into float_table values (1), (2), (3)",subselect.sql,SAME,,
postgresql,postgresql,"insert into ta values(1,1)",subselect.sql,SAME,,
postgresql,postgresql,"insert into ta values(2,2)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tb values(1,1)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tb values(2,1)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tb values(3,2)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tb values(4,2)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tc values(1,1)",subselect.sql,SAME,,
postgresql,postgresql,"insert into tc values(2,2)",subselect.sql,SAME,,
postgresql,postgresql,insert into table_a values (42),subselect.sql,SAME,,
postgresql,postgresql,"insert into upsert values(1, 'val') on conflict (key) do update set val = 'not seen'",subselect.sql,SAME,,
postgresql,postgresql,"insert into upsert values(1, 'val') on conflict (key) do update set val = 'seen with subselect ' || (select f1 from int4_tbl where f1 != 0 limit 1)::text",subselect.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: ...t val = 'seen with subselect ' || (select f1 from int4_tbl w..."
postgresql,postgresql,"with aa as (select 'int4_tbl' u from int4_tbl limit 1) insert into upsert values (1, 'x'), (999, 'y') on conflict (key) do update set val = (select u from aa) returning *",subselect.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 1: with aa as (select 'int4_tbl' u from int4_tbl limit 1)"
postgresql,postgresql,"insert into outer_7597 values (0, 0)",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_7597 values (1, 0)",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_7597 values (0, null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_7597 values (1, null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into inner_7597 values(0, null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_text values ('a', 'a')",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_text values ('b', 'a')",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_text values ('a', null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into outer_text values ('b', null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into inner_text values ('a', null)",subselect.sql,SAME,,
postgresql,postgresql,"insert into inner_text values ('123', '456')",subselect.sql,SAME,,
postgresql,postgresql,"insert into exists_tbl select x, x/2, x+1 from generate_series(0,10) x",subselect.sql,SAME,,
postgresql,postgresql,"insert into notinouter values (null), (1)",subselect.sql,SAME,,
postgresql,postgresql,"create table sq_limit (pk int primary key, c1 int, c2 int)",subselect.sql,SAME,,
postgresql,postgresql,"insert into sq_limit values     (1, 1, 1),     (2, 2, 2),     (3, 3, 3),     (4, 4, 4),     (5, 1, 1),     (6, 2, 2),     (7, 3, 3),     (8, 4, 4)",subselect.sql,SAME,,
postgresql,postgresql,drop table sq_limit,subselect.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_tablesample (id int, name text) WITH (fillfactor=10)",tablesample.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_tablesample   SELECT i, repeat(i::text, 200) FROM generate_series(0, 9) s(i)",tablesample.sql,SAME,,
postgresql,postgresql,INSERT INTO test_tablesample_v1 VALUES(1),tablesample.sql,DIFFERENT,ObjectNotInPrerequisiteState,"cannot insert into view ""test_tablesample_v1"" DETAIL:  Views containing TABLESAMPLE are not automatically updatable. HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule."
postgresql,postgresql,create table parted_sample (a int) partition by list (a),tablesample.sql,SAME,,
postgresql,postgresql,create table parted_sample_1 partition of parted_sample for values in (1),tablesample.sql,SAME,,
postgresql,postgresql,create table parted_sample_2 partition of parted_sample for values in (2),tablesample.sql,SAME,,
postgresql,postgresql,"drop table parted_sample, parted_sample_1, parted_sample_2",tablesample.sql,SAME,,
postgresql,postgresql,"CREATE TABLE few(id int, dataa text, datab text)",tsrf.sql,SAME,,
postgresql,postgresql,"INSERT INTO few VALUES(1, 'a', 'foo'),(2, 'a', 'bar'),(3, 'b', 'bar')",tsrf.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fewmore AS SELECT generate_series(1,3) AS data",tsrf.sql,SAME,,
postgresql,postgresql,"INSERT INTO fewmore VALUES(generate_series(4,5))",tsrf.sql,SAME,,
postgresql,postgresql,"INSERT INTO fewmore VALUES(1) RETURNING generate_series(1,3)",tsrf.sql,DIFFERENT,FeatureNotSupported,"set-returning functions are not allowed in RETURNING LINE 1: INSERT INTO fewmore VALUES(1) RETURNING generate_series(1,3)"
postgresql,postgresql,DROP TABLE few,tsrf.sql,SAME,,
postgresql,postgresql,DROP TABLE fewmore,tsrf.sql,SAME,,
postgresql,postgresql,"create event trigger regress_event_trigger2 on ddl_command_start    when tag in ('create table', 'create skunkcabbage')    execute procedure test_event_trigger()",event_trigger.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create event trigger ""regress_event_trigger2"" HINT:  Must be superuser to create an event trigger."
postgresql,postgresql,create event trigger regress_event_trigger2 on ddl_command_start    when tag in ('CREATE TABLESPACE')    execute procedure test_event_trigger(),event_trigger.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create event trigger ""regress_event_trigger2"" HINT:  Must be superuser to create an event trigger."
postgresql,postgresql,create event trigger regress_event_trigger2 on ddl_command_start    when tag in ('create table') and tag in ('CREATE FUNCTION')    execute procedure test_event_trigger(),event_trigger.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create event trigger ""regress_event_trigger2"" HINT:  Must be superuser to create an event trigger."
postgresql,postgresql,"create event trigger regress_event_trigger2 on ddl_command_start    when tag in ('create table', 'CREATE FUNCTION')    execute procedure test_event_trigger()",event_trigger.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create event trigger ""regress_event_trigger2"" HINT:  Must be superuser to create an event trigger."
postgresql,postgresql,create table event_trigger_fire1 (a int),event_trigger.sql,SAME,,
postgresql,postgresql,create table event_trigger_fire2 (a int),event_trigger.sql,SAME,,
postgresql,postgresql,create table event_trigger_fire3 (a int),event_trigger.sql,SAME,,
postgresql,postgresql,create table event_trigger_fire4 (a int),event_trigger.sql,SAME,,
postgresql,postgresql,create table event_trigger_fire5 (a int),event_trigger.sql,SAME,,
postgresql,postgresql,create function f1() returns int language plpgsql as $$ begin   create table event_trigger_fire6 (a int);   return 0; end $$,event_trigger.sql,SAME,,
postgresql,postgresql,create procedure p1() language plpgsql as $$ begin   create table event_trigger_fire7 (a int); end $$,event_trigger.sql,SAME,,
postgresql,postgresql,"drop table event_trigger_fire2, event_trigger_fire3, event_trigger_fire4, event_trigger_fire5, event_trigger_fire6, event_trigger_fire7",event_trigger.sql,SAME,,
postgresql,postgresql,drop table event_trigger_fire1,event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE schema_one.table_one(a int),event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""schema_one"" does not exist LINE 1: CREATE TABLE schema_one.table_one(a int)"
postgresql,postgresql,"CREATE TABLE schema_one.""table two""(a int)",event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""schema_one"" does not exist LINE 1: CREATE TABLE schema_one.""table two""(a int)"
postgresql,postgresql,CREATE TABLE schema_one.table_three(a int),event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""schema_one"" does not exist LINE 1: CREATE TABLE schema_one.table_three(a int)"
postgresql,postgresql,CREATE TABLE audit_tbls.schema_one_table_two(the_value text),event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""audit_tbls"" does not exist LINE 1: CREATE TABLE audit_tbls.schema_one_table_two(the_value text)"
postgresql,postgresql,CREATE TABLE schema_two.table_two(a int),event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""schema_two"" does not exist LINE 1: CREATE TABLE schema_two.table_two(a int)"
postgresql,postgresql,"CREATE TABLE schema_two.table_three(a int, b text)",event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""schema_two"" does not exist LINE 1: CREATE TABLE schema_two.table_three(a int, b text)"
postgresql,postgresql,CREATE TABLE audit_tbls.schema_two_table_three(the_value text),event_trigger.sql,DIFFERENT,InvalidSchemaName,"schema ""audit_tbls"" does not exist LINE 1: CREATE TABLE audit_tbls.schema_two_table_three(the_value tex..."
postgresql,postgresql,"CREATE TABLE undroppable_objs ( 	object_type text, 	object_identity text )",event_trigger.sql,SAME,,
postgresql,postgresql,"INSERT INTO undroppable_objs VALUES ('table', 'schema_one.table_three'), ('table', 'audit_tbls.schema_two_table_three')",event_trigger.sql,SAME,,
postgresql,postgresql,"CREATE TABLE dropped_objects ( 	type text, 	schema text, 	object text )",event_trigger.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE FUNCTION test_evtrig_dropped_objects() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE     obj record; BEGIN     FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()     LOOP         IF obj.object_type = 'table' THEN                 EXECUTE format('DROP TABLE IF EXISTS audit_tbls.%I', 					format('%s_%s', obj.schema_name, obj.object_name));         END IF;  	INSERT INTO dropped_objects 		(type, schema, object) VALUES 		(obj.object_type, obj.schema_name, obj.object_identity);     END LOOP; END $$",event_trigger.sql,SAME,,
postgresql,postgresql,"CREATE EVENT TRIGGER regress_event_trigger_drop_objects ON sql_drop 	WHEN TAG IN ('drop table', 'drop function', 'drop view', 		'drop owned', 'drop schema', 'alter table') 	EXECUTE PROCEDURE test_evtrig_dropped_objects()",event_trigger.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create event trigger ""regress_event_trigger_drop_objects"" HINT:  Must be superuser to create an event trigger."
postgresql,postgresql,"CREATE SCHEMA evttrig 	CREATE TABLE one (col_a SERIAL PRIMARY KEY, col_b text DEFAULT 'forty two', col_c SERIAL) 	CREATE INDEX one_idx ON one (col_b) 	CREATE TABLE two (col_c INTEGER CHECK (col_c > 0) REFERENCES one DEFAULT 42) 	CREATE TABLE id (col_d int NOT NULL GENERATED ALWAYS AS IDENTITY)",event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE evttrig.parted (     id int PRIMARY KEY)     PARTITION BY RANGE (id),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE evttrig.part_1_10 PARTITION OF evttrig.parted (id)   FOR VALUES FROM (1) TO (10),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE evttrig.part_10_20 PARTITION OF evttrig.parted (id)   FOR VALUES FROM (10) TO (20) PARTITION BY RANGE (id),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE evttrig.part_10_15 PARTITION OF evttrig.part_10_20 (id)   FOR VALUES FROM (10) TO (15),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE evttrig.part_15_20 PARTITION OF evttrig.part_10_20 (id)   FOR VALUES FROM (15) TO (20),event_trigger.sql,SAME,,
postgresql,postgresql,DROP TABLE a_temp_tbl,event_trigger.sql,SAME,,
postgresql,postgresql,"create table rewriteme (id serial primary key, foo float, bar timestamptz)",event_trigger.sql,SAME,,
postgresql,postgresql,"insert into rewriteme      select x * 1.001 from generate_series(1, 500) as t(x)",event_trigger.sql,SAME,,
postgresql,postgresql,create table rewritemetoo1 of rewritetype,event_trigger.sql,SAME,,
postgresql,postgresql,create table rewritemetoo2 of rewritetype,event_trigger.sql,SAME,,
postgresql,postgresql,create table rewritemetoo3 (a rewritetype),event_trigger.sql,SAME,,
postgresql,postgresql,drop table rewriteme,event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_tab (c1 int),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_schema.tab (a int),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_part (id int) PARTITION BY RANGE (id),event_trigger.sql,SAME,,
postgresql,postgresql,CREATE TABLE concur_reindex_child PARTITION OF concur_reindex_part   FOR VALUES FROM (0) TO (10),event_trigger.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_reindex_part,event_trigger.sql,SAME,,
postgresql,postgresql,DROP TABLE concur_reindex_tab,event_trigger.sql,SAME,,
postgresql,postgresql,"CREATE TABLE event_trigger_test (a integer, b text)",event_trigger.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tab_core_types AS SELECT   '(11,12)'::point,   '(1,1),(2,2)'::line,   '((11,11),(12,12))'::lseg,   '((11,11),(13,13))'::box,   '((11,12),(13,13),(14,14))'::path AS openedpath,   '[(11,12),(13,13),(14,14)]'::path AS closedpath,   '((11,12),(13,13),(14,14))'::polygon,   '1,1,1'::circle,   'today'::date,   'now'::time,   'now'::timestamp,   'now'::timetz,   'now'::timestamptz,   '12 seconds'::interval,   '{""reason"":""because""}'::json,   '{""when"":""now""}'::jsonb,   '$.a[*] ? (@ > 2)'::jsonpath,   '127.0.0.1'::inet,   '127.0.0.0/8'::cidr,   '00:01:03:86:1c:ba'::macaddr8,   '00:01:03:86:1c:ba'::macaddr,   2::int2, 4::int4, 8::int8,   4::float4, '8'::float8, pi()::numeric,   'foo'::""char"",   'c'::bpchar,   'abc'::varchar,   'name'::name,   'txt'::text,   true::bool,   E'\\xDEADBEEF'::bytea,   B'10001'::bit,   B'10001'::varbit AS varbit,   '12.34'::money,   'abc'::refcursor,   '1 2'::int2vector,   '1 2'::oidvector,   format('%I=UC/%I', USER, USER)::aclitem AS aclitem,   'a fat cat sat on a mat and ate a fat rat'::tsvector,   'fat & rat'::tsquery,   'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::uuid,   '11'::xid8,   'pg_class'::regclass,   'regtype'::regtype type,   'pg_monitor'::regrole,   'pg_class'::regclass::oid,   '(1,1)'::tid, '2'::xid, '3'::cid,   '10:20:10,14,15'::txid_snapshot,   '10:20:10,14,15'::pg_snapshot,   '16/B374D848'::pg_lsn,   1::information_schema.cardinal_number,   'l'::information_schema.character_data,   'n'::information_schema.sql_identifier,   'now'::information_schema.time_stamp,   'YES'::information_schema.yes_or_no,   '(1,2)'::int4range, '{(1,2)}'::int4multirange,   '(3,4)'::int8range, '{(3,4)}'::int8multirange,   '(3,4)'::numrange, '{(3,4)}'::nummultirange,   '(2020-01-02, 2021-02-03)'::daterange,   '{(2020-01-02, 2021-02-03)}'::datemultirange,   '(2020-01-02 03:04:05, 2021-02-03 06:07:08)'::tsrange,   '{(2020-01-02 03:04:05, 2021-02-03 06:07:08)}'::tsmultirange,   '(2020-01-02 03:04:05, 2021-02-03 06:07:08)'::tstzrange,   '{(2020-01-02 03:04:05, 2021-02-03 06:07:08)}'::tstzmultirange",type_sanity.sql,SAME,,
postgresql,postgresql,CREATE TABLE pxtest1 (foobar VARCHAR(10)),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest1 VALUES ('aaa'),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest1 VALUES ('ddd'),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest1 VALUES ('fff'),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest1 VALUES ('fff'),prepared_xacts.sql,SAME,,
postgresql,postgresql,DROP TABLE pxtest1,prepared_xacts.sql,SAME,,
postgresql,postgresql,CREATE TABLE pxtest2 (a int),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest2 VALUES (1),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest2 VALUES (2),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest2 VALUES (3),prepared_xacts.sql,SAME,,
postgresql,postgresql,CREATE TABLE pxtest3(fff int),prepared_xacts.sql,SAME,,
postgresql,postgresql,DROP TABLE pxtest3,prepared_xacts.sql,SAME,,
postgresql,postgresql,CREATE TABLE pxtest4 (a int),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest4 VALUES (1),prepared_xacts.sql,SAME,,
postgresql,postgresql,INSERT INTO pxtest4 VALUES (2),prepared_xacts.sql,SAME,,
postgresql,postgresql,DROP TABLE pxtest2,prepared_xacts.sql,DIFFERENT,UndefinedTable,"table ""pxtest2"" does not exist"
postgresql,postgresql,DROP TABLE pxtest3,prepared_xacts.sql,SAME,,
postgresql,postgresql,DROP TABLE pxtest4,prepared_xacts.sql,DIFFERENT,UndefinedTable,"table ""pxtest4"" does not exist"
postgresql,postgresql,"create table insertconflicttest(key int4, fruit text)",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do nothing",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit) do nothing",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit, key, fruit, key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit), key, lower(fruit), key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit) do update set fruit = excluded.fruit   where exists (select 1 from insertconflicttest ii where ii.key = excluded.key)",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit text_pattern_ops) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit collate ""C"") do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit collate ""C"" text_pattern_ops, key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate ""C"", key, key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit, key, fruit text_pattern_ops, key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate ""C"" text_pattern_ops, key, key) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) text_pattern_ops, upper(fruit) collate ""C"") do nothing",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate ""C"", upper(fruit) text_pattern_ops) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Cawesh'",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do update set fruit = excluded.fruit where excluded.fruit != 'Elderberry'",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off, format json) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Lime' returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple') on conflict do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,SyntaxError,"ON CONFLICT DO UPDATE requires inference specification or constraint name LINE 1: ...nsert into insertconflicttest values (1, 'Apple') on conflic...                                                               HINT:  For example, ON CONFLICT (column_name)."
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (2, 'Orange') on conflict (key, key, key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple'), (2, 'Orange') on conflict (key) do update set (fruit, key) = (excluded.fruit, excluded.key)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit RETURNING excluded.fruit",insert_conflict.sql,DIFFERENT,UndefinedTable,"invalid reference to FROM-clause entry for table ""excluded"" LINE 1: ...y) do update set fruit = excluded.fruit RETURNING excluded.f...                                                               DETAIL:  There is an entry for table ""excluded"", but it cannot be referenced from this part of the query."
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple') on conflict (keyy) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,UndefinedColumn,"column ""keyy"" does not exist LINE 1: ...nsertconflicttest values (1, 'Apple') on conflict (keyy) do ...                                                               HINT:  Perhaps you meant to reference the column ""insertconflicttest.key"" or the column ""excluded.key""."
postgresql,postgresql,"insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruitt",insert_conflict.sql,DIFFERENT,UndefinedColumn,"column excluded.fruitt does not exist LINE 1: ... 'Apple') on conflict (key) do update set fruit = excluded.f...                                                               HINT:  Perhaps you meant to reference the column ""excluded.fruit""."
postgresql,postgresql,"insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (4, 'Mango') on conflict (fruit, key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (5, 'Lemon') on conflict (fruit) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (6, 'Passionfruit') on conflict (lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = ict.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = insertconflicttest.fruit",insert_conflict.sql,DIFFERENT,UndefinedTable,"invalid reference to FROM-clause entry for table ""insertconflicttest"" LINE 1: ...onfruit') on conflict (key) do update set fruit = insertconf...                                                               HINT:  Perhaps you meant to reference the table alias ""ict""."
postgresql,postgresql,"insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set insertconflicttest.fruit = 'Mango'",insert_conflict.sql,DIFFERENT,UndefinedColumn,"column ""insertconflicttest"" of relation ""insertconflicttest"" does not exist LINE 1: ...3, 'Kiwi') on conflict (key, fruit) do update set insertconf..."
postgresql,postgresql,"insert into insertconflicttest values (7, 'Raspberry') on conflict (key, fruit) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (8, 'Lime') on conflict (fruit, key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (9, 'Banana') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (10, 'Blueberry') on conflict (key, key, key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (11, 'Cherry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (12, 'Date') on conflict (lower(fruit), key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (13, 'Grape') on conflict (key, fruit) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (14, 'Raisin') on conflict (fruit, key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (15, 'Cranberry') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (16, 'Melon') on conflict (key, key, key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (17, 'Mulberry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (18, 'Pineapple') on conflict (lower(fruit), key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (20, 'Quince') on conflict (lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (21, 'Pomegranate') on conflict (lower(fruit), lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (22, 'Apricot') on conflict (upper(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (24, 'Plum') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (25, 'Peach') on conflict (lower(fruit), key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest values (26, 'Fig') on conflict (lower(fruit), key, lower(fruit), key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (27, 'Prune') on conflict (key, upper(fruit)) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (28, 'Redcurrant') on conflict (fruit, key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (29, 'Nectarine') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (26, 'Fig') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (26, 'Peach') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""fruit_index"" DETAIL:  Key (fruit)=(Peach) already exists."
postgresql,postgresql,"insert into insertconflicttest values (25, 'Fig') on conflict (fruit) do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' do update set fruit = excluded.fruit",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest as t values (23, 'Blackberry') on conflict (key) where fruit like '%berry' and t.fruit = 'inconsequential' do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest values (23, 'Blackberry') on conflict (key) do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' or fruit = 'consequential' do nothing",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) where fruit like '%berry' do update set fruit = excluded.fruit",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit   where i.* != excluded.* returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit   where i.* != excluded.* returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit   where i.* = excluded.* returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::text   returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.fruit where excluded.* is null",insert_conflict.sql,SAME,,
postgresql,postgresql,"explain (costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::text",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table insertconflicttest,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table syscolconflicttest(key int4, data text)",insert_conflict.sql,SAME,,
postgresql,postgresql,insert into syscolconflicttest values (1),insert_conflict.sql,SAME,,
postgresql,postgresql,insert into syscolconflicttest values (1) on conflict (key) do update set data = excluded.ctid::text,insert_conflict.sql,DIFFERENT,UndefinedColumn,column excluded.ctid does not exist LINE 1: ...values (1) on conflict (key) do update set data = excluded.c...
postgresql,postgresql,drop table syscolconflicttest,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table insertconflict (a bigint, b bigint)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflict values (1, 2) on conflict (coalesce(a, 0)) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflict values (1, 2) on conflict (b) where coalesce(a, 1) > 0 do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflict values (1, 2) on conflict (b) where coalesce(a, 1) > 1 do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table insertconflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table insertconflict (f1 int primary key, f2 text)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflictv values (1,'foo')   on conflict (f1) do update set f2 = excluded.f2",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into insertconflictv values (1,'bar')   on conflict (f1) do update set f2 = excluded.f2",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table insertconflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table cities ( 	name		text, 	population	float8, 	altitude	int		 )",insert_conflict.sql,SAME,,
postgresql,postgresql,create table capitals ( 	state		char(2) ) inherits (cities),insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('San Francisco', 7.24E+5, 63)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('Las Vegas', 2.583E+5, 2174)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('Mariposa', 1200, 1953)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into capitals values ('Sacramento', 3.694E+5, 30, 'CA')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into capitals values ('Madison', 1.913E+5, 845, 'WI')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('Las Vegas', 2.583E+5, 2174) on conflict do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into capitals values ('Sacramento', 4664.E+5, 30, 'CA') on conflict (name) do update set population = excluded.population",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into capitals values ('Sacramento', 50, 2267, 'NE') on conflict (name) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('Las Vegas', 5.83E+5, 2001) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into capitals values ('Las Vegas', 5.83E+5, 2222, 'NV') on conflict (name) do update set population = excluded.population",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table capitals,insert_conflict.sql,SAME,,
postgresql,postgresql,drop table cities,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table excluded(key int primary key, data text)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into excluded values(1, '1')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into excluded values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *",insert_conflict.sql,DIFFERENT,AmbiguousAlias,"table reference ""excluded"" is ambiguous LINE 1: ...es(1, '2') on conflict (key) do update set data = excluded.d..."
postgresql,postgresql,"insert into excluded AS target values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into excluded AS target values(1, '2') on conflict (key) do update set data = target.data RETURNING *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into excluded values(1, '2') on conflict (key) do update set data = 3 RETURNING excluded.*",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table excluded,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table dropcol(key int primary key, drop1 int, keep1 text, drop2 numeric, keep2 float)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 1, '1', '1', 1)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 2, '2', '2', 2) on conflict(key)     do update set drop1 = excluded.drop1, keep1 = excluded.keep1, drop2 = excluded.drop2, keep2 = excluded.keep2     where excluded.drop1 is not null and excluded.keep1 is not null and excluded.drop2 is not null and excluded.keep2 is not null           and dropcol.drop1 is not null and dropcol.keep1 is not null and dropcol.drop2 is not null and dropcol.keep2 is not null     returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 3, '3', '3', 3) on conflict(key)     do update set drop1 = dropcol.drop1, keep1 = dropcol.keep1, drop2 = dropcol.drop2, keep2 = dropcol.keep2     returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into dropcol(key, keep1, keep2) values(1, '4', 4) on conflict(key)     do update set keep1 = excluded.keep1, keep2 = excluded.keep2     where excluded.keep1 is not null and excluded.keep2 is not null           and dropcol.keep1 is not null and dropcol.keep2 is not null     returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into dropcol(key, keep1, keep2) values(1, '5', 5) on conflict(key)     do update set keep1 = dropcol.keep1, keep2 = dropcol.keep2     returning *",insert_conflict.sql,SAME,,
postgresql,postgresql,DROP TABLE dropcol,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table twoconstraints (f1 int unique, f2 box,                              exclude using gist(f2 with &&))",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into twoconstraints values(1, '((0,0),(1,1))')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into twoconstraints values(1, '((2,2),(3,3))')",insert_conflict.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""twoconstraints_f1_key"" DETAIL:  Key (f1)=(1) already exists."
postgresql,postgresql,"insert into twoconstraints values(2, '((0,0),(1,2))')",insert_conflict.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""twoconstraints_f2_excl"" DETAIL:  Key (f2)=((1,2),(0,0)) conflicts with existing key (f2)=((1,1),(0,0))."
postgresql,postgresql,"insert into twoconstraints values(2, '((0,0),(1,2))')   on conflict on constraint twoconstraints_f1_key do nothing",insert_conflict.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""twoconstraints_f2_excl"" DETAIL:  Key (f2)=((1,2),(0,0)) conflicts with existing key (f2)=((1,1),(0,0))."
postgresql,postgresql,"insert into twoconstraints values(2, '((0,0),(1,2))')   on conflict on constraint twoconstraints_f2_excl do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table twoconstraints,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table selfconflict (f1 int primary key, f2 int)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into selfconflict values (1,1), (1,2) on conflict do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into selfconflict values (2,1), (2,2) on conflict do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into selfconflict values (3,1), (3,2) on conflict do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into selfconflict values (4,1), (4,2) on conflict(f1) do update set f2 = 0",insert_conflict.sql,DIFFERENT,CardinalityViolation,ON CONFLICT DO UPDATE command cannot affect row a second time HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
postgresql,postgresql,"insert into selfconflict values (5,1), (5,2) on conflict(f1) do update set f2 = 0",insert_conflict.sql,DIFFERENT,CardinalityViolation,ON CONFLICT DO UPDATE command cannot affect row a second time HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
postgresql,postgresql,"insert into selfconflict values (6,1), (6,2) on conflict(f1) do update set f2 = 0",insert_conflict.sql,DIFFERENT,CardinalityViolation,ON CONFLICT DO UPDATE command cannot affect row a second time HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
postgresql,postgresql,drop table selfconflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict_test (a int unique, b char) partition by list (a)",insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict_test_1 partition of parted_conflict_test (b unique) for values in (1, 2)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (1, 'a') on conflict do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (1, 'a') on conflict (a) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (1, 'a') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test_1 values (1, 'a') on conflict (a) do nothing",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test_1 values (1, 'b') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (2, 'b') on conflict (b) do update set a = excluded.a",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,"insert into parted_conflict_test_1 values (2, 'b') on conflict (b) do update set a = excluded.a",insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict_test_2 (b char, a int unique)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (3, 'a') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test values (3, 'b') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_test_3 partition of parted_conflict_test for values in (4),insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (4, 'a') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (4, 'b') on conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a'",insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_test_4 partition of parted_conflict_test for values in (5) partition by list (a),insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_test_4_1 partition of parted_conflict_test_4 for values in (5),insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (5, 'a') on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (5, 'b') on conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a'",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (1, 'a'), (2, 'a'), (4, 'a') on conflict (a) do update set b = excluded.b where excluded.b = 'b'",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_test (a, b) values (1, 'b'), (2, 'c'), (4, 'b') on conflict (a) do update set b = excluded.b where excluded.b = 'b'",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table parted_conflict_test,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict (a int primary key, b text) partition by range (a)",insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_1 partition of parted_conflict for values from (0) to (1000) partition by range (a),insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_1_1 partition of parted_conflict_1 for values from (0) to (500),insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values (40, 'forty')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_1 values (40, 'cuarenta')   on conflict (a) do update set b = excluded.b",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table parted_conflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict (a int, b text) partition by range (a)",insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_1 partition of parted_conflict for values from (0) to (1000) partition by range (a),insert_conflict.sql,SAME,,
postgresql,postgresql,create table parted_conflict_1_1 partition of parted_conflict_1 for values from (0) to (500),insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values (40, 'forty')",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict_1 values (40, 'cuarenta')   on conflict (a) do update set b = excluded.b",insert_conflict.sql,DIFFERENT,InvalidColumnReference,there is no unique or exclusion constraint matching the ON CONFLICT specification
postgresql,postgresql,drop table parted_conflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict (a int, b text, c int) partition by range (a)",insert_conflict.sql,SAME,,
postgresql,postgresql,"create table parted_conflict_1 (drp text, c int, a int, b text)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values (50, 'cincuenta', 1)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values (50, 'cincuenta', 2)   on conflict (a, b) do update set (a, b, c) = row(excluded.*)   where parted_conflict = (50, text 'cincuenta', 1) and         excluded = (50, text 'cincuenta', 2)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values (0, 'cero', 1)",insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into parted_conflict values(0, 'cero', 1)   on conflict (a,b) do update set c = parted_conflict.c + 1",insert_conflict.sql,SAME,,
postgresql,postgresql,drop table parted_conflict,insert_conflict.sql,SAME,,
postgresql,postgresql,"insert into t values(1,array[1],'a')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(1,array[11],'b')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(1,array[111],'c')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(2,array[2],'a')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(2,array[22],'b')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(2,array[222],'c')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(3,array[3],'a')",polymorphism.sql,SAME,,
postgresql,postgresql,"insert into t values(3,array[3],'b')",polymorphism.sql,SAME,,
postgresql,postgresql,create table xid8_t1 (x xid8),xid.sql,SAME,,
postgresql,postgresql,"insert into xid8_t1 values ('0'), ('010'), ('42'), ('0xffffffffffffffff'), ('-1')",xid.sql,SAME,,
postgresql,postgresql,drop table xid8_t1,xid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (1, '12:13:')",xid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (2, '12:20:13,15,18')",xid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (3, '100001:100009:100005,100007,100008')",xid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (4, '100:150:101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131')",xid.sql,SAME,,
postgresql,postgresql,CREATE TABLE INTERVAL_TBL (f1 interval),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 1 minute'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 5 hour'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 10 day'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 34 year'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 3 months'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 14 seconds ago'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('1 day 2 hours 3 minutes 4 seconds'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('6 years'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('5 months'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('5 months 12 hours'),interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('infinity'),interval.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""infinity"" LINE 1: INSERT INTO INTERVAL_TBL (f1) VALUES ('infinity')"
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('-infinity'),interval.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""-infinity"" LINE 1: INSERT INTO INTERVAL_TBL (f1) VALUES ('-infinity')"
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('badly formatted interval'),interval.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""badly formatted interval"" LINE 1: INSERT INTO INTERVAL_TBL (f1) VALUES ('badly formatted inter..."
postgresql,postgresql,INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 30 eons ago'),interval.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""@ 30 eons ago"" LINE 1: INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 30 eons ago')"
postgresql,postgresql,"INSERT INTO INTERVAL_TBL_OF (f1) VALUES   ('2147483647 days 2147483647 months'),   ('2147483647 days -2147483648 months'),   ('1 year'),   ('-2147483648 days 2147483647 months'),   ('-2147483648 days -2147483648 months')",interval.sql,SAME,,
postgresql,postgresql,INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483648 days'),interval.sql,DIFFERENT,IntervalFieldOverflow,"interval field value out of range: ""2147483648 days"" LINE 1: INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483648 days')"
postgresql,postgresql,INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483649 days'),interval.sql,DIFFERENT,IntervalFieldOverflow,"interval field value out of range: ""-2147483649 days"" LINE 1: INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483649 days')"
postgresql,postgresql,INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483647 years'),interval.sql,DIFFERENT,DatetimeFieldOverflow,interval out of range LINE 1: INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483647 years')
postgresql,postgresql,INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483648 years'),interval.sql,DIFFERENT,DatetimeFieldOverflow,interval out of range LINE 1: INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483648 years'...
postgresql,postgresql,DROP TABLE INTERVAL_TBL_OF,interval.sql,SAME,,
postgresql,postgresql,CREATE TABLE INTERVAL_MULDIV_TBL (span interval),interval.sql,SAME,,
postgresql,postgresql,DROP TABLE INTERVAL_MULDIV_TBL,interval.sql,SAME,,
postgresql,postgresql,CREATE TABLE INFINITE_INTERVAL_TBL (i interval),interval.sql,SAME,,
postgresql,postgresql,"INSERT INTO INFINITE_INTERVAL_TBL VALUES ('infinity'), ('-infinity'), ('1 year 2 days 3 hours')",interval.sql,DIFFERENT,InvalidDatetimeFormat,"invalid input syntax for type interval: ""infinity"" LINE 1: INSERT INTO INFINITE_INTERVAL_TBL VALUES ('infinity'), ('-in..."
postgresql,postgresql,CREATE TABLE tidscan(id integer),tidscan.sql,SAME,,
postgresql,postgresql,"INSERT INTO tidscan VALUES (1), (2), (3)",tidscan.sql,SAME,,
postgresql,postgresql,DROP TABLE tidscan,tidscan.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cp_test (a int, b text)",create_procedure.sql,SAME,,
postgresql,postgresql,"CREATE PROCEDURE ptest1(x text) LANGUAGE SQL AS $$ INSERT INTO cp_test VALUES (1, x); $$",create_procedure.sql,SAME,,
postgresql,postgresql,"CREATE PROCEDURE ptest1s(x text) LANGUAGE SQL BEGIN ATOMIC   INSERT INTO cp_test VALUES (1, x)",create_procedure.sql,DIFFERENT,SyntaxError,"syntax error at end of input LINE 4:   INSERT INTO cp_test VALUES (1, x)"
postgresql,postgresql,CREATE PROCEDURE ptestx() LANGUAGE SQL BEGIN ATOMIC   CREATE TABLE x (a int),create_procedure.sql,DIFFERENT,SyntaxError,syntax error at end of input LINE 4:   CREATE TABLE x (a int)
postgresql,postgresql,"CREATE OR REPLACE PROCEDURE ptest5(a int, b text, c int default 100) LANGUAGE SQL AS $$ INSERT INTO cp_test VALUES(a, b); INSERT INTO cp_test VALUES(c, b); $$",create_procedure.sql,SAME,,
postgresql,postgresql,"CREATE PROCEDURE ptest9(OUT a int) LANGUAGE SQL AS $$ INSERT INTO cp_test VALUES (1, 'a'); SELECT 1; $$",create_procedure.sql,SAME,,
postgresql,postgresql,"CREATE PROCEDURE ptestx() LANGUAGE SQL WINDOW AS $$ INSERT INTO cp_test VALUES (1, 'a') $$",create_procedure.sql,DIFFERENT,InvalidFunctionDefinition,invalid attribute in procedure definition LINE 1: CREATE PROCEDURE ptestx() LANGUAGE SQL WINDOW AS $$ INSERT I...
postgresql,postgresql,"CREATE PROCEDURE ptestx() LANGUAGE SQL STRICT AS $$ INSERT INTO cp_test VALUES (1, 'a') $$",create_procedure.sql,DIFFERENT,InvalidFunctionDefinition,invalid attribute in procedure definition LINE 1: CREATE PROCEDURE ptestx() LANGUAGE SQL STRICT AS $$ INSERT I...
postgresql,postgresql,DROP TABLE cp_test,create_procedure.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_json VALUES ('scalar','""a scalar""'), ('array','[""zero"", ""one"",""two"",null,""four"",""five"", [1,2,3],{""f1"":9}]'), ('object','{""field1"":""val1"",""field2"":""val2"",""field3"":null, ""field4"": 4, ""field5"": [1,2,3], ""field6"": {""f1"":9}}')",json.sql,SAME,,
postgresql,postgresql,"INSERT INTO jspoptest SELECT '{ 	""jsa"": [1, ""2"", null, 4], 	""rec"": {""a"": ""abc"", ""c"": ""01.02.2003"", ""x"": 43.2}, 	""reca"": [{""a"": ""abc"", ""b"": 456}, null, {""c"": ""01.02.2003"", ""x"": 43.2}] }'::json FROM generate_series(1, 3)",json.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847001,'t15','GE1043')",json.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847002,'t16','GE1043')",json.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (847003,'sub-alpha','GESS90')",json.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo VALUES (999999, NULL, 'bar')",json.sql,SAME,,
postgresql,postgresql,"CREATE TABLE CASE_TBL (   i integer,   f double precision )",case.sql,SAME,,
postgresql,postgresql,"CREATE TABLE CASE2_TBL (   i integer,   j integer )",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE_TBL VALUES (1, 10.1)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE_TBL VALUES (2, 20.2)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE_TBL VALUES (3, -30.3)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE_TBL VALUES (4, NULL)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (1, -1)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (2, -2)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (3, -3)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (2, -4)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (1, NULL)",case.sql,SAME,,
postgresql,postgresql,"INSERT INTO CASE2_TBL VALUES (NULL, -6)",case.sql,SAME,,
postgresql,postgresql,DROP TABLE CASE_TBL,case.sql,SAME,,
postgresql,postgresql,DROP TABLE CASE2_TBL,case.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brintest_bloom (byteacol bytea, 	charcol ""char"", 	namecol name, 	int8col bigint, 	int2col smallint, 	int4col integer, 	textcol text, 	oidcol oid, 	float4col real, 	float8col double precision, 	macaddrcol macaddr, 	inetcol inet, 	cidrcol cidr, 	bpcharcol character, 	datecol date, 	timecol time without time zone, 	timestampcol timestamp without time zone, 	timestamptzcol timestamp with time zone, 	intervalcol interval, 	timetzcol time with time zone, 	numericcol numeric, 	uuidcol uuid, 	lsncol pg_lsn ) WITH (fillfactor=10)",brin_bloom.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_bloom SELECT 	repeat(stringu1, 8)::bytea, 	substr(stringu1, 1, 1)::""char"", 	stringu1::name, 142857 * tenthous, 	thousand, 	twothousand, 	repeat(stringu1, 8), 	unique1::oid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	inet '10.2.3.4/24' + tenthous, 	cidr '10.2.3/24' + tenthous, 	substr(stringu1, 1, 1)::bpchar, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20+02' + hundred * interval '15 seconds', 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	format('%s/%s%s', odd, even, tenthous)::pg_lsn FROM tenk1 ORDER BY unique2 LIMIT 100",brin_bloom.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 24: FROM tenk1 ORDER BY unique2 LIMIT 100"
postgresql,postgresql,"INSERT INTO brintest_bloom (inetcol, cidrcol) SELECT 	inet 'fe80::6e40:8ff:fea9:8c46' + tenthous, 	cidr 'fe80::6e40:8ff:fea9:8c46' + tenthous FROM tenk1 ORDER BY thousand, tenthous LIMIT 25",brin_bloom.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 4: FROM tenk1 ORDER BY thousand, tenthous LIMIT 25"
postgresql,postgresql,"CREATE TABLE brinopers_bloom (colname name, typ text, 	op text[], value text[], matches int[], 	check (cardinality(op) = cardinality(value)), 	check (cardinality(op) = cardinality(matches)))",brin_bloom.sql,SAME,,
postgresql,postgresql,"INSERT INTO brinopers_bloom VALUES 	('byteacol', 'bytea', 	 '{=}', 	 '{BNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAA}', 	 '{1}'), 	('charcol', '""char""', 	 '{=}', 	 '{M}', 	 '{6}'), 	('namecol', 'name', 	 '{=}', 	 '{MAAAAA}', 	 '{2}'), 	('int2col', 'int2', 	 '{=}', 	 '{800}', 	 '{1}'), 	('int4col', 'int4', 	 '{=}', 	 '{800}', 	 '{1}'), 	('int8col', 'int8', 	 '{=}', 	 '{1257141600}', 	 '{1}'), 	('textcol', 'text', 	 '{=}', 	 '{BNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAA}', 	 '{1}'), 	('oidcol', 'oid', 	 '{=}', 	 '{8800}', 	 '{1}'), 	('float4col', 'float4', 	 '{=}', 	 '{1}', 	 '{4}'), 	('float8col', 'float8', 	 '{=}', 	 '{0}', 	 '{1}'), 	('macaddrcol', 'macaddr', 	 '{=}', 	 '{2c:00:2d:00:16:00}', 	 '{2}'), 	('inetcol', 'inet', 	 '{=}', 	 '{10.2.14.231/24}', 	 '{1}'), 	('inetcol', 'cidr', 	 '{=}', 	 '{fe80::6e40:8ff:fea9:8c46}', 	 '{1}'), 	('cidrcol', 'inet', 	 '{=}', 	 '{10.2.14/24}', 	 '{2}'), 	('cidrcol', 'inet', 	 '{=}', 	 '{fe80::6e40:8ff:fea9:8c46}', 	 '{1}'), 	('cidrcol', 'cidr', 	 '{=}', 	 '{10.2.14/24}', 	 '{2}'), 	('cidrcol', 'cidr', 	 '{=}', 	 '{fe80::6e40:8ff:fea9:8c46}', 	 '{1}'), 	('bpcharcol', 'bpchar', 	 '{=}', 	 '{W}', 	 '{6}'), 	('datecol', 'date', 	 '{=}', 	 '{2009-12-01}', 	 '{1}'), 	('timecol', 'time', 	 '{=}', 	 '{02:28:57}', 	 '{1}'), 	('timestampcol', 'timestamp', 	 '{=}', 	 '{1964-03-24 19:26:45}', 	 '{1}'), 	('timestamptzcol', 'timestamptz', 	 '{=}', 	 '{1972-10-19 09:00:00-07}', 	 '{1}'), 	('intervalcol', 'interval', 	 '{=}', 	 '{1 mons 13 days 12:24}', 	 '{1}'), 	('timetzcol', 'timetz', 	 '{=}', 	 '{01:35:50+02}', 	 '{2}'), 	('numericcol', 'numeric', 	 '{=}', 	 '{2268164.347826086956521739130434782609}', 	 '{1}'), 	('uuidcol', 'uuid', 	 '{=}', 	 '{52225222-5222-5222-5222-522252225222}', 	 '{1}'), 	('lsncol', 'pg_lsn', 	 '{=, IS, IS NOT}', 	 '{44/455222, NULL, NULL}', 	 '{1, 25, 100}')",brin_bloom.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_bloom SELECT 	repeat(stringu1, 42)::bytea, 	substr(stringu1, 1, 1)::""char"", 	stringu1::name, 142857 * tenthous, 	thousand, 	twothousand, 	repeat(stringu1, 42), 	unique1::oid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	inet '10.2.3.4' + tenthous, 	cidr '10.2.3/24' + tenthous, 	substr(stringu1, 1, 1)::bpchar, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20' + hundred * interval '15 seconds', 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	format('%s/%s%s', odd, even, tenthous)::pg_lsn FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5",brin_bloom.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 24: FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5"
postgresql,postgresql,"CREATE TABLE brin_summarize_bloom (     value int ) WITH (fillfactor=10, autovacuum_enabled=false)",brin_bloom.sql,SAME,,
postgresql,postgresql,"DO $$ DECLARE curtid tid; BEGIN   LOOP     INSERT INTO brin_summarize_bloom VALUES (1) RETURNING ctid INTO curtid;     EXIT WHEN curtid > tid '(2, 0)';   END LOOP; END; $$",brin_bloom.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_test_bloom (a INT, b INT)",brin_bloom.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test_bloom SELECT x/100,x%100 FROM generate_series(1,10000) x(x)",brin_bloom.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1 (a int, b int, c varchar) PARTITION BY RANGE(a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_p1 PARTITION OF prt1 FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_p3 PARTITION OF prt1 FOR VALUES FROM (500) TO (600),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_p2 PARTITION OF prt1 FOR VALUES FROM (250) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1 SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 2 = 0",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2 (a int, b int, c varchar) PARTITION BY RANGE(b)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_p1 PARTITION OF prt2 FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_p2 PARTITION OF prt2 FOR VALUES FROM (250) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_p3 PARTITION OF prt2 FOR VALUES FROM (500) TO (600),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 3 = 0",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_e (a int, b int, c int) PARTITION BY RANGE(((a + b)/2))",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_e_p1 PARTITION OF prt1_e FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_e_p2 PARTITION OF prt1_e FOR VALUES FROM (250) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_e_p3 PARTITION OF prt1_e FOR VALUES FROM (500) TO (600),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_e SELECT i, i, i % 25 FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_e (a int, b int, c int) PARTITION BY RANGE(((b + a)/2))",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_e_p1 PARTITION OF prt2_e FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_e_p2 PARTITION OF prt2_e FOR VALUES FROM (250) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_e_p3 PARTITION OF prt2_e FOR VALUES FROM (500) TO (600),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_e SELECT i, i, i % 25 FROM generate_series(0, 599, 3) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_m (a int, b int, c int) PARTITION BY RANGE(a, ((a + b)/2))",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_m_p1 PARTITION OF prt1_m FOR VALUES FROM (0, 0) TO (250, 250)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_m_p2 PARTITION OF prt1_m FOR VALUES FROM (250, 250) TO (500, 500)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_m_p3 PARTITION OF prt1_m FOR VALUES FROM (500, 500) TO (600, 600)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_m SELECT i, i, i % 25 FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_m (a int, b int, c int) PARTITION BY RANGE(((b + a)/2), b)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_m_p1 PARTITION OF prt2_m FOR VALUES FROM (0, 0) TO (250, 250)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_m_p2 PARTITION OF prt2_m FOR VALUES FROM (250, 250) TO (500, 500)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_m_p3 PARTITION OF prt2_m FOR VALUES FROM (500, 500) TO (600, 600)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_m SELECT i, i, i % 25 FROM generate_series(0, 599, 3) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1 (a int, b int, c text) PARTITION BY LIST(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_p1 PARTITION OF plt1 FOR VALUES IN ('0000', '0003', '0004', '0010')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_p2 PARTITION OF plt1 FOR VALUES IN ('0001', '0005', '0002', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_p3 PARTITION OF plt1 FOR VALUES IN ('0006', '0007', '0008', '0011')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2 (a int, b int, c text) PARTITION BY LIST(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_p1 PARTITION OF plt2 FOR VALUES IN ('0000', '0003', '0004', '0010')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_p2 PARTITION OF plt2 FOR VALUES IN ('0001', '0005', '0002', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_p3 PARTITION OF plt2 FOR VALUES IN ('0006', '0007', '0008', '0011')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_e (a int, b int, c text) PARTITION BY LIST(ltrim(c, 'A'))",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_e_p1 PARTITION OF plt1_e FOR VALUES IN ('0000', '0003', '0004', '0010')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_e_p2 PARTITION OF plt1_e FOR VALUES IN ('0001', '0005', '0002', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_e_p3 PARTITION OF plt1_e FOR VALUES IN ('0006', '0007', '0008', '0011')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1 (a int, b int, c text) PARTITION BY HASH(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_p1 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 0)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_p2 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 1)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_p3 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 2)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO pht1 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht2 (a int, b int, c text) PARTITION BY HASH(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht2_p1 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 0)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht2_p2 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 1)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht2_p3 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 2)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO pht2 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_e (a int, b int, c text) PARTITION BY HASH(ltrim(c, 'A'))",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_e_p1 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 0)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_e_p2 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 1)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pht1_e_p3 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 2)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO pht1_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 299, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_l (a int, b int, c varchar) PARTITION BY RANGE(a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_l_p1 PARTITION OF prt1_l FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_l_p2 PARTITION OF prt1_l FOR VALUES FROM (250) TO (500) PARTITION BY LIST (c),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_l_p2_p1 PARTITION OF prt1_l_p2 FOR VALUES IN ('0000', '0001')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_l_p2_p2 PARTITION OF prt1_l_p2 FOR VALUES IN ('0002', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_l_p3 PARTITION OF prt1_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (b),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_l_p3_p1 PARTITION OF prt1_l_p3 FOR VALUES FROM (0) TO (13),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_l_p3_p2 PARTITION OF prt1_l_p3 FOR VALUES FROM (13) TO (25),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_l SELECT i, i % 25, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_l (a int, b int, c varchar) PARTITION BY RANGE(b)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_l_p1 PARTITION OF prt2_l FOR VALUES FROM (0) TO (250),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_l_p2 PARTITION OF prt2_l FOR VALUES FROM (250) TO (500) PARTITION BY LIST (c),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_l_p2_p1 PARTITION OF prt2_l_p2 FOR VALUES IN ('0000', '0001')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_l_p2_p2 PARTITION OF prt2_l_p2 FOR VALUES IN ('0002', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_l_p3 PARTITION OF prt2_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (a),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_l_p3_p1 PARTITION OF prt2_l_p3 FOR VALUES FROM (0) TO (13),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_l_p3_p2 PARTITION OF prt2_l_p3 FOR VALUES FROM (13) TO (25),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_l SELECT i % 25, i, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 3) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_n (a int, b int, c varchar) PARTITION BY RANGE(c)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_n_p1 PARTITION OF prt1_n FOR VALUES FROM ('0000') TO ('0250'),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_n_p2 PARTITION OF prt1_n FOR VALUES FROM ('0250') TO ('0500'),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 499, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_n (a int, b int, c text) PARTITION BY LIST(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_n_p1 PARTITION OF prt2_n FOR VALUES IN ('0000', '0003', '0004', '0010', '0006', '0007')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_n_p2 PARTITION OF prt2_n FOR VALUES IN ('0001', '0005', '0002', '0009', '0008', '0011')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_n SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt3_n (a int, b int, c text) PARTITION BY LIST(c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt3_n_p1 PARTITION OF prt3_n FOR VALUES IN ('0000', '0004', '0006', '0007')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt3_n_p2 PARTITION OF prt3_n FOR VALUES IN ('0001', '0002', '0008', '0010')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt3_n_p3 PARTITION OF prt3_n FOR VALUES IN ('0003', '0005', '0009', '0011')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_n SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt4_n (a int, b int, c text) PARTITION BY RANGE(a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt4_n_p1 PARTITION OF prt4_n FOR VALUES FROM (0) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt4_n_p2 PARTITION OF prt4_n FOR VALUES FROM (300) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt4_n_p3 PARTITION OF prt4_n FOR VALUES FROM (500) TO (600),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt4_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i",partition_join.sql,SAME,,
postgresql,postgresql,"insert into prtx1 select 1 + i%30, i, i   from generate_series(1,1000) i",partition_join.sql,SAME,,
postgresql,postgresql,"insert into prtx2 select 1 + i%30, i, i   from generate_series(1,500) i, generate_series(1,10) j",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_adv (a int, b int, c varchar) PARTITION BY RANGE (a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p1 PARTITION OF prt1_adv FOR VALUES FROM (100) TO (200),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p2 PARTITION OF prt1_adv FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p3 PARTITION OF prt1_adv FOR VALUES FROM (300) TO (400),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(100, 399) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_adv (a int, b int, c varchar) PARTITION BY RANGE (b)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p1 PARTITION OF prt2_adv FOR VALUES FROM (100) TO (150),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p2 PARTITION OF prt2_adv FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p3 PARTITION OF prt2_adv FOR VALUES FROM (350) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv_p1 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 149) i",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv_p2 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(200, 299) i",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv_p3 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) i",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_extra PARTITION OF prt2_adv FOR VALUES FROM (500) TO (MAXVALUE),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(500, 599) i",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv_extra,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p3_1 PARTITION OF prt2_adv FOR VALUES FROM (350) TO (375),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p3_2 PARTITION OF prt2_adv FOR VALUES FROM (375) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) i",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv_p3_1,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv_p3_2,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt1_adv_p3,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv_p3,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt3_adv (a int, b int, c varchar) PARTITION BY RANGE (a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt3_adv_p1 PARTITION OF prt3_adv FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt3_adv_p2 PARTITION OF prt3_adv FOR VALUES FROM (300) TO (400),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt3_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(200, 399) i",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt1_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt3_adv,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt1_adv (a int, b int, c varchar) PARTITION BY RANGE (a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p1 PARTITION OF prt1_adv FOR VALUES FROM (100) TO (200),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p2 PARTITION OF prt1_adv FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_p3 PARTITION OF prt1_adv FOR VALUES FROM (300) TO (400),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt1_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(100, 399) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE prt2_adv (a int, b int, c varchar) PARTITION BY RANGE (b)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p1 PARTITION OF prt2_adv FOR VALUES FROM (100) TO (200),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_p2 PARTITION OF prt2_adv FOR VALUES FROM (200) TO (400),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 399) i",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt1_adv_p3,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt1_adv_default PARTITION OF prt1_adv DEFAULT,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE prt2_adv_default PARTITION OF prt2_adv DEFAULT,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt1_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE prt2_adv,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0001', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0004', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p3 PARTITION OF plt1_adv FOR VALUES IN ('0008', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0002', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN ('0004', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p3 PARTITION OF plt2_adv FOR VALUES IN ('0007', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_extra PARTITION OF plt2_adv FOR VALUES IN ('0000'),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv_extra VALUES (0, 0, '0000')",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_extra,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p2_1 PARTITION OF plt2_adv FOR VALUES IN ('0004'),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p2_2 PARTITION OF plt2_adv FOR VALUES IN ('0006'),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 6)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p2_1,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p2_2,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p1_null PARTITION OF plt1_adv FOR VALUES IN (NULL, '0001', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p3_null PARTITION OF plt2_adv FOR VALUES IN (NULL, '0007', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv_p1_null,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt1_adv_extra PARTITION OF plt1_adv FOR VALUES IN (NULL),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p3_null,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_extra PARTITION OF plt2_adv FOR VALUES IN (NULL),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv_extra,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_extra,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv_p3,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p3,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p2_ext PARTITION OF plt2_adv FOR VALUES IN ('0004', '0005', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 5, 6)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p2_ext,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt3_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt3_adv_p1 PARTITION OF plt3_adv FOR VALUES IN ('0004', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt3_adv_p2 PARTITION OF plt3_adv FOR VALUES IN ('0007', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt3_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p1,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p1_null PARTITION OF plt2_adv FOR VALUES IN (NULL, '0001', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv_p1_null,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p1_null PARTITION OF plt2_adv FOR VALUES IN (NULL),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt3_adv,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0001'),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0002'),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt1_adv_p3 PARTITION OF plt1_adv FOR VALUES IN ('0003'),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p4 PARTITION OF plt1_adv FOR VALUES IN (NULL, '0004', '0005')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 2, 3, 4, 5)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0001', '0002')",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN (NULL),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p3 PARTITION OF plt2_adv FOR VALUES IN ('0003'),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p4 PARTITION OF plt2_adv FOR VALUES IN ('0004', '0005')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 2, 3, 4, 5)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv VALUES (-1, -1, NULL)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt1_adv_default PARTITION OF plt1_adv DEFAULT,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_default PARTITION OF plt2_adv DEFAULT,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0000', '0001', '0002')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0003', '0004')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt1_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0002'),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN ('0003', '0004')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt2_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i WHERE i % 5 IN (2, 3, 4)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt3_adv (a int, b int, c text) PARTITION BY LIST (c)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE plt3_adv_p1 PARTITION OF plt3_adv FOR VALUES IN ('0001'),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE plt3_adv_p2 PARTITION OF plt3_adv FOR VALUES IN ('0003', '0004')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO plt3_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i WHERE i % 5 IN (1, 3, 4)",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt1_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt2_adv,partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE plt3_adv,partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alpha (a double precision, b int, c text) PARTITION BY RANGE (a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE alpha_neg PARTITION OF alpha FOR VALUES FROM ('-Infinity') TO (0) PARTITION BY RANGE (b),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE alpha_pos PARTITION OF alpha FOR VALUES FROM (0) TO (10.0) PARTITION BY LIST (c),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE alpha_neg_p1 PARTITION OF alpha_neg FOR VALUES FROM (100) TO (200),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE alpha_neg_p2 PARTITION OF alpha_neg FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE alpha_neg_p3 PARTITION OF alpha_neg FOR VALUES FROM (300) TO (400),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alpha_pos_p1 PARTITION OF alpha_pos FOR VALUES IN ('0001', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alpha_pos_p2 PARTITION OF alpha_pos FOR VALUES IN ('0004', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE alpha_pos_p3 PARTITION OF alpha_pos FOR VALUES IN ('0008', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO alpha_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO alpha_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE beta (a double precision, b int, c text) PARTITION BY RANGE (a)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE beta_neg PARTITION OF beta FOR VALUES FROM (-10.0) TO (0) PARTITION BY RANGE (b),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE beta_pos PARTITION OF beta FOR VALUES FROM (0) TO ('Infinity') PARTITION BY LIST (c),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE beta_neg_p1 PARTITION OF beta_neg FOR VALUES FROM (100) TO (150),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE beta_neg_p2 PARTITION OF beta_neg FOR VALUES FROM (200) TO (300),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE beta_neg_p3 PARTITION OF beta_neg FOR VALUES FROM (350) TO (500),partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE beta_pos_p1 PARTITION OF beta_pos FOR VALUES IN ('0002', '0003')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE beta_pos_p2 PARTITION OF beta_pos FOR VALUES IN ('0004', '0006')",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE beta_pos_p3 PARTITION OF beta_pos FOR VALUES IN ('0007', '0009')",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",partition_join.sql,SAME,,
postgresql,postgresql,"CREATE TABLE fract_t (id BIGINT, PRIMARY KEY (id)) PARTITION BY RANGE (id)",partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE fract_t0 PARTITION OF fract_t FOR VALUES FROM ('0') TO ('1000'),partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLE fract_t1 PARTITION OF fract_t FOR VALUES FROM ('1000') TO ('2000'),partition_join.sql,SAME,,
postgresql,postgresql,"INSERT INTO fract_t (id) (SELECT generate_series(0, 1999))",partition_join.sql,SAME,,
postgresql,postgresql,DROP TABLE fract_t,partition_join.sql,SAME,,
postgresql,postgresql,CREATE TABLESPACE regress_tblspace LOCATION '',test_setup.sql,DIFFERENT,InsufficientPrivilege,"permission denied to create tablespace ""regress_tblspace"" HINT:  Must be superuser to create a tablespace."
postgresql,postgresql,CREATE TABLE CHAR_TBL(f1 char(4)),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO CHAR_TBL (f1) VALUES   ('a'),   ('ab'),   ('abcd'),   ('abcd    ')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE FLOAT8_TBL(f1 float8),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO FLOAT8_TBL(f1) VALUES   ('0.0'),   ('-34.84'),   ('-1004.30'),   ('-1.2345678901234e+200'),   ('-1.2345678901234e-200')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE INT2_TBL(f1 int2),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO INT2_TBL(f1) VALUES   ('0   '),   ('  1234 '),   ('    -1234'),   ('32767'),     ('-32767')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE INT4_TBL(f1 int4),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO INT4_TBL(f1) VALUES   ('   0  '),   ('123456     '),   ('    -123456'),   ('2147483647'),     ('-2147483647')",test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE INT8_TBL(q1 int8, q2 int8)",test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO INT8_TBL VALUES   ('  123   ','  456'),   ('123   ','4567890123456789'),   ('4567890123456789','123'),   (+4567890123456789,'4567890123456789'),   ('+4567890123456789','-4567890123456789')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE POINT_TBL(f1 point),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO POINT_TBL(f1) VALUES   ('(0.0,0.0)'),   ('(-10.0,0.0)'),   ('(-3.0,4.0)'),   ('(5.1, 34.5)'),   ('(-5.0,-12.0)'),   ('(1e-300,-1e-300)'),     ('(1e+300,Inf)'),     ('(Inf,1e+300)'),     (' ( Nan , NaN ) '),   ('10.0,10.0')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE TEXT_TBL (f1 text),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO TEXT_TBL VALUES   ('doh!'),   ('hi de ho neighbor')",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE VARCHAR_TBL(f1 varchar(4)),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO VARCHAR_TBL (f1) VALUES   ('a'),   ('ab'),   ('abcd'),   ('abcd    ')",test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE onek ( 	unique1		int4, 	unique2		int4, 	two			int4, 	four		int4, 	ten			int4, 	twenty		int4, 	hundred		int4, 	thousand	int4, 	twothousand	int4, 	fivethous	int4, 	tenthous	int4, 	odd			int4, 	even		int4, 	stringu1	name, 	stringu2	name, 	string4		name )",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE onek2 AS SELECT * FROM onek,test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tenk1 ( 	unique1		int4, 	unique2		int4, 	two			int4, 	four		int4, 	ten			int4, 	twenty		int4, 	hundred		int4, 	thousand	int4, 	twothousand	int4, 	fivethous	int4, 	tenthous	int4, 	odd			int4, 	even		int4, 	stringu1	name, 	stringu2	name, 	string4		name )",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE tenk2 AS SELECT * FROM tenk1,test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE person ( 	name 		text, 	age			int4, 	location 	point )",test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE emp ( 	salary 		int4, 	manager 	name ) INHERITS (person)",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE student ( 	gpa 		float8 ) INHERITS (person),test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE stud_emp ( 	percent 	int4 ) INHERITS (emp, student)",test_setup.sql,SAME,,
postgresql,postgresql,"CREATE TABLE road ( 	name		text, 	thepath 	path )",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE ihighway () INHERITS (road),test_setup.sql,SAME,,
postgresql,postgresql,INSERT INTO ihighway    SELECT *    FROM ONLY road    WHERE name ~ 'I- .*',test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE shighway ( 	surface		text ) INHERITS (road),test_setup.sql,SAME,,
postgresql,postgresql,"INSERT INTO shighway    SELECT *, 'asphalt'    FROM ONLY road    WHERE name ~ 'State Hwy.*'",test_setup.sql,SAME,,
postgresql,postgresql,CREATE TABLE lock_tbl1 (a BIGINT),lock.sql,SAME,,
postgresql,postgresql,CREATE TABLE lock_tbl1a (a BIGINT),lock.sql,SAME,,
postgresql,postgresql,CREATE TABLE lock_tbl2 (b BIGINT) INHERITS (lock_tbl1),lock.sql,SAME,,
postgresql,postgresql,CREATE TABLE lock_tbl3 () INHERITS (lock_tbl2),lock.sql,SAME,,
postgresql,postgresql,DROP TABLE lock_tbl3,lock.sql,SAME,,
postgresql,postgresql,DROP TABLE lock_tbl2,lock.sql,SAME,,
postgresql,postgresql,DROP TABLE lock_tbl1,lock.sql,SAME,,
postgresql,postgresql,DROP TABLE lock_tbl1a,lock.sql,SAME,,
postgresql,postgresql,DROP TABLE num_data,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_data"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_add,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_add"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_sub,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_sub"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_div,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_div"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_mul,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_mul"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_sqrt,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_sqrt"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_ln,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_ln"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_log10,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_log10"" does not exist"
postgresql,postgresql,DROP TABLE num_exp_power_10_ln,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_exp_power_10_ln"" does not exist"
postgresql,postgresql,DROP TABLE num_result,numeric_big.sql,DIFFERENT,UndefinedTable,"table ""num_result"" does not exist"
postgresql,postgresql,"CREATE TABLE num_data (id int4, val numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_add (id1 int4, id2 int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_sub (id1 int4, id2 int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_div (id1 int4, id2 int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_mul (id1 int4, id2 int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_sqrt (id int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_ln (id int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_log10 (id int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_exp_power_10_ln (id int4, expected numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"CREATE TABLE num_result (id1 int4, id2 int4, result numeric(1000,800))",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,1,'85243.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,1,'-85243.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,1,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,1,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,2,'-994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,2,'994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,2,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,2,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,3,'-60302029489319384367663884408085757480.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,3,'60302029489319384367663884408085757480.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,3,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,3,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,4,'5329378275943663322215245.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,4,'-5329378275943663322215245.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,4,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,4,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,5,'-652755630.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,5,'652755630.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,5,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,5,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,6,'.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,6,'-.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,6,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,6,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,7,'-818934540071845742')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,7,'818934540071845742')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,7,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,7,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,8,'8496986223.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,8,'-8496986223.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,8,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,8,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (0,9,'54863480.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (0,9,'-54863480.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (0,9,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (0,9,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,0,'85243.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,0,'85243.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,1,'170486.79080049955252152479695727201571965474311716541919780029226071455736587237347615553466832461907447637054203186991790701615551214692555785671028648640897898741246882118067609728317430043806625387779037980513762118868084887015059202190301421555269486602797852927777567694581746398790609996101506730430853942556475840126871131898407356048450541232591147357021858041662012293323494543567675306406079659294204054863522259037763051870433216859794083051717080761509518250300466106939998045710070')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,1,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,1,'7266436459.363324713115467666113895787027372854351303425444968800459979742082292257107107767894843498525848597439323325297125474674300428669958003640228730876886174255457103020291514229439701871032118057857763809224712818579091741996335014138185389554630910658876423205103697147288306070059640369158894028731728589073730895396494400175420670713113234800826523252075036892246807434088405522834549449664122407363485486902219500109237667016524913027290777216477989904700729228025571098410870506256758678625928245828210775042611512394316804583459576285681159178280400209217948833631961377519855502763611693070238579591463373484424582723121059964236704135695706864890193388054537703767833595331866551990460050750959493829603581882430597105627056085260296454181999581594565113210481151487049158699087454047624433576922179904629')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_divnumeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,2,'-994877526002806872754342148663997.64812998474240514147207095573950146764154822009863493316394610578375247334825932838513167168342610420582834742950389452212867974756590355021495169819086060202117180229196935525386766373096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,2,'994877526002806872754342148834484.43893048429492666626902822775522112238466538551783273345620682034111834572173548391979999630250058057637037929942180153828419189449146140692523818459983958943364062347264545253704196416903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,2,'-84806738323879544552397401815149740513.8505875535743013876823142649666132764556588225959336097903898464616542203793600590311980154402068027051522932586050753865288419084437796768749509032177577451738712965496693249429231838833655025794915864261585848007162358912070811805298210095333433397862313304655108809804359760907473898420016370058274978588765092161529583480924554820756527238472641797198545539410039895140087686344382628317530286295498797849942258314364503000942821309916954725689781458590617068629906894951122301020797266469357701283289275708774593896770378558232444454118891917258610753077932026885574920166837998049508644891327208474213193224700658584824407382455480657734911543930195324144216374573825')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,2,'-.000000000000000000000000000085682300757901809257711279577127388124986344391495296640171942990079130291883279872719240502687189411421655284515420074848478500192127657883342858267913417679786356766341637336955924836847768457039175660279784295612167899455618405343686908907695358239088351870495830739180518509859269437015797489301844593920484927630172344269378248455657186218762679357609204333669024237648538465053048724383898528808961206696787294681884412485427843796696788390072124570957047672341581447744981862017791206857428430183366004980966398716823512288330174863890117558744630102020144500158878244146399686532935435591262767487823942606452349972401012308378888947381934278131785907155692007064636085000405504866631011593239041758448995933095907216863744502344014999804306234830774259496097549717476344048')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,3,'-60302029489319384367663884408085672236.83687099063256754698860828386302509843815398979402006244388708674093244201278399438376682321121138429850885935540924586964982855913223221441591310211730902799041126800414795030815514254713522692405212716783388698431088814919226444677188004928663343696636297536500970117716818423689175692808344185016908913828066250587407384563498516598672584120143890364303296142744031320345312431817858545326010704685255237541162931904446804064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,3,'60302029489319384367663884408085842723.62767149018508907178556555587874475318127115521321786273614780129829831438626014991843514783028586066905089122532715288580534070605779007112619958852628801540288008918482404759132944298520148080184250697297150817299173701934285646867489426483932830299434150464278537812298564822479785688909850915447762856384542090714278516461905872647123125352735037721325154184406043613668806975385533851732090363979459292404685190942209855935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,3,'-5140349743195574373979577554212527512597024.162480344833040409158673429491690439298506850052285119390701002577176786023622062742050099464897084793357329597395417632908812044304066963549928478520702505283307379218587635434673128958824348493758429380623577527186462464399974242800361134191519694694139153279582776168995426125926314513926640766117733774558011741611075336271613675760116784769700605008122422944290652448956922432960815546502965310676913079866511016221573557684245901002643719965652152439520727383305120298495304784052489867651462175349450610643411043707261107569691076730261762793560088893354750383257372118118753366377402045596735023445172252225346164608897913115394905485106225627590643805003075069931177395059698550161546962768768895596088478488887530518018212441345360153523733317120037436403475909117998647781920105313938836144009539683')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,3,'-.000000000000000000000000000000001413607404628860353773457807436398753936801768769045711604884548436548520368932184112069166807060840219636509423284498981041814526856251281381511288768719259120481595036745286884246627534964287523188738499223075292690431699417313258943941279343383979626641848305343592679057491670166887054819766294147341982669243114259272404203080347707713358471397866402657818267495050115642987782080912962056565478445923456884713049272637646637760989004917643369240372476411912794578381690666695711891846833983534126217706309741885844723208036219144146342212915129560758201609824034610223907791643110990898577049488934294259106725414517181607988173722432655731491050637087261030314548853334338835938120502930424813699221083197863303458179445322810087784892821862085562891180364134284641396475')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,4,'5329378275943663322300488.64471790965256505869684245785528331091076155554650629138833809683459634328609777839510066435612911583108717191216693735823717997111970662575497378762952496582183738308720094529950793570383580785385569873278068217936841324404119828637880370718028782103860007754579779716996004352284614661690063919125301052941328989181561787543541920734755989452320799185700078241880935083616978140555713297241612718277766918005268951861880490889884082730841740604517529391011862694381726143520658746305661338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,4,'-5329378275943663322130001.85391741010004353389988518583956365616764439012730849109607738227723047091262162286043233973705463946054514004224903034208166782419414876904468730122054597840936856190652484801633363526576955397606531892764306099068756437389060626447578949162759295501062154826802212022414257953494004665588557188694447110384853149054690655645134564686305448219729651828678220200218922790293483596988037990835533058983562863141746692824117439019450865871047657552800448629502344444081260036580660700595591338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,4,'454294299613767152878025320780.534199313974295807138790763501115780294529340799108297697573066187975311338382917022391830256203305238757334106943821060545424417350991354829668286194840925251162479496893943917530660694097932059166013476064988623431110002057735318529554555260199417935495388243829261809007709919225000608711536928171687251088217591210419208480251102484043683131687013687838713055660405381318396419588727500715930145098362997142075433472039319292466570912777345841400769387321465602989947078951135489852486382469990409873227894248208197179481868230244584527040573428134962626267135732247029762468417273891700661832893497067151409134724061246612631376075173287264787886064622106855886785805818642123776489793586531950438285720668411465570116161790343538663297713926678759640594912243360541590368666922379919514826022141331900181')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,4,'.000000000000000000015994998100440878014888861029956505927201309704413242103407885948184870841766875212766910686894450511886242468216220470061916924303252919423028993720180330014505454865704155281502763018913215741264982350384245753394656021401865680441649920273268554396350483440173848850052788410943178207336328451359951614056237100465802151856198860908371340425459435127133071447273887829397881221098443685586506647314622864702873235212396755866459409263439958011711379929751157260020133239574261188528305921244365838405372320186907437842180388704854605498842516581811515413843298370501194935797268161171428747542997504369133579105180311662221854071962295818264211400101689450830279979372422749150894553349570063000769685274875561760334738424509532610467832951796852051505383374693614022043010735004494395190')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,5,'-652670387.03916046850422757312745971450663862747133703839829692066597367760104802542475264601221776157515632293978442027199108085723617181683235487266149426304575903892721468296143475297345699313102262188759506518376019936160961709578829069446312051432780603656651983414612264636232727512091101057374054475214114364113300402823059519499217878746766275164739724770556122895799337810694888119810524986616938847385753562624139431982468828696587199570410008890188532132652095915565323400735066310142303225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,5,'652840873.82996096805674909792441698652235828221445420381749472095823439215841389779822880154688608619423079931032645214190898787339168396375791272937178074945473802633968350414211085025663129356908887576538544498889782055029046596593888271636613472988050090259449836342389832330814473910881711053475561205644968306669776242949930651397625234795216816397330872127577980937461350104018382663378200293023018506679957617487661691020231880567020416430204091941905612894161614165865789507675064355852373225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,5,'-55643106304872.575994253221940844841058071061962511162776681458310912066379595519265546225338405882027547140476045378015935579066580347282075024392379464189067155567624835346798806677988850250198082355055954078446421075165109896091047534711081616362392995575466807084807876544560268050611445006601394735810211678919646667455478469014906335433468365011768049600750224822391684377238242162320161552720449713229523135506671063115436813348612986916614320012995541575293478341408982118538094438068036422562665160411591652618670802973618768526197813319204816293073794413317669922144705633308090832805914096147659820167569140291210526520361556881576175809360614782817717579318298657744021133210954279487777567785280633309576696708168342539425395482429923273623865667723482418178781573723597156804085501875735112311466228778929147929')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,5,'-.000130590057635351941758745900947472461593749814351229292370661147301124533787181489468804246182606762727711479707901680546780430454163647774077629503207962424213266902732555945190365467801995495570282501722505521485829885605904543846887348545254658726343578684749830307120625129857380290225370772763609458975555029415082569247186899112975387051141777417911244576134390940441209829852154391377911942082738699481875795620569383196133124499983396562167632007454221121465745085962247988140942672429187053671899537331280701003778040796615094903602095098880716919238394057384949891444700347825726273725378453454782330181608182747900774711384845635284701538541452235224216112380245660177463043471814071809869894647262285332580556739424040615194137651616350340752691170045698234853734471923738591898290468792787543896')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,6,'85243.44233732197133191329295927531563604777955507322414928382967007765263923984471408038635831036097817458527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,6,'85243.34846317758118961150399799670008360696356209219504851646259063690472663252876207514831001425809630178527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,6,'4001.075404054519813215296429095020391062109905613738157927030437221793757373268325953178030040276107574363822832168160758728653712686313134828282109532831190239521843808940611025488601517574653932032236616573457735900045655665690517797280666732780030171712864961531623060353548802466577910774711998056232872212688464691036260746751992072745518373073825852119460094113694393273456369345499434994672730920070410547163082189385645712866100999708173472360864669110044660667614583576570496399103026286828660558854973376227247132815728164629722965145778698957093136175449225024685874279280018547740')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,6,'1816120.848909727306817960620941575637231136442992819290405125420545200026620306446043740992108329883383706060582482495616151605111275635501481354526017831484915013545483361715432312183101964395505340188909970344423950565285639911521082834494088840596716495422427543520536844348040681236845850482165744696068209384509064196671206362539077218412355776790921130042376467606683622970728503408501481791356294886150690067651815776445750760428874351556866105285911902433352126498951242195408782804314174041618879250740246352525074791310920062276490422853700893340860452528740673590486626464460321410814395342850270921486724297414692313177440726749004398703147904603937755702369682956482832074779404350351752662820773690162594400557957241676636030332988289683112176900913522668426137377289536793838959751008646843014106876005')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,7,'-818934540071760498.60459975022373923760152136399214017262844141729040109985386964272131706381326192223266583769046276181472898406504104649192224392653722107164485675679551050629376558940966195135841284978096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,7,'818934540071930985.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,7,'-69808760806266041400340.70700818693892852138813934414383886494691670042143650609934777814995087699409404201920249076407981012095999320858479644760715204999741683528746097757549835956359129287002171391961763797857794730120426599135099619822532290339000466211195776337667123320942107370731349851576864242697412616810236323676004067839744992733887503405311090677026008324895177587064547630828026123718296429295638934384446325302964896473296829265805737112709269803814942537657996725913938408781715328945194948010970')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,7,'-.000000000000104090609479936344103210175655521317012597986331111866307697262848964666360492361638117930801818899121383806224630563676018240181412174154250663423230239912527388431901852952893943812666142740182651125508583527237123596541789628675379232473721293630968882045044077795828674268595016625198802475186587918019739056755398151182369187670251750080227679555002307777300392769289647975058449905106584837938556260801229545589323224752038795423164214112897202147313792076165011373139219134850954217300915326944185918762838321705825423789073869940092569940135329697980600082436317664012683589681419530904283106912171330819469065141821685734295058255484933744156717782754922568796985634397878149984177882018261742637463462647452140104146195353696596211873925359508622779658904411330975862442989437933211964821')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,8,'8497071467.03603749330791582407836434318377133169438097066269854720538319012928851657498035372443556191720308219530866834905045144302106406146277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,8,'-8496900980.24523699375539429928140707116805167695126380524350074691312247557192264420150419818976723729812860582476663647913254442686555191453722107164485675679551050629376558940966195135841284978096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,8,'724311956372274.0135050255361637906710330203036651743488213007179039756514944640108625580172737414192938789413338554327986697518463087452612658955180411327002900979574347739956600177846996063741787205122007268468674386396156638261992679442768654367111433834151087792255469957061758837789341439211010331332174981459471333376067541234901538285101103690622656631026001337239036711179989456674399137008584021283568040818388709554256523118702728176420022080138548890713013682480239784198421500241995499841675772793497485550923152267616622892846304530712344886979674416990935007952941652591352603797627920865960622077762568060903908151958000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,8,'.000010032191786198542900505683562217892317481076466949299850809276743457759270150820565375820388277409258249926696079166209409657808406245382887790534127749833677458375931047385994887406206232330491317602830654688957983804698568410728278089250379255157030886262396950539100566975000094268415749476738358914633948867977798590927055566888255636132486899287919515638902721543629183577900872078173883974905921239149419877613723476347774771230668479296621531969573505480695490386225866950545725121902534610730154727385072738079149623798073810167706094070842646222833137345669922898403368997676634709281456818189049718956207208697021706186341405575300648248555331280690778367620868775005181264547924615247991795542738868003191757946979714250339430363902549866892041102771965653407197094250270379367437342632741280710')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (1,9,'54948723.74225051983134098996071145685528795757427462111901537365053896571438476055974853245403475510333627298551845046116291696445177112567064282766115207407461565363967417615506303416694032848457927390574251904212425813072768882213388082765916956736282110801611726537663292922699021333445658549608928179155685881583228490235606377831724593358583903616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (1,9,'-54778236.95145002027881946516375418483956830283115745569981757335827825115701888818627237691936643048426179661497641859124500994829625897874508497095086558766563666622720535497438693688376602804651302002795213923698663694204683995198328880575615535181012624198813873609885725228117274934655048553507421448724831939026752650108735245933317237310133362383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (1,9,'4676749348240.390309875431213992853550297086049749814750492488995108783145961719774217441193547534210468967573344456866203963659951312519988497979489304488948342258375915152429008993288817366720647491166024151209542534474867042837694499222928509320280684557676243780452100132238968233413333851595648146954975713386711764268506890884764704949969602122157394714663532141060559896359465918874990769222345665160127552795532197771168442486088776803398878354288847069602460071745966589164282641033852314335279121191855487126430176047553895892632834940595958394834437871886013513058514896870683979585091413977173250824451205330441299000850618134248917380244749589254309567551846327349592529960432446947239714236828401206843011440433362544797025114476612133622499094287321570559088587999417440664282418005102546343020409520421747216')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (1,9,'.001553736563217204408368240901181555234014339476186598647410198373122572205209277343865051610898136462487966496673511261433286284257044548634547569923035899634327495195510767312478861719221916387940027268721306540663743713345337497285507595251328382906111997524508729275471287648008479480805967901972481289402930660848950039779707354469389216931774094174326513465502460315792834278614886136688161679443873815113442220055827192996984074129528034845339130162104547166079591654852164993577408422015514100323825529286511720963047269483211930770803479398243069649400360625259869765138545866815758888670363356947311319523139395191102286838888146829667276592755438606664644975648828848738708349790766370694194763606850690923803984129157519048493985198591771429264967247245289970213262206709011468289046840862597010969')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,0,'-994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,0,'-994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,1,'-994877526002806872754342148663997.64812998474240514147207095573950146764154822009863493316394610578375247334825932838513167168342610420582834742950389452212867974756590355021495169819086060202117180229196935525386766373096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,1,'-994877526002806872754342148834484.43893048429492666626902822775522112238466538551783273345620682034111834572173548391979999630250058057637037929942180153828419189449146140692523818459983958943364062347264545253704196416903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,1,'-84806738323879544552397401815149740513.8505875535743013876823142649666132764556588225959336097903898464616542203793600590311980154402068027051522932586050753865288419084437796768749509032177577451738712965496693249429231838833655025794915864261585848007162358912070811805298210095333433397862313304655108809804359760907473898420016370058274978588765092161529583480924554820756527238472641797198545539410039895140087686344382628317530286295498797849942258314364503000942821309916954725689781458590617068629906894951122301020797266469357701283289275708774593896770378558232444454118891917258610753077932026885574920166837998049508644891327208474213193224700658584824407382455480657734911543930195324144216374573825')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,1,'-11671021799770914903865020509.301561107153561058074179843542446420696517132461554451075945807420674211966679216615407057626541711186781735967334896541890595771915856783008831770988426637435694856170266346306640678577376310547806764332837625966429200996250687908930748245035578756314083608655163891041399241377675534416837659335561005203219889972336214863417948542956735403991871098341470996860469878038840964359144637726669728240650066795729910649523281308716277906908340457162235831526838308777581569974551673352306004330423694524256415657620427590352277556907586751621496248973165690360552007637570957980230685679819820147036159174977086193494572117089582758015847544798464543446227632367713941117001423437766840744488426025388612316819120660814681298624293065972395923651314350558006567251033289878238407790871784676348196394482477767774')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,2,'-1989755052005613745508684297498482.08706046903733180774109918349472259002621360561646766662015292612487081906999481230493166798592668478219872672892569606041287164205736495714018988279070019145481242576461480779090962790')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,2,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,2,'989781291745465665243281323944996915810556285052564220274237162526.1617859904902612197894543199389468971679632139059029459520163585971122643624316475417489000981872666677202334180945949860058384424993911721081868337499377890298636260338063268639283065887210924895929155083478140340889209440025415565915964293989840603863813531303253038823629712989041722072693449251635519992922148998556112923060331794396659338057474019846675262291146025')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,2,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,3,'-60303024366845387174536638750234506721.2758014749274942132576365116182462208228193753118527959000939070820507877345194783035668195137119648748792386548310474079340204536236936213411512867171486174240518914767934028451971067161683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,3,'60301034611793381560791130065937008239.1887410058901624055165373281235236307966057696953851292799409809571799686645246659986351515277852800926805119259053513475211488115663286642009614039264484259692394657121785950542874788161683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,3,'59993133911282372667149627097418449223835595194300848703012380022306762.154418449236691515146061305380465061074531890529497774836941002526095632166401249277270674802626154774328055399254982998368191676630276960361274433270795772477146870294928855773172789856196219950097157391050424577381777627004101100872747943673762087675405200265837631665464736842180920496158545887039337399558993437594084473932658319914390365451919627956823980800124880375978662052111797881386060353490432427832058851094210488804887183034572364751639107535041308434932952695103493677600969712634416241541391613699710826602011076372592299807609658979777598672141389319098817824624950794758296679318319299142035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,3,'.000016498242835741013709859217005931279826178662180173096568520102488480129191427472581644597420895622947234184547373944996197105916093347103336318249582032230903680989710242610024298937774441533502282949127537125997753002819456724709929935850697744632904111143787011103837624936502324835260843148595669524694347566421203164808527739207590986975750648112133699756328511947175496694080071202064255118777680958612315513441989609682655431197367166056616661045712867189326408877133865572680407329449150282415810958772293869902662884761202424695742898573841869524376684740249281181605067345203479719345061595919652192297531638467223956758315591610733251562492794891852151639643060692698365496208796638230566761231611376199140556503620471090364900792180618741355091923808605890415081571900697282725022629812561702118')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,4,'-994877520673428596810678826533995.79421257464236160757218576989993781147390382997132644206786872350652200243563770552469933194637146474528320738725486418004701192337175478117026439697031462361180324038544450723753402846519731908503949116978812841497201119103409772457270340059605961197538918709309004130294868847110690336360689446090125918336908930881873778405661757289469281163974774492810850778950071063044769131228124355961427111369335109426492177657001035045332525699055300921341010989742896430768506909949340276549373661076950964959025967328861569387160956730002517417236732463510495205173523163676450203614971844583064927040066684531931069310935516821795449174271052747559395296525950219449541557191520903507653089998307641491381797101485104546410643')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,4,'-994877531332185148698005470964486.29284789439497020016891341359478477855230977564514122455228420261834881663435710678023233603955522003691551934167083188036585971868561017596992548582038556784300918537917030055337559943480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,4,'-5302078674303935968062773235453828254014583744527466365136.236414807326868572353809920518232561005161225922028750078608989965741402418802255050636954800114792425419735155504035469350521800895164087027043476055514245942961100610551646034472084954313670284875310691807937254054948742125729353864014122131419164449567115006621212424805182687707372956385102095255735458593389920872596796806885847543910224476727171570873698525606016990229936284811067826588349092841322512643043008589065847223683467371925773023109720951609815041012521485326120380123169545818055967455575736140138663815073081494226676896278654189873597341203197903408668523514375373841493189836809506003729379742035629498519683885268256481104619815130659628225053833297766479068686119691010593208135616363994230674606991733148502293102108193522604968743948323130517040609601859735899914987426089053869350663')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,4,'-186677971.517539861245390308778107722315862721823627804195528485535806132067679059453022306691281662574091826898288146790399178357754908901382135796783067563944022498807930452234032896817601590728156392188660701355670595952594500812333935362955625137944589981298793332621503315902294100258945995827423279442031218510259915311555745581797315793010762585658196457363672908315687720174516274528662385172326028870945153551774300419158584379602045442200523311437013776079979639415633358878239012925000523542907592866797199229858272764668664323316251874027468128770456766875866492004650352654523634716923150212263912760225390093339729495231675627059805624175587380165509763048913150826017167286786277908970769297060278191518730887417202276531151575412404467497036737825989088867451153485938272367300939127313445244028528055624')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,5,'-994877526002806872754342801504871.47809095279915423939648794226185974985600242391612965412218049794216637114648812993201775787765690351615479957141288239552036371132381627958673244764559862836085530643408020551049895730005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,5,'-994877526002806872754341495993610.60896951623817756834461124123286284017021118170033801249797242818270444792350668237291391010826978126604392715751281366489250793073354867755345743514510156309395711933053460228041067059994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,5,'649411906691138274293985410502516861224852.2323455192714410716272307781034189160865613770320102043319541634113746032638191509585045862973333645830298922352816245477556264222094036953195419857712804755170632292914187367964994214922001758104594052499795564860466055599417895782179851297585155129541589802249540436678824225950907268084876110445460948679383611117263673106597132046331719468816839434908155684738864149955129235751738204036443603521478609787295079710078973503970964790273461142497259987849074597264522099648376356902360358310245001183020992360260836105404118742418040965190000718736837422434593694808973939805954329718232693154128543253581495885789333274488461716809104532693754070810202831113003978085636579574171344721710232931261731022478029314435363413498991740750878099825781577297965642009156858479681236085226911858782115')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,5,'1524119409495532727030986.638577103454261465522025182901477334004986357902177024959076085490119358611626688213654669281670407680244740174673394111775678935383154847014211641601227316639834450258566053805263858706381900273201146454036688771735398324537667996974210741719621449948660517037619359095556637235980122706739013220201060795557114248610410815988952748489854367480813823114296393315170621979351958306734282429929421779129764262568942699813166237466796852578307944635545174715298176546980314973426586923195248536376403319094417073026382024413817222396402299695717290716014320518777088811749776114378145110676170242861393274018655137797545194817703831240390631723050378397773341835222892981773205967439339460305257986693600088957772328044922955990976285151896366292514128607363007421484320868718566256882080399264346243272770200676')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,6,'-994877526002806872754342148749240.99659316232359475297606895243958507460511031229368344962653674268847910587702140353344168594152240599109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,6,'-994877526002806872754342148749241.09046730671373705476503023105513751542110329332278421699361618343639171319297340877148998204440427879109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,6,'-46696638263247522384986521136500.479312417066793299922708112595886608370451213741279484136907754744903470430131032928908162742687359367826808123516519335458861613010646992354378739165872253762686683966945711430182491860196341344982195078000259063231136011430995647812149294224699587849791008794261026932467933475782780')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,6,'-21195986018643887410662481595901800.342199657994285865579781485758715114242459388977583220756870314514884887803267837816669111279417861218648323488364513921592045485003563036021370174294475403630933854767386355037781881144701319212711655881277140183173924089814927297045029394618083349813549439341772734606115369911736164723942330187830605893993276674913563980890459604886172701331890746621222114280438198802989678877404376001410627722336243835841751052795437979198996482216031399073597399901975686733315751292369326904428230195579137225651689857057115970784985439417129044974524632220457594191305254649113470116960582543784928547885740020507755033347968928034294570497118410435615856155184563329718831512839630769097935523279881940380220955993456451396417879773380305142918906742431812580562496634831735169817705720949712410595406012323294829461')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,7,'-994877526002807691688882220594983.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,7,'-994877526002806053819802076903499.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,7,'814739569184924399102711674444306584731316176345067.39834031417849342571224916231092924046722938910652929295271097903377854123984307101079073134405782275535446337229706620713104545454319555885847481531722101704765783025789147453570970090')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,7,'1214843772391778.127361407585140553741220126410637250571020684739034685508176000812180032686291124045768750332493129822580347351032145964983629059968936201592138368806173099130176852606440296388856520582890650384142745607345709716826703676313341953999327129144154152914234659001555055379537780751567782847296067128932113870102563522810980359433259696591977617184951677390423898232135100000764121508662830515405980450892222598485287609657612482190264517684867291774820716746063133066053446257163185646067618679478975882247893469409405379034723543061767846895135644429012095930584952053545016706315299076691015196261253199176743281648949731423486208098120903720124071047872917636988241710583721537777321338769039241700203546247947405745989053846970910400831817998342969657501678430211657755864160072525313889413731419647001970593')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,8,'-994877526002806872754333651763017.40289299098701084219066388457144979069028441485513418625082363021182982914675513019536443438529749838106171095037135009526312783302868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,8,'-994877526002806872754350645735464.68416747805032096555043529892327279933592919076133348036932929591304098992323968210956723360062918640113701577855434596514974380902868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,8,'-8453460632655529853033389979024265783461224.3195241893307807116624750282852146303290708492834695194274289713076935297734670940696121761483641291930931061232942894577813178566088927221374036301485916497770984757492912292002695944367308880163698595015497307574177176409203214324418237020500352652934909632442547242092296504047310806151851207329042221920888326000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,8,'-117085929036205907700251.219065234073336548829793284434494573185718678644093751558890746941383215425734761534822966779511801033216479269605150574332107020180872343673157350081102818832254463561564431056604957702984438484261858890324442581609284935850435611342611117035589511568432559140282381526487115307554496353616929034919886387903446436924514812698404129456069856633480965357915969548215985452939172313964007318881987188665231550330515412104367728617802960792164260429920719961650164518261501571220901151359208484337831586551714193024143212288426326740373893030225940355268499071669300664200888186064836443459131985786957267268845966279576380786883200277187591448294590370986026461176853573555996139940001165172158855197070946665074838360933025833716166930231164328918316437195201546383664484983447934244744303265471044295601062898')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (2,9,'-994877526002806872754342093885760.69667996446358567630831677089993316481039076439881735980566785462673358516198695146576524119916430759085192883825888457383242076882081857926408611052522393579396644731758241837010163568445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (2,9,'-994877526002806872754342203612721.39038050457374613143278241259478942521582284121765030681448507149813723390800786083916642678676237719134679789066681148658045087323654637787610377226547625566084597844703238942080799221554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (2,9,'-54582443595378013373024060492546032003692.4875677735896411267274323339692558458420972958075073392126734000341372096298914875892612108329218081214550050039133117695428196702128258481789017059073444323729583900855712795086447886053552786449313809589992185978097430132940882612817775035217244553616977182049775786664446683332098226841743818600819221587510039430478859412452506872131851471967577741190323481953867845129745440745526578327709351120432530702446916035797432129052518980799424635406993848916727957825620638983706180841278402925286540375225365057191075559133035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (2,9,'-18133693300409132895168796.074616314168631402221003009151140409826855230810646429042722071403306917323628118792142878282108022292754325022530103525285999179488507720688317761243448898240836430183645778132937666952111134601563043980164547020295727057908447220163534134835130866457657964382363853570827467081988390359191484798677813656413640874450449802233520570178139244957518604566383671867773821069602665918688868868894979351219381089954104823746091972754649316823714354000113723793845707472924569647945844436702275724514171940901057842455729977729388911537391920702753167125695758365521631000334183494148229356487592577177344247694925635113222720411958290166668659311154664393442690740373285505786584987609789805525300762074682544164213490532272590665630428583216403362629445153016404037983825555019274338559686335405719430737559715778')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,0,'-60302029489319384367663884408085757480.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,0,'-60302029489319384367663884408085757480.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,1,'-60302029489319384367663884408085672236.83687099063256754698860828386302509843815398979402006244388708674093244201278399438376682321121138429850885935540924586964982855913223221441591310211730902799041126800414795030815514254713522692405212716783388698431088814919226444677188004928663343696636297536500970117716818423689175692808344185016908913828066250587407384563498516598672584120143890364303296142744031320345312431817858545326010704685255237541162931904446804064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,1,'-60302029489319384367663884408085842723.62767149018508907178556555587874475318127115521321786273614780129829831438626014991843514783028586066905089122532715288580534070605779007112619958852628801540288008918482404759132944298520148080184250697297150817299173701934285646867489426483932830299434150464278537812298564822479785688909850915447762856384542090714278516461905872647123125352735037721325154184406043613668806975385533851732090363979459292404685190942209855935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,1,'-5140349743195574373979577554212527512597024.162480344833040409158673429491690439298506850052285119390701002577176786023622062742050099464897084793357329597395417632908812044304066963549928478520702505283307379218587635434673128958824348493758429380623577527186462464399974242800361134191519694694139153279582776168995426125926314513926640766117733774558011741611075336271613675760116784769700605008122422944290652448956922432960815546502965310676913079866511016221573557684245901002643719965652152439520727383305120298495304784052489867651462175349450610643411043707261107569691076730261762793560088893354750383257372118118753366377402045596735023445172252225346164608897913115394905485106225627590643805003075069931177395059698550161546962768768895596088478488887530518018212441345360153523733317120037436403475909117998647781920105313938836144009539683')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,1,'-707409990019504668223608170643582.082425157530076679823177950190511141917761066423266390864536360056345386873500583953954967225431526056199231768143978526582904071798714789552447782850723926323452633811653766838064983821149041415149067433978085927687765773012158659685363079191901396502099956189371719135315616249471739677995520904113581848295732911534266040260836644379296158092198514963023001686666281725991605685524015227112003429486755206848316731257322742428352116058878710728614841247581716185886403744830796740424927494009978599974431617064012221450054532987372285996679180090592706458366967534834069977644215413076082570497451654516268857039718730203921980307096740864747006176117071983875364434497517026142488015705391255750729200497229031250705777282987863242056223584453312226818451807347197583925624299372040413470456696588043062815')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,2,'-60303024366845387174536638750234506721.2758014749274942132576365116182462208228193753118527959000939070820507877345194783035668195137119648748792386548310474079340204536236936213411512867171486174240518914767934028451971067161683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,2,'-60301034611793381560791130065937008239.1887410058901624055165373281235236307966057696953851292799409809571799686645246659986351515277852800926805119259053513475211488115663286642009614039264484259692394657121785950542874788161683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,2,'59993133911282372667149627097418449223835595194300848703012380022306762.154418449236691515146061305380465061074531890529497774836941002526095632166401249277270674802626154774328055399254982998368191676630276960361274433270795772477146870294928855773172789856196219950097157391050424577381777627004101100872747943673762087675405200265837631665464736842180920496158545887039337399558993437594084473932658319914390365451919627956823980800124880375978662052111797881386060353490432427832058851094210488804887183034572364751639107535041308434932952695103493677600969712634416241541391613699710826602011076372592299807609658979777598672141389319098817824624950794758296679318319299142035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,2,'60612.515523995516156897729403721504966784736064970538891936016753206905080265887046037910122269129293912171105589512464185386239562077778499936203155976336284324712221812806801062157592930664021782540155687632208890794166119782594464410498356083266087045927038416810562596141871858142749062925965665039981381277808608946877852933015970874447235220989360704166270479475802673572039541121473138382812420076284458769543418652217394352637294823914346726065145538710933281768776286965107974980550163605068693568717671571780028113969794125200592691656568731359981803586296135840575095063824258761205175762907549288801963550628589530419118771779395037240198270853609924445368393952404606326559485235840170339343865253618184271158932135392539396160392488927771488269959497352568205940636180870805982484030168838833607478593')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,3,'-120604058978638768735327768816171514960.4645424808176566187741738397417698516194251450072379251800348880392307563990441443022019710414972449675597505807363987554551692651900222855421126906435970433932913571889719978994845855323367077258946341408053951573026251685351209154467743141259617399607044800077950793001538324616896138171819510046467177021260834130168590102540438924579570947287892808562845032715007493401411940720339239705810106866471452994584812284665666')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,3,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,3,'3636334760530744652235488357607657374520053530993537920755375319352615385278.023608692512217812784472508939511216316773023870624171279878340621219698109986095090336065266376220109007718694455520948311677863167090936408887147442375455695868593092154861636486745490748828207939155392396090682312136290864359484540126174821846208064763823279315343506148025281475729723686566174395516982893064510403581479746673749128344955124070957545815390178764940816628194640888255387443237798761377617383817511745005525149990207764725040109364671749403389999498572538135588695345112358160274671918953118753964073105250116426665508214894805722798842017943220605600452911496071424281587802689830031742105619630787641205011894680546049982654601956546154572720177337696285354350903475239411654436042931409507429892682706228354459580412759920815932840348933425754970917910500027837428631661182510071352138858')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,3,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,4,'-60302029489314054989387940744763542234.98295358053252401308872309802346144227050959966671157134780970446370197110016237152333448347415674483796371931316021552756816073493808344537122580089676304958104270609762310229182150728136567294798680824019082599362332377530165818229609055765904048195574142709698758095302560470195171027219786996322461803443213101532716728918363951912367135900414238535625075942525108530051828834829820554490477645701692374399416239080329365045332525699055300921341010989742896430768506909949340276549373661076950964959025967328861569387160956730002517417236732463510495205173523163676450203614971844583064927040066684531931069310935516821795449174271052747559395296525950219449541557191520903507653089998307641491381797101485104546410643')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,4,'-60302029489324713745939828071407972725.48158890028513260568545074171830840934891554534052635383222518357552878529888177277886748756734050012959603126757618322788700853025193884017088688974683399381224865109134889560766307825097103477790782590061456916367930139323346273315068375646692125800496305291080749834712822775973790354498408104142209966769395239768969172107040437333428573572464689550003374384624966403962290572373571842567623422963022155546431883766327294954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,4,'-321372325955692885069615337209737469749246561535004445508427591.072860243358366933071485495726715620133686420023451450292996945184959542770492705998350644739298629407567812798540119555932604687814429669592481327761428042980782672136901602006622227365754036664912989085940235439697789102358431343119457114603363936544931303133371137532006899162833369543279729021228901466728220729625107362063321334489394782322741444425117731922691457341543446841167138481424319752111748042440994701571955325673470021626946676976482516292402239416632497972073915818846704053624707839813514171497746804751780741682011937606462260710753056669269928580460921188286249923152921382198282201761171043384698319895970192114563900025573490442674225227682235790590616707857188385274186584856872573669591460447105688151281208238908470285147895678001948902280493477604361481216667716971590499226735103039')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,4,'-11315021446594.877643290091276308982961654569173523687151347727612592478433578066762912541361898899908505997444632820107356713116459078630334224890355872486337973552333755378190316811715776951317058334754704988120078733912131691682869448731717816749620336196719541702138949084375907248656748314375183301372633028246109596775255074617515860012417935744433243071057057560464360663978361945666099558526069794464437818864063206829678640156992474597480916575712563493776637239091589972373682399519931569163592317107392231951775499293572134702843085474656152913351183535194499521618027894129537558509428098859715020703897463518891082573242502356303078754574312965093639182648263511466558336912294702019648266054331227425119096294871153811412169351624751542166779635702042223762951850816568617453355571302500885410532963789364822647')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,5,'-60302029489319384367663884408738513110.66683195868931664491302527038538338065260819361151478340212147889934633981101279593065290940544218360883531149731823374304151252289014494378769385157204705433009477214625880056478643611622410268943757215673170753460135411513114716313801477916713433956086133878890802448531292334570886746283905390661877220497842493537338035961123751393889400517474762491881277080205381424363695095196058838349029211365212855028824622924678684631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,5,'-60302029489319384367663884407433001849.79771052212833997386114856935638647096681695139572314177791340913988441658803134837154906163605506135872443908341816501241365674229987734175441883907154998906319658504271319733469814941611260503645706198407368762270127105340397375230875953495882740039984314121888705481484090911598074635434289709802794549714765847764347865064280637851906308955404165593747173246944693509650424312007333558709071857299501674917023499921977975368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,5,'39362489275784146262776411377472433635883331946.794473520543457442955620133347015506556162839462623905489255080102447195050109095701660164272430316804466254467810714209179752718730906325952685817112992943656292503112803950215110778476301809440329937774061163668461957943313261962261081942055908935814323069621279128270849852239727888939033546870208376394878842958202403235309372240005941467570230067124830916866857395233038346727879951123599893174252558078732888910139309038957525961212820831321973219557165558911222848692996406741318948607549825343491479728117062814094258484536263158005174429922237853707635743736923521032098496725445243775790161216159399180889906705265012270270348146530113428221072591696851818281866095288773371414866822270689959827332258348570976075184933893434327278299820594014788148344260948638847457822697682605612771344335201258128')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,5,'92380711368470856513514428781.033155715252174277753317877861994356621252232374386687048394529670637693505779282500567256835271428113529026462111032257747830329068594622091282098767000694818101994264352932243278144124687156236926607422077479412495979777588932692081795130282128890441931602671468684153168580234070246201722180460130467506344034452687371838907269162119534950946217165384250603250357360223255177692065141037447374172264943732616165429783010079281851748804739433821308362193703012671569249508710820679009084891198169587484117171861141580870066764275087111843275285564262902405980617569581840831518012986031156042600391943605532635833608358301306456966765206853910579231447150839538731157206153540873916893579943906851149770881336811951119112558311734171557608362620988555075663589827484854016702489324791126228380209309587206299')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,6,'-60302029489319384367663884408085757480.1853341682137571584926062805631087054017160819890685789064777236456590745415460695320768374693076860837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,6,'-60302029489319384367663884408085757480.2792083126038994602815675591786611462177090630181693462735571643935716818574980747701251335721895588837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,6,'-2830400711649493468815157129316992649.40542786074520931471973065281957756940496588853021620372179463538053123396140685749478530925306163968207226329985017644835203709485594362663495728106061878665324856417118064730721101615473194292620972173690618491026470353143141125614124440035267592258385099934706896692953497971326605145704135723011753705907329979207428661473172503098296622281647255008204864404416199384701720347319806375450632245634238172654086373193251877533131784268854289406126119630708578053354762596511353053106459297339360827562281168219966099848212')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,6,'-1284742031601444539630782308463065726620.121021225455596762466053504195700643301310745151565435123335541550963124666304408503436412726848834604336377169205828654564329888653766451656774534718709065521243637375270687684572524302099749018591530352756390467862377335526634920857924031482455373589053524922608255779040656019538392173139295812160325688504210040741075388404155144782519528791757450256668977268409265390016721724966592135644698341754332845002439113523127047593325646484654291494607100188094186116001064043796216982681807318598789324900462932294782971663150070521334398542559480877366424630693734132836518604260869235580641521264976411493166969530737254118968281271908306432918913600567757535151861421384835424322504855607676315840963696944683182767935565256136130185809101891760917733694553800748568697830680328155128016670099315391685422333')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,7,'-60302029489319384368482818948157603222.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,7,'-60302029489319384366844949868013911738.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,7,'49383414785234649002982046297226894664526726187218771083.0993243619030008310875293647868815940421844461627295157812843657782639833900543200310573708100000958929315945039020410482966753145208427035917753919085618457760620513481628641658765820294863970581642745379331727722585319163262763708386199720411053619449096019862596221607526610103408936214184850115071874430846697061554769773328338028749631552202705583855831155461651414320570061181212214810086436100771547030013079997847086')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,7,'73634737013325927185.787791148221519354461791539553527545166847382784629235192342551464898036004011575416717008403527685470842765455409054592207142526523023201841973047779202013398235864494503216973882479116841765663948294836180515686647139678530220909072497288527276378202532400736141014848907023234659020093073127450778982904578906877634654521825977382116752537063128793631412296206704078569268566614023846282524151679028060869175439188773864994186109445961525301841201265289707928211114515861536069733921800160245586536759625418951427346236213019358749196674633237197452976517130405065120577692737021174118093373953642724512531935525024447977867020930500433287279183436509990047372809400167546185096048971157700858970777301410692908939206693154161335335755844997198191427289546263182822280127912118140820265025555165337881999926')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,8,'-60302029489319384367663884399588771256.5916339968771732477072012126949734214868901845505193155307646111690097978112797961939995859130827784737422228762767014427842766445950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,8,'-60302029489319384367663884416582743703.8729084839404833710669726270467964301325349604567186096492702768702209585877643481082023851284144664938175277044596973126708926205950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,8,'-512385513828318260570283740065493064477880918352.732624553690077857674083796435724202494963885926573907185100543184828131859183999195040110586155435203949963570735841632689374488877298209082579317039061893012560130258753218955057387206477423088065663401594359617882154814262843273526859406265633827109554791772242178864873774889091687515990672487380368975556580539271333144212685871370972163560839446696514092637412587953506052848750866803569213269271165856310101244342151576488190595936869490659700946174362872797854591188391982770203203644172999264143929484089237665313698600170041324566984832357000400')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,8,'-7096872691348467943606706217.907270287823269424282176534343841939501231816905820949045946136373255017076943323578903040918266385724756894003692978391468202345397178445216069294845721607024056189567609414049207292919519881725733381453217071918292453682942046440563446278374996563501512335133749731529362537349288419883140401056747081065947774593869673146309163791076953204291951821124894409171722911526435445719071769008713367057971351892550570642991097981458696464929009464411568672010548002196406312721789582428747564855324072212842315229302959908665089850886951261233852165624100634055045684536311382452553544676139507899503993644452161529145849579200003677255968757773363970434791501820320494192909660871475590637419913907191608957830524390049664686282439567943053924245852983990958276537000732363895444894582579142752920882750130052682')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (3,9,'-60302029489319384367663884408030893999.8854209703537480818248540990234567956069965340942024890856088355839135538265116174644003927269495876835324407641642359213535695803871472434650475144516723617632059130297610134243891145006222068960999879308472500422640481972089756410157246974765071949782242392661524488959954348903412713930092273629207697480131360047867213863018127928853922173643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (3,9,'-60302029489319384367663884408140620960.5791215104639085369493197407183130560124286109130354360944260524553172025725325268378015783145476572840273098165721628341015996848028750420770651761919246816300854441592109844750954710317145008297946462099581451150385769713261452744310496166494545449824802407416426304041583975713483424241727236417259479541129474082301376239522310995725648773643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (3,9,'-3308379209762459471107480259839508279070920437.883503980178028214343751083865562028455061662673132221930429904398963590401793045470444301883103141901787466923883803951815572606105617157736442670792467625964359169270739534412932791178258858918086886061702512427989129732248215348301444245772127142869263635282888226326427510486246184233225114523636171202034558843515894542952126988613018789833835507734620046994907453602573865012044120483116345444810078666601100257620969379968264504287700045822481492526688635364586344704730579892342786173395802035361824932075736340405960099542224953439044947229246847140957298841482874444906129049023002897135347878048572628834749795298712449864571996898774444932083319581439741625832405434317985988163261591679157437224404970927012111196724239860528859217322132733404472897289')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (3,9,'-1099128766678422054524173986658.839339966689456265703816212189145237878729886466041806078542573981227645802109969871638687985985845489422516004202630099080709709893022100481258818112345013009059633421290241583864468453396484606925071369550998772875840640325758308835852391176503689677263605949075815552026731067384737231681068134099746550363063940273625924224721503126912810251607546172009765059506591787282558727077669973711491157840340631805422942099954647016059576777054339588421998882440726473698513560202030309804089250300097589174314677765341104767702983421063649104691583044460507666600260994707192787133590502137391691330098102374713996115782701417107878938473243874299874872852713499024851414757892169376458916467621226859152075901273014182163212783658933754507272478777304254191033562324994395916168496097385872331012258027431094381')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,0,'5329378275943663322215245.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,0,'5329378275943663322215245.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,1,'5329378275943663322300488.64471790965256505869684245785528331091076155554650629138833809683459634328609777839510066435612911583108717191216693735823717997111970662575497378762952496582183738308720094529950793570383580785385569873278068217936841324404119828637880370718028782103860007754579779716996004352284614661690063919125301052941328989181561787543541920734755989452320799185700078241880935083616978140555713297241612718277766918005268951861880490889884082730841740604517529391011862694381726143520658746305661338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,1,'5329378275943663322130001.85391741010004353389988518583956365616764439012730849109607738227723047091262162286043233973705463946054514004224903034208166782419414876904468730122054597840936856190652484801633363526576955397606531892764306099068756437389060626447578949162759295501062154826802212022414257953494004665588557188694447110384853149054690655645134564686305448219729651828678220200218922790293483596988037990835533058983562863141746692824117439019450865871047657552800448629502344444081260036580660700595591338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,1,'454294299613767152878025320780.534199313974295807138790763501115780294529340799108297697573066187975311338382917022391830256203305238757334106943821060545424417350991354829668286194840925251162479496893943917530660694097932059166013476064988623431110002057735318529554555260199417935495388243829261809007709919225000608711536928171687251088217591210419208480251102484043683131687013687838713055660405381318396419588727500715930145098362997142075433472039319292466570912777345841400769387321465602989947078951135489852486382469990409873227894248208197179481868230244584527040573428134962626267135732247029762468417273891700661832893497067151409134724061246612631376075173287264787886064622106855886785805818642123776489793586531950438285720668411465570116161790343538663297713926678759640594912243360541590368666922379919514826022141331900181')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,1,'62519544780217042176.800424689664850775296526267109332647921183817056683200043718160298562843864918741523494444361916531159341418970534833628106062976341639276761669219281771109561175175033739624472497927501467465456946098280878993371659461957361369508794842102784763955539708800574418468150309301129490186416766691183270872711413796386178009615777589066235359283212636467980113350635181915492452697347977967985810294150853782607014649150457138118264698071689065469752702524632313088938504181640435324554007553994564705401249228914199354821595855823113730697333390936834057091883654016371107974899726642500486005445063301647520527084320363513388355471718583708935211830796440056542408492723718088396437530207347815505844074508948817594746824098278470533148171941442049323578854023683167934569551595335539887777638716651319134577441')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,2,'-994877520673428596810678826533995.79421257464236160757218576989993781147390382997132644206786872350652200243563770552469933194637146474528320738725486418004701192337175478117026439697031462361180324038544450723753402846519731908503949116978812841497201119103409772457270340059605961197538918709309004130294868847110690336360689446090125918336908930881873778405661757289469281163974774492810850778950071063044769131228124355961427111369335109426492177657001035045332525699055300921341010989742896430768506909949340276549373661076950964959025967328861569387160956730002517417236732463510495205173523163676450203614971844583064927040066684531931069310935516821795449174271052747559395296525950219449541557191520903507653089998307641491381797101485104546410643')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,2,'994877531332185148698005470964486.29284789439497020016891341359478477855230977564514122455228420261834881663435710678023233603955522003691551934167083188036585971868561017596992548582038556784300918537917030055337559943480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,2,'-5302078674303935968062773235453828254014583744527466365136.236414807326868572353809920518232561005161225922028750078608989965741402418802255050636954800114792425419735155504035469350521800895164087027043476055514245942961100610551646034472084954313670284875310691807937254054948742125729353864014122131419164449567115006621212424805182687707372956385102095255735458593389920872596796806885847543910224476727171570873698525606016990229936284811067826588349092841322512643043008589065847223683467371925773023109720951609815041012521485326120380123169545818055967455575736140138663815073081494226676896278654189873597341203197903408668523514375373841493189836809506003729379742035629498519683885268256481104619815130659628225053833297766479068686119691010593208135616363994230674606991733148502293102108193522604968743948323130517040609601859735899914987426089053869350663')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,2,'-.000000005356818439105666775800262590702859770599410113087721172791624002387236505438218124867814437523686300450045582100868990117124343222534568799037421944272316277130975314766456260710406160143182498931595199129228915695802952695510723443157825968340043198200740606202264287904755124946591110599335909404657109057432686191440989434662797205973563889238804413861126260401987949920244286377128599413927273444061572120561496904543200956508673923547626768641271397088562966176629018606103663605145666976048261236691866387601532424530473754175270500777679603569715192364542901360534980926452487443629100484491344001509360344122933911316486556042277769848194790964257060927912344609376571637126617813506411190014141992988288983968823792971270853369317867326071952900448455162898476163801382836761898292684175721846')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,3,'-60302029489314054989387940744763542234.98295358053252401308872309802346144227050959966671157134780970446370197110016237152333448347415674483796371931316021552756816073493808344537122580089676304958104270609762310229182150728136567294798680824019082599362332377530165818229609055765904048195574142709698758095302560470195171027219786996322461803443213101532716728918363951912367135900414238535625075942525108530051828834829820554490477645701692374399416239080329365045332525699055300921341010989742896430768506909949340276549373661076950964959025967328861569387160956730002517417236732463510495205173523163676450203614971844583064927040066684531931069310935516821795449174271052747559395296525950219449541557191520903507653089998307641491381797101485104546410643')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,3,'60302029489324713745939828071407972725.48158890028513260568545074171830840934891554534052635383222518357552878529888177277886748756734050012959603126757618322788700853025193884017088688974683399381224865109134889560766307825097103477790782590061456916367930139323346273315068375646692125800496305291080749834712822775973790354498408104142209966769395239768969172107040437333428573572464689550003374384624966403962290572373571842567623422963022155546431883766327294954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,3,'-321372325955692885069615337209737469749246561535004445508427591.072860243358366933071485495726715620133686420023451450292996945184959542770492705998350644739298629407567812798540119555932604687814429669592481327761428042980782672136901602006622227365754036664912989085940235439697789102358431343119457114603363936544931303133371137532006899162833369543279729021228901466728220729625107362063321334489394782322741444425117731922691457341543446841167138481424319752111748042440994701571955325673470021626946676976482516292402239416632497972073915818846704053624707839813514171497746804751780741682011937606462260710753056669269928580460921188286249923152921382198282201761171043384698319895970192114563900025573490442674225227682235790590616707857188385274186584856872573669591460447105688151281208238908470285147895678001948902280493477604361481216667716971590499226735103039')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,3,'-.000000000000088378091435340426596348183959201660680284222502095357746364378698792730669202270228092348823133529449019715406417264278615046537007844589547485282959556860316942508808911542109265489435572674031608663747132688980867386885961271358592278360097086532747883342438036287136994589308551796702164612609710942175900921197001888540314760352113821737014875886635147123114456910985089625906448913621495025509697742196814421833448856595853403450682101743559369637786458968714240975228615283970739279506239628546165569688434254286341567486905374255702980370754235630955328837646999003123103831262789115646588779721625156078607919060762857866951417867378220773543985422722165221371084387943737083254760594128718841665355053236168688218864433967871311858292181233490194833547273501436630325295640020916257836404')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,4,'10658756551887326644430490.49863531975260859259672764369484696707840594567381478248441547911182681419871940125553300409318375529163231195441596770031884779531385539479966108885007094423120594499372579331584157096960536182992101766042374317005597761793180455085459319880788077604922162581381991739410262305778619327278621107819748163326182138236252443188676485421061437672050451014378298442099857873910461737543751288077145777261329781147015644685997929909334948601889398157317978020514207138462986180101319446901252677846098070081948065342276861225678086539994965165526535072979009589652953672647099592770056310833870145919866630936137861378128966356409101651457894504881209406948099561100916885616958192984693820003384717017236405797029790907178714')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,4,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,4,'28402272808100253242547006276715304015308580784958.804614276533085644370816876160290159450291717634111299841065255625515058118012211808741402904995080624675460593676923639082981788732031193774047612589113654423166826140872334380708795266307037944059108148612979119729408762532396036043629484049508789880964586236575769826806092391573178899640321403656891487586452524427223891405519836671312830183895761747460911777623703557946796784873885800089025388390522992806365773290733075927321101736155663727528284512100509273076328103465333687228713897893434161293693971954442699482857938492961830350598789444266860160794913830991304996676299650460125000959751177037694425217989910261807246272771711816326991282202653917488360776928533800529297474279497910326579608191975246060946079639658615178160271122713225105861574160788280907842327681375920919676063500116492292319')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,4,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,5,'5329378275943662669459614.81475694159581596077242547133292502869630735172901157043010370467618244548786897684821457816189831652076071977025794948484549600736179389638319303817478693948215387894509009504287664213474693208847025374388286162907794727810231557001266897729978691844410171412189947386181530441402903608214502713480332746271552746231631136145916685939539173054989927058122097304419584979598595477177513004218594211597809300517607260841648610322863666300637648662611916496850248528515936635845594390453288113296413254893687029540384176335735114863908372780241463999450547422213639667099644505472777149095004849805371205203850993689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,5,'5329378275943663974970875.68387837815679263182430217236192193838209859394480321205431177443564436871085042440731842593128543877087159218415801821547335178795206149841646805067528400474905206604863569827296492883485842974145076391654088154097803033982948898084192422150809385760511991169192044353228731864375715719064118394339415417054629392004621307042759799481522264617060523956256201137680272894311866260366238283858551565663520480629408383844349319586471282301251749494706061523663958609947049544255725056447964564549684815188261035801892684889942971676086592385285071073528462167439314005547455087297279161738865296114495425732286867689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,5,'-3478781676337858247983014311182511.567538638808357215203593479841446379226774481291286361639429856698999485760647422501864626078375852610019829111004807806660731243672830787729048847342063218718651165150612717759770504648306347926061960607388621011846314969634048226452709389995594961695723139571002939804473057725442880410434039783304583526414509590532906062732322732569475349107437896717416548237633532805602064623969799081086996320156575550896200848758685986331692388099427314008504506503745527468550106879602399030419569897808150076298414568875477195447656904373310322813412927463518325927626891046356679526447117311923853482118502868148386882363449163182892615259995945992014431502761210899772725227648729095696228388558331052524469604046072203605897109629560683446827492904111565278516043939137760721315953500281379039771826554155511347152')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,5,'-8164430956184510.184223536017248184022252663660196916321116266103608317725855237211273642694947892658721606226082017525816544904635887836163201565923338826779819876742736219975639586566502584026349778499211535661173597356253186281116862244165796632756909578140184577853088376334255860281874385669242675881761388233070861374295536603371778669602656670852115614651462552069294889723058758969660566508798011830996965570446030123780674316363670374970480994905368006454513642480180066435609577311074332150098288374616437489163254821095377348025470309665651059603665062887597814064136313866690824972464351274062540825405003954064175728198182815347642172934453828192850870808373638597839434504241236228591053696481146252072190903430582534862988719805163692697482513169856291048966811374872266165034373412719593685881972700171726777938')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,6,'5329378275943663322215245.29625473207137544719284446115519970394719946335145777492574745992986971075733570324679065009803281404581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,6,'5329378275943663322215245.20238058768123314540388318253964726313120648232235700755866801918195710344138369800874235399515094124581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,6,'250145412892811547138949.592621291590152419206270097656346630226508074074623894951308487425470437268130465956063593951784820669318897182831355375451719125809800516979013437732298382708070979871283132689492336823087794373113039154669229889503700598930220858275174342776478898670277868700384853696009897221747924643343353942154528501454689084608965009561564638167714973711022212547096732831847202912862290958304510651828842182545311077713664465815992616213663619529378061133917572474298028065850515876361609671565914027186063801852554353160801534696062207299890867876199323530337336273950892723090754719547285920090419070001019943385293110663922226230169381423410428577990604776655422105400452217085311617728003688836185608912367677734364834577573255789160419371322775733777518997638403409000055707558465286469808848200141192627396502735')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,6,'113543048739697485358574290.758354267447744932153707340542459183720907885610125346262898114677742971240785031722334497858930434531517077525413654346644836353208132641713415396062580605566225794048569430676355036264762949452090151450855446984773994337170590068740235544320694721909983307239491151139099779296496785240814600627140543144068640768857707110930453204162312973998304574796413938461971472337040811785231390930046688391955000749644938061585377150632133417156866197053052425576957646564943278156977176976876921235395711611898108821587442609611001702344783440618040704066809035404237786023075676374788819144406909313755996914145273176359246052899650387182222905558751208368173052381982668563471143298720677965028880626152749773712037769548408324298835212547215352657271696665387200792785056233953536347605130973626194099064678842085')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,7,'5329377457009123250369503.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,7,'5329379094878203394060987.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,7,'-4364411947278810125327066890819882483326918.05664098958260550284395870948992407314161088028674246708928421994893923699743452802989464864039994566042797942433140378990308345483670828497915478397481687305406460330009319949623844175096007381662809083363069100235985794575399268709260901964834244796150883807308976949196661411035264619638771824190014274817662519438658481432363824187693821267613212631153175155634316128036152465184903927860719447693468054624663668062006049759837326188252927823612718163916100588143128358998656306593393889422386501730237442526450419990376323903182669190482615734972147533221144682538647497701130447816148459762464395194383090936159579764712919396391813914821973715879062992249315474841639591907249142779103650773383644785606333916967894')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,7,'-6507697.520580964829176145824902679560705744817573189143227837387224410616222039115571544850095278317993922427931439719549137387753697989249394347047436951117850128104928719365703899136632100669607126357491484781141296021264049762417528697619931558728863308905257358126654378784709213859234056696519305650316810797382293500878834933984458810656133463638442959750083607649924453935287420620424368291770694630751828333903156364366745210911640207075765008558904788350844410055253643515389003711759818446776538393914018427075074171758415188027562645239606914126802490579848138218395145734902830046359100742374008993296019987093605275289913663224324033923096998194326249508491872193747944673057257521552387923218450155737056841633810711295424578984452176016198348344913655301417872189073133147510027427530833694019910340299')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,8,'5329378275943671819201468.88995490340795935797824952902333498786202536079000703830146057240651898748760197658486790165425772165585380839129948178510273188565692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,8,'5329378275943654825229021.60868041634464923461847811467151197921638058488380774418295490670530782671111742467066510243892603363577850356311648591521611590965692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,8,'45283653791262997781451381354094822.762732909505051438036873220502792213670540454778361182993875916509061144859281577740137081988678361247725064336120451090222456518107029158304937620179032477664627949959143233370320432203497828243297406462513350790251761540074946469824444452248386782451723637769289822576372357189700319768797708375563651655860093365309717823602754924352327588945034832436331911584742966378275504545736896430718939807674966738116698454215555860047859161126694019895490767779791933882712567492115664113775047192011252893773389940988533801360010782816196288710063568554147458866942816721046004257953642508395867837127678980002737669139369781058046396738606563716339660654364541530532834806205571191828994250708412638796240377704994928921528330863683630622922959130920715261879547446054261914770022377059156125037157979236658010950')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,8,'627208063620965.397582272040628872773601055303353339700043792111288801181637510303989399395425313995651311362368773096988861977687484912995632130587762386590996099363383976320342247076516604162469063709298438133327434461462906199160715395064249299615054970359309619951777972710299484596875999967582794277241285253106817446259313281064844416249524876385699646393555435017820686376877981018047574348711991428666249794623006175739581915209218834701034964043360823844816042368184094857692062884223864639972005010863342567608351008172649209459933114800143792514183138995700133608613158857147417653998048890116531052767737435620558349226865105888201598712435680481803901906613772821370519525404423549161696526405320391828194356063547089626322474164332505209233143121068245585662919687001395119229263995765376465304715643388771609446')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (4,9,'5329378275943663377078725.59616792993138452386059664269485161374191901124632386474661634799161523147237015531446709484039091244606359050341194730653343894986479159670583937529516163204904273806158788218327396375034882788180783796976731912141525319602448709213495905899041406302673881364465504945113279286939663215197485367850132991968081639290297033476859158044889351836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (4,9,'5329378275943663267351764.90246738982122406873613100099999535333648693442749091773779913112021158272634924594106590925279284284556872145100402039378540884544906379809382171355490931218216320693213791113256760721925653394811317969065642404864072442190731745871963413981746671302248281216916486794296983018838956112081135739969615171358100498945955409711817327376172085836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (4,9,'292388240303165948041827159734686.255558469787242316676287235194652580157149226950109397295920730296960145548003120827363226435916209781396711693581454960342091452830648929118261388933297036933167543189308061917640517578583521401267417187854611829815212778183983326568586118831109538377828156118900313778053576483381085207892754728937946691892849474364477434665960112125254104966566712906532318984871145605839506991591027939136026602051635433295687547552796828217859648186757719639965988287173297286034098497871707197092627676226053609131138590878743560287292934815277894463305001278326023708395571840850120055316276256138004565442099731931051413153564744766098053176049414330146267604802971221161572130161432525297614616942172815141372973870720928125699420370428856022295499447755488148545048400795053604349570217878099721865670458104653570360')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (4,9,'97138902640718538.241246716463110895614166618530828908023040947887095196830690221211560526562522274118188963051412359798837957512805692731972838989047910709158995922699598619854907969493232150042212406549916252602794415099066259707018021422154933830674786488990033885447289593742424717170197810316367637885248684134204152352748803532396210051700193575105804898183523770153431536054848843504020390623875664696278263569145547515663340450903772852615789980257449146000410036925975898331113013857953289990299253584950458042598491897496393582249411290555264437893099880371008957017323366523688894303458743415715114628052487518110654201696604914159777300997374156315186315524817636714210119873791848535246674326877611945112249137224923201544452904111118569299934059002046318394345055859769572070097973298522564724884895879226870720839')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,0,'-652755630.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,0,'-652755630.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,1,'-652670387.03916046850422757312745971450663862747133703839829692066597367760104802542475264601221776157515632293978442027199108085723617181683235487266149426304575903892721468296143475297345699313102262188759506518376019936160961709578829069446312051432780603656651983414612264636232727512091101057374054475214114364113300402823059519499217878746766275164739724770556122895799337810694888119810524986616938847385753562624139431982468828696587199570410008890188532132652095915565323400735066310142303225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,1,'-652840873.82996096805674909792441698652235828221445420381749472095823439215841389779822880154688608619423079931032645214190898787339168396375791272937178074945473802633968350414211085025663129356908887576538544498889782055029046596593888271636613472988050090259449836342389832330814473910881711053475561205644968306669776242949930651397625234795216816397330872127577980937461350104018382663378200293023018506679957617487661691020231880567020416430204091941905612894161614165865789507675064355852373225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,1,'-55643106304872.575994253221940844841058071061962511162776681458310912066379595519265546225338405882027547140476045378015935579066580347282075024392379464189067155567624835346798806677988850250198082355055954078446421075165109896091047534711081616362392995575466807084807876544560268050611445006601394735810211678919646667455478469014906335433468365011768049600750224822391684377238242162320161552720449713229523135506671063115436813348612986916614320012995541575293478341408982118538094438068036422562665160411591652618670802973618768526197813319204816293073794413317669922144705633308090832805914096147659820167569140291210526520361556881576175809360614782817717579318298657744021133210954279487777567785280633309576696708168342539425395482429923273623865667723482418178781573723597156804085501875735112311466228778929147929')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,1,'-7657.550797567691019915353529993301413746369700087741672762343206271266232635965032053368224472333368713006346867984576168784127503674579531243603836945595880917241997606783133673324236134063757452734295148763280059050480246827193380861494669624151921824660313516974440913733511526807313019192263170823268678149435664224184903925632177789052038092611394447709922076676981043877747276056677801802695466205531230350209787298926245402046182150996849906836743231861317120171583577624262765589605263477198809166390259128339127005924586833372241946051704497188891325715185091060185547236923494393813210904033520844572880475265306843414506359253445517738473745552980984097762509546161690823646176501838559393690565709795724159196133663168004773260451322595899506776323262195323943138344537866088159583331807728944620284996')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,2,'-994877526002806872754342801504871.47809095279915423939648794226185974985600242391612965412218049794216637114648812993201775787765690351615479957141288239552036371132381627958673244764559862836085530643408020551049895730005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,2,'994877526002806872754341495993610.60896951623817756834461124123286284017021118170033801249797242818270444792350668237291391010826978126604392715751281366489250793073354867755345743514510156309395711933053460228041067059994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,2,'649411906691138274293985410502516861224852.2323455192714410716272307781034189160865613770320102043319541634113746032638191509585045862973333645830298922352816245477556264222094036953195419857712804755170632292914187367964994214922001758104594052499795564860466055599417895782179851297585155129541589802249540436678824225950907268084876110445460948679383611117263673106597132046331719468816839434908155684738864149955129235751738204036443603521478609787295079710078973503970964790273461142497259987849074597264522099648376356902360358310245001183020992360260836105404118742418040965190000718736837422434593694808973939805954329718232693154128543253581495885789333274488461716809104532693754070810202831113003978085636579574171344721710232931261731022478029314435363413498991740750878099825781577297965642009156858479681236085226911858782115')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,2,'.000000000000000000000000656116570506105776235076334177868550033347254561166417969910286926369599900073757929714260350320362090452092025380232792749476245042480546813848702351830607516880397305138543526307608094143028291193163613755680419049060162928958489964834941920423432354996040147818253087783193280640282263490705632002572757216731766513434035163528102590524432221718194164133959630768718395847710529339782880381264265894322494716854757290930538739000043383104085867828258790010654331660516512156519838978751447311068903958136482041673109857552178367614498426226323001399275980281507353231821022591045797658991388304873240910526149138339658220844723880158150606035181559877351791752701872877147074033569061408920725522180134133183999181370354585872214368766629114773129541658653693832843354053701079334077')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,3,'-60302029489319384367663884408738513110.66683195868931664491302527038538338065260819361151478340212147889934633981101279593065290940544218360883531149731823374304151252289014494378769385157204705433009477214625880056478643611622410268943757215673170753460135411513114716313801477916713433956086133878890802448531292334570886746283905390661877220497842493537338035961123751393889400517474762491881277080205381424363695095196058838349029211365212855028824622924678684631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,3,'60302029489319384367663884407433001849.79771052212833997386114856935638647096681695139572314177791340913988441658803134837154906163605506135872443908341816501241365674229987734175441883907154998906319658504271319733469814941611260503645706198407368762270127105340397375230875953495882740039984314121888705481484090911598074635434289709802794549714765847764347865064280637851906308955404165593747173246944693509650424312007333558709071857299501674917023499921977975368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,3,'39362489275784146262776411377472433635883331946.794473520543457442955620133347015506556162839462623905489255080102447195050109095701660164272430316804466254467810714209179752718730906325952685817112992943656292503112803950215110778476301809440329937774061163668461957943313261962261081942055908935814323069621279128270849852239727888939033546870208376394878842958202403235309372240005941467570230067124830916866857395233038346727879951123599893174252558078732888910139309038957525961212820831321973219557165558911222848692996406741318948607549825343491479728117062814094258484536263158005174429922237853707635743736923521032098496725445243775790161216159399180889906705265012270270348146530113428221072591696851818281866095288773371414866822270689959827332258348570976075184933893434327278299820594014788148344260948638847457822697682605612771344335201258128')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,3,'.000000000000000000000000000010824770508763323320533297369674519056450544793568147911931789010432012750062661590994728968589403602468229106206242395792957238667714358401601098858606386995096923432407249369639633268143022787987190106724545750803196130511146323174462918572423414631798141263222875752767731279138952850500369328934959764805948568471324562210715908420467881411844098258193571194910997918428786213948547748701831331312040839544355427357749520227124858111324859160114175254197992204974033767300989488517391063188153561391320190653403747521648794370679322504188364455328709488846777004202196382575648619395139553279192346251133156445942281048959845827006761160755031086836046398020850814350246219929303018051720203943879538087954853996826539712240458022307680912400297508925714946398031304516583939283')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,4,'5329378275943662669459614.81475694159581596077242547133292502869630735172901157043010370467618244548786897684821457816189831652076071977025794948484549600736179389638319303817478693948215387894509009504287664213474693208847025374388286162907794727810231557001266897729978691844410171412189947386181530441402903608214502713480332746271552746231631136145916685939539173054989927058122097304419584979598595477177513004218594211597809300517607260841648610322863666300637648662611916496850248528515936635845594390453288113296413254893687029540384176335735114863908372780241463999450547422213639667099644505472777149095004849805371205203850993689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,4,'-5329378275943663974970875.68387837815679263182430217236192193838209859394480321205431177443564436871085042440731842593128543877087159218415801821547335178795206149841646805067528400474905206604863569827296492883485842974145076391654088154097803033982948898084192422150809385760511991169192044353228731864375715719064118394339415417054629392004621307042759799481522264617060523956256201137680272894311866260366238283858551565663520480629408383844349319586471282301251749494706061523663958609947049544255725056447964564549684815188261035801892684889942971676086592385285071073528462167439314005547455087297279161738865296114495425732286867689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,4,'-3478781676337858247983014311182511.567538638808357215203593479841446379226774481291286361639429856698999485760647422501864626078375852610019829111004807806660731243672830787729048847342063218718651165150612717759770504648306347926061960607388621011846314969634048226452709389995594961695723139571002939804473057725442880410434039783304583526414509590532906062732322732569475349107437896717416548237633532805602064623969799081086996320156575550896200848758685986331692388099427314008504506503745527468550106879602399030419569897808150076298414568875477195447656904373310322813412927463518325927626891046356679526447117311923853482118502868148386882363449163182892615259995945992014431502761210899772725227648729095696228388558331052524469604046072203605897109629560683446827492904111565278516043939137760721315953500281379039771826554155511347152')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,4,'-.000000000000000122482510461124748279475400009367345900846466958806966807399903713411658400733717078392550780910604704603123670767210550800752620037863340961255721285160854785449315208955654408132775022766783343331151895973970395232686910362226184006990485313002943710214511418310741271074710741339586430026286272098156531835438969774325517509155992092194349661122678547097423264670055720422496527272118788005921590521726691666219504214087867030003203385360001614199656989667055583749577099440092378355805901262289841168751608673297446473709956390142112843400255748161809121986096092991616144443486023218404881798896685413932215981950393130292001833627899480153863300557853617312991880655905907971211246077450786084079040513198340644157868678782195341316027563717617074364438885981635394382733697473265872796207')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,5,'-1305511260.86912143656097667105187670102899690968579124221579164162420806975946192322298144755910384776938712225011087241390006873062785578059026760203327501250049706526689818710354560323008828670011149765298051017265801991190008306172717341082925524420830693916101819757002096967047201422972812110849615680859082670783076645772990170896843113541983091562070596898134103833260687914713270783188725279639957354065711180111801123002700709263607616000614100832094145026813710081431112908410130665994676451253271560294574006261508508554207856812178219605043607074077914745225674338447810581824502012643860446309124220528435874')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,5,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,5,'426089913064020811.057708378200224487694731586862745370027417544052374884336177893807736467646454486029424673621605232432043672119510371547153895504456723242262639262542904151307250842477327375961936454637964429999741717244285121019840463692418987118402683746281993192269229200465080358289645050337976214115902915692028162689089167194843185708212911364017271332623359100711545479273675423617018342297822477514128997410642005300368966199980354369928371655155437291469427189561877718971914040675572136507472590254222870537216617260612835805368361975725573009455402822669103118872235140158440342063571894152305875004532651814592458133460160514384171804043127771746596286988679698684698755896736275307574630777027620558428909546664763675431701332632828281070572045822129984625797185173815273651376003614106277727279230096226977335510')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,5,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,6,'-652755630.38762364608541718463145771120672223443489913059334543712856431450577465795351472116052777583325262472505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,6,'-652755630.48149779047555948642041898982227467525089211162244620449564375525368726526946672639857607193613449752505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,6,'-30638438.151446159804025029882398388155309149089870990062944469684482366692824338098201222171115395923414887930224163525189097571163687285244255335505387733673499447610577050114902372990462064696637481657064525319516004273769831260452832960893174173254560250804003884280384718123289136453955482855362019158401218620018346500189769819687260476334734259702665316562988639223597110627626759216850014150105605927773639897638043177685498804811787888811168524202700283461266793154726325540776914500415140842975457394524215869103737379109516024460317825645645301237375972914247141703084877141866316168268901439172491577729880760950895760711857112463508064820414904611059588717092145484656103798852859978690742216940980929562068')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,6,'-13907037655.047994416383638650569341223199042786813441967582376077478024677494832069402897226848055043557486983268019376307288565911231748501636517992289743940159005664424461285010295150828744259113760652210086696250085454819340987566229400805422509198052317518991183515696724846560872057916862620762789778660622787735923967096950195583369113574365386627110408307941105082873469072519133330718161987781080307947247163619814890462416622144825161521790673339279047700672881113718394727610096366361422482794458375587355933614201638489194194834709433413694420512869179976485096875057742460003147602405353823942488343056906912173170809084207937229591627643451380735179767199816663168139837088183577975769442341678933576388936845704303859241320794255052627716474860113993958556604381707826493168941926878481079724185426298004604')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,7,'-818934540724601372.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,7,'818934539419090111.56543928171951166447406164948550154515710437889210417918789596512026903838850927622044807611530643887494456379304996563468607210970486619898336249374975146736655090644822719838495585664994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,7,'534564131989234694540350103.27821462973515555648644772098605028371173048154132108733819196629002548296868548691993248746628993380136454426833349407578676005545111508293942736555269938962058196496152360848131645787941032968937794930046928523006455386861100809286408671908320322523368135203881520526880998279355848280412933152306299256343179622513731096363088094541514890135766460631462465021694553063366717467560655272004461368865264059368514271105464855575429914212085797297268595943955105608543373940035636033207568676745293499106348500559628723682588033431457023964317090780615020801564861497990103549650624438425421690193862533733474254')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,7,'.000000000797079129642393611556079160915147221153735075943759104977169600937534508973732991117540626046659124172765761873705978811124901421049332579161931652390647472911517923131800238903184679028518657818755558526885018755394697157094867449047655737107085020874974955627907737126958129710597811740696534189608639914753884882702680512272194316887744972931453458445314561564591875764930680945589486999586667912816485821717403892703364322658245615895415781719033810595358092343690359557942948213374234065052300866661453767599465059289920067095083062096458980564265691295895672503728815182981118876144075942348853666085714846210822847053889733510154276933759200630639642310562242207518883342516103725757482864105340008709446643820864294556778969997115586027866760708448174502158738150605938364482719960251612464993')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,8,'7844230593.20607652525116672615394735666141304947992676684520382624714879797087461877675155217754947572297228288498221620714146356962938009770486619898336249374975146736655090644822719838495585664994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,8,'-9149741854.07519796181214339720582405769040995916571800906099546787135686773033654199973299973665332349235940513509308862104153230025723587829513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,8,'-5546455599206321494.0676583421119904300307105296377723816472192007866147764761501865875232824814135783697976183493106885436876081315217834621720906478074798596116645640251460842350553806256223963023430631066024389364515688765194373161385579258482225808660340732705687558150699172147896486727530192499184101617379930846663835628510376484675411350654979679181852179924386290069790336316958202582966248703889464308649631486542724072047294216362186036638115240070658004553260251510288423749333873893917690832829128021808383128393431810674177390352413548658782609064839524756041501835115152819802758773711821322162752064589750295542985780512921839490040396053737870038534216948323935020460307350020911362024271167085905714873548388570602799432705061561572854498075600')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,8,'-.076822018213756690975099471985461347542955923191183223634407380481978143225129486622351714276452369661632980197282261508936298649901018470846144321441236073683990324039849865750139470288565622579952182053792815638469841531577235191276257498209844422440366423136595067535337374223115507557306455001792362506235886189722508617024948653046102060677266555476719102193278190540414934812073355995577639986512222998268934000209944414236509139290657402937840986061987219441410741189615344050459067454369371094189930607834375561948483494321255500497786795636801854613881105643003358210407867114145806225724880370339074242480071595684502491827709175732777776915682786771730423733673667248186336046898260378049328204094804755195626798951644386924178161926128482002518979482630732440619051262620098544265763306253807191182')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (5,9,'-597892150.08771044822540810796370552966707032464017958269847934730769542644402913723848026909285133109089452632480800168074607090893991283808726990171062867538012237270000932798704781608969096508450960185964292594677356241956277714380500188870696516251767979457838109804726539408115452577436052503866633026489282425086547752714324273565900641436632912781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (5,9,'-707619110.78141098833556856308817117136192658504561165951731229431651264331543278598450117846625251667849259592530287073315399782168794294250299770032264633712037469256688885911649778714039732161560189579333758422588445749233730591792217152212229008169062714458263709952275557558931748845536759606982982654369800245696528893058665897330942472105350178781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (5,9,'-35812445701642379.972368737320206275515144213236752803936806738624588812089615098329765811617509505790110909629109400553415312470540217508070421816878544125783329593128638405659896184248784794258084116406472768709113030915308410565617764394827427154923321461158387012978726512246146545834669665093228316853342805604075936530371665576147966721599968786161939347726656168798065647411457701453987215491345496003650288850096338695703984042549594979897253521041581573388369367579323607093487743440894765114619634001789457486407909224339065748496715380572175183589195611952939575073075140094901024063428239223964510824958346570603142906309198033196987949067156046076497974760641964978711558209708743776024313916111738542765749928287600981397080809041007714387564206594515733287925008053261840295560398311905155157989225181164097547541')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (5,9,'-11.897816658873986795664687519069203701902563457968097729876034796143085813450454323128600602495745166997629078984618283588337379184733369491549230343315369634754204412939757136108898254582353378508832611703989221079986765793923635928759179573599208612516427628403686659479459867527627014558600521732194240404211484706621458983727740143568799713006127585168144158660566534382037451913967363675002134687952374080694449905223371627606557311710348820900963340884001770733452314715448053233208783321215998063958966729954113843581448912079950334969908657535514847005768455377990262943747367245613296497099716892292154137652893990339292671106003657659470243633112063075297194691349631518467702876183897580432003030164590920118726657290102377710611324297862045849839571689192181090062958059281673245670440852080202548743')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,0,'.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,0,'.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,1,'85243.44233732197133191329295927531563604777955507322414928382967007765263923984471408038635831036097817458527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,1,'-85243.34846317758118961150399799670008360696356209219504851646259063690472663252876207514831001425809630178527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,1,'4001.075404054519813215296429095020391062109905613738157927030437221793757373268325953178030040276107574363822832168160758728653712686313134828282109532831190239521843808940611025488601517574653932032236616573457735900045655665690517797280666732780030171712864961531623060353548802466577910774711998056232872212688464691036260746751992072745518373073825852119460094113694393273456369345499434994672730920070410547163082189385645712866100999708173472360864669110044660667614583576570496399103026286828660558854973376227247132815728164629722965145778698957093136175449225024685874279280018547740')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,1,'.000000550624150700285432940805295709861455424264970126953321538967550091614148982212874391026630805836518138806917934859138493583812313778188030836027246840794439412443826640206464415527687555214009725107630387889854278497875708390050387195108441635824296563108288712340902423706104029452615686971019125750530034798026103476074158922893374911891438688457439945897348811702908216883650280617098402133628688982793791562476980709924382381505517834196446365877784931355599480881104446907801805570471686295270927836995181422963320376948188855989986414581755633425437161760674162177776773597848142496583128607548351599750592863590334617838124741567654525843413232313914310487355539260264225486180000012813397807525203822863232682089295055713257835007742845010741137213301116647610033909062369843750685396196342928455')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,2,'-994877526002806872754342148749240.99659316232359475297606895243958507460511031229368344962653674268847910587702140353344168594152240599109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,2,'994877526002806872754342148749241.09046730671373705476503023105513751542110329332278421699361618343639171319297340877148998204440427879109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,2,'-46696638263247522384986521136500.479312417066793299922708112595886608370451213741279484136907754744903470430131032928908162742687359367826808123516519335458861613010646992354378739165872253762686683966945711430182491860196341344982195078000259063231136011430995647812149294224699587849791008794261026932467933475782780')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,2,'-.000000000000000000000000000000000047178744084866106587600962473825168237820701199970144691815329658682341685812472535816245052671243808078367856957579485152424914481414614360809698177236664771558713606961423658442962083541733004775309314926918118528217478256885324362912426275407382550929085958089798861918760121727491366034496581249711153289495601712583077918760003840368008056353090552282274780428335438032908213783490070198414584291402513547386013689752310173492320159738977752795528725029134841933604057954874523842273790958618375118974623107241366036640538085329921129023905888674299774726871808862832797230915933851225308164365269753526489223540580759951230801125605963901491073619448437890841032149898629231552019804656219062534881074125995130202820302133432951999011667568746004715268323913437054078537')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,3,'-60302029489319384367663884408085757480.1853341682137571584926062805631087054017160819890685789064777236456590745415460695320768374693076860837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,3,'60302029489319384367663884408085757480.2792083126038994602815675591786611462177090630181693462735571643935716818574980747701251335721895588837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,3,'-2830400711649493468815157129316992649.40542786074520931471973065281957756940496588853021620372179463538053123396140685749478530925306163968207226329985017644835203709485594362663495728106061878665324856417118064730721101615473194292620972173690618491026470353143141125614124440035267592258385099934706896692953497971326605145704135723011753705907329979207428661473172503098296622281647255008204864404416199384701720347319806375450632245634238172654086373193251877533131784268854289406126119630708578053354762596511353053106459297339360827562281168219966099848212')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,3,'-.000000000000000000000000000000000000000778366376597400971124059102619954214055884926284646546105035591052258074563706355894551049631537984053410850060739107742208523938741961208742831871056600773325053133977559789796700130019975964192371715826863472981072974742704091801166438465082519558956925444635729210849210496466189037623555622901738570979273502405907969114110345815802999687171113749364073269902319653450479463404003706147915064100959774312307195946966281098140229199529866429134937742584938255441169541436021827079647129394362379406256722903991353136733939395366152312959281905058592776286736536360235356737359904478313225848562436632109470589310799000750518904145312512621838935796912993778920622238202744037977772169066929474233952081158212174549695244127987299282384885288897893503991509410567351494')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,4,'5329378275943663322215245.29625473207137544719284446115519970394719946335145777492574745992986971075733570324679065009803281404581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,4,'-5329378275943663322215245.20238058768123314540388318253964726313120648232235700755866801918195710344138369800874235399515094124581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,4,'250145412892811547138949.592621291590152419206270097656346630226508074074623894951308487425470437268130465956063593951784820669318897182831355375451719125809800516979013437732298382708070979871283132689492336823087794373113039154669229889503700598930220858275174342776478898670277868700384853696009897221747924643343353942154528501454689084608965009561564638167714973711022212547096732831847202912862290958304510651828842182545311077713664465815992616213663619529378061133917572474298028065850515876361609671565914027186063801852554353160801534696062207299890867876199323530337336273950892723090754719547285920090419070001019943385293110663922226230169381423410428577990604776655422105400452217085311617728003688836185608912367677734364834577573255789160419371322775733777518997638403409000055707558465286469808848200141192627396502735')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,4,'.000000000000000000000000008807232244507937251856465017967626593430084223212999583902527587737263981869382895220711835510154989851222501080395520249593128253795609198666884523792646863341248402687314509176781281863891589925961900674092953408613128961234166906173266411035009516545964362406728942021813644419154548354247112601793685146960840364604115937119024575638240439041250900118977183124605578660115160551830946251713350556181960983267689939549506518185340972020820080460565392359379680036788592213479105831301723237102710863182596413567756605711230290883888612188805367801369264231165178487334557824054205160222371548005742602736713668548450400926514169967213301919971189065307721110805424950794015852531342286935114651278691214233054575660712537044810163930633456573860895791198853393107188289695511873068')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,5,'-652755630.38762364608541718463145771120672223443489913059334543712856431450577465795351472116052777583325262472505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,5,'652755630.48149779047555948642041898982227467525089211162244620449564375525368726526946672639857607193613449752505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,5,'-30638438.151446159804025029882398388155309149089870990062944469684482366692824338098201222171115395923414887930224163525189097571163687285244255335505387733673499447610577050114902372990462064696637481657064525319516004273769831260452832960893174173254560250804003884280384718123289136453955482855362019158401218620018346500189769819687260476334734259702665316562988639223597110627626759216850014150105605927773639897638043177685498804811787888811168524202700283461266793154726325540776914500415140842975457394524215869103737379109516024460317825645645301237375972914247141703084877141866316168268901439172491577729880760950895760711857112463508064820414904611059588717092145484656103798852859978690742216940980929562068')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,5,'-.000000000071906039575366987930696117572143566208825430801491864851999044659045681114433294052065377679745375399878664822361548237094424148992770296383642432040129230180142339557437679166815114510467763288057917694948929009212876391059413439647163295629904270262780935228234994930653489111444964446097124407804311494588517082748514970905563707392765567625639455978464081409330528324962333492925267647686759704415549221137291475247571296491073010175087298752769122449499990102435819414671847617062560524758344361194566796343756743243766853291113852464023843527189221162680613675369708907935197867458588904367993736363321133720345058432019986643353417257503619558797249295232894674255060861358071309619524800424087896023710729815248847792174290644245138831518072176198607255346603270853333176255533974364728342822')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,6,'.0938741443901423017889612786155524408159929810291007673670794407479126073159520052380482961028818728')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,6,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,6,'.00220308874624532134736695825088747995945783791378828770826401323533973395137378460250799184832278118133622563295093909508983301127615815865216895482784469538070133388154961402881325731054433770884496')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,6,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,7,'-818934540071845741.9530629278049288491055193606922237795920035094854496163164602796260436963420239973809758519485590636')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,7,'818934540071845742.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,7,'-38438389630389612.0042045464692275627184627672063157323631169405883031379129843031477339360597564128205768842448328088')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,7,'-.000000000000000000057314803440765029050667129936880528769333499793237773980613524885506515999851858649385968476426313207429914995755091541422893944525222307473169425244462149015717526718376299808423552027796204632286454853167559026787019718806449038446612978917236245943248168920696452018925986743620392955122431521581268518101342690974749463089739042586011924590503136498488946387508310209984849243014542648765897536338824721211252335866349509669538308454367849024503312249951727948786393404944555844863805495937835281927012430439403132382055464307180153473189842433614777883826783689904293115204700185380661601223693428304020047393499702811581067120117405280772944184877279069842269329959037186324135435468322336398566440055479142909170224780318371473684868152271947368867666706912563225912012901437076773416')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,8,'8496986223.68757431572672621257436634648368772473081887846765003074279255322456188404621827857612554765910678041003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,8,'-8496986223.59370017133658391078540506786813528391482589743854926337571311247664927673026627333807725155622490761003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,8,'398823655.819545574205652791249227663407026876411660299394659390409794761643751582473390322547798567169668246138880832642141417531427935520467563318363116897177899262525720710134129529640376020947774470933902793259531840625444267816319963200')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,8,'.000000000005523967081937952184172713994498918048454262874017009201501812494019618863622631634736130436187167745347383745890248619882896153083428308074678908731005176810208100004498415662458272149380846809398637385270265351808328466537502823071145089961996689711299405627596294988646826454676198092260759424935699382655736524042353938814268760468122584678267125994645166955751211397353140569987758938572953312303398024147927938612934833827734142292697389251052485981023756760420972614486278837214553818521196182883489483756785207650821722660455451660719560529693418375773124813290305501923899840247103166971466167032437598057958226806335324315214908788839919408525748236713611579486768218564733151121028172253396652755590051310396973181595992981076269789287489208817712754098019817792758730835341151711523474207')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (6,9,'54863480.39378734225015137845671346015520435061071252892396685718794832880965812803098645730572474084523997120024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (6,9,'-54863480.29991319786000907666775218153965190979471954789486608982086888806174552071503445206767644474235809840024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (6,9,'2575131.137912978352131546639620215541477987701194164886305951830806120142596646541302305984776928560906754259789485960991272272782091464270104432109904222200473616116525297615725803495463468272171161659654385929185160689572943852767523792651123455283534072794326647404332228203001469884016996499768656263775233430922446983838511590562929268821678518640501686017030536100955531423152839988008496919169395159653034847677470665418765966542111749439412')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (6,9,'.000000000855524875533453524582534418967571681572635027972658867593464437484123442242521660317156546196609749230372398872487667521984251509483676665788527375343148382604836976332389890799079878151841905152004537926201190193814594954194044560537664560344224646197027029681984683465852110060077865421064400958821808374370779297676624123638191407441015008434084079839721156870032377372497814037418047056438760664237367081226979226606227037631073946209105678283624370820396871058367779887709720661001099338250009251834581804647326512873792849059661525874160414378459696930831877643599421297749483849526695657467708603491876916749718079725746259119898269814551222336219537198318796277931946529242436502235147453584237994498566122973953203597470078105606906752099294162422474758048436539653041606499637623370030079916')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,0,'-818934540071845742')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,0,'-818934540071845742')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,1,'-818934540071760498.60459975022373923760152136399214017262844141729040109985386964272131706381326192223266583769046276181472898406504104649192224392653722107164485675679551050629376558940966195135841284978096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,1,'-818934540071930985.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,1,'-69808760806266041400340.70700818693892852138813934414383886494691670042143650609934777814995087699409404201920249076407981012095999320858479644760715204999741683528746097757549835956359129287002171391961763797857794730120426599135099619822532290339000466211195776337667123320942107370731349851576864242697412616810236323676004067839744992733887503405311090677026008324895177587064547630828026123718296429295638934384446325302964896473296829265805737112709269803814942537657996725913938408781715328945194948010970')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,1,'-9607014551997.140858001442365669993007297071681832468350855627077185145567261170534005832165603932891201648027598773639089125980996652005412450490063683624648655909636499261774535015914730479401090227915382926027949990128880284298688443593909017437720828163877690126019616194376778317148693270900349151496295698078575648169637635898560612738481294674167553369445426793073304518646116539082953755973571046622684332425840412198776081251646424875405772676893185726872613804612566569794177506268399878105117763696990094108960076591684779180089885283939385808214239337829666227427148603057941899878123459708920227867371285837642561064461118016739395972994827327543594846953341750907541716807985738518071480209106185726125017342997283356926976052909493074301401955202616191210810331245427141945840542129607439703255628683506772979')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,2,'-994877526002807691688882220594983.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,2,'994877526002806053819802076903499.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,2,'814739569184924399102711674444306584731316176345067.39834031417849342571224916231092924046722938910652929295271097903377854123984307101079073134405782275535446337229706620713104545454319555885847481531722101704765783025789147453570970090')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,2,'.000000000000000823151110229758332661330617426417726331211894330147399760458555778324097596176117291103184653828305857999638466183347321835058943563347767579219763002258622507889760416640758842509635599414768344140175277742935564567127659688612699366182158030839083982896107176174766408199870924563237827899202849733606842856491701660599599211106794572237923985121475458446997860253437578966578617985764298513928307852082168209458400544457824307270777530312648199364084272310536024283945598340590403612752287693234647719354745060851129534452514828239800716088248915975054881011343555492596002595181046121935660176097475159074973635534016835214952415720717896518544064238656360099884889450237541254761746029507300068198731306211736696956568648033834554273602524147075895460874922913883751452403825099444642503437')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,3,'-60302029489319384368482818948157603222.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,3,'60302029489319384366844949868013911738.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,3,'49383414785234649002982046297226894664526726187218771083.0993243619030008310875293647868815940421844461627295157812843657782639833900543200310573708100000958929315945039020410482966753145208427035917753919085618457760620513481628641658765820294863970581642745379331727722585319163262763708386199720411053619449096019862596221607526610103408936214184850115071874430846697061554769773328338028749631552202705583855831155461651414320570061181212214810086436100771547030013079997847086')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,3,'.000000000000000000013580546907080371873577430837141172674171921610919544849037647398734065712983603204704663262116138799357430947986241590690589753181299773842880079777640016786921825609617596862828930939366173224366864448436461306602680780407912534492687474933386043505172346330210659476505435994582446405414027199938970759003336829722057241708213838318628292667946636226143164221380503228191376939596663443230082698085439531600756771639601022064620204571458766303985028143400866776954225590745596639602613498355332049777798367675438365442468743270334407716567057368347458892075084694158566383133325959042076573734408841629149903649365079563374278550978052491499304166424686842598833319515705663176855033865872333988551611996194856472662292344160194821687681312501127516922809221030420253714666026321243515830')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,4,'5329377457009123250369503.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,4,'-5329379094878203394060987.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,4,'-4364411947278810125327066890819882483326918.05664098958260550284395870948992407314161088028674246708928421994893923699743452802989464864039994566042797942433140378990308345483670828497915478397481687305406460330009319949623844175096007381662809083363069100235985794575399268709260901964834244796150883807308976949196661411035264619638771824190014274817662519438658481432363824187693821267613212631153175155634316128036152465184903927860719447693468054624663668062006049759837326188252927823612718163916100588143128358998656306593393889422386501730237442526450419990376323903182669190482615734972147533221144682538647497701130447816148459762464395194383090936159579764712919396391813914821973715879062992249315474841639591907249142779103650773383644785606333916967894')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,4,'-.000000153664179510102140733858340480800294287837601105047285453457000254577644933901525444082336054243749405512900867540483190494113677173628646221933766421338612376123824684592850465460156248403574333545090544920568230979754949827013129083778435107488003838746926270955224758508832133483591156567868631938590248213604979638895901933775098150684618378235712437137852195098700137765601802898366867034641606131280434771339920637353140131159441790904703083143627590062236537714415872864218260252838432414759890832271190606933534662897006726154587341385852258168335058931957995901987808602365467861573344491265289043037273815504867254228957776127752540924854546837197432384563153608878864912196453587628891285275067452280357349897203095502806923463147414086919014592380804424300739713935051357374227246098303140106')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,5,'-818934540724601372.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,5,'-818934539419090111.56543928171951166447406164948550154515710437889210417918789596512026903838850927622044807611530643887494456379304996563468607210970486619898336249374975146736655090644822719838495585664994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,5,'534564131989234694540350103.27821462973515555648644772098605028371173048154132108733819196629002548296868548691993248746628993380136454426833349407578676005545111508293942736555269938962058196496152360848131645787941032968937794930046928523006455386861100809286408671908320322523368135203881520526880998279355848280412933152306299256343179622513731096363088094541514890135766460631462465021694553063366717467560655272004461368865264059368514271105464855575429914212085797297268595943955105608543373940035636033207568676745293499106348500559628723682588033431457023964317090780615020801564861497990103549650624438425421690193862533733474254')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,5,'1254580584.048971438599349046867230181719371038956756285986415773300837165755558702217197735811549684202279755101552533605390208155708695952004683670878589028717509749282693444655857296902117478518511492735290086040573521482737598395369632843374456793385511847676556826348943588519880411018079886373631771830925920986588708409208527042927229627786932908015502292313887561198156623702404977221789649731458241770690830680067801377815840764873662400590343236662968218256211697981048576328148435241545372543075051594952109757428031762469834781538302930957095080167901199455226976113347018972534334210416375400979738414416582588689496706548495076287263281908191770792203069614447622517839588243746755480572371988630084226963919158931419126724681617069720048557166545204944250492282054791996953359013543036918134163144772567093')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,6,'-818934540071845741.9530629278049288491055193606922237795920035094854496163164602796260436963420239973809758519485590636')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,6,'-818934540071845742.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,6,'-38438389630389612.0042045464692275627184627672063157323631169405883031379129843031477339360597564128205768842448328088')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,6,'-17447499423661151023.558342555162228919125358089491573318627107322332520978657843895009110781773496490472817700487707134216424855867015781267287628022535529641238372370292374146871103236048507252055787621394728096799222976387108688980537900309311204203302960751747509648304056939321473462375648710590981564101023812800603438271190184064874290215309040519813024962909469701968804925443161094255632624090623433640078421818321246597728308302979223833487133268472455479442002005374793705431817866798804822885690193667521606781156962792120052947767160957903073698536973292205899421787948529970837601521657406211962967291912148632072929662185840265855612193255596825032457033402506154930851214421895488796227471490998190312007513478459049382774782886773158311656817014322925167278223360446454868236479549745612973293185989975394307678926')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,7,'-1637869080143691484')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,7,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,7,'670653780922685519356619170643530564')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,7,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,8,'-818934531574859518.35936275646834493832011429282408849567717761204690035294074716714939441961175772404289860039233415598996234758590850206505669201200')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,8,'-818934548568831965.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,8,'-6958475505053954666339703437.48985528725312694198056665033448258303533387675711770743843194274181580881296671866212320171337132096489224277825857521033238709600')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,8,'-96379412.478435590945480884955616049873645089637121682284625533034225619945532704111492738646389632607594293500930307222576571876059094206480673293295865214240456906965855425738072430281475736130342229749511650392658808510082775031098547507966544723255869156056349218776847523349173551313282283869146710349521487706884633419341568648959204688757523312579312713453540395840470692533267158388401676533369105590789036132185107859069994833345453200014884023709597817280132465224778002071890368479648934317322270613208789859930618055792958996389145963056607200020526949699302565905917600478429628844015684879886549766473809801710003649193772354147104446894109928903223843036925147624639466770660174828940577089095480826473544099693433597812637069287644606693066736302793687011165899362920686114156254982709172925265118077531')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (7,9,'-818934540016982261.65314972994491977243776717915257186979728396159058352649559139156429817562698954531329940720620096519975256547379603654362598494779213610069399116912987384006656023443527501447464682173445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (7,9,'-818934540126709222.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (7,9,'-44929599044588573810654775.83678007633232843418115790847152455559258007804727916986432256198687661496804050903769496933400455947645400628259699874770581538122521805603947464462448454681701547899144129061961394870320463199545502030106801911915987309444301341575451240764927967432593181449618816978119423290767783843864768557371257918447461479570164065303599994081990686')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (7,9,'-14926769772.797708334489652004325241753714626257641081061212878627972973992233480868793527325656854681817156284203427388055525855608883067129036717726368707982450450575794623567027457808927082390474261155500697096284790656757163047499531247323702909360444831707029353441147768321257650234732286165724178549576948957405037843360446785505536809409054071975214796532504678683693402401018726571884721963641317944453797513145055081061680091585467186975354801535734149952115333241283186621720677488342266420359417174224757781125498130120775969091933838082305123652811689513300403051544682523761263183781206840940347226802620226164265210810994106136738030959199259066517106713585343004140573604437146025585149934286364795122716971496775012412420105368351774715982565252533025207453326002101655121126631180162560463548157187175671')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,0,'8496986223.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,0,'8496986223.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,1,'8497071467.03603749330791582407836434318377133169438097066269854720538319012928851657498035372443556191720308219530866834905045144302106406146277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,1,'8496900980.24523699375539429928140707116805167695126380524350074691312247557192264420150419818976723729812860582476663647913254442686555191453722107164485675679551050629376558940966195135841284978096687306110481009743118940565957556492470398904849289222365256698601073536111216152709126800604695001949246634784573028721762079936564434050796321975774729383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,1,'724311956372274.0135050255361637906710330203036651743488213007179039756514944640108625580172737414192938789413338554327986697518463087452612658955180411327002900979574347739956600177846996063741787205122007268468674386396156638261992679442768654367111433834151087792255469957061758837789341439211010331332174981459471333376067541234901538285101103690622656631026001337239036711179989456674399137008584021283568040818388709554256523118702728176420022080138548890713013682480239784198421500241995499841675772793497485550923152267616622892846304530712344886979674416990935007952941652591352603797627920865960622077762568060903908151958000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,1,'99679.115123747637190903598543851248555278745675862923884476564848911494649941770503156134872464666625927195645517181131678518619856156844072856993813601495176097972982587061507650426363887871820112714099226501603733968262566093655417466145183587899155614471697804006772915054739361437054029183182533671508695646413074668188590846200362324428338974890534273352188276373478524543505805545661569395314989170104140776362043880099775594658817242753124957385625811310332354760117110779649164022618274859298031549851269619167173746259018497289174255201452265070501056913033329291819570027877856677145579673495987354805150868813877928857472561883332547900866904764950837506993759536410161752469488392566682723027340638271076406246129989851281210810196699482980833204884400423019400653089825859983062096326294783573417554749')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,2,'-994877526002806872754333651763017.40289299098701084219066388457144979069028441485513418625082363021182982914675513019536443438529749838106171095037135009526312783302868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,2,'994877526002806872754350645735464.68416747805032096555043529892327279933592919076133348036932929591304098992323968210956723360062918640113701577855434596514974380902868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,2,'-8453460632655529853033389979024265783461224.3195241893307807116624750282852146303290708492834695194274289713076935297734670940696121761483641291930931061232942894577813178566088927221374036301485916497770984757492912292002695944367308880163698595015497307574177176409203214324418237020500352652934909632442547242092296504047310806151851207329042221920888326000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,2,'-.000000000000000000000008540735921314463871578184793632135730756619558669911183806487803411545406462244216408739432325839683804021466133071768612386706692296158696852363349481716813410857655324486448455846562309041306880675446880859847445987588059144788756984750993583865748280824370754934966494724951583311563735533173023858438364336214213295786266815116844775733072416507474834701984381586060478606371028156925222726225495235702395502085206072985373035972506738983640539009567237336002073370431753469632428303255926718930619221521257726366850472572830063284204851204189447233044832163423057501488364913539948261528280564870049935369825245920984413480757133585498984374354957754078525161296201228031555280486615145365039415418251448980923331334883673792135893857917681235883506783408111446970710546686739582471')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,3,'-60302029489319384367663884399588771256.5916339968771732477072012126949734214868901845505193155307646111690097978112797961939995859130827784737422228762767014427842766445950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,3,'60302029489319384367663884416582743703.8729084839404833710669726270467964301325349604567186096492702768702209585877643481082023851284144664938175277044596973126708926205950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,3,'-512385513828318260570283740065493064477880918352.732624553690077857674083796435724202494963885926573907185100543184828131859183999195040110586155435203949963570735841632689374488877298209082579317039061893012560130258753218955057387206477423088065663401594359617882154814262843273526859406265633827109554791772242178864873774889091687515990672487380368975556580539271333144212685871370972163560839446696514092637412587953506052848750866803569213269271165856310101244342151576488190595936869490659700946174362872797854591188391982770203203644172999264143929484089237665313698600170041324566984832357000400')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,3,'-.000000000000000000000000000140907135225782279761112255989433531718277338909398600029580768021365259747075253760824424092983497958717844671162530550507041138147836569244869107757945370200122955794509365120853536859837243314494576053441804831018954867623755033888264275704547752628348151132333655667171970175829826792355986148522268067032057293494927558322394395160508723637192234110428953945018965078022622950949911124494740703606109543716688008516750321047603009424529696862953094999450658951089435460411028678817795100630449046993274191915359520936265372754315076684798942557329584282177053819106884196674660057281227248874819417305259132106690385871316407455034281900110779740008476645291647094776093567400422266906817555937149628005629880142615126571231411138926043531449659320501743591992888328328980526602')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,4,'5329378275943671819201468.88995490340795935797824952902333498786202536079000703830146057240651898748760197658486790165425772165585380839129948178510273188565692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,4,'-5329378275943654825229021.60868041634464923461847811467151197921638058488380774418295490670530782671111742467066510243892603363577850356311648591521611590965692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,4,'45283653791262997781451381354094822.762732909505051438036873220502792213670540454778361182993875916509061144859281577740137081988678361247725064336120451090222456518107029158304937620179032477664627949959143233370320432203497828243297406462513350790251761540074946469824444452248386782451723637769289822576372357189700319768797708375563651655860093365309717823602754924352327588945034832436331911584742966378275504545736896430718939807674966738116698454215555860047859161126694019895490767779791933882712567492115664113775047192011252893773389940988533801360010782816196288710063568554147458866942816721046004257953642508395867837127678980002737669139369781058046396738606563716339660654364541530532834806205571191828994250708412638796240377704994928921528330863683630622922959130920715261879547446054261914770022377059156125037157979236658010950')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,4,'.000000000000001594367257057971052149628499448029056279649281098852958322409409919964709324200796473211884339143791758566019217634542932882694487712398244322522748736692741288668885362384266615527166964187404128216235057387796054457728789109537338988453837993084016408244895452291151218602815057669592284587317035387004942691671916981967449109983992675125005085762403043329820872839739877674121174083273716295673230993049263574856197011389828478636779342320299895806297835595427859271617831720398457416685435560152182883615601663820189195644140652141180949257192740185075408019971747810015931542757445763460947106918998459997631117642552273815713467150465548031203738878873114842844016176922502916339025283749846225376341878386377192605865913018132981323065698049618379727531925408677611856682983907951667054819')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,5,'7844230593.20607652525116672615394735666141304947992676684520382624714879797087461877675155217754947572297228288498221620714146356962938009770486619898336249374975146736655090644822719838495585664994425117350974491367099004404995846913641329458537237789584653041949090121498951516476399288513593944575192159570458664608461677113504914551578443229008454218964701550932948083369656042643364608405637360180021322967144409944099438498649645368196191999692949583952927486593144959284443545794934667002661774373364219852712996869245745722896071593910890197478196462961042627387162830776094709087748993678069776845437889735782063')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,5,'9149741854.07519796181214339720582405769040995916571800906099546787135686773033654199973299973665332349235940513509308862104153230025723587829513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,5,'-5546455599206321494.0676583421119904300307105296377723816472192007866147764761501865875232824814135783697976183493106885436876081315217834621720906478074798596116645640251460842350553806256223963023430631066024389364515688765194373161385579258482225808660340732705687558150699172147896486727530192499184101617379930846663835628510376484675411350654979679181852179924386290069790336316958202582966248703889464308649631486542724072047294216362186036638115240070658004553260251510288423749333873893917690832829128021808383128393431810674177390352413548658782609064839524756041501835115152819802758773711821322162752064589750295542985780512921839490040396053737870038534216948323935020460307350020911362024271167085905714873548388570602799432705061561572854498075600')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,5,'-13.017101389051085341042057308965769356145255575582875626848796382322826525772114256699384710400140437710569924703769685567402446691691210934185000959063158239023412379691360587119206695513775971704926722817528818197919265145207032750407924774510773427697188520818450702875142190949766251178733262143962213111236591970766836685919581025629742334704854852196126735685421250263035895756028805974153787560164935038227108975229771590754808331856162035119882347418116049174638416621093907738608991987582465865527947015457540650512339263071898410531735438556948115098562123055444965056347091625748703503220861221718449714020622377233272042277814766996198081939221253025243417993701684007826177845003391944496774674489538520354606358872276671998045196738090133576377830721671972381371985771591052597345572374064920279182')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,6,'8496986223.68757431572672621257436634648368772473081887846765003074279255322456188404621827857612554765910678041003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,6,'8496986223.59370017133658391078540506786813528391482589743854926337571311247664927673026627333807725155622490761003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,6,'398823655.819545574205652791249227663407026876411660299394659390409794761643751582473390322547798567169668246138880832642141417531427935520467563318363116897177899262525720710134129529640376020947774470933902793259531840625444267816319963200')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,6,'181029319177.110996740664566780784253502559986936959009611748146099327460471609593148344991059106574612143724330935988823134137686051475120980257829276671900076859337187540608483895641504622910361858962883971613675309676443079313179200981488761707281247447120551917205792352229666049191991270809865110506639390610910481490688182068719005593641339338678014189749279508731647492051879768743158839680867283217578754666643688259810863605002821607490100820241093473083445658378988069593782353275713240897038366242558466047071334385431080003439842348547427066389352198560236731403235927478177780757802759046212921140424771887928786549573201311120885052685761195784207710933764480136690216943336587118385525047554334029388869436622866247240903231799829259264158812528305210833683370536416861544931420820452512390255774498188962903')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,7,'-818934531574859518.35936275646834493832011429282408849567717761204690035294074716714939441961175772404289860039233415598996234758590850206505669201200')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,7,'818934548568831965.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,7,'-6958475505053954666339703437.48985528725312694198056665033448258303533387675711770743843194274181580881296671866212320171337132096489224277825857521033238709600')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,7,'-.000000010375659845651632013446652385870617923988120764298690164486716047614260682259722116360931978511176121353975789418625836899338225571166376573732227571704071000348895791547943896682585450808398324252224265156214259224488248639550967292466343168350213394398101712526534464002532408445204630441167137710565437434313424987517531891145368203998329086865151248833625645567863740298397742783405267970015165358620026813812552194344790169289440822038223606218360105618852154152168496637886434061050281055613760360200323363465925493033734895631921307644481639236601187225135325401868178006133838932915485272554505684060229409404902185944047523033315868230944723282246159741659387362889777495094736963530708159604929268812778894177095572578862150793098548829744006499229853198046828954650334595737117597239208825268')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,8,'16993972447.28127448706331012335977141435182300864564477590619929411850566570121116077648455191420279921533168802007530482818299586988661597600')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,8,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,8,'72198774884738777393.8687539247642452953425155400068591498151280875559609979248583367700231031634872342122563819478919600402159024059794279536786611373504966204744811722007869415559012475160471227957857756325962941799428857291371597146319816910515366298862558849452235442246081440000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,8,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (8,9,'8551849703.98748751358673528924211852802333963452553842636251612056366144128630740476125273064380199240146487881028508694029546139131732304020786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (8,9,'8442122743.29378697347657483411765288632848337412010634954368317355484422441490375601523182127040080681386680920979021788788753447856929293579213610069399116912987384006656023443527501447464682173445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (8,9,'466174236688165594.9218054325256670866060556227711696100465581464881295978997280335378678072434776702952026828137140986670189756965420183565968027969700090735690246176791371115610886533930223141650377886909408268207750238603105232560663571044993507074695683027062426288270199495225881785499139012931143826099668999261931834700467395442768201666740663642498098541516326470052372008385656719236306238735524802875519713512894448940917708118676095378518264553310312628830009314653641136566040400')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (8,9,'154.875085756903716715488911525453064308758123952566428258639786597308109810869086867746263482721081985848551254298524280231489145092826397833394044637104667137816928932471315095067524966582810436282901424423215992139000153713476369887383242289102867530775908269805285313842050961754114751975054515055089553180717444020378611767296609130477264722612784088270193199394531972594028420402254831778715196248487757266330454269044609134602570688339750190391651801546906342796660819535014295618246236706572780627362908121159003488810140236665846928586992082180006454824311789091323774002510945263351862712964422865623934112293184149374573706760114682326698881257123280119140924775171374360283137569618025005229268057970275164869735173660958715166148344076027212231446680947914004346760896298312286730627916684448923824769')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,0,'54863480.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,0,'54863480.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,1,'54948723.74225051983134098996071145685528795757427462111901537365053896571438476055974853245403475510333627298551845046116291696445177112567064282766115207407461565363967417615506303416694032848457927390574251904212425813072768882213388082765916956736282110801611726537663292922699021333445658549608928179155685881583228490235606377831724593358583903616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,1,'54778236.95145002027881946516375418483956830283115745569981757335827825115701888818627237691936643048426179661497641859124500994829625897874508497095086558766563666622720535497438693688376602804651302002795213923698663694204683995198328880575615535181012624198813873609885725228117274934655048553507421448724831939026752650108735245933317237310133362383704426321489070979168993853338252728216162346796960170352897972568238870481118474064783391570102958474141459619245240874849766946530000977144965')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,1,'4676749348240.390309875431213992853550297086049749814750492488995108783145961719774217441193547534210468967573344456866203963659951312519988497979489304488948342258375915152429008993288817366720647491166024151209542534474867042837694499222928509320280684557676243780452100132238968233413333851595648146954975713386711764268506890884764704949969602122157394714663532141060559896359465918874990769222345665160127552795532197771168442486088776803398878354288847069602460071745966589164282641033852314335279121191855487126430176047553895892632834940595958394834437871886013513058514896870683979585091413977173250824451205330441299000850618134248917380244749589254309567551846327349592529960432446947239714236828401206843011440433362544797025114476612133622499094287321570559088587999417440664282418005102546343020409520421747216')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,1,'643.609749344751131516972294140174556703217311736700045690413622699888869645595256683013323517984528456698303984909359393772036036540901870537096836621035845014213031549051156299974682317824766457362427063305495772666640279328909129870227828460705733995380145417663304348663705694070309475835826101153850359826502235923289787750107778906593010060115662191620280031872002110849782776325630424918493602259707267214006217268630948545349980430128422952869610116216278256812581821942763705098526140427280008360043829906543029486315209818099697988089748683904695870401517598840185535891464842870210715421728852789815860153472208176465166954851895457846723102438114697692610933532992841803219018495137378534010155991355251803548866919409031477821173935696065078362044927492034445482457329200246282082707380974745411383781')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,2,'-994877526002806872754342093885760.69667996446358567630831677089993316481039076439881735980566785462673358516198695146576524119916430759085192883825888457383242076882081857926408611052522393579396644731758241837010163568445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,2,'994877526002806872754342203612721.39038050457374613143278241259478942521582284121765030681448507149813723390800786083916642678676237719134679789066681148658045087323654637787610377226547625566084597844703238942080799221554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,2,'-54582443595378013373024060492546032003692.4875677735896411267274323339692558458420972958075073392126734000341372096298914875892612108329218081214550050039133117695428196702128258481789017059073444323729583900855712795086447886053552786449313809589992185978097430132940882612817775035217244553616977182049775786664446683332098226841743818600819221587510039430478859412452506872131851471967577741190323481953867845129745440745526578327709351120432530702446916035797432129052518980799424635406993848916727957825620638983706180841278402925286540375225365057191075559133035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,2,'-.000000000000000000000000055145964114074763360265614481666934002579974728749248345352023099030383962250681574081874554842623852433135871821620640200582985140388676650602814646133317791813938390695683843848260103199745295436998313216878337673674660966362155480524935736646623766057029148471463569162153009963312016563281545776175277904913263614668092319707343286073000287493274965714031678784835459999763925833141049057636632430975424499618419962303087175237320046300285962065818926167792812657620724550768858763098967149546312995222223400007044549870620849992226072041407997925405957501929449911416474388622107825120486594723448780503829317691081601820425151593487431389373265285594626753418140874747955925763163132984655078996173911578832035721963554569605730262976354029623260224710106409129114204296314733036')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,3,'-60302029489319384367663884408030893999.8854209703537480818248540990234567956069965340942024890856088355839135538265116174644003927269495876835324407641642359213535695803871472434650475144516723617632059130297610134243891145006222068960999879308472500422640481972089756410157246974765071949782242392661524488959954348903412713930092273629207697480131360047867213863018127928853922173643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,3,'60302029489319384367663884408140620960.5791215104639085369493197407183130560124286109130354360944260524553172025725325268378015783145476572840273098165721628341015996848028750420770651761919246816300854441592109844750954710317145008297946462099581451150385769713261452744310496166494545449824802407416426304041583975713483424241727236417259479541129474082301376239522310995725648773643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,3,'-3308379209762459471107480259839508279070920437.883503980178028214343751083865562028455061662673132221930429904398963590401793045470444301883103141901787466923883803951815572606105617157736442670792467625964359169270739534412932791178258858918086886061702512427989129732248215348301444245772127142869263635282888226326427510486246184233225114523636171202034558843515894542952126988613018789833835507734620046994907453602573865012044120483116345444810078666601100257620969379968264504287700045822481492526688635364586344704730579892342786173395802035361824932075736340405960099542224953439044947229246847140957298841482874444906129049023002897135347878048572628834749795298712449864571996898774444932083319581439741625832405434317985988163261591679157437224404970927012111196724239860528859217322132733404472897289')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,3,'-.000000000000000000000000000000909811507365065002714756487495210579371808512079908127938523896001746219475805196061435010714649189975968123072269549018826343830061696154665503565341929634172463095299662727352635590451263034658630449260378893723785917860125051787451512267088404686342938118993621396641623525252649748977992770709930435013456855344203854749977414354164157192885125263071636468941596567220391082793700307461350484216679632552883058303710297475827456761138832914743429330069022439380297715971317819244718196187172770061156794130040674050533617155253444764036426045091327368023602807193742585178432544430741520636125146531502042579276206322507516332917325631822606079220413965396706334639331097621824106950192993127113903265025719013680733760540930122186345919977470628988674677630636632053583144327')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,4,'5329378275943663377078725.59616792993138452386059664269485161374191901124632386474661634799161523147237015531446709484039091244606359050341194730653343894986479159670583937529516163204904273806158788218327396375034882788180783796976731912141525319602448709213495905899041406302673881364465504945113279286939663215197485367850132991968081639290297033476859158044889351836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,4,'-5329378275943663267351764.90246738982122406873613100099999535333648693442749091773779913112021158272634924594106590925279284284556872145100402039378540884544906379809382171355490931218216320693213791113256760721925653394811317969065642404864072442190731745871963413981746671302248281216916486794296983018838956112081135739969615171358100498945955409711817327376172085836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,4,'292388240303165948041827159734686.255558469787242316676287235194652580157149226950109397295920730296960145548003120827363226435916209781396711693581454960342091452830648929118261388933297036933167543189308061917640517578583521401267417187854611829815212778183983326568586118831109538377828156118900313778053576483381085207892754728937946691892849474364477434665960112125254104966566712906532318984871145605839506991591027939136026602051635433295687547552796828217859648186757719639965988287173297286034098497871707197092627676226053609131138590878743560287292934815277894463305001278326023708395571840850120055316276256138004565442099731931051413153564744766098053176049414330146267604802971221161572130161432525297614616942172815141372973870720928125699420370428856022295499447755488148545048400795053604349570217878099721865670458104653570360')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,4,'.000000000000000010294536718194523982241053267404812827031741197656209184880073175960433631103885281961037127283726462743623757855378209281373475473018922090781553213750339001555832360656399849031527008437303091226051008068950896796359518673740801770866360774945096397034708173365378527676779736929035450380795854046109380272505550244458858231227568118355064007614608452292270378691774826689216790090661497154742954386244856792006376222923780801296832612827123778915598893970651480451509706836620045721191411824060983487064555397842027454385628620582036592315345973096405447742002746762099231557054678593446667904250189208490698468539396733604833688133512716508825505666644390119877423938820483653319376926639295680552194966870285838815705038244628263602997511842285889300557188773128635554621378148419364876651')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,5,'-597892150.08771044822540810796370552966707032464017958269847934730769542644402913723848026909285133109089452632480800168074607090893991283808726990171062867538012237270000932798704781608969096508450960185964292594677356241956277714380500188870696516251767979457838109804726539408115452577436052503866633026489282425086547752714324273565900641436632912781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,5,'707619110.78141098833556856308817117136192658504561165951731229431651264331543278598450117846625251667849259592530287073315399782168794294250299770032264633712037469256688885911649778714039732161560189579333758422588445749233730591792217152212229008169062714458263709952275557558931748845536759606982982654369800245696528893058665897330942472105350178781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,5,'-35812445701642379.972368737320206275515144213236752803936806738624588812089615098329765811617509505790110909629109400553415312470540217508070421816878544125783329593128638405659896184248784794258084116406472768709113030915308410565617764394827427154923321461158387012978726512246146545834669665093228316853342805604075936530371665576147966721599968786161939347726656168798065647411457701453987215491345496003650288850096338695703984042549594979897253521041581573388369367579323607093487743440894765114619634001789457486407909224339065748496715380572175183589195611952939575073075140094901024063428239223964510824958346570603142906309198033196987949067156046076497974760641964978711558209708743776024313916111738542765749928287600981397080809041007714387564206594515733287925008053261840295560398311905155157989225181164097547541')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,5,'-.084049034261605466896663277055600903951276881294745183935726262038673990196778002490449355450474227878560465916800470848046625257516764244432096856845087412397406701521972651300484716852035267197801389708234913163750232707469240634303111868882057393120649919262424619226282082184091177505826009374043368623853156698509808569378758387708910629731005691079770517679511879694426434724918004419953301426679939010592502325130576915399009756468717124460489039474155719834555522581553817856854607844133431854471292027873672356863673617090151801474016666978499651970627896504709551656249007718965259502928591648533670568214972768900993459927860068104745163979267716597907297073374689384723943955361288974065531322408839914599555769945298758102515352082822617428033648130099822033393662643586331479103933840387663729387')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,6,'54863480.39378734225015137845671346015520435061071252892396685718794832880965812803098645730572474084523997120024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,6,'54863480.29991319786000907666775218153965190979471954789486608982086888806174552071503445206767644474235809840024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,6,'2575131.137912978352131546639620215541477987701194164886305951830806120142596646541302305984776928560906754259789485960991272272782091464270104432109904222200473616116525297615725803495463468272171161659654385929185160689572943852767523792651123455283534072794326647404332228203001469884016996499768656263775233430922446983838511590562929268821678518640501686017030536100955531423152839988008496919169395159653034847677470665418765966542111749439412')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,6,'1168873084.346566233232746391559830634361431940000227460271861554316197556566224118756340501278103405856646766537018954185964066240457859194626558143313125824412559635129130086906976028635444060218797992547370132082916380788496584864016645155338102476357490305222392452114945853620686975383081427840791892729407194179236897452655907829255937027286698570784397487382242990326347080472574546312522326038419753951437799831430690304084087684303035538181812523230890783372773953961677974396907303758903934808035747944477277528267001070234880092255363221274303820343225415479126819937070570562654065195009839593938440374000473302075568746771126391307584779249330981594640387657042725725493800876630516005713789705652827210295338592985225924959199657729900181287069808881130884115897407246324220524401243575641227725030779990490')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,7,'-818934540016982261.65314972994491977243776717915257186979728396159058352649559139156429817562698954531329940720620096519975256547379603654362598494779213610069399116912987384006656023443527501447464682173445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,7,'818934540126709222.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,7,'-44929599044588573810654775.83678007633232843418115790847152455559258007804727916986432256198687661496804050903769496933400455947645400628259699874770581538122521805603947464462448454681701547899144129061961394870320463199545502030106801911915987309444301341575451240764927967432593181449618816978119423290767783843864768557371257918447461479570164065303599994081990686')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,7,'-.000000000066993731076524206362744068866774567920404984046399050881532938231826344009126898802592302273719505485084766150904380671495128604515800845609713368334606489445184535043833069145643553083555507533900955661105251251918425885537513359541698046533092111969478225528665278023069818968531644884466229545497943710817187632203193468836772459599856856811131193744272314519908999458320275710240994009061040198159739169960258978462113813370513611735006229733329565083659159456172425715216475781507996483885669437855000029758892126410922067202159414570164537031153818197618428471046051340835826664787585016361564969663413176434498159140395476980277574789931364078570781760777773379636490084338326576889857824344578398580499610233575273027387501809967324874264742269453420400624883982643066864175851881870402856698')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,8,'8551849703.98748751358673528924211852802333963452553842636251612056366144128630740476125273064380199240146487881028508694029546139131732304020786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,8,'-8442122743.29378697347657483411765288632848337412010634954368317355484422441490375601523182127040080681386680920979021788788753447856929293579213610069399116912987384006656023443527501447464682173445385303315267086044455246361273561294141518329233754041352632499787199926225490924591851865949646448441825186059741089695009429827829188117479084665641367')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,8,'466174236688165594.9218054325256670866060556227711696100465581464881295978997280335378678072434776702952026828137140986670189756965420183565968027969700090735690246176791371115610886533930223141650377886909408268207750238603105232560663571044993507074695683027062426288270199495225881785499139012931143826099668999261931834700467395442768201666740663642498098541516326470052372008385656719236306238735524802875519713512894448940917708118676095378518264553310312628830009314653641136566040400')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,8,'.006456816440893715330247418029019114736889626790871612141686117271826070935285769018710680035004320626745647926106882508048159628931624522666638442625219959259156539178378186912871506893482633695438850964052285542425753626455183282159259999492971992739484319464700978750304962671213318202670228197968646486740006148091321740497272644910882302412140576608739962605210964504469426861972705740810533465451230811358870068391007718532021526225893542801514255726272411690175555142385382688220121052891017808391607717500701760375927811435030512071347521837090721052128992926357375527600337655573639413811262412492632491693179011503973930804928749370652038245414768103001067902012962988384812280453070895781287237746786414435546976395632454474312533482077585837153357017362048554313154580576238549196250793055676215164')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_add VALUES (9,9,'109726960.69370054011016045512446564169485626040543207681883294700881721687140364874602090937340118558759806960049486905240792691274803010441572779861201766174025231986687953112944997105070635653109229393369465827911089507277452877411716963341532491917294735000425600147549018150816296268100707103116349627880517820609981140344341623765041830668717266')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sub VALUES (9,9,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_mul VALUES (9,9,'3010001475769225.8286280957637941018500905354415197182850820227163907782811814730309044010416886791014702373809932926301368137684091094408663914110947072451332976891128659038142954192986392936981664792370678656287232795203974766040821110221158579481177539669363513848425151485663431478439528936592701070340012569297177488556353760756495238304538439278682066056721729656193616571456456325016960870401748115848423105783116854283646624807603476682295234280408938557209608025246638166902335016025467565869375885610813662767004038102486303756741615124814580306266901273803721191779461890468156043551004644728343579032524687612403663816107770451694666844862368101122025340182510019516924578414085461628689')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_div VALUES (9,9,'1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (0,'0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (1,'291.964716019333021494947753821238960905461614737525349376826064492714634914263808902604580614735501799528494357560837535773816469841426747889103714048646989532842972129124080559131220979335403729022278994440514872845756198274805589586120535745968205107562348427941379641465378272611453955517402598409789621997041856848783989993820946766177453801729783316269310186191833995557234577548740940419224137195404391193633808203715191863638616433190672511651125299379882126530500870287424768024674231651229908224729856278167033444719242144302972892419034855417126978468296581589282861879645409909873113678361180607775255758820910366926076380306290306477790931129670172989289536405788838857428768869345763784112862591549008321546447442552533919976570125718481191724503352619626562352280522949665158335559389298720990302071')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (2,'31541679188064906.712574384704440356216787857626740375004266523720148374188511622980520374202725176835435173058936870163875556102907654264048353814040480579464700545975346621546520503928314632418705230212623378642743044255181848913683862360044189531298446109955034944189751302497670367665492719604026161836224535961347218522748523360100432275693829501972749859329753224444694962089604095212784768854310289429208671271394086829270986183171968944659703708706544668326267327938226750760690620258967209626420981505237183055363540806281098871221581265173394406715458619627534396065960117454160969749739483126059760636526242783235685190739315590041294766649891987044641492234243404608847939002062827210734973778130441825067858641461599799772535304379732674727995848518807202053316225824685704785148921785964036119338754973714515974054')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (3,'7765438138915239878.949520541017683429203286303188179443533225547096446554008374834292278237558244698868300666061834105683999048386497322007336816482648302911579331582895326423063492240235074387242190187374869842856897538718280497895072291181675294000739548676781615025944675912072664211455701112700937190832332966000160156597821149428032612782336278939437593991008833233156511435294360065004167893309428565243314846456225604669764879344135321428948841659419438769652686215993544390780212859309497190065178705035652106614050448518931820975038314187040226298661787490226917902356569717171481159691409131778764973037046501816919243659681416263730519167614043077472097520207347950292377914586524327206547377189493301153212000966249655331053184913579513686655963686155890934436604123384536027235444923674128269748280097789270784333442')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (4,'2308544622905.016172868282330339228589083058636874526727829838244942341440716909466939214393597311710652963849541394758298277969240038668406494621950956862959196896847352631445328917063551082418729435554972200530109505384839391233286173517804321019323644218483570886304028175359854335870835404627608254205407525763332087823548640923282031978903399118139052814618531713327991857575390136755426466065839913887477577516426991104516201265995293600539957187007068885368699949673989051443005684755994465547159213587471972139403333249259808344536605314911144950465968669770276463111776581675944967401948957460097365849699783091843609965345747287667911324039374314413430490112443463386381631812537639503425989372084906324702158112088898424705684574998783112519152403201231176840068666882123684602080460378627639651465436618032671756')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (5,'25549.082770905117529972076915050747181125832857399138345044265535151111965091602789684342996759657333588444489085160336703294705499665424408218434077722506748278242942379566431768762487954917389137120540138359870652558814224523699917122023018717544160579704907452934297025088008618627873220397030397424422097405152321366495319708580932627092620533785271831833326130796638935296720064431288560292191928489034307645738331451165431755179025359993690642194334018457793169983249853388987495489562746304107188105521296156525984787815685365255240654972150342496329030279439124533240114879332406941960563154881888172285475336782757262639979527682925214971861707635327995621436598536743180180978457735632181738067997521785965451385630326464388080990200265186437768409003553910194212076755448477164192901658547251079126833187')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (6,'.216649653115510782473161631235601739254284877523828136703593069337209747459679979369185882839688430004369697316986054374456779366220242645866798278985273820408495361607183119980716020227424205519727777568954933592987351750339481522149106749713967143685591960510946511796062486795368200503801097611436787402191532618456991115230272084771674098613479989808680789347124789253499967359190605681912854639520917409710307182238065185749856554472717209097115325999946728168357936779767099041518574001682560265549916593333117469681763348860131760281253987626822958726920016922608371657319505153308390495179319529587670415367205193280809809356733443291197315823747505896510820272670040485083775482983378341120809542502350385555577946098824446199419354197416933858522419312733314383889554606932774046771497129486979593226')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (7,'904950020.759072496304165474991957396337281699986101765045213964054286624338102141970514306010139529492299343393832200631760194440206005974547202512275476562767685193838576516154915404389465528270010938533075930081897392863141132529694804621418663424569202655893682412466871297412964570322984865326770090075582481194532433411398133265643849129084449161396724635797324126396071308557057830046688990212282866035593809633839882468628249964862932050189148498591642162462777480125024786829078066012617362076651920045684345679767223337287825546294839320770903419463644110383560050404456170063805115223954191445548226706113970164823214416171441655706141596091717118495955441099867737827763335880891937222647408575142200256804313345924443344596462585960919126827045197885802122062165934504665811115031150357820196176799560314653')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (8,'92179.098626752893864900181023972781406074846653380680747862421481598042923358730531575438403865501429843141967819802251116774924400485954931201776260931315313253827346015775662310076094882239170765060649024538403329505426563390044695320714825481746233901773893996663258170360232639353378395244461670781152793416950717050461856097473105730100523010642696332151571372764781034028324977128554099993021459338419164426784774496292405945103200724413639660488309795423335142455569853549710795692020963174011003447023610692365550245567840477105794884132665155376243735213346877116105595296043532605899184658904822980397411096930267453332143879534914237169761039374689145860503772331147367757318826885494994339695470190886515765452545019167989882527248872835783707554463866334705735781549392895480816605355996057201589681125')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_sqrt VALUES (9,'7406.988615277484686670011157489572203134420118818648711986549881046321377798441006745317356200279801348355202517703531020643333388857073977704009782384103170022716610432579974132111487533733493986910583223121269323909760573942980360508642443245341392335557152177332615977623338526935953706604224108508582338123915133189529507760875123300397933931420500010248194253078118618381590347297853307090813639981736227771834732256867579490224181748450683295253634852775448770576585177080941820456051588076218688792321741398867304684922665590162004919486643750098085197190000638539994723704724550600891137853975703823903659121582583388450687255538838161486019214242094423895463814933532217776443473765708693285683261505695170847285063013324823850724236845500162436661946026097459146424122412596018946436589967013641971183281')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (1,'11.353265918833698201334218522735144514838241118349715803442713722607336732214173255618762341321138898556011520430414052782971985419141860417968593746833898952016980791997105866598425597066404919489902082738711038276194174786383758877067916049129476352925010880025206629976454341252818402788928939407784629386362069592202090897264194883276572978998896242281239126931595483958092059051047739223830394259082355969005503976135238921488192773135287876801394308064862257453262299764712613486466254696464150007113953810688169396432889052881763511661127351872408811370081346456019961324265446884877073712053408327408917588393884214304220369626106333713688792094943405258431214313197283237071070354654837081449831786573831004911008790533179001070424813584405346221388686999574752038655226138085374176702005198770598232862')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (2,'75.980172429959420723484178622920965327708652620924912610122049843800380131746381968266727388919414524075492921510147435877107720844487333947572033626887969846858337336557672107987074468763307953130616555202495401302128216460637786993535376622372745654109623249396257174895352222213037880060756992073605135503615371392439827458529942230210514752764526895030759481226199720092008002458654297737883219558685499445394647863430593136350562417924068100891680398878483362058595716232013516337079804607378041880078724811071904523716775991447489914128580100888252698281559809224785596795038122963619830942475652745611551345360922016753939774272970008770647516790944335173711498988149783075646985898883858697162003144539047532603946093022417842140993960433780913606807466518632121884254341907122163281927271483110212890483')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (3,'86.992429107491709045555322727377654177072455841678650084144967727028762699430180506209786297136121512625728883607972513154010138109866327600596617277403558404624813332464431424791338402731178416819791932126837396086742033973404980654712734845137075562739300866280737071167943367603243180515859476717635339619107593771719314284984269343476343816253634799874584843436046260962736006310389088154751401911743739429257286834178656182340416539923956100441369280015412718483971113838923221170027312390404790743389872757674342133486652087007983701950040432125562287337697971646750563062524010514537132255605131615248097901911480464339325353279118429890601202554448469387179349495284716473293965884844451619766312048304583068386805927433174443889441171878078987788018564357316138422561213329104267180509029624308926098065')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (4,'56.935276817066740776567329017240462885579486075188456418197311631774373422196025180114152248099799048545382060930401786002025479108787121595516444894009593031141335985913019897883627990503003577804436730367402618412514152465206336556967419434371593632864308139215157721913158949066717186782560422199668568894551013785702491365073449320535603830475158258853167712460432995074161536886421366716995573365924430692151761737886552457036412140640821310927642146210426044265504978418405684030862182425702683702307323138985481047994648222224089112998195621687911787785594701557252468626097576375468916953563766801336922479861708649876362257086586679701715813254414915314296890025577780265459584203893089574567331742100451277992780400302806430264717887468808962517029442262560742822875484362427192693300423729233467613910')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (5,'20.296713391219923821414834924710998522858242536565236229645868008008504475111229451635162536658197320282791428572861452713483981402773630985812066048575864982038046409484905688236579134672910905547858248343712686247795669280482288748331949478864729205285910525962001251260319741279139167559906461672936902355959755164523720443059989357054368460911050707727029320725144824995614445423492687177126412520389766864793826362309254124276325522276592246655562770110024099522184080118637524912964002223613671995639705240767929562023556724031894855094820328152633412077228479168557819219970917880393852962560319397442566813746504969336443969816954424715197797253670026862362130664772772977978222813915593329422557592316429203293264572088112274848838446633519530653849595288125585730314673691986554304725866754516304420665')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (6,'-3.058947463851998053084898503420969773173569760507671013593014983772013099601022840164736581595033399273677583253456908293015637115395777673836877852797643436458673662566205707359569792482081945396989472318998080581824382006377064185813936544714612287417301161454496258176319380348780934551188852900784476213986897306897793456700682073399936398243222895442594762628402487110466705108765286617060826203345783502301472192906817785365563881556293576463515218574477264521950513789471494214626744754200844840310516235570475410854073969787604451971790833680742315518808178608136598148628107328076871698598743664423452623124027059698038466681488746505289551548778131621576387262707147068500249466398507704796800459013580425992071957391417767257856002976954566094297724379688683375704613872658653366052459242767328235849')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (7,'41.246780548917246608934265057073076900048579756649769602488660179351587788197892095257027979113051775079905924990472069951828742350559917110289416201523653941731339141666097617614477426376799479821365070373247490598890520285155435501242427296281987676879064510605563522117334502131946383957407685328562874307957108543536378261847119286989184256009392692140821396916222386573424618796707564187152459973446833193743614720624765332006827171872712331032607870580880807058576154429597725560836582655488602546786785520452359711161305828045237044625934404295366273012300148250900116489718279757540843657039519736455668388572899273464839528462223812926410544976290646668870192676914370659142463304861500879195867873346447316374869974900582948166687948531910220128160490935170837209017355954301127162240133341813847180541')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (8,'22.862977375646110045361670561177818139082238721442691850491173190000619222046296383571431877856442345505931635735363450488731186880557789439424987680284612480261693386095598289519783790826332183796775862215503493910816035128476952347072320869461206895223935484838130924268616681347949695029657753251443811448783435000569829291535036468240771401957519222523032235686030017496209956550934543164421459898155836108824017735809352580723262896259290484291175350770265895317482371895188221452083719817251845416195168686335127805092334984596224320638378502008767433534450949989322562311171685891891122105437154553106840103473941148230953978989145470651955269817951560544095229079088083494695756914405635176899994279484466773598435268700064279990885608144109747858515514066444373797446449729058958270758597627587968112958')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_ln VALUES (9,'17.820358481980064387183481028572263407130633079314879566896470101569251997264841660326428805413719418277889123643557369421967068805165885825106611310020187894256310674762734896979157570968168599492401269694048046876387337971177513661006711375440365724346137980004810780215236524986274043416621637509807126148966029923572853117418545426960105154053049098579812135003711132897895016476695223444397389521434633067499404903493027304737402519428197015899833229473322655155458942323004249812974150129789653469524573801259946118454333405580647485894435301530550214095993989552176497867244278699359917247910082169086524111229983698975613609318418313798992088206507831757327320958918656453341769110558376097374227592021075267882222057385413453949580066342977546145482215220982989992069525148522710254796105001938615214263')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (1,'4.930660740129727276654889314296515979425461685461970306647398411855044094312185293195497201658739777714943974003690119189101973212927970410047992001003936259467465542044528955416040460487922970233600641954269411521809500203864460110903973264337093883907933081597350982496469748131390809569321256206859934619579029279954574676601709408712255490686948453752571699579252140062805776361984468580258289509013081691778727372026090522694670379557247829136504595898935235926069699309392675806881162434168418505908116911054206058735257796918687777716036307205415038158583184624809880157060625643069601549803887864772092583549388533013233603450097615537162442973385137488450178790573546382354482351187412256794374383453695483855501587939419102008302408157959291557415763034668013452188944554607063362933134950906875499201')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (2,'32.997769620388965086774969704518222090258389987679691893351902336370051104718852164011301929506188893338106627980171059175447833290713847317665944354651476245003161501753612545484635275306181777040447675475670149066399611203341262105766118892586541910243351018829302798733989560900125591073082441126709911019648451232244139674063434385451279378543163944005973452562993913383659295688375546058256196254319767218634546732685705517341998116744642480938405113447415486950667007645850519659606476727681944251201236366198374488204017630268083077471516734133869728427050843306716313813724061560369884508660845630727190444623729815564381063131729592825825486515070406390371638817503915214206586939112681762984038333298146999891250107667687034785493312416966635780188163871680959873288697497561452228182734430749066579749')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (3,'37.780331928743475574895606142114739140772838801045013007323050327909196792739138159615327729728110344767302636436234256468332011934881494997184865617793179255006442447189720642997935223133982347184994174261506212652322213673745795726283311685835974151422721233207287206894148660531800622455957268888702309499182978182878524951883775154983702898237404558813230370364953160102391101897560104513279410610948028599674950811462114131673380477843456965645417025376374320207504913806546872166094337441573669261285052323206348035827948287081776955945081345131570610652073053464020209215624179904586956137079321655773178387441622685682721151900601340680061607114354850640946256225260430676099781727317540719923791064452012925902993317349390523278687089530234444415688602090547516647302454865526291471706301790881694022223')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (4,'24.726676547286224970759328746582840552419566534667446425423046931401641497155587075591229106937829957279943690528061985864558314570189069764367933957499905044566413640017549478921384160584906257607957223101377816440084188042395098536074479064548620374152344954289432050971466476174493306432228880930006524504974367146536665170956555486181410864034862861231267121149652317599303804477688621597163730470970207231328339082779056152481480926452142005969020950341307977091850953883445808399574256295803245530993204179747743812544604144379381347499056545148243304041538981954204310612049423688645476667184129189153715486929216331980316967699254518020077226689317148303152585009031597809279387172427408557115400021035692880631275593381822805377317270568779655383061987766693697518921188619814204902583361096973421134004')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (5,'8.814750626578650238811431417807018895270298639823442501111235973209197727215795256506525221092818797578008152140054383421240180435087611869193019443372556081555311825248667278358330916098378127100899126895012782320751838528480712942601038190627182482614147263228588284866661508052724762701223357327343090598060805245853527435948381893458352744679795853650453594546267600486696643924152372736774331080527157374379043696696647158270918245668579680394279565181670004245143555617589138267976417280970718829942998800499312890580011246294669585429723974582350357991472101919333996770115834067969654217063942059882195268353998096891812525364797586486311202350700339609637274043915687880562465121559531284337603363356183320193656553931871200575467929714875483123706358278876389849119105053294688326141759401230994901405')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (6,'-1.328484003982869642690619298690906747763234110040562640557173509402512757735587333095924652711056556491908059708986413635120656426593745303715671199761364516107844087845783714418487426723538440387069985879601248897538855843115404484229652166941838283489828419407478748732927617251897244190697443966424660881366993754577233476597163021768156814527570512834684713730559883782625870597080940193303268818336816535968869931456641949301731046034660616615392129109391145214470757259042172416816936479713743188047425796931722546185493217275537303458837771965375448968719169174136287532752370175863826715450565025635651343928205805494319778539652563499901671319955144823432132740582617949774638538594081514904904341299199113721131520557004571803778698005652464301037962272085633628653321081368256925971558076970172779715')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (7,'17.913249188669140643510654105014358282516966474257460687880559542190804665566625978925406311113121982595279826214959603627387555578965653325278444455875162277940655989601428868642914577248262147833499137348602966573601719040813549936948178463592211685237720748377879836890106515699728652218324794927458352954247096536337594789471529493944292143186953509162522579060020018226817623648563806559917579317916242706559131476179714031602207057714677845347616752450567251644277767418397621490301286115159509360375419599968738067461569666699939732107480135216621373057421990702923042287910730395998082514702629760389192370666675364405730936537832803383367187639209534697198515928978064543150195911463663617683085348965065679311986715357338675515370634753254774665197233934933271954463040729779956682570415317734489164385')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (8,'9.929264914121995501917993119394933531225401243275938207624866270551448544301376913376130982251708700134720886862945040266148728213253651323129942781577143957084726727561987639140151337848818195806259935747329665025823709044567138449084349729747202164413995795609659711723455165142329822773177102845804114214340046404641970845707372809306219463962664551623665322610139794354769767829380018857313559373283673392337954610346290037758389035140213224696023751541663171574697035012610534455189013755134090933979479069288110010954211669067225249755249337768792642303351914884187159646984708862430789018895140670365476746734456807215043628059581947593694929159076346249490593187993386780521089745819640214783614157516171005086731241769146397577246387886107367648843380733370112546792442909347322732196805316614555689762')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_log10 VALUES (9,'7.739283354261751283625223433456284905560931805428759681411970457812279544250432389511382263439324085689734710188041049046660480575958686859942980599595036769090747781359217248301544587434077376812293034848418204834388504169166350770257248896025815531248627658465029806509131631454856186387892627989218208026727504548130018922325585619738185507999433763118148418722504204066578294826264005398891049629199412773138457218976050467479292777172717500219850781664314597312411301296201533610562886229900497272268364496763758868455934979903774531992886483396489868888731578355541611359130188566524240259770918423445785338175040098706500034487703124623745259139247432324145633151895802637182446905097253961951018926565652497920605819785424451050191604602898777804133717341512568151920576684198443843944721398831404081859')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (0,'NaN')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (1,'225561990715.277245515991117670624124484084762557459065170589803293759247930753528436379932442146759103295277479258327642314622036941865221478746258727236601688778946696303277607709407496616423493315166963938393760548678730128692212077086588682984700837334554241405763691119669847463520746595280034536307041368063462023793177898200220207765205127584303464304601759554817607633012272490650155253979182893585119965271975927569080191838676053084168631217591768468344106219831174026139608715965691941366334940196517120885214887008671956523579678156919416435031020452971977153991139145404842034138317592877675821045409772456977018293365238179815614004574330200783530118851005077771478448804470170641452481992602803877112958872108069738434946694089025321283178188028224338756015337492913115267362635647236447601252924834642796058')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (2,'9553718264533556311125292459627965006385666643531070061102266984368939757379.536714147420215784125170401370065894858487440153494392538261078415409784085960333028254155527328359894197540839556987826344995348426293585457768226283066583722499658006242709930685932246087653832230889613022921575445199055131152661556678809191264086381976922223866204038615136758192929883317207903579770917317641181652055458721731297347443662717939116561947785705140374908203404860090658919334137955075887697259604047657534191202566335372150375993361370075961180728155127447781364264047857624746079509591666068708743260905728661917791822925979235918475633100283148558978385583805341715868143937062092264994833222352433299015979561976964779350640064096690062929265992966564232453102431600199173711947391200249130712039686700111791790265309426741120465259677894665532560198051256215915373145226284270408649736509')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (3,'982718444846268846508445482774217796844461660819285525931206164100817251856409365450682.362683768066405322653747385034480250394145008573806022660379219602846285813744865438912887625784087005970975437905783802114553690522787857272953842288090141945268495451006273685577260054069522075046955466204804067271437138871789034722069934693546671607506851844248427950939791205412350536883779850165603116191193657054604569586553874805856647223849267039531773072343908345333155562072887754900969504551717514980465801806565999410206735831440712124661645970935112535081991606671600328471264697018198676317466846450405861359235297846597981143547119390922405594115478086038680663368675222949247096131378724350715530605691796680604309063173515781378545860473572389718345696107553363715518601596249508215455106779522851210398208919496668879040223859884166805448827948087400426315425231119801173387715922086154065273')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (4,'861542720105376650266753999919217194383259935058507531116.774511336660822591851369622743235084609149542494189385785321912210129989390054947787009383210009523204976629456268332186620016067379702483800883493431423160815760933380418976582725913410929214462739708321325884209636272001805871036779154087677637129248122540412937033791526383240502286607736226090213753913654673523613612439527815137888202973659987501649474772884055648603290154867585312925699571949539600328906295652872654314913539778815035321695215634102441494403825526533235061083947035338872599854931230001361227174477274708230470794066733245241594719912710139298949856243576688344051439047966427547889756037265151798639614843866387316916203238068277912991427278268083231579195846744438643659745041780103653332041031419793815914447232121937821142169172566753399257291244398531365781832297786941359729799400')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (5,'198021976607570296508.271597639984889464620426933601643322058775615235389194561064983706229795978402690473201671702614911129095149240715527556855309177671128442458698638704394974473956869419481315262823632891676087912529523219333012290621046361106033860210270638559271706082115529424772192777643046125905852037759566224116373416253787241195450409652089019290072319861181399387753223422998872180810295299831487867222464355713552301775702554189470264147325049133532522718679336524769566984150923939420759804463781082299907043016120177416779442865059261387111806785876531152192378576258351599534512031062777609734092707165605364139201322351960602280089186180302246827234844736393745487324460438448807241887783263546165171099497316415863122023114646876909575845860402164818094500541234974716577550807551946414081410743197768993152975501')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (6,'.000873076977206566818052116526263730226812004454463281371489634779519089200224205946321120805055212090024554381349223642352209212670470260295303361873760972918129853308169576675500721645609379420329169271088810484607337679253503247351324049221970104335289487989027621978310506220905131150125321713385148268584530413680037620544212746920563790371941626294733473967065607791756894237438288480748407449237446113996117912144587258434808327522518688617394025018756570740098795745692805352377041347367240475846033282850136270250633825482156304826383360291164928049344226886150285595932088884965511963310715773499733217615863523253012606066583814112265708693122563204149232245895551314975524172504103194858904869273185785182598234060315036187756490539352752560361560286717869643902435677448962235275054804452967413005')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (7,'176514565873872717825163931126806100435750.096278384530154766967061948052237623936423931849868926020451465515367348890410352640552194499619062823622476972850692557798609619250753020363520533767813563613425606228355802781302735485038377521515850536680425059519814786118919994914180918228654298075183514200191737597656810036850772127169441661576862538643715648802139886576391427423689320082366572297580054381937437005879583216745596935643579262248665490169331304003204939561361718554509909313409421397022626924406091551900222555950699170864234411017062042057683304265485826061096835531732950909546314722726990314852356462874701181085379772134121978510387397276859318242238150439474660772561390798432890789762504242822787017140808209820627435991445529404692793744568204608385843245177656436105160780897472099970336514833257055017279707999437302548655364559')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (8,'72941951052009383458167.300747500436981484566111756088702608000390737594784514635592222758882092500858797317505303492923829092720870826490477962201959426813271424853341826896270963213736922458746003100613943600855942721319226948714369219316345322636075285343544788982588956431405042577296229122673590336976893594798942025893296105815818487227300314490440902574022885833779324177053242170024559675073866612316965636832258283516275906085642459351367507561963945012828379111856700009391438637054015804558386733558956649061672420804826896303889067785497738203077050774825608647969196321506624991188638449047860249367840775936911749905927108478444112230174584693363226143549933224252679398881354887872642908328737917862751077365602631600279486028043329404269490375935308156815477700961014566228692743960491745353377403533037122586797765130')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_exp_power_10_ln VALUES (9,'661239032819374816.097553651299556484820492272269662685578275493609248662925676004753503494252951243895572437264999063878330704584509915845096232798927524470286655554736724913758600775591269525423912692080421094644542553026831758426157681271572808657664918053119324646138457659418857926209701677786068580819823633713337632456905824562235373422309621872998037966404189020165296080436871220718574009921789858751384547836431858428729570977259373272041837411903005303672798845573379758630607982213326716018594073712340609488043353995410508475153538231445235003980586600882223782814368245305160648543466496726973755388826656879616734762068443462618454921858705377028522664844761719759342490380417060255776725333319537746890406213693117052223545525717132695297770810635066731941724108167146710297146989770382041617889670713111888375717')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (0, '0')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (1, '85243.39540024977626076239847863600785982737155858270959890014613035727868293618673807776733416230953723818527101593495895350807775607346277892835514324320448949370623441059033804864158715021903312693889518990256881059434042443507529601095150710777634743301398926463888783847290873199395304998050753365215426971278237920063435565949203678024225270616295573678510929020831006146661747271783837653203039829647102027431761129518881525935216608429897041525858540380754759125150233053469999022855035')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (2, '-994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (3, '-60302029489319384367663884408085757480.2322712404088283093870869198708849258097125725036189625900174440196153781995220721511009855207486224837798752903681993777275846325950111427710563453217985216966456785944859989497422927661683538629473170704026975786513125842675604577233871570629808699803522400038975396500769162308448069085909755023233588510630417065084295051270219462289785473643946404281422516357503746700705970360169619852905053433235726497292406142332833')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (4, '5329378275943663322215245.24931765987630429629836382184742348353920297283690739124220773955591340709935970062776650204659187764581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (5, '-652755630.43456071828048833552593835051449845484289562110789582081210403487973096161149072377955192388469356112505543620695003436531392789029513380101663750625024853263344909355177280161504414335005574882649025508632900995595004153086358670541462762210415346958050909878501048483523600711486406055424807840429541335391538322886495085448421556770991545781035298449067051916630343957356635391594362639819978677032855590055900561501350354631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (6, '0.0469370721950711508944806393077762204079964905145503836835397203739563036579760026190241480514409364')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (7, '-818934540071845742')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (8, '8496986223.64063724353165506167988570717591150432282238795309964705925283285060558038824227595710139960766584401003765241409149793494330798800')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_data VALUES (9, '054863480.34685027005508022756223282084742813020271603840941647350440860843570182437301045468670059279379903480024743452620396345637401505220786389930600883087012615993343976556472498552535317826554614696684732913955544753638726438705858481670766245958647367500212800073774509075408148134050353551558174813940258910304990570172170811882520915334358633')",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val + t2.val     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val + t2.val, 10)     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val - t2.val     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val - t2.val, 40)     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val * t2.val     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val * t2.val, 30)     FROM num_data t1, num_data t2",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, t1.val / t2.val     FROM num_data t1, num_data t2     WHERE t2.val != '0.0'",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val / t2.val, 80)     FROM num_data t1, num_data t2     WHERE t2.val != '0.0'",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, SQRT(ABS(val))     FROM num_data",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, LN(ABS(val))     FROM num_data     WHERE val != '0.0'",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, LOG('10'::numeric, ABS(val))     FROM num_data     WHERE val != '0.0'",numeric_big.sql,SAME,,
postgresql,postgresql,"INSERT INTO num_result SELECT id, 0, POW(numeric '10', LN(ABS(round(val,1000))))     FROM num_data     WHERE val != '0.0'",numeric_big.sql,SAME,,
postgresql,postgresql,"create table pkeys (pkey1 int4 not null, pkey2 text not null)",triggers.sql,SAME,,
postgresql,postgresql,"create table fkeys (fkey1 int4, fkey2 text, fkey3 int)",triggers.sql,SAME,,
postgresql,postgresql,"create table fkeys2 (fkey21 int4, fkey22 text, pkey23 int not null)",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (10, '1')",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (20, '2')",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (30, '3')",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (40, '4')",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (50, '5')",triggers.sql,SAME,,
postgresql,postgresql,"insert into pkeys values (60, '6')",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys2 values (10, '1', 1)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys2 values (30, '3', 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys2 values (40, '4', 5)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys2 values (50, '5', 3)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys2 values (70, '5', 3)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (10, '1', 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (30, '3', 3)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (40, '4', 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (50, '5', 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (70, '5', 1)",triggers.sql,SAME,,
postgresql,postgresql,"insert into fkeys values (60, '6', 4)",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE pkeys,triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE fkeys,triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE fkeys2,triggers.sql,SAME,,
postgresql,postgresql,"create table trigtest (f1 int, f2 text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigtest values(1, 'foo')",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigtest values(1, 'foo')",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigtest values(1, 'foo')",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigtest values(1, 'foo')",triggers.sql,SAME,,
postgresql,postgresql,drop table trigtest,triggers.sql,SAME,,
postgresql,postgresql,"create table trigtest (   a integer,   b bool default true not null,   c text default 'xyzzy' not null)",triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest values(1),triggers.sql,SAME,,
postgresql,postgresql,drop table trigtest,triggers.sql,SAME,,
postgresql,postgresql,"create table tttest ( 	price_id	int4, 	price_val	int4, 	price_on	int4, 	price_off	int4 default 999999 )",triggers.sql,SAME,,
postgresql,postgresql,"insert into tttest values (1, 1, null)",triggers.sql,SAME,,
postgresql,postgresql,"insert into tttest values (2, 2, null)",triggers.sql,SAME,,
postgresql,postgresql,"insert into tttest values (3, 3, 0)",triggers.sql,SAME,,
postgresql,postgresql,drop table tttest,triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE log_table (tstamp timestamp default timeofday()::timestamp),triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE main_table (a int unique, b int)",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO main_table (a, b) VALUES (5, 10) ON CONFLICT (a)   DO UPDATE SET b = EXCLUDED.b",triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO main_table DEFAULT VALUES,triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO main_table (a) VALUES (123), (456)",triggers.sql,SAME,,
postgresql,postgresql,create table table_with_oids(a int),triggers.sql,SAME,,
postgresql,postgresql,insert into table_with_oids values (1),triggers.sql,SAME,,
postgresql,postgresql,drop table table_with_oids,triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE some_t (some_col boolean NOT NULL),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO some_t VALUES (TRUE),triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE some_t,triggers.sql,SAME,,
postgresql,postgresql,create table trigtest (i serial primary key),triggers.sql,SAME,,
postgresql,postgresql,create table trigtest2 (i int references trigtest(i) on delete cascade),triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest2 values(1),triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest2 values(2),triggers.sql,SAME,,
postgresql,postgresql,insert into trigtest default values,triggers.sql,SAME,,
postgresql,postgresql,drop table trigtest2,triggers.sql,SAME,,
postgresql,postgresql,drop table trigtest,triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trigger_test (         i int,         v varchar )",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigger_test values(1,'insert')",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE trigger_test,triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE trigger_test (f1 int, f2 text, f3 text)",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO trigger_test VALUES(1, 'foo', 'bar')",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO trigger_test VALUES(2, 'baz', 'quux')",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE trigger_test,triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE serializable_update_tab ( 	id int, 	filler  text, 	description text )",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO serializable_update_tab SELECT a, repeat('xyzxz', 100), 'new' 	FROM generate_series(1, 50) a",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE serializable_update_tab,triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE min_updates_test ( 	f1	text, 	f2 int, 	f3 int)",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO min_updates_test VALUES ('a',1,2),('b','2',null)",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE min_updates_test,triggers.sql,SAME,,
postgresql,postgresql,"CREATE OR REPLACE FUNCTION view_trigger() RETURNS trigger LANGUAGE plpgsql AS $$ declare     argstr text := ''; begin     for i in 0 .. TG_nargs - 1 loop         if i > 0 then             argstr := argstr || ', ';         end if;         argstr := argstr || TG_argv[i];     end loop;      raise notice '% % % % (%)', TG_TABLE_NAME, TG_WHEN, TG_OP, TG_LEVEL, argstr;      if TG_LEVEL = 'ROW' then         if TG_OP = 'INSERT' then             raise NOTICE 'NEW: %', NEW;             INSERT INTO main_table VALUES (NEW.a, NEW.b);             RETURN NEW;         end if;          if TG_OP = 'UPDATE' then             raise NOTICE 'OLD: %, NEW: %', OLD, NEW;             UPDATE main_table SET a = NEW.a, b = NEW.b WHERE a = OLD.a AND b = OLD.b;             if NOT FOUND then RETURN NULL; end if;             RETURN NEW;         end if;          if TG_OP = 'DELETE' then             raise NOTICE 'OLD: %', OLD;             DELETE FROM main_table WHERE a = OLD.a AND b = OLD.b;             if NOT FOUND then RETURN NULL; end if;             RETURN OLD;         end if;     end if;      RETURN NULL; end; $$",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO main_view VALUES (20, 30)",triggers.sql,DIFFERENT,UndefinedTable,"relation ""main_view"" does not exist LINE 1: INSERT INTO main_view VALUES (20, 30)"
postgresql,postgresql,"INSERT INTO main_view VALUES (21, 31) RETURNING a, b",triggers.sql,DIFFERENT,UndefinedTable,"relation ""main_view"" does not exist LINE 1: INSERT INTO main_view VALUES (21, 31) RETURNING a, b"
postgresql,postgresql,"CREATE TABLE country_table (     country_id        serial primary key,     country_name    text unique not null,     continent        text not null )",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO country_table (country_name, continent)     VALUES ('Japan', 'Asia'),            ('UK', 'Europe'),            ('USA', 'North America')     RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"CREATE TABLE city_table (     city_id        serial primary key,     city_name    text not null,     population    bigint,     country_id    int references country_table )",triggers.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION city_insert() RETURNS trigger LANGUAGE plpgsql AS $$ declare     ctry_id int; begin     if NEW.country_name IS NOT NULL then         SELECT country_id, continent INTO ctry_id, NEW.continent             FROM country_table WHERE country_name = NEW.country_name;         if NOT FOUND then             raise exception 'No such country: ""%""', NEW.country_name;         end if;     else         NEW.continent := NULL;     end if;      if NEW.city_id IS NOT NULL then         INSERT INTO city_table             VALUES(NEW.city_id, NEW.city_name, NEW.population, ctry_id);     else         INSERT INTO city_table(city_name, population, country_id)             VALUES(NEW.city_name, NEW.population, ctry_id)             RETURNING city_id INTO NEW.city_id;     end if;      RETURN NEW; end; $$",triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO city_view(city_name) VALUES('Tokyo') RETURNING *,triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO city_view(city_name, population) VALUES('London', 7556900) RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO city_view(city_name, country_name) VALUES('Washington DC', 'USA') RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO city_view(city_id, city_name) VALUES(123456, 'New York') RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO city_view VALUES(234567, 'Birmingham', 1016800, 'UK', 'EU') RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO european_city_view VALUES (0, 'x', 10000, 'y', 'z')",triggers.sql,SAME,,
postgresql,postgresql,"CREATE RULE european_city_insert_rule AS ON INSERT TO european_city_view DO INSTEAD INSERT INTO city_view VALUES (NEW.city_id, NEW.city_name, NEW.population, NEW.country_name, NEW.continent) RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,"INSERT INTO european_city_view(city_name, country_name)     VALUES ('Cambridge', 'USA') RETURNING *",triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE city_table CASCADE,triggers.sql,SAME,,
postgresql,postgresql,DROP TABLE country_table,triggers.sql,SAME,,
postgresql,postgresql,create table depth_a (id int not null primary key),triggers.sql,SAME,,
postgresql,postgresql,create table depth_b (id int not null primary key),triggers.sql,SAME,,
postgresql,postgresql,create table depth_c (id int not null primary key),triggers.sql,SAME,,
postgresql,postgresql,"create function depth_a_tf() returns trigger   language plpgsql as $$ begin   raise notice '%: depth = %', tg_name, pg_trigger_depth();   insert into depth_b values (new.id);   raise notice '%: depth = %', tg_name, pg_trigger_depth();   return new; end; $$",triggers.sql,SAME,,
postgresql,postgresql,"create function depth_b_tf() returns trigger   language plpgsql as $$ begin   raise notice '%: depth = %', tg_name, pg_trigger_depth();   begin     execute 'insert into depth_c values (' || new.id::text || ')';   exception     when sqlstate 'U9999' then       raise notice 'SQLSTATE = U9999: depth = %', pg_trigger_depth();   end;   raise notice '%: depth = %', tg_name, pg_trigger_depth();   if new.id = 1 then     execute 'insert into depth_c values (' || new.id::text || ')';   end if;   return new; end; $$",triggers.sql,SAME,,
postgresql,postgresql,insert into depth_a values (1),triggers.sql,DIFFERENT,DatabaseError,"U9999 CONTEXT:  PL/pgSQL function depth_c_tf() line 5 at RAISE SQL statement ""insert into depth_c values (1)"" PL/pgSQL function depth_b_tf() line 12 at EXECUTE SQL statement ""insert into depth_b values (new.id)"" PL/pgSQL function depth_a_tf() line 4 at SQL statement"
postgresql,postgresql,insert into depth_a values (2),triggers.sql,SAME,,
postgresql,postgresql,"drop table depth_a, depth_b, depth_c",triggers.sql,SAME,,
postgresql,postgresql,"insert into parent values (1, 'a', 'a', 'a', 'a', 0)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child values (10, 1, 'b')",triggers.sql,SAME,,
postgresql,postgresql,"drop table parent, child",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref_trigger values (1, null, 'root')",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref_trigger values (2, 1, 'root child A')",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref_trigger values (3, 1, 'root child B')",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref_trigger values (4, 2, 'grandchild 1')",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref_trigger values (5, 3, 'grandchild 2')",triggers.sql,SAME,,
postgresql,postgresql,drop table self_ref_trigger,triggers.sql,SAME,,
postgresql,postgresql,create table stmt_trig_on_empty_upd (a int),triggers.sql,SAME,,
postgresql,postgresql,create table stmt_trig_on_empty_upd1 () inherits (stmt_trig_on_empty_upd),triggers.sql,SAME,,
postgresql,postgresql,drop table stmt_trig_on_empty_upd cascade,triggers.sql,SAME,,
postgresql,postgresql,"create table trigger_ddl_table (    col1 integer,    col2 integer )",triggers.sql,SAME,,
postgresql,postgresql,"insert into trigger_ddl_table values (1, 42)",triggers.sql,DIFFERENT,ObjectInUse,"cannot ALTER TABLE ""trigger_ddl_table"" because it is being used by active queries in this session CONTEXT:  SQL statement ""alter table trigger_ddl_table add primary key (col1)"" PL/pgSQL function trigger_ddl_func() line 3 at SQL statement"
postgresql,postgresql,"insert into trigger_ddl_table values (1, 42)",triggers.sql,DIFFERENT,ObjectInUse,"cannot CREATE INDEX ""trigger_ddl_table"" because it is being used by active queries in this session CONTEXT:  SQL statement ""create index on trigger_ddl_table (col2)"" PL/pgSQL function trigger_ddl_func() line 3 at SQL statement"
postgresql,postgresql,drop table trigger_ddl_table,triggers.sql,SAME,,
postgresql,postgresql,"create table upsert (key int4 primary key, color text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(1, 'black') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(2, 'red') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(3, 'orange') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(4, 'green') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(5, 'purple') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(6, 'white') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(7, 'pink') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,"insert into upsert values(8, 'yellow') on conflict (key) do update set color = 'updated ' || upsert.color",triggers.sql,SAME,,
postgresql,postgresql,drop table upsert,triggers.sql,SAME,,
postgresql,postgresql,create table my_table (i int),triggers.sql,SAME,,
postgresql,postgresql,drop table my_table,triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trig,triggers.sql,SAME,,
postgresql,postgresql,"create table trigpart (a int, b int) partition by range (a)",triggers.sql,SAME,,
postgresql,postgresql,create table trigpart1 partition of trigpart for values from (0) to (1000),triggers.sql,SAME,,
postgresql,postgresql,create table trigpart2 partition of trigpart for values from (1000) to (2000),triggers.sql,SAME,,
postgresql,postgresql,create table trigpart3 (like trigpart),triggers.sql,SAME,,
postgresql,postgresql,create table trigpart4 partition of trigpart for values from (3000) to (4000) partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table trigpart41 partition of trigpart4 for values from (3000) to (3500),triggers.sql,SAME,,
postgresql,postgresql,create table trigpart42 (like trigpart),triggers.sql,SAME,,
postgresql,postgresql,drop table trigpart2,triggers.sql,SAME,,
postgresql,postgresql,drop table trigpart4,triggers.sql,SAME,,
postgresql,postgresql,drop table trigpart3,triggers.sql,SAME,,
postgresql,postgresql,create table trigpart3 (like trigpart),triggers.sql,SAME,,
postgresql,postgresql,drop table trigpart3,triggers.sql,SAME,,
postgresql,postgresql,drop table trigpart,triggers.sql,SAME,,
postgresql,postgresql,create table parted_stmt_trig (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_stmt_trig1 partition of parted_stmt_trig for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table parted_stmt_trig2 partition of parted_stmt_trig for values in (2),triggers.sql,SAME,,
postgresql,postgresql,create table parted2_stmt_trig (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted2_stmt_trig1 partition of parted2_stmt_trig for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table parted2_stmt_trig2 partition of parted2_stmt_trig for values in (2),triggers.sql,SAME,,
postgresql,postgresql,"with ins (a) as (   insert into parted2_stmt_trig values (1), (2) returning a ) insert into parted_stmt_trig select a from ins returning tableoid::regclass, a",triggers.sql,SAME,,
postgresql,postgresql,insert into parted_stmt_trig values (1),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_stmt_trig values (1),triggers.sql,SAME,,
postgresql,postgresql,"drop table parted_stmt_trig, parted2_stmt_trig",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig (a int) partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_1 partition of parted_trig for values from (0) to (1000)    partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_1_1 partition of parted_trig_1 for values from (0) to (100),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_2 partition of parted_trig for values from (1000) to (2000),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_trig values (50), (1500)",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trig,triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig1 partition of parted_trig for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig2 partition of parted_trig for values in (2),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig values (1),triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trig,triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig1 partition of parted_trig for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig2 partition of parted_trig for values in (2),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig3 (like parted_trig),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_trig values (1), (2), (3)",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trig,triggers.sql,SAME,,
postgresql,postgresql,"create table parted_irreg_ancestor (fd text, b text, fd2 int, fd3 int, a int)   partition by range (b)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_irreg (fd int, a int, fd2 int, b text)   partition by range (b)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted1_irreg (b text, fd int, a int)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_irreg values (1, 'aardvark'), (2, 'aanimals')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted1_irreg values ('aardwolf', 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_irreg_ancestor values ('aasvogel', 3)",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_irreg_ancestor,triggers.sql,SAME,,
postgresql,postgresql,"create table parted (a int, b int, c text) partition by list (a)",triggers.sql,SAME,,
postgresql,postgresql,create table parted_1 partition of parted for values in (1)   partition by list (b),triggers.sql,SAME,,
postgresql,postgresql,create table parted_1_1 partition of parted_1 for values in (1),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno v1')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno v2')",triggers.sql,DIFFERENT,FeatureNotSupported,"moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported DETAIL:  Before executing trigger ""t"", the row was to be in partition ""public.parted_1_1""."
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno v4')",triggers.sql,DIFFERENT,FeatureNotSupported,"moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported DETAIL:  Before executing trigger ""t"", the row was to be in partition ""public.parted_1_1""."
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno')",triggers.sql,SAME,,
postgresql,postgresql,create table parted_2 partition of parted for values in (2),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno v5')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (1, 1, 'uno uno v6')",triggers.sql,SAME,,
postgresql,postgresql,create table parted_3 partition of parted for values in (3),triggers.sql,SAME,,
postgresql,postgresql,drop table parted,triggers.sql,SAME,,
postgresql,postgresql,"create table parted (a int, b int, c text) partition by list ((a + b))",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_1 partition of parted for values in (1, 2)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_2 partition of parted for values in (3, 4)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (0, 1, 'zero win')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted values (1, 1, 'one fail')",triggers.sql,DIFFERENT,FeatureNotSupported,"moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported DETAIL:  Before executing trigger ""t"", the row was to be in partition ""public.parted_1""."
postgresql,postgresql,"insert into parted values (1, 2, 'two fail')",triggers.sql,DIFFERENT,FeatureNotSupported,"moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported DETAIL:  Before executing trigger ""t"", the row was to be in partition ""public.parted_2""."
postgresql,postgresql,drop table parted,triggers.sql,SAME,,
postgresql,postgresql,"create table parted_constr_ancestor (a int, b text)   partition by range (b)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_constr (a int, b text)   partition by range (b)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted1_constr (a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_constr values (1, 'aardvark')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted1_constr values (2, 'aardwolf')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_constr_ancestor values (3, 'aasvogel')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_constr values (1, 'aardvark')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parted1_constr values (2, 'aardwolf'), (3, 'aasvogel')",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_constr_ancestor,triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger (a int, b text) partition by range (a)",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_1 partition of parted_trigger for values from (0) to (1000),triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_2 (drp int, a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_3 (b text, a int) partition by range (length(b))",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_1 partition of parted_trigger_3 for values from (1) to (3),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_2 partition of parted_trigger_3 for values from (3) to (5),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_trigger values     (0, 'a'), (1, 'bbb'), (2, 'bcd'), (3, 'c'), 	(1000, 'c'), (1001, 'ddd'), (1002, 'efg'), (1003, 'f'), 	(2000, 'e'), (2001, 'fff'), (2002, 'ghi'), (2003, 'h')",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trigger,triggers.sql,SAME,,
postgresql,postgresql,create table parted_referenced (a int),triggers.sql,SAME,,
postgresql,postgresql,"create table unparted_trigger (a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger (a int, b text) partition by range (a)",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_1 partition of parted_trigger for values from (0) to (1000),triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_2 (drp int, a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_3 (b text, a int) partition by range (length(b))",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_1 partition of parted_trigger_3 for values from (1) to (3),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_2 partition of parted_trigger_3 for values from (3) to (5),triggers.sql,SAME,,
postgresql,postgresql,"drop table parted_referenced, parted_trigger, unparted_trigger",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger (a int, b text) partition by range (a)",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_1 partition of parted_trigger for values from (0) to (1000),triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_2 (drp int, a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table parted_trigger_3 (b text, a int) partition by range (length(b))",triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_1 partition of parted_trigger_3 for values from (1) to (4),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trigger_3_2 partition of parted_trigger_3 for values from (4) to (8),triggers.sql,SAME,,
postgresql,postgresql,"insert into parted_trigger values (0, 'a'), (1000, 'c'), (2000, 'e'), (2001, 'eeee')",triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trigger,triggers.sql,SAME,,
postgresql,postgresql,create table trg_clone (a int) partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table trg_clone1 partition of trg_clone for values from (0) to (1000),triggers.sql,SAME,,
postgresql,postgresql,create table trg_clone2 partition of trg_clone for values from (1000) to (2000),triggers.sql,SAME,,
postgresql,postgresql,create table trg_clone3 partition of trg_clone for values from (2000) to (3000)   partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table trg_clone_3_3 partition of trg_clone3 for values from (2000) to (2100),triggers.sql,SAME,,
postgresql,postgresql,drop table trg_clone,triggers.sql,SAME,,
postgresql,postgresql,create table parent (a int),triggers.sql,SAME,,
postgresql,postgresql,create table child1 () inherits (parent),triggers.sql,SAME,,
postgresql,postgresql,"drop table parent, child1",triggers.sql,SAME,,
postgresql,postgresql,create table parent (a int) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table child1 partition of parent for values in (1),triggers.sql,SAME,,
postgresql,postgresql,"drop table parent, child1",triggers.sql,SAME,,
postgresql,postgresql,"create table parent (a int primary key, f int references parent)   partition by list (a)",triggers.sql,SAME,,
postgresql,postgresql,create table child1 partition of parent for values in (1),triggers.sql,SAME,,
postgresql,postgresql,"drop table parent, child1",triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire (i int) PARTITION BY RANGE (i),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire1 PARTITION OF trgfire FOR VALUES FROM (1) TO (10),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (1),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,INSERT INTO trgfire VALUES (1),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire2 PARTITION OF trgfire FOR VALUES FROM (10) TO (20),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (11),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire3 (LIKE trgfire),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (21),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire4 PARTITION OF trgfire FOR VALUES FROM (30) TO (40) PARTITION BY LIST (i),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire4_30 PARTITION OF trgfire4 FOR VALUES IN (30),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (30),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire5 (LIKE trgfire) PARTITION BY LIST (i),triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE trgfire5_40 PARTITION OF trgfire5 FOR VALUES IN (40),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (40),triggers.sql,SAME,,
postgresql,postgresql,INSERT INTO trgfire VALUES (1),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,INSERT INTO trgfire VALUES (11),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,INSERT INTO trgfire VALUES (21),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,INSERT INTO trgfire VALUES (30),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,INSERT INTO trgfire VALUES (40),triggers.sql,DIFFERENT,RaiseException,except CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
postgresql,postgresql,DROP TABLE trgfire,triggers.sql,SAME,,
postgresql,postgresql,"create table parent (a text, b int) partition by list (a)",triggers.sql,SAME,,
postgresql,postgresql,create table child1 partition of parent for values in ('AAA'),triggers.sql,SAME,,
postgresql,postgresql,"create table child2 (x int, a text, b int)",triggers.sql,SAME,,
postgresql,postgresql,"create table child3 (b int, a text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child1 values ('AAA', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child2 values ('BBB', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child3 values (42, 'CCC')",triggers.sql,SAME,,
postgresql,postgresql,"insert into parent values ('AAA', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parent values ('BBB', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parent values ('CCC', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into parent values ('AAA', 42), ('BBB', 42), ('CCC', 66)",triggers.sql,SAME,,
postgresql,postgresql,"AAA	42 BBB	42 CCC	234  drop table child1, child2, child3, parent",triggers.sql,DIFFERENT,SyntaxError,"syntax error at or near ""AAA"" LINE 1: AAA 42"
postgresql,postgresql,"create table parent (a text, b int) partition by list (a)",triggers.sql,DIFFERENT,DuplicateTable,"relation ""parent"" already exists"
postgresql,postgresql,create table child partition of parent for values in ('AAA'),triggers.sql,DIFFERENT,InvalidObjectDefinition,"partition ""child"" would overlap partition ""child1"" LINE 1: create table child partition of parent for values in ('AAA')"
postgresql,postgresql,"drop table child, parent",triggers.sql,DIFFERENT,UndefinedTable,"table ""child"" does not exist"
postgresql,postgresql,"create table parent (a text, b int)",triggers.sql,DIFFERENT,DuplicateTable,"relation ""parent"" already exists"
postgresql,postgresql,create table child1 () inherits (parent),triggers.sql,DIFFERENT,WrongObjectType,"cannot inherit from partitioned table ""parent"""
postgresql,postgresql,"create table child2 (b int, a text)",triggers.sql,DIFFERENT,DuplicateTable,"relation ""child2"" already exists"
postgresql,postgresql,create table child3 (c text) inherits (parent),triggers.sql,DIFFERENT,WrongObjectType,"cannot inherit from partitioned table ""parent"""
postgresql,postgresql,"insert into child1 values ('AAA', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child2 values (42, 'BBB')",triggers.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""BBB"" LINE 1: insert into child2 values (42, 'BBB')"
postgresql,postgresql,"insert into child3 values ('CCC', 42, 'foo')",triggers.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into child3 values ('CCC', 42, 'foo')"
postgresql,postgresql,"insert into child1 values ('AAA', 42)",triggers.sql,SAME,,
postgresql,postgresql,"insert into child2 values (42, 'BBB')",triggers.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""BBB"" LINE 1: insert into child2 values (42, 'BBB')"
postgresql,postgresql,"insert into child3 values ('CCC', 42, 'foo')",triggers.sql,DIFFERENT,SyntaxError,"INSERT has more expressions than target columns LINE 1: insert into child3 values ('CCC', 42, 'foo')"
postgresql,postgresql,"drop table child1, child2, child3, parent",triggers.sql,SAME,,
postgresql,postgresql,"create table parent (a text, b int)",triggers.sql,SAME,,
postgresql,postgresql,create table child () inherits (parent),triggers.sql,SAME,,
postgresql,postgresql,"drop table child, parent",triggers.sql,SAME,,
postgresql,postgresql,create table table1 (a int),triggers.sql,SAME,,
postgresql,postgresql,create table table2 (a text),triggers.sql,SAME,,
postgresql,postgresql,with wcte as (insert into table1 values (42))   insert into table2 values ('hello world'),triggers.sql,SAME,,
postgresql,postgresql,with wcte as (insert into table1 values (43))   insert into table1 values (44),triggers.sql,SAME,,
postgresql,postgresql,drop table table1,triggers.sql,SAME,,
postgresql,postgresql,drop table table2,triggers.sql,SAME,,
postgresql,postgresql,"create table my_table (a int primary key, b text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into my_table values (1, 'AAA'), (2, 'BBB')   on conflict (a) do   update set b = my_table.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,"insert into my_table values (1, 'AAA'), (2, 'BBB'), (3, 'CCC'), (4, 'DDD')   on conflict (a) do   update set b = my_table.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,"insert into my_table values (3, 'CCC'), (4, 'DDD')   on conflict (a) do   update set b = my_table.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,"create table iocdu_tt_parted (a int primary key, b text) partition by list (a)",triggers.sql,SAME,,
postgresql,postgresql,create table iocdu_tt_parted1 partition of iocdu_tt_parted for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table iocdu_tt_parted2 partition of iocdu_tt_parted for values in (2),triggers.sql,SAME,,
postgresql,postgresql,create table iocdu_tt_parted3 partition of iocdu_tt_parted for values in (3),triggers.sql,SAME,,
postgresql,postgresql,create table iocdu_tt_parted4 partition of iocdu_tt_parted for values in (4),triggers.sql,SAME,,
postgresql,postgresql,"insert into iocdu_tt_parted values (1, 'AAA'), (2, 'BBB')   on conflict (a) do   update set b = iocdu_tt_parted.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,"insert into iocdu_tt_parted values (1, 'AAA'), (2, 'BBB'), (3, 'CCC'), (4, 'DDD')   on conflict (a) do   update set b = iocdu_tt_parted.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,"insert into iocdu_tt_parted values (3, 'CCC'), (4, 'DDD')   on conflict (a) do   update set b = iocdu_tt_parted.b || ':' || excluded.b",triggers.sql,SAME,,
postgresql,postgresql,drop table iocdu_tt_parted,triggers.sql,SAME,,
postgresql,postgresql,drop table my_table,triggers.sql,SAME,,
postgresql,postgresql,"create table refd_table (a int primary key, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table trig_table (a int, b text,   foreign key (a) references refd_table on update cascade on delete cascade )",triggers.sql,SAME,,
postgresql,postgresql,"insert into refd_table values   (1, 'one'),   (2, 'two'),   (3, 'three')",triggers.sql,SAME,,
postgresql,postgresql,"insert into trig_table values   (1, 'one a'),   (1, 'one b'),   (2, 'two a'),   (2, 'two b'),   (3, 'three a'),   (3, 'three b')",triggers.sql,SAME,,
postgresql,postgresql,"drop table refd_table, trig_table",triggers.sql,SAME,,
postgresql,postgresql,"create table self_ref (a int primary key,                        b int references self_ref(a) on delete cascade)",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref values (1, null), (2, 1), (3, 2)",triggers.sql,SAME,,
postgresql,postgresql,"insert into self_ref values (1, null), (2, 1), (3, 2), (4, 3)",triggers.sql,SAME,,
postgresql,postgresql,drop table self_ref,triggers.sql,SAME,,
postgresql,postgresql,"create table merge_target_table (a int primary key, b text)",triggers.sql,SAME,,
postgresql,postgresql,"create table merge_source_table (a int, b text)",triggers.sql,SAME,,
postgresql,postgresql,"insert into merge_source_table   values (1, 'initial1'), (2, 'initial2'), 		 (3, 'initial3'), (4, 'initial4')",triggers.sql,SAME,,
postgresql,postgresql,"drop table merge_source_table, merge_target_table",triggers.sql,SAME,,
postgresql,postgresql,create table my_table (id integer),triggers.sql,SAME,,
postgresql,postgresql,insert into my_table values (1),triggers.sql,SAME,,
postgresql,postgresql,insert into my_table values (2),triggers.sql,SAME,,
postgresql,postgresql,drop table my_table,triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig (a int) partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_1 partition of parted_trig        for values from (0) to (1000) partition by range (a),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_1_1 partition of parted_trig_1 for values from (0) to (100),triggers.sql,SAME,,
postgresql,postgresql,create table parted_trig_2 partition of parted_trig for values from (1000) to (2000),triggers.sql,SAME,,
postgresql,postgresql,create table default_parted_trig partition of parted_trig default,triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,insert into parted_trig (a) values (50),triggers.sql,SAME,,
postgresql,postgresql,drop table parted_trig,triggers.sql,SAME,,
postgresql,postgresql,create table trigger_parted (a int primary key) partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table trigger_parted_p1 partition of trigger_parted for values in (1)   partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table trigger_parted_p1_1 partition of trigger_parted_p1 for values in (1),triggers.sql,SAME,,
postgresql,postgresql,create table trigger_parted_p2 partition of trigger_parted for values in (2)   partition by list (a),triggers.sql,SAME,,
postgresql,postgresql,create table trigger_parted_p2_2 partition of trigger_parted_p2 for values in (2),triggers.sql,SAME,,
postgresql,postgresql,create table convslot_test_parent (col1 text primary key),triggers.sql,SAME,,
postgresql,postgresql,"create table convslot_test_child (col1 text primary key, 	foreign key (col1) references convslot_test_parent(col1) on delete cascade on update cascade )",triggers.sql,SAME,,
postgresql,postgresql,insert into convslot_test_parent(col1) values ('1'),triggers.sql,SAME,,
postgresql,postgresql,insert into convslot_test_child(col1) values ('1'),triggers.sql,SAME,,
postgresql,postgresql,insert into convslot_test_parent(col1) values ('3'),triggers.sql,SAME,,
postgresql,postgresql,insert into convslot_test_child(col1) values ('3'),triggers.sql,SAME,,
postgresql,postgresql,"drop table convslot_test_child, convslot_test_parent",triggers.sql,SAME,,
postgresql,postgresql,"create table convslot_test_parent (id int primary key, val int) partition by range (id)",triggers.sql,SAME,,
postgresql,postgresql,"create table convslot_test_part (val int, id int not null)",triggers.sql,SAME,,
postgresql,postgresql,"insert into convslot_test_parent (id, val) values (1, 2)",triggers.sql,SAME,,
postgresql,postgresql,drop table convslot_test_parent,triggers.sql,SAME,,
postgresql,postgresql,"create table grandparent (id int, primary key (id)) partition by range (id)",triggers.sql,SAME,,
postgresql,postgresql,create table middle partition of grandparent for values from (1) to (10) partition by range (id),triggers.sql,SAME,,
postgresql,postgresql,create table chi partition of middle for values from (1) to (5),triggers.sql,SAME,,
postgresql,postgresql,create table cho partition of middle for values from (6) to (10),triggers.sql,SAME,,
postgresql,postgresql,drop table grandparent,triggers.sql,SAME,,
postgresql,postgresql,create table parent (a int),triggers.sql,SAME,,
postgresql,postgresql,create table child () inherits (parent),triggers.sql,SAME,,
postgresql,postgresql,"drop table parent, child",triggers.sql,SAME,,
postgresql,postgresql,CREATE TABLE TEMP_FLOAT (f1 FLOAT8),numerology.sql,SAME,,
postgresql,postgresql,INSERT INTO TEMP_FLOAT (f1)   SELECT float8(f1) FROM INT4_TBL,numerology.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 2:   SELECT float8(f1) FROM INT4_TBL"
postgresql,postgresql,INSERT INTO TEMP_FLOAT (f1)   SELECT float8(f1) FROM INT2_TBL,numerology.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 2:   SELECT float8(f1) FROM INT2_TBL"
postgresql,postgresql,CREATE TABLE TEMP_INT4 (f1 INT4),numerology.sql,SAME,,
postgresql,postgresql,INSERT INTO TEMP_INT4 (f1)   SELECT int4(f1) FROM FLOAT8_TBL   WHERE (f1 > -2147483647) AND (f1 < 2147483647),numerology.sql,DIFFERENT,UndefinedTable,"relation ""float8_tbl"" does not exist LINE 2:   SELECT int4(f1) FROM FLOAT8_TBL"
postgresql,postgresql,INSERT INTO TEMP_INT4 (f1)   SELECT int4(f1) FROM INT2_TBL,numerology.sql,DIFFERENT,UndefinedTable,"relation ""int2_tbl"" does not exist LINE 2:   SELECT int4(f1) FROM INT2_TBL"
postgresql,postgresql,CREATE TABLE TEMP_INT2 (f1 INT2),numerology.sql,SAME,,
postgresql,postgresql,INSERT INTO TEMP_INT2 (f1)   SELECT int2(f1) FROM FLOAT8_TBL   WHERE (f1 >= -32767) AND (f1 <= 32767),numerology.sql,DIFFERENT,UndefinedTable,"relation ""float8_tbl"" does not exist LINE 2:   SELECT int2(f1) FROM FLOAT8_TBL"
postgresql,postgresql,INSERT INTO TEMP_INT2 (f1)   SELECT int2(f1) FROM INT4_TBL   WHERE (f1 >= -32767) AND (f1 <= 32767),numerology.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 2:   SELECT int2(f1) FROM INT4_TBL"
postgresql,postgresql,"CREATE TABLE TEMP_GROUP (f1 INT4, f2 INT4, f3 FLOAT8)",numerology.sql,SAME,,
postgresql,postgresql,"INSERT INTO TEMP_GROUP   SELECT 1, (- i.f1), (- f.f1)   FROM INT4_TBL i, FLOAT8_TBL f",numerology.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 3:   FROM INT4_TBL i, FLOAT8_TBL f"
postgresql,postgresql,"INSERT INTO TEMP_GROUP   SELECT 2, i.f1, f.f1   FROM INT4_TBL i, FLOAT8_TBL f",numerology.sql,DIFFERENT,UndefinedTable,"relation ""int4_tbl"" does not exist LINE 3:   FROM INT4_TBL i, FLOAT8_TBL f"
postgresql,postgresql,DROP TABLE TEMP_INT2,numerology.sql,SAME,,
postgresql,postgresql,DROP TABLE TEMP_INT4,numerology.sql,SAME,,
postgresql,postgresql,DROP TABLE TEMP_FLOAT,numerology.sql,SAME,,
postgresql,postgresql,DROP TABLE TEMP_GROUP,numerology.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_jsonb_constraints ( 	js text, 	i int, 	x jsonb DEFAULT JSON_QUERY(jsonb '[1,2]', '$[*]' WITH WRAPPER) 	CONSTRAINT test_jsonb_constraint1 		CHECK (js IS JSON) 	CONSTRAINT test_jsonb_constraint2 		CHECK (JSON_EXISTS(js::jsonb, '$.a' PASSING i + 5 AS int, i::text AS txt, array[1,2,3] as arr)) 	CONSTRAINT test_jsonb_constraint3 		CHECK (JSON_VALUE(js::jsonb, '$.a' RETURNING int DEFAULT '12' ON EMPTY ERROR ON ERROR) > i) 	CONSTRAINT test_jsonb_constraint4 		CHECK (JSON_QUERY(js::jsonb, '$.a' WITH CONDITIONAL WRAPPER EMPTY OBJECT ON ERROR) < jsonb '[10]') 	CONSTRAINT test_jsonb_constraint5 		CHECK (JSON_QUERY(js::jsonb, '$.a' RETURNING char(5) OMIT QUOTES EMPTY ARRAY ON EMPTY) >  'a' COLLATE ""C"") )",sqljson_queryfuncs.sql,DIFFERENT,SyntaxError,"syntax error at or near ""WITH"" LINE 4:  x jsonb DEFAULT JSON_QUERY(jsonb '[1,2]', '$[*]' WITH WRAPP..."
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('', 1)"
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('1', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('1', 1)"
postgresql,postgresql,INSERT INTO test_jsonb_constraints VALUES ('[]'),sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('[]')"
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('{""b"": 1}', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('{""b"": 1}', 1)"
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('{""a"": 1}', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('{""a"": 1}', 1)"
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('{""a"": 7}', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('{""a"": 7}', 1)"
postgresql,postgresql,"INSERT INTO test_jsonb_constraints VALUES ('{""a"": 10}', 1)",sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"relation ""test_jsonb_constraints"" does not exist LINE 1: INSERT INTO test_jsonb_constraints VALUES ('{""a"": 10}', 1)"
postgresql,postgresql,DROP TABLE test_jsonb_constraints,sqljson_queryfuncs.sql,DIFFERENT,UndefinedTable,"table ""test_jsonb_constraints"" does not exist"
postgresql,postgresql,"CREATE TABLE test_jsonb_mutability(js jsonb, b int)",sqljson_queryfuncs.sql,SAME,,
postgresql,postgresql,DROP TABLE test_jsonb_mutability,sqljson_queryfuncs.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_i4_heap ( 	seqno 		int4, 	random 		int4 )",hash_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_name_heap ( 	seqno 		int4, 	random 		name )",hash_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_txt_heap ( 	seqno 		int4, 	random 		text )",hash_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_f8_heap ( 	seqno		int4, 	random 		float8 )",hash_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE hash_split_heap (keycol INT),hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_split_heap SELECT 1 FROM generate_series(1, 500) a",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_split_heap SELECT 1 FROM generate_series(1, 5000) a",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_split_heap SELECT a/2 FROM generate_series(1, 25000) a",hash_index.sql,SAME,,
postgresql,postgresql,DROP TABLE hash_split_heap,hash_index.sql,SAME,,
postgresql,postgresql,CREATE TABLE hash_cleanup_heap(keycol INT),hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 500) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 1000) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 50) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 1500) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 500) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 500) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 1500) as i",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_cleanup_heap SELECT 1 FROM generate_series(1, 50) as i",hash_index.sql,SAME,,
postgresql,postgresql,DROP TABLE hash_cleanup_heap,hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_temp_heap VALUES (1,1)",hash_index.sql,SAME,,
postgresql,postgresql,DROP TABLE hash_temp_heap CASCADE,hash_index.sql,SAME,,
postgresql,postgresql,"CREATE TABLE hash_heap_float4 (x float4, y int)",hash_index.sql,SAME,,
postgresql,postgresql,"INSERT INTO hash_heap_float4 VALUES (1.1,1)",hash_index.sql,SAME,,
postgresql,postgresql,DROP TABLE hash_heap_float4 CASCADE,hash_index.sql,SAME,,
postgresql,postgresql,"create table Room (     roomno	char(8),     comment	text )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table WSlot (     slotname	char(20),     roomno	char(8),     slotlink	char(20),     backlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table PField (     name	text,     comment	text )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table PSlot (     slotname	char(20),     pfname	text,     slotlink	char(20),     backlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table PLine (     slotname	char(20),     phonenumber	char(20),     comment	text,     backlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table Hub (     name	char(14),     comment	text,     nslots	integer )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table HSlot (     slotname	char(20),     hubname	char(14),     slotno	integer,     slotlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table System (     name	text,     comment	text )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table IFace (     slotname	char(20),     sysname	text,     ifname	text,     slotlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create table PHone (     slotname	char(20),     comment	text,     slotlink	char(20) )",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_hub_adjustslots(hname bpchar,                                    oldnslots integer,                                    newnslots integer) returns integer as ' begin     if newnslots = oldnslots then         return 0;     end if;     if newnslots < oldnslots then         delete from HSlot where hubname = hname and slotno > newnslots; 	return 0;     end if;     for i in oldnslots + 1 .. newnslots loop         insert into HSlot (slotname, hubname, slotno, slotlink) 		values (''HS.dummy'', hname, i, '''');     end loop;     return 0; end ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_pslot_bu() returns trigger as ' begin     if new.slotname != old.slotname then         delete from PSlot where slotname = old.slotname; 	insert into PSlot ( 		    slotname, 		    pfname, 		    slotlink, 		    backlink 		) values ( 		    new.slotname, 		    new.pfname, 		    new.slotlink, 		    new.backlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_wslot_bu() returns trigger as ' begin     if new.slotname != old.slotname then         delete from WSlot where slotname = old.slotname; 	insert into WSlot ( 		    slotname, 		    roomno, 		    slotlink, 		    backlink 		) values ( 		    new.slotname, 		    new.roomno, 		    new.slotlink, 		    new.backlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_pline_bu() returns trigger as ' begin     if new.slotname != old.slotname then         delete from PLine where slotname = old.slotname; 	insert into PLine ( 		    slotname, 		    phonenumber, 		    comment, 		    backlink 		) values ( 		    new.slotname, 		    new.phonenumber, 		    new.comment, 		    new.backlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_iface_bu() returns trigger as ' begin     if new.slotname != old.slotname then         delete from IFace where slotname = old.slotname; 	insert into IFace ( 		    slotname, 		    sysname, 		    ifname, 		    slotlink 		) values ( 		    new.slotname, 		    new.sysname, 		    new.ifname, 		    new.slotlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_hslot_bu() returns trigger as ' begin     if new.slotname != old.slotname or new.hubname != old.hubname then         delete from HSlot where slotname = old.slotname; 	insert into HSlot ( 		    slotname, 		    hubname, 		    slotno, 		    slotlink 		) values ( 		    new.slotname, 		    new.hubname, 		    new.slotno, 		    new.slotlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function tg_phone_bu() returns trigger as ' begin     if new.slotname != old.slotname then         delete from PHone where slotname = old.slotname; 	insert into PHone ( 		    slotname, 		    comment, 		    slotlink 		) values ( 		    new.slotname, 		    new.comment, 		    new.slotlink 		);         return null;     end if;     return new; end; ' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('001', 'Entrance')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('002', 'Office')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('003', 'Office')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('004', 'Technical')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('101', 'Office')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('102', 'Conference')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('103', 'Restroom')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('104', 'Technical')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('105', 'Office')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Room values ('106', 'Office')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.1a', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.1b', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.2a', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.2b', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.3a', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.001.3b', '001', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.1a', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.1b', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.2a', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.2b', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.3a', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.002.3b', '002', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.1a', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.1b', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.2a', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.2b', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.3a', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.003.3b', '003', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.1a', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.1b', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.2a', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.2b', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.3a', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.101.3b', '101', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.1a', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.1b', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.2a', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.2b', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.3a', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.102.3b', '102', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.1a', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.1b', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.2a', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.2b', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.3a', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.105.3b', '105', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.1a', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.1b', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.2a', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.2b', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.3a', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into WSlot values ('WS.106.3b', '106', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PField values ('PF0_1', 'Wallslots basement')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a1', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a2', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a3', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a4', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a5', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.a6', 'PF0_1', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b1', 'PF0_1', '', 'WS.002.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b2', 'PF0_1', '', 'WS.002.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b3', 'PF0_1', '', 'WS.002.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b4', 'PF0_1', '', 'WS.002.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b5', 'PF0_1', '', 'WS.002.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.b6', 'PF0_1', '', 'WS.002.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c1', 'PF0_1', '', 'WS.003.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c2', 'PF0_1', '', 'WS.003.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c3', 'PF0_1', '', 'WS.003.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c4', 'PF0_1', '', 'WS.003.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c5', 'PF0_1', '', 'WS.003.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.c6', 'PF0_1', '', 'WS.003.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PField values ('PF0_X', 'Phonelines basement')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta1', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta2', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta3', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta4', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta5', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.ta6', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb1', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb2', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb3', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb4', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb5', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.base.tb6', 'PF0_X', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PField values ('PF1_1', 'Wallslots first floor')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a1', 'PF1_1', '', 'WS.101.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a2', 'PF1_1', '', 'WS.101.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a3', 'PF1_1', '', 'WS.101.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a4', 'PF1_1', '', 'WS.101.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a5', 'PF1_1', '', 'WS.101.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.a6', 'PF1_1', '', 'WS.101.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b1', 'PF1_1', '', 'WS.102.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b2', 'PF1_1', '', 'WS.102.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b3', 'PF1_1', '', 'WS.102.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b4', 'PF1_1', '', 'WS.102.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b5', 'PF1_1', '', 'WS.102.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.b6', 'PF1_1', '', 'WS.102.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c1', 'PF1_1', '', 'WS.105.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c2', 'PF1_1', '', 'WS.105.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c3', 'PF1_1', '', 'WS.105.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c4', 'PF1_1', '', 'WS.105.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c5', 'PF1_1', '', 'WS.105.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.c6', 'PF1_1', '', 'WS.105.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d1', 'PF1_1', '', 'WS.106.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d2', 'PF1_1', '', 'WS.106.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d3', 'PF1_1', '', 'WS.106.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d4', 'PF1_1', '', 'WS.106.2b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d5', 'PF1_1', '', 'WS.106.3a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.d6', 'PF1_1', '', 'WS.106.3b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PField values ('PF1_2', 'Phonelines first floor')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta1', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta2', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta3', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta4', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta5', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.ta6', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb1', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb2', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb3', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb4', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb5', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PSlot values ('PS.first.tb6', 'PF1_2', '', '')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.001', '-0', 'Central call', 'PS.base.ta1')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.002', '-101', '', 'PS.base.ta2')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.003', '-102', '', 'PS.base.ta3')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.004', '-103', '', 'PS.base.ta5')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.005', '-104', '', 'PS.base.ta6')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.006', '-106', '', 'PS.base.tb2')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.007', '-108', '', 'PS.base.tb3')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.008', '-109', '', 'PS.base.tb4')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.009', '-121', '', 'PS.base.tb5')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.010', '-122', '', 'PS.base.tb6')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.015', '-134', '', 'PS.first.ta1')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.016', '-137', '', 'PS.first.ta3')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.017', '-139', '', 'PS.first.ta4')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.018', '-362', '', 'PS.first.tb1')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.019', '-363', '', 'PS.first.tb2')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.020', '-364', '', 'PS.first.tb3')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.021', '-365', '', 'PS.first.tb5')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.022', '-367', '', 'PS.first.tb6')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.028', '-501', 'Fax entrance', 'PS.base.ta2')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PLine values ('PL.029', '-502', 'Fax first floor', 'PS.first.ta1')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PHone values ('PH.hc001', 'Hicom standard', 'WS.001.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PHone values ('PH.hc002', 'Hicom standard', 'WS.002.1a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PHone values ('PH.hc003', 'Hicom standard', 'WS.002.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PHone values ('PH.fax001', 'Canon fax', 'WS.001.2a')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into Hub values ('base.hub1', 'Patchfield PF0_1 hub', 16)",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into System values ('orion', 'PC')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into IFace values ('IF', 'orion', 'eth0', 'WS.002.1b')",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into PField values ('PF1_1', 'should fail due to unique index')",plpgsql.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""pfield_name"" DETAIL:  Key (name)=(PF1_1) already exists."
postgresql,postgresql,"insert into HSlot values ('HS', 'base.hub1', 1, '')",plpgsql.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""hslot_name"" DETAIL:  Key (slotname)=(HS.base.hub1.1      ) already exists."
postgresql,postgresql,"insert into HSlot values ('HS', 'base.hub1', 20, '')",plpgsql.sql,DIFFERENT,RaiseException,no manual manipulation of HSlot CONTEXT:  PL/pgSQL function tg_hslot_biu() line 12 at RAISE
postgresql,postgresql,"insert into IFace values ('IF', 'notthere', 'eth0', '')",plpgsql.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""iface_name"" DETAIL:  Key (slotname)=(IF                  ) already exists."
postgresql,postgresql,"insert into IFace values ('IF', 'orion', 'ethernet_interface_name_too_long', '')",plpgsql.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""iface_name"" DETAIL:  Key (slotname)=(IF                  ) already exists."
postgresql,postgresql,CREATE TABLE found_test_tbl (a int),plpgsql.sql,SAME,,
postgresql,postgresql,create function test_found()   returns boolean as '   declare   begin   insert into found_test_tbl values (1);   if FOUND then      insert into found_test_tbl values (2);   end if;    update found_test_tbl set a = 100 where a = 1;   if FOUND then     insert into found_test_tbl values (3);   end if;    delete from found_test_tbl where a = 9999;    if not FOUND then     insert into found_test_tbl values (4);   end if;    for i in 1 .. 10 loop   end loop;   if FOUND then     insert into found_test_tbl values (5);   end if;    for i in 2 .. 1 loop   end loop;   if not FOUND then     insert into found_test_tbl values (6);   end if;   return true;   end;' language plpgsql,plpgsql.sql,SAME,,
postgresql,postgresql,"create table perform_test ( 	a	INT, 	b	INT )",plpgsql.sql,SAME,,
postgresql,postgresql,"create function perform_simple_func(int) returns boolean as ' BEGIN 	IF $1 < 20 THEN 		INSERT INTO perform_test VALUES ($1, $1 + 10); 		RETURN TRUE; 	ELSE 		RETURN FALSE; 	END IF; END;' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,"create function perform_test_func() returns void as ' BEGIN 	IF FOUND then 		INSERT INTO perform_test VALUES (100, 100); 	END IF;  	PERFORM perform_simple_func(5);  	IF FOUND then 		INSERT INTO perform_test VALUES (100, 100); 	END IF;  	PERFORM perform_simple_func(50);  	IF FOUND then 		INSERT INTO perform_test VALUES (100, 100); 	END IF;  	RETURN; END;' language plpgsql",plpgsql.sql,SAME,,
postgresql,postgresql,drop table perform_test,plpgsql.sql,SAME,,
postgresql,postgresql,insert into users values('user1'),plpgsql.sql,SAME,,
postgresql,postgresql,INSERT INTO users ( login ) VALUES ( a_login ),plpgsql.sql,DIFFERENT,UndefinedColumn,"column ""a_login"" does not exist LINE 1: INSERT INTO users ( login ) VALUES ( a_login )                                               HINT:  Perhaps you meant to reference the column ""users.login""."
postgresql,postgresql,"create table rc_test (a int, b int)",plpgsql.sql,SAME,,
postgresql,postgresql,"create table eifoo (i integer, y integer)",plpgsql.sql,SAME,,
postgresql,postgresql,"begin     execute 'insert into '||$1||' values(10,15)'",plpgsql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""execute"" LINE 2:     execute 'insert into '||$1||' values(10,15)'"
postgresql,postgresql,drop table eifoo cascade,plpgsql.sql,SAME,,
postgresql,postgresql,"insert into foo values (1,2), (3,4)",plpgsql.sql,SAME,,
postgresql,postgresql,"begin   insert into foo values(5,6) returning * into x",plpgsql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""insert"" LINE 2:   insert into foo values(5,6) returning * into x"
postgresql,postgresql,"begin   insert into foo values(7,8),(9,10) returning * into x",plpgsql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""insert"" LINE 2:   insert into foo values(7,8),(9,10) returning * into x"
postgresql,postgresql,"begin   execute 'insert into foo values(5,6) returning *' into x",plpgsql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""execute"" LINE 2:   execute 'insert into foo values(5,6) returning *' into x"
postgresql,postgresql,"begin   execute 'insert into foo values(7,8),(9,10) returning *' into x",plpgsql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""execute"" LINE 2:   execute 'insert into foo values(7,8),(9,10) returning *' i..."
postgresql,postgresql,"create table test_01(a int, b int, c int)",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into test_01 values(10,20)",plpgsql.sql,SAME,,
postgresql,postgresql,drop table test_01,plpgsql.sql,SAME,,
postgresql,postgresql,"create table tabwithcols(a int, b int, c int, d int)",plpgsql.sql,SAME,,
postgresql,postgresql,"insert into tabwithcols values(10,20,30,40),(50,60,70,80)",plpgsql.sql,SAME,,
postgresql,postgresql,drop table tabwithcols,plpgsql.sql,SAME,,
postgresql,postgresql,create table public.stuffs (stuff text),plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE transition_table_base (id int PRIMARY KEY, val text)",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_base VALUES (1, 'One'), (2, 'Two')",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_base VALUES (3, 'Three'), (4, 'Four')",plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE transition_table_level1 (       level1_no serial NOT NULL ,       level1_node_name varchar(255),        PRIMARY KEY (level1_no) ) WITHOUT OIDS",plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE transition_table_level2 (       level2_no serial NOT NULL ,       parent_no int NOT NULL,       level1_node_name varchar(255),        PRIMARY KEY (level2_no) ) WITHOUT OIDS",plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE transition_table_status (       level int NOT NULL,       node_no int NOT NULL,       status int,        PRIMARY KEY (level, node_no) ) WITHOUT OIDS",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_level1 (level1_no)   SELECT generate_series(1,200)",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_level2 (level2_no, parent_no)   SELECT level2_no, level2_no / 50 + 1 AS parent_no     FROM generate_series(1,9999) level2_no",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_status (level, node_no, status)   SELECT 1, level1_no, 0 FROM transition_table_level1",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_status (level, node_no, status)   SELECT 2, level2_no, 0 FROM transition_table_level2",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_level1(level1_no)   SELECT generate_series(201,1000)",plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE FUNCTION transition_table_level2_bad_usage_func()   RETURNS TRIGGER   LANGUAGE plpgsql AS $$   BEGIN     INSERT INTO dx VALUES (1000000, 1000000, 'x');     RETURN NULL;   END; $$",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO transition_table_level2 (level2_no, parent_no)   VALUES (10000, 10000)",plpgsql.sql,DIFFERENT,RaiseException,RI error CONTEXT:  PL/pgSQL function transition_table_level2_ri_child_insupd_func() line 8 at RAISE
postgresql,postgresql,"CREATE TABLE alter_table_under_transition_tables (   id int PRIMARY KEY,   name text )",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO alter_table_under_transition_tables   VALUES (1, '1'), (2, '2'), (3, '3')",plpgsql.sql,SAME,,
postgresql,postgresql,CREATE TABLE multi_test (i int),plpgsql.sql,SAME,,
postgresql,postgresql,INSERT INTO multi_test VALUES (1),plpgsql.sql,SAME,,
postgresql,postgresql,DROP TABLE multi_test,plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE partitioned_table (a int, b text) PARTITION BY LIST (a)",plpgsql.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt_part1 PARTITION OF partitioned_table FOR VALUES IN (1),plpgsql.sql,SAME,,
postgresql,postgresql,CREATE TABLE pt_part2 PARTITION OF partitioned_table FOR VALUES IN (2),plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO partitioned_table VALUES (1, 'Row 1')",plpgsql.sql,SAME,,
postgresql,postgresql,"INSERT INTO partitioned_table VALUES (2, 'Row 2')",plpgsql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE arrtest ( 	a 			int2[], 	b 			int4[][][], 	c 			name[], 	d			text[][], 	e 			float8[], 	f			char(5)[], 	g			varchar(5)[] )",arrays.sql,SAME,,
postgresql,postgresql,"CREATE TABLE array_op_test ( 	seqno		int4, 	i			int4[], 	t			text[] )",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest (a[1:5], b[1:1][1:2][1:2], c, d, f, g)    VALUES ('{1,2,3,4,5}', '{{{0,0},{1,2}}}', '{}', '{}', '{}', '{}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest (f)    VALUES ('{""too long""}')",arrays.sql,DIFFERENT,StringDataRightTruncation,value too long for type character(5)
postgresql,postgresql,"INSERT INTO arrtest (a, b[1:2][1:2], c, d, e, f, g)    VALUES ('{11,12,23}', '{{3,4},{4,5}}', '{""foobar""}',            '{{""elt1"", ""elt2""}}', '{""3.4"", ""6.7""}',            '{""abc"",""abcde""}', '{""abc"",""abcde""}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest (a, b[1:2], c, d[1:2])    VALUES ('{}', '{3,4}', '{foo,bar}', '{bar,foo}')",arrays.sql,SAME,,
postgresql,postgresql,INSERT INTO arrtest (b[2]) VALUES(now()),arrays.sql,DIFFERENT,DatatypeMismatch,"subscripted assignment to ""b"" requires type integer but expression is of type timestamp with time zone LINE 1: INSERT INTO arrtest (b[2]) VALUES(now())                               HINT:  You will need to rewrite or cast the expression."
postgresql,postgresql,INSERT INTO arrtest (b[1:2]) VALUES(now()),arrays.sql,DIFFERENT,DatatypeMismatch,"subscripted assignment to ""b"" requires type integer[] but expression is of type timestamp with time zone LINE 1: INSERT INTO arrtest (b[1:2]) VALUES(now())                               HINT:  You will need to rewrite or cast the expression."
postgresql,postgresql,"INSERT INTO arrtest(a) VALUES('{1,null,3}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest_s VALUES ('{1,2,3,4,5}', '{{1,2,3}, {4,5,6}, {7,8,9}}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest_s VALUES ('[0:4]={1,2,3,4,5}', '[0:2][0:2]={{1,2,3}, {4,5,6}, {7,8,9}}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest_s VALUES(NULL, NULL)",arrays.sql,SAME,,
postgresql,postgresql,INSERT INTO POINT_TBL(f1) VALUES (NULL),arrays.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES (NULL)"
postgresql,postgresql,INSERT INTO point_tbl(f1[0]) VALUES(0) RETURNING *,arrays.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO point_tbl(f1[0]) VALUES(0) RETURNING *"
postgresql,postgresql,"insert into arrtest1 values(array[1,2,null,4], array['one','two',null,'four'])",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest1 values(array[1,2,null,4], array['one','two',null,'four'])",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arrtest2 VALUES(   ARRAY[[[113,142],[1,147]]],   ARRAY[1.1,1.2,1.3]::float8[],   ARRAY[1.1,1.2,1.3],   ARRAY[[['aaa','aab'],['aba','abb'],['aca','acb']],[['baa','bab'],['bba','bbb'],['bca','bcb']]],   ARRAY['19620326','19931223','19970117']::timestamp[] )",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(1,'cat1',1.21)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(2,'cat1',1.24)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(3,'cat1',1.18)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(4,'cat1',1.26)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(5,'cat1',1.15)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(6,'cat2',1.15)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(7,'cat2',1.26)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(8,'cat2',1.32)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_f values(9,'cat2',1.30)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(1,'cat1',21)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(2,'cat1',24)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(3,'cat1',18)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(4,'cat1',26)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(5,'cat1',15)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(6,'cat2',15)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(7,'cat2',26)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(8,'cat2',32)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arrtest_i values(9,'cat2',30)",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_tbl values ('{1,2,3}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_tbl values ('{1,2}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_tbl values ('{1,2,3}')",arrays.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""arr_tbl_f1_key"" DETAIL:  Key (f1)=({1,2,3}) already exists."
postgresql,postgresql,"insert into arr_tbl values ('{2,3,4}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_tbl values ('{1,5,3}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_tbl values ('{1,2,10}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_pk_tbl values (1, '{1,2,3}')",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_pk_tbl values (1, '{3,4,5}') on conflict (pk)   do update set f1[1] = excluded.f1[1], f1[3] = excluded.f1[3]   returning pk, f1",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_pk_tbl(pk, f1[1:2]) values (1, '{6,7,8}') on conflict (pk)   do update set f1[1] = excluded.f1[1],     f1[2] = excluded.f1[2],     f1[3] = excluded.f1[3]   returning pk, f1",arrays.sql,SAME,,
postgresql,postgresql,"insert into arr_pk_tbl values(10, '[-2147483648:-2147483647]={1,2}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{1,2,3,4}','{{grey,red},{blue,blue}}','{1.6, 0.0}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{1,2,3}','{{grey,red},{grey,blue}}','{1.6}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{3,3,2,4,5,6}','{{white,yellow},{pink,orange}}','{2.1,3.3,1.8,1.7,1.6}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{2}','{{black,red},{green,orange}}','{1.6,2.2,2.6,0.4}')",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{4,2,6,7,8,1}','{{red},{black},{purple},{blue},{blue}}',NULL)",arrays.sql,SAME,,
postgresql,postgresql,"INSERT INTO arraggtest (f1, f2, f3) VALUES ('{}','{{pink,white,blue,red,grey,orange}}','{2.1,1.87,1.4,2.2}')",arrays.sql,SAME,,
postgresql,postgresql,"create table comptable (c1 comptype, c2 comptype[])",arrays.sql,SAME,,
postgresql,postgresql,"insert into comptable   values (row(1,'foo'), array[row(2,'bar')::comptype, row(3,'baz')::comptype])",arrays.sql,SAME,,
postgresql,postgresql,drop table comptable,arrays.sql,SAME,,
postgresql,postgresql,insert into t1 (f1[5].q1) values(42),arrays.sql,DIFFERENT,UndefinedTable,"relation ""t1"" does not exist LINE 1: insert into t1 (f1[5].q1) values(42)"
postgresql,postgresql,"insert into src   select string_agg(random()::text,'') from generate_series(1,10000)",arrays.sql,SAME,,
postgresql,postgresql,"insert into dest select array[row(f1,f1)::textandtext] from src",arrays.sql,SAME,,
postgresql,postgresql,drop table src,arrays.sql,SAME,,
postgresql,postgresql,drop table dest,arrays.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pred_tab (a int NOT NULL, b int, c int NOT NULL)",predicate.sql,SAME,,
postgresql,postgresql,DROP TABLE pred_tab,predicate.sql,SAME,,
postgresql,postgresql,CREATE TABLE enumtest (col rainbow),enum.sql,SAME,,
postgresql,postgresql,"INSERT INTO enumtest values ('red'), ('orange'), ('yellow'), ('green')",enum.sql,SAME,,
postgresql,postgresql,CREATE TABLE enumtest_parent (id rainbow PRIMARY KEY),enum.sql,SAME,,
postgresql,postgresql,CREATE TABLE enumtest_child (parent rainbow REFERENCES enumtest_parent),enum.sql,SAME,,
postgresql,postgresql,INSERT INTO enumtest_parent VALUES ('red'),enum.sql,SAME,,
postgresql,postgresql,INSERT INTO enumtest_child VALUES ('red'),enum.sql,SAME,,
postgresql,postgresql,INSERT INTO enumtest_child VALUES ('blue'),enum.sql,DIFFERENT,ForeignKeyViolation,"insert or update on table ""enumtest_child"" violates foreign key constraint ""enumtest_child_parent_fkey"" DETAIL:  Key (parent)=(blue) is not present in table ""enumtest_parent""."
postgresql,postgresql,CREATE TABLE enumtest_bogus_child(parent bogus REFERENCES enumtest_parent),enum.sql,DIFFERENT,DatatypeMismatch,"foreign key constraint ""enumtest_bogus_child_parent_fkey"" cannot be implemented DETAIL:  Key columns ""parent"" and ""id"" are of incompatible types: bogus and rainbow."
postgresql,postgresql,DROP TABLE enumtest_child,enum.sql,SAME,,
postgresql,postgresql,DROP TABLE enumtest_parent,enum.sql,SAME,,
postgresql,postgresql,DROP TABLE enumtest,enum.sql,SAME,,
postgresql,postgresql,"CREATE TABLE deptest (f1 serial primary key, f2 text)",dependency.sql,SAME,,
postgresql,postgresql,DROP TABLE deptest,dependency.sql,SAME,,
postgresql,postgresql,CREATE TABLE deptest1 (f1 int unique),dependency.sql,SAME,,
postgresql,postgresql,"CREATE TABLE deptest (a serial primary key, b text)",dependency.sql,SAME,,
postgresql,postgresql,"CREATE TABLE deptest (a serial primary key, b text)",dependency.sql,DIFFERENT,DuplicateTable,"relation ""deptest"" already exists"
postgresql,postgresql,CREATE TABLE deptest2 (f1 int),dependency.sql,SAME,,
postgresql,postgresql,"CREATE TABLE default_test (f1 text_w_default, f2 int42)",create_type.sql,DIFFERENT,UndefinedObject,"type ""text_w_default"" does not exist LINE 1: CREATE TABLE default_test (f1 text_w_default, f2 int42)"
postgresql,postgresql,INSERT INTO default_test DEFAULT VALUES,create_type.sql,DIFFERENT,UndefinedTable,"relation ""default_test"" does not exist LINE 1: INSERT INTO default_test DEFAULT VALUES"
postgresql,postgresql,DROP TABLE default_test,create_type.sql,DIFFERENT,UndefinedTable,"table ""default_test"" does not exist"
postgresql,postgresql,"INSERT INTO mytab VALUES ('(1,2,3)'), ('(-44,5.5,12)')",create_type.sql,DIFFERENT,UndefinedTable,"relation ""mytab"" does not exist LINE 1: INSERT INTO mytab VALUES ('(1,2,3)'), ('(-44,5.5,12)')"
postgresql,postgresql,"CREATE TABLE city ( 	name		name, 	location 	box, 	budget 		city_budget )",create_type.sql,DIFFERENT,UndefinedObject,"type ""city_budget"" does not exist LINE 4:  budget   city_budget"
postgresql,postgresql,"INSERT INTO city VALUES ('Podunk', '(1,2),(3,4)', '100,127,1000'), ('Gotham', '(1000,34),(1100,334)', '123456,127,-1000,6789')",create_type.sql,DIFFERENT,UndefinedTable,"relation ""city"" does not exist LINE 1: INSERT INTO city VALUES"
postgresql,postgresql,CREATE TABLE BIT_TABLE(b BIT(11)),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_TABLE VALUES (B'10'),bit.sql,DIFFERENT,StringDataLengthMismatch,bit string length 2 does not match type bit(11)
postgresql,postgresql,INSERT INTO BIT_TABLE VALUES (B'00000000000'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_TABLE VALUES (B'11011000000'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_TABLE VALUES (B'01010101010'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_TABLE VALUES (B'101011111010'),bit.sql,DIFFERENT,StringDataLengthMismatch,bit string length 12 does not match type bit(11)
postgresql,postgresql,CREATE TABLE VARBIT_TABLE(v BIT VARYING(11)),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_TABLE VALUES (B''),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_TABLE VALUES (B'0'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_TABLE VALUES (B'010101'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_TABLE VALUES (B'01010101010'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_TABLE VALUES (B'101011111010'),bit.sql,DIFFERENT,StringDataRightTruncation,bit string too long for type bit varying(11)
postgresql,postgresql,DROP TABLE varbit_table,bit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE varbit_table (a BIT VARYING(16), b BIT VARYING(16))",bit.sql,SAME,,
postgresql,postgresql,DROP TABLE varbit_table,bit.sql,SAME,,
postgresql,postgresql,DROP TABLE bit_table,bit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bit_table (a BIT(16), b BIT(16))",bit.sql,SAME,,
postgresql,postgresql,DROP TABLE bit_table,bit.sql,SAME,,
postgresql,postgresql,CREATE TABLE BIT_SHIFT_TABLE(b BIT(16)),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_SHIFT_TABLE VALUES (B'1101100000000000'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_SHIFT_TABLE SELECT b>>1 FROM BIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_SHIFT_TABLE SELECT b>>2 FROM BIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_SHIFT_TABLE SELECT b>>4 FROM BIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO BIT_SHIFT_TABLE SELECT b>>8 FROM BIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,CREATE TABLE VARBIT_SHIFT_TABLE(v BIT VARYING(20)),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_SHIFT_TABLE VALUES (B'11011'),bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_SHIFT_TABLE SELECT CAST(v || B'0' AS BIT VARYING(6)) >>1 FROM VARBIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_SHIFT_TABLE SELECT CAST(v || B'00' AS BIT VARYING(8)) >>2 FROM VARBIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_SHIFT_TABLE SELECT CAST(v || B'0000' AS BIT VARYING(12)) >>4 FROM VARBIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO VARBIT_SHIFT_TABLE SELECT CAST(v || B'00000000' AS BIT VARYING(20)) >>8 FROM VARBIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,DROP TABLE BIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,DROP TABLE VARBIT_SHIFT_TABLE,bit.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bit_defaults(   b1 bit(4) DEFAULT '1001',   b2 bit(4) DEFAULT B'0101',   b3 bit varying(5) DEFAULT '1001',   b4 bit varying(5) DEFAULT B'0101' )",bit.sql,SAME,,
postgresql,postgresql,INSERT INTO bit_defaults DEFAULT VALUES,bit.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('    0.0   '),float8.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('1004.30  '),float8.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('   -34.84'),float8.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e+200'),float8.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e-200'),float8.sql,SAME,,
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES (''),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: """" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('     '),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""     "" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('     ')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('xyz'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""xyz"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('xyz')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('5.0.0'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""5.0.0"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('5.0.0')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('5 . 0'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""5 . 0"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('5 . 0')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('5.   0'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""5.   0"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('5.   0')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('    - 3'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""    - 3"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('    - 3')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('123           5'),float8.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type double precision: ""123           5"" LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('123           5')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('10e400'),float8.sql,DIFFERENT,NumericValueOutOfRange,"""10e400"" is out of range for type double precision LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('10e400')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e400'),float8.sql,DIFFERENT,NumericValueOutOfRange,"""-10e400"" is out of range for type double precision LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e400')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('10e-400'),float8.sql,DIFFERENT,NumericValueOutOfRange,"""10e-400"" is out of range for type double precision LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('10e-400')"
postgresql,postgresql,INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e-400'),float8.sql,DIFFERENT,NumericValueOutOfRange,"""-10e-400"" is out of range for type double precision LINE 1: INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e-400')"
postgresql,postgresql,DROP TABLE FLOAT8_TBL,float8.sql,SAME,,
postgresql,postgresql,"create table spgist_point_tbl(id int4, p point)",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_point_tbl (id, p) select g, point(g*10, g*10) from generate_series(1, 10) g",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_point_tbl (id, p) select g,      point(g*10, g*10) from generate_series(1, 10000) g",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_point_tbl (id, p) select g+100000, point(g*10+1, g*10+1) from generate_series(1, 10000) g",spgist.sql,SAME,,
postgresql,postgresql,"create table spgist_box_tbl(id serial, b box)",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_box_tbl(b) select box(point(i,j),point(i+s,j+s))   from generate_series(1,100,5) i,        generate_series(1,100,5) j,        generate_series(1,10) s",spgist.sql,SAME,,
postgresql,postgresql,"create table spgist_text_tbl(id int4, t text)",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_text_tbl (id, t) select g, 'f' || repeat('o', 100) || g from generate_series(1, 10000) g union all select g, 'baaaaaaaaaaaaaar' || g from generate_series(1, 1000) g",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_text_tbl (id, t) select -g, 'f' || repeat('o', 100-g) || 'surprise' from generate_series(1, 100) g",spgist.sql,SAME,,
postgresql,postgresql,create table spgist_domain_tbl (f1 spgist_text),spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_domain_tbl values('fee'), ('fi'), ('fo'), ('fum')",spgist.sql,SAME,,
postgresql,postgresql,"insert into spgist_unlogged_tbl(b) select box(point(i,j))   from generate_series(1,100,5) i,        generate_series(1,10,5) j",spgist.sql,SAME,,
postgresql,postgresql,"CREATE TABLE DEFAULT_TBL (i int DEFAULT 100, 	x text DEFAULT 'vadim', f float8 DEFAULT 123.456)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO DEFAULT_TBL VALUES (1, 'thomas', 57.0613)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO DEFAULT_TBL VALUES (1, 'bruce')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO DEFAULT_TBL (i, f) VALUES (2, 987.654)",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO DEFAULT_TBL (x) VALUES ('marc'),constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO DEFAULT_TBL VALUES (3, null, 1.0)",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE DEFAULTEXPR_TBL (i1 int DEFAULT 100 + (200-199) * 2, 	i2 int DEFAULT nextval('default_seq'))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO DEFAULTEXPR_TBL VALUES (-1, -2)",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO DEFAULTEXPR_TBL (i1) VALUES (-3),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (-4),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (NULL),constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE error_tbl (i int DEFAULT (100, ))",constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near "")"" LINE 1: CREATE TABLE error_tbl (i int DEFAULT (100, ))"
postgresql,postgresql,"CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2))",constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""IN"" LINE 1: CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2))"
postgresql,postgresql,"CREATE TABLE error_tbl (b1 bool DEFAULT (1 IN (1, 2)))",constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE error_tbl,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE CHECK_TBL (x int, 	CONSTRAINT CHECK_CON CHECK (x > 3))",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (5),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (4),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (3),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check_tbl"" violates check constraint ""check_con"" DETAIL:  Failing row contains (3)."
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (2),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check_tbl"" violates check constraint ""check_con"" DETAIL:  Failing row contains (2)."
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (6),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO CHECK_TBL VALUES (1),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check_tbl"" violates check constraint ""check_con"" DETAIL:  Failing row contains (1)."
postgresql,postgresql,"CREATE TABLE CHECK2_TBL (x int, y text, z int, 	CONSTRAINT SEQUENCE_CON 	CHECK (x > 3 and y <> 'check failed' and z < 8))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (4, 'check ok', -2)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (1, 'x check failed', -2)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check2_tbl"" violates check constraint ""sequence_con"" DETAIL:  Failing row contains (1, x check failed, -2)."
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (5, 'z check failed', 10)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check2_tbl"" violates check constraint ""sequence_con"" DETAIL:  Failing row contains (5, z check failed, 10)."
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (0, 'check failed', -2)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check2_tbl"" violates check constraint ""sequence_con"" DETAIL:  Failing row contains (0, check failed, -2)."
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (6, 'check failed', 11)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""check2_tbl"" violates check constraint ""sequence_con"" DETAIL:  Failing row contains (6, check failed, 11)."
postgresql,postgresql,"INSERT INTO CHECK2_TBL VALUES (7, 'check ok', 7)",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE INSERT_TBL (x INT DEFAULT nextval('insert_seq'), 	y TEXT DEFAULT '-NULL-', 	z INT DEFAULT -1 * currval('insert_seq'), 	CONSTRAINT INSERT_TBL_CON CHECK (x >= 3 AND y <> 'check failed' AND x < 8), 	CHECK (x + z = 0))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL(x,z) VALUES (2, -2)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (2, -NULL-, -2)."
postgresql,postgresql,INSERT INTO INSERT_TBL(y) VALUES ('Y'),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (2, Y, -2)."
postgresql,postgresql,INSERT INTO INSERT_TBL(y) VALUES ('Y'),constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL(x,z) VALUES (1, -2)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_check"" DETAIL:  Failing row contains (1, -NULL-, -2)."
postgresql,postgresql,"INSERT INTO INSERT_TBL(z,x) VALUES (-7,  7)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL VALUES (5, 'check failed', -5)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (5, check failed, -5)."
postgresql,postgresql,"INSERT INTO INSERT_TBL VALUES (7, '!check failed', -7)",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO INSERT_TBL(y) VALUES ('-!NULL-'),constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL(y,z) VALUES ('check failed', 4)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_check"" DETAIL:  Failing row contains (5, check failed, 4)."
postgresql,postgresql,"INSERT INTO INSERT_TBL(x,y) VALUES (5, 'check failed')",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (5, check failed, -5)."
postgresql,postgresql,"INSERT INTO INSERT_TBL(x,y) VALUES (5, '!check failed')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO INSERT_TBL(y) VALUES ('-!NULL-'),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO INSERT_TBL(y) VALUES ('Y'),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (8, Y, -8)."
postgresql,postgresql,"INSERT INTO INSERT_TBL VALUES (null, null, null)",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE SYS_COL_CHECK_TBL (city text, state text, is_capital bool,                   altitude int,                   CHECK (NOT (is_capital AND tableoid::regclass::text = 'sys_col_check_tbl')))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO SYS_COL_CHECK_TBL VALUES ('Seattle', 'Washington', false, 100)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO SYS_COL_CHECK_TBL VALUES ('Olympia', 'Washington', true, 100)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""sys_col_check_tbl"" violates check constraint ""sys_col_check_tbl_check"" DETAIL:  Failing row contains (Olympia, Washington, t, 100)."
postgresql,postgresql,DROP TABLE SYS_COL_CHECK_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE SYS_COL_CHECK_TBL (city text, state text, is_capital bool,                   altitude int, 				  CHECK (NOT (is_capital AND ctid::text = 'sys_col_check_tbl')))",constraints.sql,DIFFERENT,InvalidColumnReference,"system column ""ctid"" reference in check constraint is invalid LINE 3:       CHECK (NOT (is_capital AND ctid::text = 'sys_col_check..."
postgresql,postgresql,"CREATE TABLE INSERT_CHILD (cx INT default 42, 	cy INT CHECK (cy > x)) 	INHERITS (INSERT_TBL)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_CHILD(x,z,cy) VALUES (7,-7,11)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_CHILD(x,z,cy) VALUES (7,-7,6)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_child"" violates check constraint ""insert_child_check"" DETAIL:  Failing row contains (7, -NULL-, -7, 42, 6)."
postgresql,postgresql,"INSERT INTO INSERT_CHILD(x,z,cy) VALUES (6,-7,7)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_child"" violates check constraint ""insert_tbl_check"" DETAIL:  Failing row contains (6, -NULL-, -7, 42, 7)."
postgresql,postgresql,"INSERT INTO INSERT_CHILD(x,y,z,cy) VALUES (6,'check failed',-6,7)",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_child"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (6, check failed, -6, 42, 7)."
postgresql,postgresql,DROP TABLE INSERT_CHILD,constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC1 (TEST INT 	CHECK (TEST > 0) NO INHERIT),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC2 (TEST2 INT) INHERITS (ATACC1),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO ATACC2 (TEST) VALUES (-3),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO ATACC1 (TEST) VALUES (-3),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_test_check"" DETAIL:  Failing row contains (-3)."
postgresql,postgresql,DROP TABLE ATACC1 CASCADE,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ATACC1 (TEST INT, TEST2 INT 	CHECK (TEST > 0), CHECK (TEST2 > 10) NO INHERIT)",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC2 () INHERITS (ATACC1),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO ATACC2 (TEST) VALUES (-3),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc2"" violates check constraint ""atacc1_test_check"" DETAIL:  Failing row contains (-3, null)."
postgresql,postgresql,INSERT INTO ATACC1 (TEST) VALUES (-3),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_test_check"" DETAIL:  Failing row contains (-3, null)."
postgresql,postgresql,INSERT INTO ATACC2 (TEST2) VALUES (3),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO ATACC1 (TEST2) VALUES (3),constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""atacc1"" violates check constraint ""atacc1_test2_check"" DETAIL:  Failing row contains (null, 3)."
postgresql,postgresql,DROP TABLE ATACC1 CASCADE,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ATACC1 (a int, not null a no inherit)",constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""not"" LINE 1: CREATE TABLE ATACC1 (a int, not null a no inherit)"
postgresql,postgresql,CREATE TABLE ATACC2 () INHERITS (ATACC1),constraints.sql,DIFFERENT,UndefinedTable,"relation ""atacc1"" does not exist"
postgresql,postgresql,"DROP TABLE ATACC1, ATACC2",constraints.sql,DIFFERENT,UndefinedTable,"table ""atacc1"" does not exist"
postgresql,postgresql,CREATE TABLE ATACC1 (a int),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC2 () INHERITS (ATACC1),constraints.sql,SAME,,
postgresql,postgresql,"DROP TABLE ATACC1, ATACC2",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC1 (a int),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE ATACC2 () INHERITS (ATACC1),constraints.sql,SAME,,
postgresql,postgresql,"DROP TABLE ATACC1, ATACC2",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO tmp VALUES (null, 'Y', null)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO tmp VALUES (5, '!check failed', null)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO tmp VALUES (null, 'try again', null)",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO INSERT_TBL(y) select yd from tmp,constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO INSERT_TBL SELECT * FROM tmp WHERE yd = 'try again',constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL(y,z) SELECT yd, -7 FROM tmp WHERE yd = 'try again'",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO INSERT_TBL(y,z) SELECT yd, -8 FROM tmp WHERE yd = 'try again'",constraints.sql,DIFFERENT,CheckViolation,"new row for relation ""insert_tbl"" violates check constraint ""insert_tbl_con"" DETAIL:  Failing row contains (8, try again, -8)."
postgresql,postgresql,DROP TABLE tmp,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE COPY_TBL (x INT, y TEXT, z INT, 	CONSTRAINT COPY_CON 	CHECK (x > 3 AND y <> 'check failed' AND x < 7 ))",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PRIMARY_TBL (i int PRIMARY KEY, t text)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (1, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (2, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (1, 'three')",constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""primary_tbl_pkey"" DETAIL:  Key (i)=(1) already exists."
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (4, 'three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO PRIMARY_TBL (t) VALUES ('six'),constraints.sql,DIFFERENT,NotNullViolation,"null value in column ""i"" of relation ""primary_tbl"" violates not-null constraint DETAIL:  Failing row contains (null, six)."
postgresql,postgresql,DROP TABLE PRIMARY_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE PRIMARY_TBL (i int, t text, 	PRIMARY KEY(i,t))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (1, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (2, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (1, 'three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (4, 'three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO PRIMARY_TBL VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO PRIMARY_TBL (t) VALUES ('six'),constraints.sql,DIFFERENT,NotNullViolation,"null value in column ""i"" of relation ""primary_tbl"" violates not-null constraint DETAIL:  Failing row contains (null, six)."
postgresql,postgresql,DROP TABLE PRIMARY_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE UNIQUE_TBL (i int UNIQUE, t text)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (2, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'three')",constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_tbl_i_key"" DETAIL:  Key (i)=(1) already exists."
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (4, 'four')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('six'),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('seven'),constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (5, 'five-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'five-upsert-update'",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (6, 'six-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'six-upsert-update'",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'a'), (2, 'b'), (2, 'b') ON CONFLICT (i) DO UPDATE SET t = 'fails'",constraints.sql,DIFFERENT,CardinalityViolation,ON CONFLICT DO UPDATE command cannot affect row a second time HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
postgresql,postgresql,DROP TABLE UNIQUE_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE UNIQUE_TBL (i int UNIQUE NULLS NOT DISTINCT, t text)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (2, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'three')",constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_tbl_i_key"" DETAIL:  Key (i)=(1) already exists."
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (4, 'four')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('six'),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('seven'),constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_tbl_i_key"" DETAIL:  Key (i)=(null) already exists."
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('eight') ON CONFLICT DO NOTHING,constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE UNIQUE_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE UNIQUE_TBL (i int, t text, 	UNIQUE(i,t))",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (2, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (1, 'one')",constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_tbl_i_t_key"" DETAIL:  Key (i, t)=(1, one) already exists."
postgresql,postgresql,"INSERT INTO UNIQUE_TBL VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO UNIQUE_TBL (t) VALUES ('six'),constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE UNIQUE_TBL,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE unique_tbl (i int UNIQUE DEFERRABLE, t text)",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (0, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (1, 'two')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (2, 'tree')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'four')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (4, 'five')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (1, 'five')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (5, 'one')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'Three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'Three')",constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""unique_tbl_i_key"" DETAIL:  Key (i)=(3) already exists."
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'Three')",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_uniq_tbl (i int UNIQUE DEFERRABLE) partition by range (i),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_uniq_tbl_1 PARTITION OF parted_uniq_tbl FOR VALUES FROM (0) TO (10),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE parted_uniq_tbl_2 PARTITION OF parted_uniq_tbl FOR VALUES FROM (20) TO (30),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO parted_uniq_tbl VALUES (1),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO parted_uniq_tbl VALUES (1),constraints.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""parted_uniq_tbl_1_i_key"" DETAIL:  Key (i)=(1) already exists."
postgresql,postgresql,INSERT INTO parted_uniq_tbl VALUES (1),constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE parted_uniq_tbl,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE parted_fk_naming (     id bigint NOT NULL default 1,     id_abc bigint,     CONSTRAINT dummy_constr FOREIGN KEY (id_abc)         REFERENCES parted_fk_naming (id),     PRIMARY KEY (id) ) PARTITION BY LIST (id)",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE parted_fk_naming_1 (     id bigint NOT NULL default 1,     id_abc bigint,     PRIMARY KEY (id),     CONSTRAINT dummy_constr CHECK (true) )",constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE parted_fk_naming,constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES (3, 'Three')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO unique_tbl VALUES(3, 'tree')",constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE unique_tbl,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE circles (   c1 CIRCLE,   c2 TEXT,   EXCLUDE USING gist     (c1 WITH &&, (c2::circle) WITH &&)     WHERE (circle_center(c1) <> '(0,0)') )",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(0,0), 5>', '<(0,0), 5>')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(0,0), 5>', '<(0,0), 4>')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(10,10), 10>', '<(0,0), 5>')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')",constraints.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""circles_c1_c2_excl"" DETAIL:  Key (c1, (c2::circle))=(<(20,20),10>, <(0,0),4>) conflicts with existing key (c1, (c2::circle))=(<(10,10),10>, <(0,0),5>)."
postgresql,postgresql,"INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')   ON CONFLICT ON CONSTRAINT circles_c1_c2_excl DO NOTHING",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')   ON CONFLICT ON CONSTRAINT circles_c1_c2_excl DO UPDATE SET c2 = EXCLUDED.c2",constraints.sql,DIFFERENT,WrongObjectType,ON CONFLICT DO UPDATE not supported with exclusion constraints
postgresql,postgresql,"INSERT INTO circles VALUES('<(20,20), 1>', '<(0,0), 5>')",constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO circles VALUES('<(20,20), 10>', '<(10,10), 5>')",constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE circles,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE deferred_excl (   f1 int,   f2 int,   CONSTRAINT deferred_excl_con EXCLUDE (f1 WITH =) INITIALLY DEFERRED )",constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO deferred_excl VALUES(1),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO deferred_excl VALUES(2),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO deferred_excl VALUES(1),constraints.sql,DIFFERENT,ExclusionViolation,"conflicting key value violates exclusion constraint ""deferred_excl_con"" DETAIL:  Key (f1)=(1) conflicts with existing key (f1)=(1)."
postgresql,postgresql,INSERT INTO deferred_excl VALUES(1) ON CONFLICT ON CONSTRAINT deferred_excl_con DO NOTHING,constraints.sql,DIFFERENT,ObjectNotInPrerequisiteState,ON CONFLICT does not support deferrable unique constraints/exclusion constraints as arbiters
postgresql,postgresql,INSERT INTO deferred_excl VALUES(2),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO deferred_excl VALUES(3),constraints.sql,SAME,,
postgresql,postgresql,INSERT INTO deferred_excl VALUES(3),constraints.sql,SAME,,
postgresql,postgresql,"INSERT INTO deferred_excl VALUES(2, 1)",constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE deferred_excl,constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl1 (a INTEGER NOT NULL NOT NULL),constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE notnull_tbl1,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE notnull_tbl2 (a INTEGER CONSTRAINT blah NOT NULL, b INTEGER CONSTRAINT blah NOT NULL)",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl2 (a INTEGER PRIMARY KEY),constraints.sql,DIFFERENT,DuplicateTable,"relation ""notnull_tbl2"" already exists"
postgresql,postgresql,"CREATE TABLE notnull_tbl3 (a INTEGER NOT NULL, CHECK (a IS NOT NULL))",constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cnn_parent (a int, b int)",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_child () INHERITS (cnn_parent),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child..."
postgresql,postgresql,CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cn..."
postgresql,postgresql,"CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2)",constraints.sql,DIFFERENT,UndefinedTable,"relation ""cnn_grandchild"" does not exist"
postgresql,postgresql,DROP TABLE cnn_parent CASCADE,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cnn_parent (a int, b int PRIMARY KEY)",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_child () INHERITS (cnn_parent),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child..."
postgresql,postgresql,CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cn..."
postgresql,postgresql,"CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2)",constraints.sql,DIFFERENT,UndefinedTable,"relation ""cnn_grandchild"" does not exist"
postgresql,postgresql,DROP TABLE cnn_parent CASCADE,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE cnn_parent (a int, b int)",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_child () INHERITS (cnn_parent),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child..."
postgresql,postgresql,CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent),constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cn..."
postgresql,postgresql,"CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2)",constraints.sql,DIFFERENT,UndefinedTable,"relation ""cnn_grandchild"" does not exist"
postgresql,postgresql,create table cnn2_parted(a int primary key) partition by list (a),constraints.sql,SAME,,
postgresql,postgresql,create table cnn2_part1(a int),constraints.sql,SAME,,
postgresql,postgresql,"drop table cnn2_parted, cnn2_part1",constraints.sql,SAME,,
postgresql,postgresql,create table cnn2_parted(a int not null) partition by list (a),constraints.sql,SAME,,
postgresql,postgresql,create table cnn2_part1(a int primary key),constraints.sql,SAME,,
postgresql,postgresql,"drop table cnn2_parted, cnn2_part1",constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl4 (a INTEGER PRIMARY KEY INITIALLY DEFERRED),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl4_lk (LIKE notnull_tbl4),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl4_lk2 (LIKE notnull_tbl4 INCLUDING INDEXES),constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE notnull_tbl4_lk3 (LIKE notnull_tbl4 INCLUDING INDEXES, CONSTRAINT a_nn NOT NULL a)",constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: ...E notnull_tbl4 INCLUDING INDEXES, CONSTRAINT a_nn NOT NULL a..."
postgresql,postgresql,CREATE TABLE notnull_tbl4_cld () INHERITS (notnull_tbl4),constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE notnull_tbl4_cld2 (PRIMARY KEY (a) DEFERRABLE) INHERITS (notnull_tbl4),constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE notnull_tbl4_cld3 (PRIMARY KEY (a) DEFERRABLE, CONSTRAINT a_nn NOT NULL a) INHERITS (notnull_tbl4)",constraints.sql,DIFFERENT,SyntaxError,"syntax error at or near ""NOT"" LINE 1: ...cld3 (PRIMARY KEY (a) DEFERRABLE, CONSTRAINT a_nn NOT NULL a..."
postgresql,postgresql,CREATE TABLE notnull_tbl5 (a INTEGER CONSTRAINT a_nn NOT NULL),constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE notnull_tbl5,constraints.sql,SAME,,
postgresql,postgresql,CREATE TABLE constraint_comments_tbl (a int CONSTRAINT the_constraint CHECK (a > 0)),constraints.sql,SAME,,
postgresql,postgresql,DROP TABLE constraint_comments_tbl,constraints.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brintest (byteacol bytea, 	charcol ""char"", 	namecol name, 	int8col bigint, 	int2col smallint, 	int4col integer, 	textcol text, 	oidcol oid, 	tidcol tid, 	float4col real, 	float8col double precision, 	macaddrcol macaddr, 	inetcol inet, 	cidrcol cidr, 	bpcharcol character, 	datecol date, 	timecol time without time zone, 	timestampcol timestamp without time zone, 	timestamptzcol timestamp with time zone, 	intervalcol interval, 	timetzcol time with time zone, 	bitcol bit(10), 	varbitcol bit varying(16), 	numericcol numeric, 	uuidcol uuid, 	int4rangecol int4range, 	lsncol pg_lsn, 	boxcol box ) WITH (fillfactor=10, autovacuum_enabled=off)",brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest SELECT 	repeat(stringu1, 8)::bytea, 	substr(stringu1, 1, 1)::""char"", 	stringu1::name, 142857 * tenthous, 	thousand, 	twothousand, 	repeat(stringu1, 8), 	unique1::oid, 	format('(%s,%s)', tenthous, twenty)::tid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	inet '10.2.3.4/24' + tenthous, 	cidr '10.2.3/24' + tenthous, 	substr(stringu1, 1, 1)::bpchar, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20+02' + hundred * interval '15 seconds', 	thousand::bit(10), 	tenthous::bit(16)::varbit, 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	int4range(thousand, twothousand), 	format('%s/%s%s', odd, even, tenthous)::pg_lsn, 	box(point(odd, even), point(thousand, twothousand)) FROM tenk1 ORDER BY unique2 LIMIT 100",brin.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 29: FROM tenk1 ORDER BY unique2 LIMIT 100"
postgresql,postgresql,"INSERT INTO brintest (inetcol, cidrcol, int4rangecol) SELECT 	inet 'fe80::6e40:8ff:fea9:8c46' + tenthous, 	cidr 'fe80::6e40:8ff:fea9:8c46' + tenthous, 	'empty'::int4range FROM tenk1 ORDER BY thousand, tenthous LIMIT 25",brin.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 5: FROM tenk1 ORDER BY thousand, tenthous LIMIT 25"
postgresql,postgresql,"CREATE TABLE brinopers (colname name, typ text, 	op text[], value text[], matches int[], 	check (cardinality(op) = cardinality(value)), 	check (cardinality(op) = cardinality(matches)))",brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brinopers VALUES 	('byteacol', 'bytea', 	 '{>, >=, =, <=, <}', 	 '{AAAAAA, AAAAAA, BNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAA, ZZZZZZ, ZZZZZZ}', 	 '{100, 100, 1, 100, 100}'), 	('charcol', '""char""', 	 '{>, >=, =, <=, <}', 	 '{A, A, M, Z, Z}', 	 '{97, 100, 6, 100, 98}'), 	('namecol', 'name', 	 '{>, >=, =, <=, <}', 	 '{AAAAAA, AAAAAA, MAAAAA, ZZAAAA, ZZAAAA}', 	 '{100, 100, 2, 100, 100}'), 	('int2col', 'int2', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 999}', 	 '{100, 100, 1, 100, 100}'), 	('int2col', 'int4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int2col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 999, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int2', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1999}', 	 '{100, 100, 1, 100, 100}'), 	('int4col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 800, 1999, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('int8col', 'int2', 	 '{>, >=}', 	 '{0, 0}', 	 '{100, 100}'), 	('int8col', 'int4', 	 '{>, >=}', 	 '{0, 0}', 	 '{100, 100}'), 	('int8col', 'int8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 1257141600, 1428427143, 1428427143}', 	 '{100, 100, 1, 100, 100}'), 	('textcol', 'text', 	 '{>, >=, =, <=, <}', 	 '{ABABAB, ABABAB, BNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAABNAAAA, ZZAAAA, ZZAAAA}', 	 '{100, 100, 1, 100, 100}'), 	('oidcol', 'oid', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 8800, 9999, 9999}', 	 '{100, 100, 1, 100, 100}'), 	('tidcol', 'tid', 	 '{>, >=, =, <=, <}', 	 '{""(0,0)"", ""(0,0)"", ""(8800,0)"", ""(9999,19)"", ""(9999,19)""}', 	 '{100, 100, 1, 100, 100}'), 	('float4col', 'float4', 	 '{>, >=, =, <=, <}', 	 '{0.0103093, 0.0103093, 1, 1, 1}', 	 '{100, 100, 4, 100, 96}'), 	('float4col', 'float8', 	 '{>, >=, =, <=, <}', 	 '{0.0103093, 0.0103093, 1, 1, 1}', 	 '{100, 100, 4, 100, 96}'), 	('float8col', 'float4', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 0, 1.98, 1.98}', 	 '{99, 100, 1, 100, 100}'), 	('float8col', 'float8', 	 '{>, >=, =, <=, <}', 	 '{0, 0, 0, 1.98, 1.98}', 	 '{99, 100, 1, 100, 100}'), 	('macaddrcol', 'macaddr', 	 '{>, >=, =, <=, <}', 	 '{00:00:01:00:00:00, 00:00:01:00:00:00, 2c:00:2d:00:16:00, ff:fe:00:00:00:00, ff:fe:00:00:00:00}', 	 '{99, 100, 2, 100, 100}'), 	('inetcol', 'inet', 	 '{&&, =, <, <=, >, >=, >>=, >>, <<=, <<}', 	 '{10/8, 10.2.14.231/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0, 10.2.14.231/24, 10.2.14.231/25, 10.2.14.231/8, 0/0}', 	 '{100, 1, 100, 100, 125, 125, 2, 2, 100, 100}'), 	('inetcol', 'inet', 	 '{&&, >>=, <<=, =}', 	 '{fe80::6e40:8ff:fea9:a673/32, fe80::6e40:8ff:fea9:8c46, fe80::6e40:8ff:fea9:a673/32, fe80::6e40:8ff:fea9:8c46}', 	 '{25, 1, 25, 1}'), 	('inetcol', 'cidr', 	 '{&&, <, <=, >, >=, >>=, >>, <<=, <<}', 	 '{10/8, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0, 10.2.14/24, 10.2.14/25, 10/8, 0/0}', 	 '{100, 100, 100, 125, 125, 2, 2, 100, 100}'), 	('inetcol', 'cidr', 	 '{&&, >>=, <<=, =}', 	 '{fe80::/32, fe80::6e40:8ff:fea9:8c46, fe80::/32, fe80::6e40:8ff:fea9:8c46}', 	 '{25, 1, 25, 1}'), 	('cidrcol', 'inet', 	 '{&&, =, <, <=, >, >=, >>=, >>, <<=, <<}', 	 '{10/8, 10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0, 10.2.14.231/24, 10.2.14.231/25, 10.2.14.231/8, 0/0}', 	 '{100, 2, 100, 100, 125, 125, 2, 2, 100, 100}'), 	('cidrcol', 'inet', 	 '{&&, >>=, <<=, =}', 	 '{fe80::6e40:8ff:fea9:a673/32, fe80::6e40:8ff:fea9:8c46, fe80::6e40:8ff:fea9:a673/32, fe80::6e40:8ff:fea9:8c46}', 	 '{25, 1, 25, 1}'), 	('cidrcol', 'cidr', 	 '{&&, =, <, <=, >, >=, >>=, >>, <<=, <<}', 	 '{10/8, 10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0, 10.2.14/24, 10.2.14/25, 10/8, 0/0}', 	 '{100, 2, 100, 100, 125, 125, 2, 2, 100, 100}'), 	('cidrcol', 'cidr', 	 '{&&, >>=, <<=, =}', 	 '{fe80::/32, fe80::6e40:8ff:fea9:8c46, fe80::/32, fe80::6e40:8ff:fea9:8c46}', 	 '{25, 1, 25, 1}'), 	('bpcharcol', 'bpchar', 	 '{>, >=, =, <=, <}', 	 '{A, A, W, Z, Z}', 	 '{97, 100, 6, 100, 98}'), 	('datecol', 'date', 	 '{>, >=, =, <=, <}', 	 '{1995-08-15, 1995-08-15, 2009-12-01, 2022-12-30, 2022-12-30}', 	 '{100, 100, 1, 100, 100}'), 	('timecol', 'time', 	 '{>, >=, =, <=, <}', 	 '{01:20:30, 01:20:30, 02:28:57, 06:28:31.5, 06:28:31.5}', 	 '{100, 100, 1, 100, 100}'), 	('timestampcol', 'timestamp', 	 '{>, >=, =, <=, <}', 	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}', 	 '{100, 100, 1, 100, 100}'), 	('timestampcol', 'timestamptz', 	 '{>, >=, =, <=, <}', 	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}', 	 '{100, 100, 1, 100, 100}'), 	('timestamptzcol', 'timestamptz', 	 '{>, >=, =, <=, <}', 	 '{1972-10-10 03:00:00-04, 1972-10-10 03:00:00-04, 1972-10-19 09:00:00-07, 1972-11-20 19:00:00-03, 1972-11-20 19:00:00-03}', 	 '{100, 100, 1, 100, 100}'), 	('intervalcol', 'interval', 	 '{>, >=, =, <=, <}', 	 '{00:00:00, 00:00:00, 1 mons 13 days 12:24, 2 mons 23 days 07:48:00, 1 year}', 	 '{100, 100, 1, 100, 100}'), 	('timetzcol', 'timetz', 	 '{>, >=, =, <=, <}', 	 '{01:30:20+02, 01:30:20+02, 01:35:50+02, 23:55:05+02, 23:55:05+02}', 	 '{99, 100, 2, 100, 100}'), 	('bitcol', 'bit(10)', 	 '{>, >=, =, <=, <}', 	 '{0000000010, 0000000010, 0011011110, 1111111000, 1111111000}', 	 '{100, 100, 1, 100, 100}'), 	('varbitcol', 'varbit(16)', 	 '{>, >=, =, <=, <}', 	 '{0000000000000100, 0000000000000100, 0001010001100110, 1111111111111000, 1111111111111000}', 	 '{100, 100, 1, 100, 100}'), 	('numericcol', 'numeric', 	 '{>, >=, =, <=, <}', 	 '{0.00, 0.01, 2268164.347826086956521739130434782609, 99470151.9, 99470151.9}', 	 '{100, 100, 1, 100, 100}'), 	('uuidcol', 'uuid', 	 '{>, >=, =, <=, <}', 	 '{00040004-0004-0004-0004-000400040004, 00040004-0004-0004-0004-000400040004, 52225222-5222-5222-5222-522252225222, 99989998-9998-9998-9998-999899989998, 99989998-9998-9998-9998-999899989998}', 	 '{100, 100, 1, 100, 100}'), 	('int4rangecol', 'int4range', 	 '{<<, &<, &&, &>, >>, @>, <@, =, <, <=, >, >=}', 	 '{""[10000,)"",""[10000,)"",""(,]"",""[3,4)"",""[36,44)"",""(1500,1501]"",""[3,4)"",""[222,1222)"",""[36,44)"",""[43,1043)"",""[367,4466)"",""[519,)""}', 	 '{53, 53, 53, 53, 50, 22, 72, 1, 74, 75, 34, 21}'), 	('int4rangecol', 'int4range', 	 '{@>, <@, =, <=, >, >=}', 	 '{empty, empty, empty, empty, empty, empty}', 	 '{125, 72, 72, 72, 53, 125}'), 	('int4rangecol', 'int4', 	 '{@>}', 	 '{1500}', 	 '{22}'), 	('lsncol', 'pg_lsn', 	 '{>, >=, =, <=, <, IS, IS NOT}', 	 '{0/1200, 0/1200, 44/455222, 198/1999799, 198/1999799, NULL, NULL}', 	 '{100, 100, 1, 100, 100, 25, 100}'), 	('boxcol', 'point', 	 '{@>}', 	 '{""(500,43)""}', 	 '{11}'), 	('boxcol', 'box', 	 '{<<, &<, &&, &>, >>, <<|, &<|, |&>, |>>, @>, <@, ~=}', 	 '{""((1000,2000),(3000,4000))"",""((1,2),(3000,4000))"",""((1,2),(3000,4000))"",""((1,2),(3000,4000))"",""((1,2),(3,4))"",""((1000,2000),(3000,4000))"",""((1,2000),(3,4000))"",""((1000,2),(3000,4))"",""((1,2),(3,4))"",""((1,2),(300,400))"",""((1,2),(3000,4000))"",""((222,1222),(44,45))""}', 	 '{100, 100, 100, 99, 96, 100, 100, 99, 96, 1, 99, 1}')",brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest SELECT 	repeat(stringu1, 42)::bytea, 	substr(stringu1, 1, 1)::""char"", 	stringu1::name, 142857 * tenthous, 	thousand, 	twothousand, 	repeat(stringu1, 42), 	unique1::oid, 	format('(%s,%s)', tenthous, twenty)::tid, 	(four + 1.0)/(hundred+1), 	odd::float8 / (tenthous + 1), 	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr, 	inet '10.2.3.4' + tenthous, 	cidr '10.2.3/24' + tenthous, 	substr(stringu1, 1, 1)::bpchar, 	date '1995-08-15' + tenthous, 	time '01:20:30' + thousand * interval '18.5 second', 	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours', 	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour', 	justify_days(justify_hours(tenthous * interval '12 minutes')), 	timetz '01:30:20' + hundred * interval '15 seconds', 	thousand::bit(10), 	tenthous::bit(16)::varbit, 	tenthous::numeric(36,30) * fivethous * even / (hundred + 1), 	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid, 	int4range(thousand, twothousand), 	format('%s/%s%s', odd, even, tenthous)::pg_lsn, 	box(point(odd, even), point(thousand, twothousand)) FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5",brin.sql,DIFFERENT,UndefinedTable,"relation ""tenk1"" does not exist LINE 29: FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5"
postgresql,postgresql,"CREATE TABLE brin_summarize (     value int ) WITH (fillfactor=10, autovacuum_enabled=false)",brin.sql,SAME,,
postgresql,postgresql,"DO $$ DECLARE curtid tid; BEGIN   LOOP     INSERT INTO brin_summarize VALUES (1) RETURNING ctid INTO curtid;     EXIT WHEN curtid > tid '(2, 0)';   END LOOP; END; $$",brin.sql,SAME,,
postgresql,postgresql,CREATE TABLE brintest_2 (n numrange),brin.sql,SAME,,
postgresql,postgresql,INSERT INTO brintest_2 VALUES ('empty'),brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_2 VALUES (numrange(0, 2^1000::numeric))",brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_2 VALUES ('(-1, 0)')",brin.sql,SAME,,
postgresql,postgresql,DROP TABLE brintest_2,brin.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brin_test (a INT, b INT)",brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brin_test SELECT x/100,x%100 FROM generate_series(1,10000) x(x)",brin.sql,SAME,,
postgresql,postgresql,"CREATE TABLE brintest_3 (a text, b text, c text, d text)",brin.sql,SAME,,
postgresql,postgresql,"WITH rand_value AS (SELECT string_agg(fipshash(i::text),'') AS val FROM generate_series(1,60) s(i)) INSERT INTO brintest_3 SELECT val, val, val, val FROM rand_value",brin.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 1: WITH rand_value AS (SELECT string_agg(fipshash(i::text),'') ...                                                HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"WITH rand_value AS (SELECT string_agg(fipshash((-i)::text),'') AS val FROM generate_series(1,60) s(i)) INSERT INTO brintest_3 SELECT val, val, val, val FROM rand_value",brin.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 1: WITH rand_value AS (SELECT string_agg(fipshash((-i)::text),'...                                                HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,DROP TABLE brintest_3,brin.sql,SAME,,
postgresql,postgresql,"INSERT INTO brintest_unlogged VALUES (numrange(0, 2^1000::numeric))",brin.sql,SAME,,
postgresql,postgresql,DROP TABLE brintest_unlogged,brin.sql,SAME,,
postgresql,postgresql,CREATE TABLE brin_insert_optimization (a int),brin.sql,SAME,,
postgresql,postgresql,INSERT INTO brin_insert_optimization VALUES (1),brin.sql,SAME,,
postgresql,postgresql,DROP TABLE brin_insert_optimization,brin.sql,SAME,,
postgresql,postgresql,CREATE TABLE sequence_test_table (a int),sequence.sql,SAME,,
postgresql,postgresql,DROP TABLE sequence_test_table,sequence.sql,SAME,,
postgresql,postgresql,"CREATE TABLE serialTest1 (f1 text, f2 serial)",sequence.sql,SAME,,
postgresql,postgresql,INSERT INTO serialTest1 VALUES ('foo'),sequence.sql,SAME,,
postgresql,postgresql,INSERT INTO serialTest1 VALUES ('bar'),sequence.sql,SAME,,
postgresql,postgresql,"INSERT INTO serialTest1 VALUES ('force', 100)",sequence.sql,SAME,,
postgresql,postgresql,"INSERT INTO serialTest1 VALUES ('wrong', NULL)",sequence.sql,DIFFERENT,NotNullViolation,"null value in column ""f2"" of relation ""serialtest1"" violates not-null constraint DETAIL:  Failing row contains (wrong, null)."
postgresql,postgresql,"CREATE TABLE serialTest2 (f1 text, f2 serial, f3 smallserial, f4 serial2,   f5 bigserial, f6 serial8)",sequence.sql,SAME,,
postgresql,postgresql,INSERT INTO serialTest2 (f1)   VALUES ('test_defaults'),sequence.sql,SAME,,
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f2, f3, f4, f5, f6)   VALUES ('test_max_vals', 2147483647, 32767, 32767, 9223372036854775807,           9223372036854775807),          ('test_min_vals', -2147483648, -32768, -32768, -9223372036854775808,           -9223372036854775808)",sequence.sql,SAME,,
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f3)   VALUES ('bogus', -32769)",sequence.sql,DIFFERENT,NumericValueOutOfRange,smallint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f4)   VALUES ('bogus', -32769)",sequence.sql,DIFFERENT,NumericValueOutOfRange,smallint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f3)   VALUES ('bogus', 32768)",sequence.sql,DIFFERENT,NumericValueOutOfRange,smallint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f4)   VALUES ('bogus', 32768)",sequence.sql,DIFFERENT,NumericValueOutOfRange,smallint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f5)   VALUES ('bogus', -9223372036854775809)",sequence.sql,DIFFERENT,NumericValueOutOfRange,bigint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f6)   VALUES ('bogus', -9223372036854775809)",sequence.sql,DIFFERENT,NumericValueOutOfRange,bigint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f5)   VALUES ('bogus', 9223372036854775808)",sequence.sql,DIFFERENT,NumericValueOutOfRange,bigint out of range
postgresql,postgresql,"INSERT INTO serialTest2 (f1, f6)   VALUES ('bogus', 9223372036854775808)",sequence.sql,DIFFERENT,NumericValueOutOfRange,bigint out of range
postgresql,postgresql,INSERT INTO serialTest1 VALUES ('more'),sequence.sql,SAME,,
postgresql,postgresql,DROP TABLE t1,sequence.sql,SAME,,
postgresql,postgresql,"DROP TABLE serialTest1, serialTest2",sequence.sql,SAME,,
postgresql,postgresql,create table lp (a char) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table lp_default partition of lp default,partition_prune.sql,SAME,,
postgresql,postgresql,"create table lp_ef partition of lp for values in ('e', 'f')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table lp_ad partition of lp for values in ('a', 'd')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table lp_bc partition of lp for values in ('b', 'c')",partition_prune.sql,SAME,,
postgresql,postgresql,create table lp_g partition of lp for values in ('g'),partition_prune.sql,SAME,,
postgresql,postgresql,create table lp_null partition of lp for values in (null),partition_prune.sql,SAME,,
postgresql,postgresql,"create table coll_pruning (a text collate ""C"") partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table coll_pruning_a partition of coll_pruning for values in ('a'),partition_prune.sql,SAME,,
postgresql,postgresql,create table coll_pruning_b partition of coll_pruning for values in ('b'),partition_prune.sql,SAME,,
postgresql,postgresql,create table coll_pruning_def partition of coll_pruning default,partition_prune.sql,SAME,,
postgresql,postgresql,"create table rlp (a int, b varchar) partition by range (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp_default partition of rlp default partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp_default_default partition of rlp_default default,partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp_default_10 partition of rlp_default for values in (10),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp_default_30 partition of rlp_default for values in (30),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp_default_null partition of rlp_default for values in (null),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp1 partition of rlp for values from (minvalue) to (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp2 partition of rlp for values from (1) to (10),partition_prune.sql,SAME,,
postgresql,postgresql,"create table rlp3 (b varchar, a int) partition by list (b varchar_ops)",partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp3_default partition of rlp3 default,partition_prune.sql,SAME,,
postgresql,postgresql,"create table rlp3abcd partition of rlp3 for values in ('ab', 'cd')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rlp3efgh partition of rlp3 for values in ('ef', 'gh')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rlp3nullxy partition of rlp3 for values in (null, 'xy')",partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp4 partition of rlp for values from (20) to (30) partition by range (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp4_default partition of rlp4 default,partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp4_1 partition of rlp4 for values from (20) to (25),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp4_2 partition of rlp4 for values from (25) to (29),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp5 partition of rlp for values from (31) to (maxvalue) partition by range (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp5_default partition of rlp5 default,partition_prune.sql,SAME,,
postgresql,postgresql,create table rlp5_1 partition of rlp5 for values from (31) to (40),partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p (a int, b int, c int) partition by range (a, abs(b), c)",partition_prune.sql,SAME,,
postgresql,postgresql,create table mc3p_default partition of mc3p default,partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p0 partition of mc3p for values from (minvalue, minvalue, minvalue) to (1, 1, 1)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p1 partition of mc3p for values from (1, 1, 1) to (10, 5, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p2 partition of mc3p for values from (10, 5, 10) to (10, 10, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p3 partition of mc3p for values from (10, 10, 10) to (10, 10, 20)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p4 partition of mc3p for values from (10, 10, 20) to (10, maxvalue, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p5 partition of mc3p for values from (11, 1, 1) to (20, 10, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p6 partition of mc3p for values from (20, 10, 10) to (20, 20, 20)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p7 partition of mc3p for values from (20, 20, 20) to (maxvalue, maxvalue, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p (a int, b int) partition by range (a, b)",partition_prune.sql,SAME,,
postgresql,postgresql,create table mc2p_default partition of mc2p default,partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p0 partition of mc2p for values from (minvalue, minvalue) to (1, minvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p1 partition of mc2p for values from (1, minvalue) to (1, 1)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p2 partition of mc2p for values from (1, 1) to (2, minvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p3 partition of mc2p for values from (2, minvalue) to (2, 1)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p4 partition of mc2p for values from (2, 1) to (2, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc2p5 partition of mc2p for values from (2, maxvalue) to (maxvalue, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,create table boolpart (a bool) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table boolpart_default partition of boolpart default,partition_prune.sql,SAME,,
postgresql,postgresql,create table boolpart_t partition of boolpart for values in ('true'),partition_prune.sql,SAME,,
postgresql,postgresql,create table boolpart_f partition of boolpart for values in ('false'),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into boolpart values (true), (false), (null)",partition_prune.sql,SAME,,
postgresql,postgresql,create table boolpart_null partition of boolpart for values in (null),partition_prune.sql,SAME,,
postgresql,postgresql,insert into boolpart values(null),partition_prune.sql,SAME,,
postgresql,postgresql,create table iboolpart (a bool) partition by list ((not a)),partition_prune.sql,SAME,,
postgresql,postgresql,create table iboolpart_default partition of iboolpart default,partition_prune.sql,SAME,,
postgresql,postgresql,create table iboolpart_f partition of iboolpart for values in ('true'),partition_prune.sql,SAME,,
postgresql,postgresql,create table iboolpart_t partition of iboolpart for values in ('false'),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into iboolpart values (true), (false), (null)",partition_prune.sql,SAME,,
postgresql,postgresql,create table iboolpart_null partition of iboolpart for values in (null),partition_prune.sql,SAME,,
postgresql,postgresql,insert into iboolpart values(null),partition_prune.sql,SAME,,
postgresql,postgresql,"create table boolrangep (a bool, b bool, c int) partition by range (a,b,c)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table boolrangep_tf partition of boolrangep for values from ('true', 'false', 0) to ('true', 'false', 100)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table boolrangep_ft partition of boolrangep for values from ('false', 'true', 0) to ('false', 'true', 100)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table boolrangep_ff1 partition of boolrangep for values from ('false', 'false', 0) to ('false', 'false', 50)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table boolrangep_ff2 partition of boolrangep for values from ('false', 'false', 50) to ('false', 'false', 100)",partition_prune.sql,SAME,,
postgresql,postgresql,create table boolrangep_null partition of boolrangep default,partition_prune.sql,SAME,,
postgresql,postgresql,create table coercepart (a varchar) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table coercepart_ab partition of coercepart for values in ('ab'),partition_prune.sql,SAME,,
postgresql,postgresql,create table coercepart_bc partition of coercepart for values in ('bc'),partition_prune.sql,SAME,,
postgresql,postgresql,create table coercepart_cd partition of coercepart for values in ('cd'),partition_prune.sql,SAME,,
postgresql,postgresql,drop table coercepart,partition_prune.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part (a INT, b INT) PARTITION BY LIST (a)",partition_prune.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_p1 PARTITION OF part FOR VALUES IN (-2,-1,0,1,2)",partition_prune.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_p2 PARTITION OF part DEFAULT PARTITION BY RANGE(a),partition_prune.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_p2_p1 PARTITION OF part_p2 DEFAULT,partition_prune.sql,SAME,,
postgresql,postgresql,"CREATE TABLE part_rev (b INT, c INT, a INT)",partition_prune.sql,SAME,,
postgresql,postgresql,"INSERT INTO part VALUES (-1,-1), (1,1), (2,NULL), (NULL,-2),(NULL,NULL)",partition_prune.sql,SAME,,
postgresql,postgresql,create table rp (a int) partition by range (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table rp0 partition of rp for values from (minvalue) to (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table rp1 partition of rp for values from (1) to (2),partition_prune.sql,SAME,,
postgresql,postgresql,create table rp2 partition of rp for values from (2) to (maxvalue),partition_prune.sql,SAME,,
postgresql,postgresql,"create table coll_pruning_multi (a text) partition by range (substr(a, 1) collate ""POSIX"", substr(a, 1) collate ""C"")",partition_prune.sql,SAME,,
postgresql,postgresql,"create table coll_pruning_multi1 partition of coll_pruning_multi for values from ('a', 'a') to ('a', 'e')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table coll_pruning_multi2 partition of coll_pruning_multi for values from ('a', 'e') to ('a', 'z')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table coll_pruning_multi3 partition of coll_pruning_multi for values from ('b', 'a') to ('b', 'e')",partition_prune.sql,SAME,,
postgresql,postgresql,create table like_op_noprune (a text) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table like_op_noprune1 partition of like_op_noprune for values in ('ABC'),partition_prune.sql,SAME,,
postgresql,postgresql,create table like_op_noprune2 partition of like_op_noprune for values in ('BCD'),partition_prune.sql,SAME,,
postgresql,postgresql,create table lparted_by_int2 (a smallint) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table lparted_by_int2_1 partition of lparted_by_int2 for values in (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table lparted_by_int2_16384 partition of lparted_by_int2 for values in (16384),partition_prune.sql,SAME,,
postgresql,postgresql,create table rparted_by_int2 (a smallint) partition by range (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table rparted_by_int2_1 partition of rparted_by_int2 for values from (1) to (10),partition_prune.sql,SAME,,
postgresql,postgresql,create table rparted_by_int2_16384 partition of rparted_by_int2 for values from (10) to (16384),partition_prune.sql,SAME,,
postgresql,postgresql,create table rparted_by_int2_maxvalue partition of rparted_by_int2 for values from (16384) to (maxvalue),partition_prune.sql,SAME,,
postgresql,postgresql,"drop table lp, coll_pruning, rlp, mc3p, mc2p, boolpart, iboolpart, boolrangep, rp, coll_pruning_multi, like_op_noprune, lparted_by_int2, rparted_by_int2",partition_prune.sql,SAME,,
postgresql,postgresql,"create table hp (a int, b text, c int)   partition by hash (a part_test_int4_ops, b part_test_text_ops)",partition_prune.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,"create table hp0 partition of hp for values with (modulus 4, remainder 0)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"create table hp3 partition of hp for values with (modulus 4, remainder 3)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"create table hp1 partition of hp for values with (modulus 4, remainder 1)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"create table hp2 partition of hp for values with (modulus 4, remainder 2)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"insert into hp values (null, null, 0)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (null, null, 0)"
postgresql,postgresql,"insert into hp values (1, null, 1)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (1, null, 1)"
postgresql,postgresql,"insert into hp values (1, 'xxx', 2)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (1, 'xxx', 2)"
postgresql,postgresql,"insert into hp values (null, 'xxx', 3)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (null, 'xxx', 3)"
postgresql,postgresql,"insert into hp values (2, 'xxx', 4)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (2, 'xxx', 4)"
postgresql,postgresql,"insert into hp values (1, 'abcde', 5)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist LINE 1: insert into hp values (1, 'abcde', 5)"
postgresql,postgresql,drop table hp1,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp1"" does not exist"
postgresql,postgresql,drop table hp3,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp3"" does not exist"
postgresql,postgresql,drop table hp2,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp2"" does not exist"
postgresql,postgresql,"create table ab (a int not null, b int not null) partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a2 partition of ab for values in(2) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a2_b1 partition of ab_a2 for values in (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a2_b2 partition of ab_a2 for values in (2),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a2_b3 partition of ab_a2 for values in (3),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a1 partition of ab for values in(1) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a1_b1 partition of ab_a1 for values in (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a1_b2 partition of ab_a1 for values in (2),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a1_b3 partition of ab_a1 for values in (3),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a3 partition of ab for values in(3) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a3_b1 partition of ab_a3 for values in (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a3_b2 partition of ab_a3 for values in (2),partition_prune.sql,SAME,,
postgresql,postgresql,create table ab_a3_b3 partition of ab_a3 for values in (3),partition_prune.sql,SAME,,
postgresql,postgresql,"create table hp1 partition of hp for values with (modulus 4, remainder 1)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"create table hp2 partition of hp for values with (modulus 4, remainder 2)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,"create table hp3 partition of hp for values with (modulus 4, remainder 3)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp"" does not exist"
postgresql,postgresql,drop table hp,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp"" does not exist"
postgresql,postgresql,create table list_part (a int) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table list_part1 partition of list_part for values in (1),partition_prune.sql,SAME,,
postgresql,postgresql,create table list_part2 partition of list_part for values in (2),partition_prune.sql,SAME,,
postgresql,postgresql,create table list_part3 partition of list_part for values in (3),partition_prune.sql,SAME,,
postgresql,postgresql,create table list_part4 partition of list_part for values in (4),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into list_part select generate_series(1,4)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table list_part,partition_prune.sql,SAME,,
postgresql,postgresql,create table lprt_a (a int not null),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into lprt_a select 0 from generate_series(1,100)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into lprt_a values(1),(1)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into lprt_a values(3),(3)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table xy_1 (x int, y int)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into xy_1 values(100,-10)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into ab values (1,2)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into ab values (1, 1), (1, 2), (1, 3), (2, 1)",partition_prune.sql,SAME,,
postgresql,postgresql,"drop table ab, lprt_a",partition_prune.sql,SAME,,
postgresql,postgresql,create table tbl1(col1 int),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into tbl1 values (501), (505)",partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt (col1 int) partition by range (col1),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_1 partition of tprt for values from (1) to (501),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_2 partition of tprt for values from (501) to (1001),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_3 partition of tprt for values from (1001) to (2001),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_4 partition of tprt for values from (2001) to (3001),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_5 partition of tprt for values from (3001) to (4001),partition_prune.sql,SAME,,
postgresql,postgresql,create table tprt_6 partition of tprt for values from (4001) to (5001),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into tprt values (10), (20), (501), (502), (505), (1001), (4500)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into tbl1 values (1001), (1010), (1011)",partition_prune.sql,SAME,,
postgresql,postgresql,insert into tbl1 values (4400),partition_prune.sql,SAME,,
postgresql,postgresql,insert into tbl1 values (10000),partition_prune.sql,SAME,,
postgresql,postgresql,"drop table tbl1, tprt",partition_prune.sql,SAME,,
postgresql,postgresql,"create table part_abc (a int not null, b int not null, c int not null) partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table part_bac (b int not null, a int not null, c int not null) partition by list (b)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table part_cab (c int not null, a int not null, b int not null) partition by list (c)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table part_abc_p1 (a int not null, b int not null, c int not null)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table part_abc,partition_prune.sql,SAME,,
postgresql,postgresql,"create table listp (a int, b int) partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_1 partition of listp for values in(1) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_1_1 partition of listp_1 for values in(1),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_2 partition of listp for values in(2) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_2_1 partition of listp_2 for values in(2),partition_prune.sql,SAME,,
postgresql,postgresql,drop table listp,partition_prune.sql,SAME,,
postgresql,postgresql,create table stable_qual_pruning (a timestamp) partition by range (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table stable_qual_pruning1 partition of stable_qual_pruning   for values from ('2000-01-01') to ('2000-02-01'),partition_prune.sql,SAME,,
postgresql,postgresql,create table stable_qual_pruning2 partition of stable_qual_pruning   for values from ('2000-02-01') to ('2000-03-01'),partition_prune.sql,SAME,,
postgresql,postgresql,create table stable_qual_pruning3 partition of stable_qual_pruning   for values from ('3000-02-01') to ('3000-03-01'),partition_prune.sql,SAME,,
postgresql,postgresql,drop table stable_qual_pruning,partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p (a int, b int, c int) partition by range (a, abs(b), c)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p0 partition of mc3p   for values from (0, 0, 0) to (0, maxvalue, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p1 partition of mc3p   for values from (1, 1, 1) to (2, minvalue, minvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table mc3p2 partition of mc3p   for values from (2, minvalue, minvalue) to (3, maxvalue, maxvalue)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into mc3p values (0, 1, 1), (1, 1, 1), (2, 1, 1)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table mc3p,partition_prune.sql,SAME,,
postgresql,postgresql,create table boolvalues (value bool not null),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into boolvalues values('t'),('f')",partition_prune.sql,SAME,,
postgresql,postgresql,create table boolp (a bool) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table boolp_t partition of boolp for values in('t'),partition_prune.sql,SAME,,
postgresql,postgresql,create table boolp_f partition of boolp for values in('f'),partition_prune.sql,SAME,,
postgresql,postgresql,drop table boolp,partition_prune.sql,SAME,,
postgresql,postgresql,"create table ma_test (a int, b int) partition by range (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table ma_test_p1 partition of ma_test for values from (0) to (10),partition_prune.sql,SAME,,
postgresql,postgresql,create table ma_test_p2 partition of ma_test for values from (10) to (20),partition_prune.sql,SAME,,
postgresql,postgresql,create table ma_test_p3 partition of ma_test for values from (20) to (30),partition_prune.sql,SAME,,
postgresql,postgresql,"insert into ma_test select x,x from generate_series(0,29) t(x)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table ma_test,partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_arrpart (a int[]) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_arrpart1 partition of pp_arrpart for values in ('{1}'),partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_arrpart2 partition of pp_arrpart for values in ('{2, 3}', '{4, 5}')",partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_arrpart,partition_prune.sql,SAME,,
postgresql,postgresql,create table pph_arrpart (a int[]) partition by hash (a),partition_prune.sql,SAME,,
postgresql,postgresql,"create table pph_arrpart1 partition of pph_arrpart for values with (modulus 2, remainder 0)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table pph_arrpart2 partition of pph_arrpart for values with (modulus 2, remainder 1)",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into pph_arrpart values ('{1}'), ('{1, 2}'), ('{4, 5}')",partition_prune.sql,SAME,,
postgresql,postgresql,drop table pph_arrpart,partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_enumpart (a pp_colors) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_enumpart_green partition of pp_enumpart for values in ('green'),partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_enumpart_blue partition of pp_enumpart for values in ('blue'),partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_enumpart,partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_recpart (a pp_rectype) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_recpart_11 partition of pp_recpart for values in ('(1,1)')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_recpart_23 partition of pp_recpart for values in ('(2,3)')",partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_recpart,partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_intrangepart (a int4range) partition by list (a),partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_intrangepart12 partition of pp_intrangepart for values in ('[1,2]')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_intrangepart2inf partition of pp_intrangepart for values in ('[2,)')",partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_intrangepart,partition_prune.sql,SAME,,
postgresql,postgresql,"create table pp_lp (a int, value int) partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_lp1 partition of pp_lp for values in(1),partition_prune.sql,SAME,,
postgresql,postgresql,create table pp_lp2 partition of pp_lp for values in(2),partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_lp,partition_prune.sql,SAME,,
postgresql,postgresql,"create table inh_lp (a int, value int)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table inh_lp1 (a int, value int, check(a = 1)) inherits (inh_lp)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table inh_lp2 (a int, value int, check(a = 2)) inherits (inh_lp)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table inh_lp cascade,partition_prune.sql,SAME,,
postgresql,postgresql,drop table pp_temp_parent,partition_prune.sql,SAME,,
postgresql,postgresql,"insert into q22 values (2, 2, 3)",partition_prune.sql,SAME,,
postgresql,postgresql,"drop table p, q",partition_prune.sql,SAME,,
postgresql,postgresql,"create table listp (a int, b int) partition by list (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table listp1 partition of listp for values in(1),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp2 partition of listp for values in(2) partition by list(b),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp2_10 partition of listp2 for values in (10),partition_prune.sql,SAME,,
postgresql,postgresql,drop table listp,partition_prune.sql,SAME,,
postgresql,postgresql,create table listp (a int) partition by list(a),partition_prune.sql,SAME,,
postgresql,postgresql,"create table listp_12 partition of listp for values in(1,2) partition by list(a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_12_1 partition of listp_12 for values in(1),partition_prune.sql,SAME,,
postgresql,postgresql,create table listp_12_2 partition of listp_12 for values in(2),partition_prune.sql,SAME,,
postgresql,postgresql,drop table listp,partition_prune.sql,SAME,,
postgresql,postgresql,"create table rangep (a int, b int) partition by range (a)",partition_prune.sql,SAME,,
postgresql,postgresql,create table rangep_0_to_100 partition of rangep for values from (0) to (100) partition by list (b),partition_prune.sql,SAME,,
postgresql,postgresql,create table rangep_0_to_100_1 partition of rangep_0_to_100 for values in(1),partition_prune.sql,SAME,,
postgresql,postgresql,create table rangep_0_to_100_2 partition of rangep_0_to_100 for values in(2),partition_prune.sql,SAME,,
postgresql,postgresql,create table rangep_0_to_100_3 partition of rangep_0_to_100 for values in(3),partition_prune.sql,SAME,,
postgresql,postgresql,create table rangep_100_to_200 partition of rangep for values from (100) to (200),partition_prune.sql,SAME,,
postgresql,postgresql,drop table rangep,partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test1 (a int, b varchar) partition by range(a, b)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test1_p1 partition of rp_prefix_test1 for values from (1, 'a') to (1, 'b')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test1_p2 partition of rp_prefix_test1 for values from (2, 'a') to (2, 'b')",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test2 (a int, b int, c int) partition by range(a, b, c)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test2_p1 partition of rp_prefix_test2 for values from (1, 1, 0) to (1, 1, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test2_p2 partition of rp_prefix_test2 for values from (2, 2, 0) to (2, 2, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test3 (a int, b int, c int, d int) partition by range(a, b, c, d)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test3_p1 partition of rp_prefix_test3 for values from (1, 1, 1, 0) to (1, 1, 1, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,"create table rp_prefix_test3_p2 partition of rp_prefix_test3 for values from (2, 2, 2, 0) to (2, 2, 2, 10)",partition_prune.sql,SAME,,
postgresql,postgresql,drop table rp_prefix_test1,partition_prune.sql,SAME,,
postgresql,postgresql,drop table rp_prefix_test2,partition_prune.sql,SAME,,
postgresql,postgresql,drop table rp_prefix_test3,partition_prune.sql,SAME,,
postgresql,postgresql,"create table hp_prefix_test (a int, b int, c int, d int)   partition by hash (a part_test_int4_ops, b part_test_int4_ops, c part_test_int4_ops, d part_test_int4_ops)",partition_prune.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops"" does not exist for access method ""hash"""
postgresql,postgresql,"select 'create table hp_prefix_test_p' || x::text || ' partition of hp_prefix_test for values with (modulus 8, remainder ' || x::text || ');' from generate_Series(0,7) x",partition_prune.sql,SAME,,
postgresql,postgresql,"insert into hp_prefix_test select   case a when 0 then null else 1 end,   case b when 0 then null else 2 end,   case c when 0 then null else 3 end,   case d when 0 then null else 4 end from   generate_series(0,1) a,   generate_series(0,1) b,   generate_Series(0,1) c,   generate_Series(0,1) d",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp_prefix_test"" does not exist LINE 1: insert into hp_prefix_test"
postgresql,postgresql,drop table hp_prefix_test,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp_prefix_test"" does not exist"
postgresql,postgresql,"create table hp_contradict_test (a int, b int) partition by hash (a part_test_int4_ops2, b part_test_int4_ops2)",partition_prune.sql,DIFFERENT,UndefinedObject,"operator class ""part_test_int4_ops2"" does not exist for access method ""hash"""
postgresql,postgresql,"create table hp_contradict_test_p1 partition of hp_contradict_test for values with (modulus 2, remainder 0)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp_contradict_test"" does not exist"
postgresql,postgresql,"create table hp_contradict_test_p2 partition of hp_contradict_test for values with (modulus 2, remainder 1)",partition_prune.sql,DIFFERENT,UndefinedTable,"relation ""hp_contradict_test"" does not exist"
postgresql,postgresql,drop table hp_contradict_test,partition_prune.sql,DIFFERENT,UndefinedTable,"table ""hp_contradict_test"" does not exist"
postgresql,postgresql,"CREATE TABLE ctv_data (v, h, c, i, d) AS VALUES    ('v1','h2','foo', 3, '2015-04-01'::date),    ('v2','h1','bar', 3, '2015-01-02'),    ('v1','h0','baz', NULL, '2015-07-12'),    ('v0','h4','qux', 4, '2015-07-15'),    ('v0','h4','dbl', -3, '2014-12-15'),    ('v0',NULL,'qux', 5, '2014-07-15'),    ('v1','h2','quux',7, '2015-04-04')",psql_crosstab.sql,SAME,,
postgresql,postgresql,"SELECT v, to_char(d, 'Mon') AS ""month name"", EXTRACT(month FROM d) AS num,  count(*) FROM ctv_data  GROUP BY 1,2,3 ORDER BY 1  SELECT EXTRACT(year FROM d) AS year, to_char(d,'Mon') AS """"""month"""" name"",   EXTRACT(month FROM d) AS month,   format('sum=%s avg=%s', sum(i), avg(i)::numeric(2,1))   FROM ctv_data   GROUP BY EXTRACT(year FROM d), to_char(d,'Mon'), EXTRACT(month FROM d) ORDER BY month  SELECT v, h, string_agg(c, E'\n') FROM ctv_data GROUP BY v, h ORDER BY 1,2,3  SELECT v,h, string_agg(c, E'\n') AS c, row_number() OVER(ORDER BY h) AS r FROM ctv_data GROUP BY v, h ORDER BY 1,3,2  SELECT v, h, string_agg(c, E'\n') AS c, row_number() OVER(ORDER BY h DESC) AS r FROM ctv_data GROUP BY v, h ORDER BY 1,3,2  SELECT v,h, string_agg(c, E'\n') AS c, row_number() OVER(ORDER BY h NULLS LAST) AS r FROM ctv_data GROUP BY v, h ORDER BY 1,3,2  SELECT null,null \crosstabview  SELECT null,null,null \crosstabview  SELECT v,h, string_agg(i::text, E'\n') AS i FROM ctv_data GROUP BY v, h ORDER BY h,v  SELECT v,h,string_agg(i::text, E'\n'), string_agg(c, E'\n') FROM ctv_data GROUP BY v, h ORDER BY h,v  SELECT v,h, string_agg(i::text, E'\n') AS i, string_agg(c, E'\n') AS c FROM ctv_data GROUP BY v, h ORDER BY h,v  SELECT 1 as ""22"", 2 as b, 3 as ""Foo""  SELECT v,h,c,i FROM ctv_data  SELECT 1 as ""22"", 2 as b, 3 as ""Foo""  SELECT 1 as ""22"", 2 as b, 3 as ""Foo""  SELECT v,h,i,c FROM ctv_data  SELECT v,h,i,c FROM ctv_data  SELECT a,a,1 FROM generate_series(1,3000) AS a  SELECT 1 \crosstabview  DROP TABLE ctv_data",psql_crosstab.sql,DIFFERENT,SyntaxError,"syntax error at or near ""SELECT"" LINE 4: SELECT EXTRACT(year FROM d) AS year, to_char(d,'Mon') AS """"""..."
postgresql,postgresql,"CREATE TABLE ctv_data (x int, y int, v text)",psql_crosstab.sql,DIFFERENT,DuplicateTable,"relation ""ctv_data"" already exists"
postgresql,postgresql,"INSERT INTO ctv_data SELECT 1, x, '*' || x FROM generate_series(1,10) x",psql_crosstab.sql,SAME,,
postgresql,postgresql,"SELECT * FROM ctv_data \crosstabview  INSERT INTO ctv_data VALUES (1, 10, '*')",psql_crosstab.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: SELECT * FROM ctv_data \crosstabview"
postgresql,postgresql,SELECT * FROM ctv_data \crosstabview  DROP TABLE ctv_data,psql_crosstab.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: SELECT * FROM ctv_data \crosstabview"
postgresql,postgresql,"CREATE TABLE guid1 ( 	guid_field UUID, 	text_field TEXT DEFAULT(now()) )",uuid.sql,SAME,,
postgresql,postgresql,"CREATE TABLE guid2 ( 	guid_field UUID, 	text_field TEXT DEFAULT(now()) )",uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111F'),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""11111111-1111-1111-1111-111111111111F"" LINE 1: INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-111..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('{11111111-1111-1111-1111-11111111111}'),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""{11111111-1111-1111-1111-11111111111}"" LINE 1: INSERT INTO guid1(guid_field) VALUES('{11111111-1111-1111-11..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('111-11111-1111-1111-1111-111111111111'),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""111-11111-1111-1111-1111-111111111111"" LINE 1: INSERT INTO guid1(guid_field) VALUES('111-11111-1111-1111-11..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-2222-222222222222 '),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""{22222222-2222-2222-2222-222222222222 "" LINE 1: INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-22..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-G111-111111111111'),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""11111111-1111-1111-G111-111111111111"" LINE 1: INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-G11..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('11+11111-1111-1111-1111-111111111111'),uuid.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type uuid: ""11+11111-1111-1111-1111-111111111111"" LINE 1: INSERT INTO guid1(guid_field) VALUES('11+11111-1111-1111-111..."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-2222-222222222222}'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('3f3e3c3b3a3039383736353433a2313e'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111'),uuid.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""guid1_unique_btree"" DETAIL:  Key (guid_field)=(11111111-1111-1111-1111-111111111111) already exists."
postgresql,postgresql,INSERT INTO guid1(guid_field) VALUES('44444444-4444-4444-4444-444444444444'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid2(guid_field) VALUES('11111111-1111-1111-1111-111111111111'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid2(guid_field) VALUES('{22222222-2222-2222-2222-222222222222}'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid2(guid_field) VALUES('3f3e3c3b3a3039383736353433a2313e'),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1 (guid_field) VALUES (gen_random_uuid()),uuid.sql,SAME,,
postgresql,postgresql,INSERT INTO guid1 (guid_field) VALUES (gen_random_uuid()),uuid.sql,SAME,,
postgresql,postgresql,"DROP TABLE guid1, guid2 CASCADE",uuid.sql,SAME,,
postgresql,postgresql,CREATE TABLE PG_LSN_TBL (f1 pg_lsn),pg_lsn.sql,SAME,,
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('0/0'),pg_lsn.sql,SAME,,
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('FFFFFFFF/FFFFFFFF'),pg_lsn.sql,SAME,,
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('G/0'),pg_lsn.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type pg_lsn: ""G/0"" LINE 1: INSERT INTO PG_LSN_TBL VALUES ('G/0')"
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('-1/0'),pg_lsn.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type pg_lsn: ""-1/0"" LINE 1: INSERT INTO PG_LSN_TBL VALUES ('-1/0')"
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES (' 0/12345678'),pg_lsn.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type pg_lsn: "" 0/12345678"" LINE 1: INSERT INTO PG_LSN_TBL VALUES (' 0/12345678')"
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('ABCD/'),pg_lsn.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type pg_lsn: ""ABCD/"" LINE 1: INSERT INTO PG_LSN_TBL VALUES ('ABCD/')"
postgresql,postgresql,INSERT INTO PG_LSN_TBL VALUES ('/ABCD'),pg_lsn.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type pg_lsn: ""/ABCD"" LINE 1: INSERT INTO PG_LSN_TBL VALUES ('/ABCD')"
postgresql,postgresql,DROP TABLE PG_LSN_TBL,pg_lsn.sql,SAME,,
postgresql,postgresql,"CREATE TABLE xmltest (     id int,     data xml )",xml.sql,SAME,,
postgresql,postgresql,"INSERT INTO xmltest VALUES (1, '<value>one</value>')",xml.sql,SAME,,
postgresql,postgresql,"INSERT INTO xmltest VALUES (2, '<value>two</value>')",xml.sql,SAME,,
postgresql,postgresql,"INSERT INTO xmltest VALUES (3, '<wrong')",xml.sql,DIFFERENT,InvalidXmlContent,"invalid XML content LINE 1: INSERT INTO xmltest VALUES (3, '<wrong')                                         DETAIL:  line 1: Couldn't find end of Start Tag wrong line 1 <wrong"
postgresql,postgresql,"""/>'); SELECT xpath('''<<invalid>>''', '<root/>'); SELECT xpath('count(//*)', '<root><sub/><sub/></root>'); SELECT xpath('count(//*)=0', '<root><sub/><sub/></root>'); SELECT xpath('count(//*)=3', '<root><sub/><sub/></root>'); SELECT xpath('name(/*)', '<root><sub/><sub/></root>'); SELECT xpath('/nosuchtag', '<root/>'); SELECT xpath('root', '<root/>');  DO $$ DECLARE   xml_declaration text := '<?xml version=""1.0"" encoding=""ISO-8859-1""?>';   degree_symbol text;   res xml[]; BEGIN   IF current_setting('server_encoding') <> 'UTF8' THEN     RAISE LOG 'skip: encoding % unsupported for xpath',       current_setting('server_encoding');     RETURN;   END IF;    degree_symbol := convert_from('\xc2b0', 'UTF8');   res := xpath('text()', (xml_declaration ||     '<x>' || degree_symbol || '</x>')::xml);   IF degree_symbol <> res[1]::text THEN     RAISE 'expected % (%), got % (%)',       degree_symbol, convert_to(degree_symbol, 'UTF8'),       res[1], convert_to(res[1]::text, 'UTF8');   END IF; EXCEPTION   WHEN untranslatable_character   OR undefined_function   OR feature_not_supported THEN     RAISE LOG 'skip: %', SQLERRM; END $$;  SELECT xmlexists('//town[text() = ''Toronto'']' PASSING BY REF '<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'); SELECT xmlexists('//town[text() = ''Cwmbran'']' PASSING BY REF '<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'); SELECT xmlexists('count(/nosuchtag)' PASSING BY REF '<root/>'); SELECT xpath_exists('//town[text() = ''Toronto'']','<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'::xml); SELECT xpath_exists('//town[text() = ''Cwmbran'']','<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'::xml); SELECT xpath_exists('count(/nosuchtag)', '<root/>'::xml);  INSERT INTO xmltest VALUES (4, '<menu><beers><name>Budvar</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'::xml); INSERT INTO xmltest VALUES (5, '<menu><beers><name>Molson</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'::xml); INSERT INTO xmltest VALUES (6, '<myns:menu xmlns:myns=""http://myns.com""><myns:beers><myns:name>Budvar</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'::xml); INSERT INTO xmltest VALUES (7, '<myns:menu xmlns:myns=""http://myns.com""><myns:beers><myns:name>Molson</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'::xml);  SELECT COUNT(id) FROM xmltest WHERE xmlexists('/menu/beer' PASSING data); SELECT COUNT(id) FROM xmltest WHERE xmlexists('/menu/beer' PASSING BY REF data BY REF); SELECT COUNT(id) FROM xmltest WHERE xmlexists('/menu/beers' PASSING BY REF data); SELECT COUNT(id) FROM xmltest WHERE xmlexists('/menu/beers/name[text() = ''Molson'']' PASSING BY REF data);  SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/menu/beer',data); SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/menu/beers',data); SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/menu/beers/name[text() = ''Molson'']',data); SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/myns:menu/myns:beer',data,ARRAY[ARRAY['myns','http://myns.com']]); SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/myns:menu/myns:beers',data,ARRAY[ARRAY['myns','http://myns.com']]); SELECT COUNT(id) FROM xmltest WHERE xpath_exists('/myns:menu/myns:beers/myns:name[text() = ''Molson'']',data,ARRAY[ARRAY['myns','http://myns.com']]);  CREATE TABLE query ( expr TEXT ); INSERT INTO query VALUES ('/menu/beers/cost[text() = ''lots'']'); SELECT COUNT(id) FROM xmltest, query WHERE xmlexists(expr PASSING BY REF data);   SELECT xml_is_well_formed_document('<foo>bar</foo>'); SELECT xml_is_well_formed_document('abc'); SELECT xml_is_well_formed_content('<foo>bar</foo>'); SELECT xml_is_well_formed_content('abc');  SET xmloption TO DOCUMENT; SELECT xml_is_well_formed('abc'); SELECT xml_is_well_formed('<>'); SELECT xml_is_well_formed('<abc/>'); SELECT xml_is_well_formed('<foo>bar</foo>'); SELECT xml_is_well_formed('<foo>bar</foo'); SELECT xml_is_well_formed('<foo><bar>baz</foo>'); SELECT xml_is_well_formed('<local:data xmlns:local=""http://127.0.0.1""><local:piece id=""1"">number one</local:piece><local:piece id=""2"" /></local:data>'); SELECT xml_is_well_formed('<pg:foo xmlns:pg=""http://postgresql.org/stuff"">bar</my:foo>'); SELECT xml_is_well_formed('<pg:foo xmlns:pg=""http://postgresql.org/stuff"">bar</pg:foo>'); SELECT xml_is_well_formed('<invalidentity>&</abc>'); SELECT xml_is_well_formed('<undefinedentity>&idontexist;</abc>'); SELECT xml_is_well_formed('<invalidns xmlns=''&lt;''/>'); SELECT xml_is_well_formed('<relativens xmlns=''relative''/>'); SELECT xml_is_well_formed('<twoerrors>&idontexist;</unbalanced>');  SET xmloption TO CONTENT; SELECT xml_is_well_formed('abc');  SELECT xpath('/*', '<invalidns xmlns=''&lt;''/>');  SELECT xpath('/*', '<nosuchprefix:tag/>');  SELECT xpath('/*', '<relativens xmlns=''relative''/>');  SELECT XMLPARSE(DOCUMENT '<!DOCTYPE foo [<!ENTITY c SYSTEM ""/etc/passwd"">]><foo>&c;</foo>'); SELECT XMLPARSE(DOCUMENT '<!DOCTYPE foo [<!ENTITY c SYSTEM ""/etc/no.such.file"">]><foo>&c;</foo>'); SELECT XMLPARSE(DOCUMENT '<!DOCTYPE chapter PUBLIC ""-//OASIS//DTD DocBook XML V4.1.2//EN"" ""http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd""><chapter>&nbsp;</chapter>');  CREATE TABLE xmldata(data xml); INSERT INTO xmldata VALUES('<ROWS> <ROW id=""1"">   <COUNTRY_ID>AU</COUNTRY_ID>   <COUNTRY_NAME>Australia</COUNTRY_NAME>   <REGION_ID>3</REGION_ID> </ROW> <ROW id=""2"">   <COUNTRY_ID>CN</COUNTRY_ID>   <COUNTRY_NAME>China</COUNTRY_NAME>   <REGION_ID>3</REGION_ID> </ROW> <ROW id=""3"">   <COUNTRY_ID>HK</COUNTRY_ID>   <COUNTRY_NAME>HongKong</COUNTRY_NAME>   <REGION_ID>3</REGION_ID> </ROW> <ROW id=""4"">   <COUNTRY_ID>IN</COUNTRY_ID>   <COUNTRY_NAME>India</COUNTRY_NAME>   <REGION_ID>3</REGION_ID> </ROW> <ROW id=""5"">   <COUNTRY_ID>JP</COUNTRY_ID>   <COUNTRY_NAME>Japan</COUNTRY_NAME>   <REGION_ID>3</REGION_ID><PREMIER_NAME>Sinzo Abe</PREMIER_NAME> </ROW> <ROW id=""6"">   <COUNTRY_ID>SG</COUNTRY_ID>   <COUNTRY_NAME>Singapore</COUNTRY_NAME>   <REGION_ID>3</REGION_ID><SIZE unit=""km"">791</SIZE> </ROW> </ROWS>');  SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME/text()' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  CREATE VIEW xmltableview1 AS SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME/text()' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  SELECT * FROM xmltableview1;   EXPLAIN (COSTS OFF) SELECT * FROM xmltableview1; EXPLAIN (COSTS OFF, VERBOSE) SELECT * FROM xmltableview1;  SELECT * FROM XMLTABLE (ROW () PASSING null COLUMNS v1 timestamp) AS f (v1, v2);  SELECT * FROM XMLTABLE(XMLNAMESPACES('http://x.y' AS zz),                       '/zz:rows/zz:row'                       PASSING '<rows xmlns=""http://x.y""><row><a>10</a></row></rows>'                       COLUMNS a int PATH 'zz:a');  CREATE VIEW xmltableview2 AS SELECT * FROM XMLTABLE(XMLNAMESPACES('http://x.y' AS zz),                       '/zz:rows/zz:row'                       PASSING '<rows xmlns=""http://x.y""><row><a>10</a></row></rows>'                       COLUMNS a int PATH 'zz:a');  SELECT * FROM xmltableview2;  SELECT * FROM XMLTABLE(XMLNAMESPACES(DEFAULT 'http://x.y'),                       '/rows/row'                       PASSING '<rows xmlns=""http://x.y""><row><a>10</a></row></rows>'                       COLUMNS a int PATH 'a');  SELECT * FROM XMLTABLE('.'                        PASSING '<foo/>'                        COLUMNS a text PATH 'foo/namespace::node()');  PREPARE pp AS SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  EXECUTE pp;  SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS ""COUNTRY_NAME"" text, ""REGION_ID"" int); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id FOR ORDINALITY, ""COUNTRY_NAME"" text, ""REGION_ID"" int); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id int PATH '@id', ""COUNTRY_NAME"" text, ""REGION_ID"" int); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id int PATH '@id'); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id FOR ORDINALITY); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id int PATH '@id', ""COUNTRY_NAME"" text, ""REGION_ID"" int, rawdata xml PATH '.'); SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS id int PATH '@id', ""COUNTRY_NAME"" text, ""REGION_ID"" int, rawdata xml PATH './*');  SELECT * FROM xmltable('/root' passing '<root><element>a1a<! SELECT * FROM xmltable('/root' passing '<root><element>a1a<!  select * from xmltable('d/r' passing '<d><r><c><![CDATA[<hello> &""<>!<a>foo</a>]]></c></r><r><c>2</c></r></d>' columns c text);  SELECT * FROM xmltable('/x/a' PASSING '<x><a><ent>&apos",xml.sql,DIFFERENT,SyntaxError,"syntax error at or near """"/>'); SELECT xpath('''<<invalid>>''', '<root/>'); SELECT xpath('count(//*)', '<root><sub/><sub/></root>'); SELECT xpath('count(//*)=0', '<root><sub/><sub/></root>'); SELECT xpath('count(//*)=3', '<root><sub/><sub/></root>'); SELECT xpath('name(/*)', '<root><sub/><sub/></root>'); SELECT xpath('/nosuchtag', '<root/>'); SELECT xpath('root', '<root/>');  DO $$ DECLARE   xml_declaration text := '<?xml version="""" LINE 1: ""/>');"
postgresql,postgresql,"</ent></a></x>' COLUMNS ent xml);  EXPLAIN (VERBOSE, COSTS OFF) SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS ""COUNTRY_NAME"" text, ""REGION_ID"" int) WHERE ""COUNTRY_NAME"" = 'Japan';  EXPLAIN (VERBOSE, COSTS OFF) SELECT f.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS ""COUNTRY_NAME"" text, ""REGION_ID"" int) AS f WHERE ""COUNTRY_NAME"" = 'Japan';  EXPLAIN (VERBOSE, FORMAT JSON, COSTS OFF) SELECT f.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME=""Japan"" or COUNTRY_NAME=""India""]' PASSING data COLUMNS ""COUNTRY_NAME"" text, ""REGION_ID"" int) AS f WHERE ""COUNTRY_NAME"" = 'Japan';  INSERT INTO xmldata VALUES('<ROWS> <ROW id=""10"">   <COUNTRY_ID>CZ</COUNTRY_ID>   <COUNTRY_NAME>Czech Republic</COUNTRY_NAME>   <REGION_ID>2</REGION_ID><PREMIER_NAME>Milos Zeman</PREMIER_NAME> </ROW> <ROW id=""11"">   <COUNTRY_ID>DE</COUNTRY_ID>   <COUNTRY_NAME>Germany</COUNTRY_NAME>   <REGION_ID>2</REGION_ID> </ROW> <ROW id=""12"">   <COUNTRY_ID>FR</COUNTRY_ID>   <COUNTRY_NAME>France</COUNTRY_NAME>   <REGION_ID>2</REGION_ID> </ROW> </ROWS>');  INSERT INTO xmldata VALUES('<ROWS> <ROW id=""20"">   <COUNTRY_ID>EG</COUNTRY_ID>   <COUNTRY_NAME>Egypt</COUNTRY_NAME>   <REGION_ID>1</REGION_ID> </ROW> <ROW id=""21"">   <COUNTRY_ID>SD</COUNTRY_ID>   <COUNTRY_NAME>Sudan</COUNTRY_NAME>   <REGION_ID>1</REGION_ID> </ROW> </ROWS>');  SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified')   WHERE region_id = 2;  EXPLAIN (VERBOSE, COSTS OFF) SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE',                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified')   WHERE region_id = 2;  SELECT  xmltable.*    FROM (SELECT data FROM xmldata) x,         LATERAL XMLTABLE('/ROWS/ROW'                          PASSING data                          COLUMNS id int PATH '@id',                                   _id FOR ORDINALITY,                                   country_name text PATH 'COUNTRY_NAME' NOT NULL,                                   country_id text PATH 'COUNTRY_ID',                                   region_id int PATH 'REGION_ID',                                   size float PATH 'SIZE' NOT NULL,                                   unit text PATH 'SIZE/@unit',                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');  WITH    x AS (SELECT proname, proowner, procost::numeric, pronargs,                 array_to_string(proargnames,',') as proargnames,                 case when proargtypes <> '' then array_to_string(proargtypes::oid[],',') end as proargtypes            FROM pg_proc WHERE proname = 'f_leak'),    y AS (SELECT xmlelement(name proc,                            xmlforest(proname, proowner,                                      procost, pronargs,                                      proargnames, proargtypes)) as proc            FROM x),    z AS (SELECT xmltable.*            FROM y,                 LATERAL xmltable('/proc' PASSING proc                                  COLUMNS proname name,                                          proowner oid,                                          procost float,                                          pronargs int,                                          proargnames text,                                          proargtypes text))    SELECT * FROM z    EXCEPT SELECT * FROM x;  WITH    x AS (SELECT proname, proowner, procost::numeric, pronargs,                 array_to_string(proargnames,',') as proargnames,                 case when proargtypes <> '' then array_to_string(proargtypes::oid[],',') end as proargtypes            FROM pg_proc),    y AS (SELECT xmlelement(name data,                            xmlagg(xmlelement(name proc,                                              xmlforest(proname, proowner, procost,                                                        pronargs, proargnames, proargtypes)))) as doc            FROM x),    z AS (SELECT xmltable.*            FROM y,                 LATERAL xmltable('/data/proc' PASSING doc                                  COLUMNS proname name,                                          proowner oid,                                          procost float,                                          pronargs int,                                          proargnames text,                                          proargtypes text))    SELECT * FROM z    EXCEPT SELECT * FROM x;  CREATE TABLE xmltest2(x xml, _path text);  INSERT INTO xmltest2 VALUES('<d><r><ac>1</ac></r></d>', 'A'); INSERT INTO xmltest2 VALUES('<d><r><bc>2</bc></r></d>', 'B'); INSERT INTO xmltest2 VALUES('<d><r><cc>3</cc></r></d>', 'C'); INSERT INTO xmltest2 VALUES('<d><r><dc>2</dc></r></d>', 'D');  SELECT xmltable.* FROM xmltest2, LATERAL xmltable('/d/r' PASSING x COLUMNS a int PATH '' || lower(_path) || 'c'); SELECT xmltable.* FROM xmltest2, LATERAL xmltable(('/d/r/' || lower(_path) || 'c') PASSING x COLUMNS a int PATH '.'); SELECT xmltable.* FROM xmltest2, LATERAL xmltable(('/d/r/' || lower(_path) || 'c') PASSING x COLUMNS a int PATH 'x' DEFAULT ascii(_path) - 54);  SELECT * FROM XMLTABLE('*' PASSING '<a>a</a>' COLUMNS a xml PATH '.', b text PATH '.', c text PATH '""hi""', d boolean PATH '. = ""a""', e integer PATH 'string-length(.)'); SELECT * FROM XMLTABLE('*' PASSING '<e>pre<!  SELECT * FROM XMLTABLE('.' PASSING XMLELEMENT(NAME a) columns a varchar(20) PATH '""<foo/>""', b xml PATH '""<foo/>""')",xml.sql,DIFFERENT,SyntaxError,"syntax error at or near ""</"" LINE 1: </ent></a></x>' COLUMNS ent xml);"
postgresql,postgresql,CREATE TABLE CIRCLE_TBL (f1 circle),circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(5,1),3>')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('((1,2),100)')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES (' 1 , 3 , 5 ')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES (' ( ( 1 , 2 ) , 3 ) ')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES (' ( 100 , 200 ) , 10 ')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES (' < ( 100 , 1 ) , 115 > ')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(3,5),0>')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(3,5),NaN>')",circle.sql,SAME,,
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(-100,0),-100>')",circle.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type circle: ""<(-100,0),-100>"" LINE 1: INSERT INTO CIRCLE_TBL VALUES ('<(-100,0),-100>')"
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10')",circle.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type circle: ""<(100,200),10"" LINE 1: INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10')"
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10> x')",circle.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type circle: ""<(100,200),10> x"" LINE 1: INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10> x')"
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('1abc,3,5')",circle.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type circle: ""1abc,3,5"" LINE 1: INSERT INTO CIRCLE_TBL VALUES ('1abc,3,5')"
postgresql,postgresql,"INSERT INTO CIRCLE_TBL VALUES ('(3,(1,2),3)')",circle.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type circle: ""(3,(1,2),3)"" LINE 1: INSERT INTO CIRCLE_TBL VALUES ('(3,(1,2),3)')"
postgresql,postgresql,EXECUTE test \gdesc EXPLAIN EXECUTE test \gdesc  SELECT 1 + \gdesc  SELECT \gdesc CREATE TABLE bububu(a int) \gdesc  TABLE bububu,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: EXECUTE test \gdesc"
postgresql,postgresql,"select format('create index on gexec_test(%I)', attname) from pg_attribute where attrelid = 'gexec_test'::regclass and attnum > 0 order by attnum   select 'select 1 as ones', 'select x.y, x.y*2 as double from generate_series(1,4) as x(y)' union all select 'drop table gexec_test', NULL union all select 'drop table gexec_test', 'select ''2000-01-01''::date as party_over'      prepare q as select array_to_string(array_agg(repeat('x',2*n)),E'\n') as ""ab  c"", array_to_string(array_agg(repeat('y',20-2*n)),E'\n') as ""a bc"" from generate_series(1,10) as n(n) group by n>1 order by n>1",psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""select"" LINE 7: select 'select 1 as ones', 'select x.y, x.y*2 as double from..."
postgresql,postgresql,create table psql_serial_tab (id serial),psql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE tbl_heap_psql(f1 int, f2 char(100)) using heap_psql",psql.sql,DIFFERENT,UndefinedObject,"access method ""heap_psql"" does not exist"
postgresql,postgresql,"CREATE TABLE tbl_heap(f1 int, f2 char(100)) using heap",psql.sql,SAME,,
postgresql,postgresql,drop table psql_serial_tab,psql.sql,SAME,,
postgresql,postgresql,DROP TABLE this_table_does_not_exist,psql.sql,DIFFERENT,UndefinedTable,"table ""this_table_does_not_exist"" does not exist"
postgresql,postgresql,create table testtable_apple(logdate date),psql.sql,SAME,,
postgresql,postgresql,create table testtable_orange(logdate date),psql.sql,SAME,,
postgresql,postgresql,create table testpart_apple(logdate date) partition by range(logdate),psql.sql,SAME,,
postgresql,postgresql,create table testpart_orange(logdate date) partition by range(logdate),psql.sql,SAME,,
postgresql,postgresql,drop table testtable_apple,psql.sql,SAME,,
postgresql,postgresql,drop table testtable_orange,psql.sql,SAME,,
postgresql,postgresql,drop table testpart_apple,psql.sql,SAME,,
postgresql,postgresql,drop table testpart_orange,psql.sql,SAME,,
postgresql,postgresql,create table parent_tab (id int) partition by range (id),psql.sql,SAME,,
postgresql,postgresql,create table child_0_10 partition of parent_tab   for values from (0) to (10),psql.sql,SAME,,
postgresql,postgresql,create table child_10_20 partition of parent_tab   for values from (10) to (20),psql.sql,SAME,,
postgresql,postgresql,create table child_20_30 partition of parent_tab   for values from (20) to (30),psql.sql,SAME,,
postgresql,postgresql,"insert into parent_tab values (generate_series(0,29))",psql.sql,SAME,,
postgresql,postgresql,create table child_30_40 partition of parent_tab for values from (30) to (40)   partition by range(id),psql.sql,SAME,,
postgresql,postgresql,create table child_30_35 partition of child_30_40   for values from (30) to (35),psql.sql,SAME,,
postgresql,postgresql,create table child_35_40 partition of child_30_40    for values from (35) to (40),psql.sql,SAME,,
postgresql,postgresql,"insert into parent_tab values (generate_series(30,39))",psql.sql,SAME,,
postgresql,postgresql,drop table parent_tab cascade,psql.sql,SAME,,
postgresql,postgresql,CREATE TABLE ac_test (a int),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO ac_test VALUES (1),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO ac_test VALUES (2),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO ac_test VALUES (3),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO ac_test VALUES (4),psql.sql,SAME,,
postgresql,postgresql,DROP TABLE ac_test,psql.sql,SAME,,
postgresql,postgresql,CREATE TABLE oer_test (a int),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO oer_test VALUES (1),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO oer_test VALUES ('foo'),psql.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type integer: ""foo"" LINE 1: INSERT INTO oer_test VALUES ('foo')"
postgresql,postgresql,INSERT INTO oer_test VALUES (3),psql.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO oer_test VALUES (4),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO oer_test VALUES (5),psql.sql,SAME,,
postgresql,postgresql,INSERT INTO oer_test VALUES (6),psql.sql,SAME,,
postgresql,postgresql,DROP TABLE oer_test,psql.sql,SAME,,
postgresql,postgresql,CREATE TABLE psql_comics(s TEXT) \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: CREATE TABLE psql_comics(s TEXT) \"
postgresql,postgresql,"INSERT INTO psql_comics VALUES ('Calvin'), ('hobbes') \",psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO psql_comics VALUES ('Calvin'), ('hobbes') \"
postgresql,postgresql,DROP TABLE psql_comics \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: DROP TABLE psql_comics \"
postgresql,postgresql,DROP TABLE reload_output,psql.sql,SAME,,
postgresql,postgresql,CREATE TABLE foo(s TEXT) \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: CREATE TABLE foo(s TEXT) \"
postgresql,postgresql,CREATE TABLE foo(s TEXT) \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: CREATE TABLE foo(s TEXT) \"
postgresql,postgresql,"INSERT INTO foo(s) VALUES ('hello'), ('world') \",psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO foo(s) VALUES ('hello'), ('world') \"
postgresql,postgresql,DROP TABLE foo \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: DROP TABLE foo \"
postgresql,postgresql,DROP TABLE foo \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: DROP TABLE foo \"
postgresql,postgresql,CREATE TABLE foo(s TEXT) \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: CREATE TABLE foo(s TEXT) \"
postgresql,postgresql,"INSERT INTO foo(s) VALUES ('hello'), ('world') \",psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO foo(s) VALUES ('hello'), ('world') \"
postgresql,postgresql,DROP TABLE foo \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: DROP TABLE foo \"
postgresql,postgresql,DROP TABLE foo,psql.sql,DIFFERENT,UndefinedTable,"table ""foo"" does not exist"
postgresql,postgresql,CREATE TABLE bla(s NO_SUCH_TYPE),psql.sql,DIFFERENT,UndefinedObject,"type ""no_such_type"" does not exist LINE 1: CREATE TABLE bla(s NO_SUCH_TYPE)"
postgresql,postgresql,CREATE TABLE bla(s TEXT),psql.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"INSERT INTO bla VALUES ('Calvin'), ('Hobbes')",psql.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO bla VALUES ('Susie'),psql.sql,DIFFERENT,UndefinedTable,"relation ""bla"" does not exist LINE 1: INSERT INTO bla VALUES ('Susie')"
postgresql,postgresql,INSERT INTO bla VALUES ('Rosalyn') \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO bla VALUES ('Rosalyn') \"
postgresql,postgresql,INSERT INTO bla(s) VALUES ('Moe') \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO bla(s) VALUES ('Moe') \"
postgresql,postgresql,INSERT INTO bla VALUES ('Miss Wormwood'),psql.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,INSERT INTO bla VALUES ('Dad'),psql.sql,DIFFERENT,UndefinedTable,"relation ""bla"" does not exist LINE 1: INSERT INTO bla VALUES ('Dad')"
postgresql,postgresql,INSERT INTO bla VALUES ('Mum') \,psql.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: INSERT INTO bla VALUES ('Mum') \"
postgresql,postgresql,DROP TABLE bla,psql.sql,DIFFERENT,UndefinedTable,"table ""bla"" does not exist"
postgresql,postgresql,CREATE TABLE regress_zeropriv_tbl (a int),psql.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE defprivs (a int),psql.sql,SAME,,
postgresql,postgresql,DROP TABLE defprivs,psql.sql,SAME,,
postgresql,postgresql,"CREATE TABLE uaccount (     pguser      name primary key,     seclv       int )",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO uaccount VALUES     ('regress_rls_alice', 99),     ('regress_rls_bob', 1),     ('regress_rls_carol', 2),     ('regress_rls_dave', 3)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE category (     cid        int primary key,     cname      text )",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO category VALUES     (11, 'novel'),     (22, 'science fiction'),     (33, 'technology'),     (44, 'manga')",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE document (     did         int primary key,     cid         int references category(cid),     dlevel      int not null,     dauthor     name,     dtitle      text )",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES     ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),     ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),     ( 3, 22, 2, 'regress_rls_bob', 'my science fiction'),     ( 4, 44, 1, 'regress_rls_bob', 'my first manga'),     ( 5, 44, 2, 'regress_rls_bob', 'my second manga'),     ( 6, 22, 1, 'regress_rls_carol', 'great science fiction'),     ( 7, 33, 2, 'regress_rls_carol', 'great technology book'),     ( 8, 44, 1, 'regress_rls_carol', 'great manga'),     ( 9, 22, 1, 'regress_rls_dave', 'awesome science fiction'),     (10, 33, 2, 'regress_rls_dave', 'awesome technology book')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (100, 44, 1, 'regress_rls_dave', 'testing sorting of policies')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (100, 55, 1, 'regress_rls_dave', 'testing sorting of policies')",rowsecurity.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""document_pkey"" DETAIL:  Key (did)=(100) already exists."
postgresql,postgresql,"INSERT INTO document VALUES (11, 33, 1, current_user, 'hoge')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (8, 44, 1, 'regress_rls_bob', 'my third manga')",rowsecurity.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""document_pkey"" DETAIL:  Key (did)=(8) already exists."
postgresql,postgresql,"INSERT INTO document VALUES (8, 44, 1, 'regress_rls_carol', 'my third manga')",rowsecurity.sql,DIFFERENT,UniqueViolation,"duplicate key value violates unique constraint ""document_pkey"" DETAIL:  Key (did)=(8) already exists."
postgresql,postgresql,"CREATE TABLE t1 (id int not null primary key, a int, junk1 text, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,101	1	aba 102	2	bbb 103	3	ccc 104	4	dad  CREATE TABLE t2 (c float) INHERITS (t1),rowsecurity.sql,DIFFERENT,SyntaxError,"syntax error at or near ""101"" LINE 1: 101 1 aba"
postgresql,postgresql,"201	1	abc	1.1 202	2	bcd	2.2 203	3	cde	3.3 204	4	def	4.4  CREATE TABLE t3 (id int not null primary key, c text, b text, a int)",rowsecurity.sql,DIFFERENT,SyntaxError,"syntax error at or near ""201"" LINE 1: 201 1 abc 1.1"
postgresql,postgresql,"CREATE TABLE part_document (     did         int,     cid         int,     dlevel      int not null,     dauthor     name,     dtitle      text ) PARTITION BY RANGE (cid)",rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_document_fiction PARTITION OF part_document FOR VALUES FROM (11) to (12),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_document_satire PARTITION OF part_document FOR VALUES FROM (55) to (56),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE part_document_nonfiction PARTITION OF part_document FOR VALUES FROM (99) to (100),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document VALUES     ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),     ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),     ( 3, 99, 2, 'regress_rls_bob', 'my science textbook'),     ( 4, 55, 1, 'regress_rls_bob', 'my first satire'),     ( 5, 99, 2, 'regress_rls_bob', 'my history book'),     ( 6, 11, 1, 'regress_rls_carol', 'great science fiction'),     ( 7, 99, 2, 'regress_rls_carol', 'great technology book'),     ( 8, 55, 2, 'regress_rls_carol', 'great satire'),     ( 9, 11, 1, 'regress_rls_dave', 'awesome science fiction'),     (10, 99, 2, 'regress_rls_dave', 'awesome technology book')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_dave', 'testing pp1')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document VALUES (100, 99, 1, 'regress_rls_dave', 'testing pp1r')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document_satire VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document_satire VALUES (101, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_carol', 'testing pp3')",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE dependee (x integer, y integer)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE dependent (x integer, y integer)",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE dependee,rowsecurity.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table dependee because other objects depend on it DETAIL:  policy d1 on table dependent depends on table dependee HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE dependee CASCADE,rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rec1 (x integer, y integer)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rec2 (a integer, b integer)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE s1 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO s1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO s1 (SELECT x, public.fipshash(x::text) FROM gene...                                    HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"CREATE TABLE s2 (x int, y text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO s2 (SELECT x, public.fipshash(x::text) FROM generate_series(-6,6) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO s2 (SELECT x, public.fipshash(x::text) FROM gene...                                    HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"INSERT INTO s1 VALUES (1, 'foo')",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE b1 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO b1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO b1 (SELECT x, public.fipshash(x::text) FROM gene...                                    HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"INSERT INTO bv1 VALUES (-1, 'xxx')",rowsecurity.sql,DIFFERENT,WithCheckOptionViolation,"new row violates check option for view ""bv1"" DETAIL:  Failing row contains (-1, xxx)."
postgresql,postgresql,"INSERT INTO bv1 VALUES (11, 'xxx')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO bv1 VALUES (12, 'xxx')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, dauthor = EXCLUDED.dauthor",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (33, 22, 1, 'regress_rls_bob', 'okay science fiction')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (33, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'Some novel, replaces sci-fi')      ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'my first novel')     ON CONFLICT (did) DO UPDATE SET cid = EXCLUDED.cid, dtitle = EXCLUDED.dtitle RETURNING *",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (80, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (4, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')     ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO document VALUES (1, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')     ON CONFLICT (did) DO UPDATE SET dauthor = 'regress_rls_carol'",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE z1 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE z2 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO z1 VALUES     (1, 'aba'),     (2, 'bbb'),     (3, 'ccc'),     (4, 'dad')",rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE z1_blacklist (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO z1_blacklist VALUES (3), (4)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE x1 (a int, b text, c text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO x1 VALUES     (1, 'abc', 'regress_rls_bob'),     (2, 'bcd', 'regress_rls_bob'),     (3, 'cde', 'regress_rls_carol'),     (4, 'def', 'regress_rls_carol'),     (5, 'efg', 'regress_rls_bob'),     (6, 'fgh', 'regress_rls_bob'),     (7, 'fgh', 'regress_rls_carol'),     (8, 'fgh', 'regress_rls_carol')",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE y1 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE y2 (a int, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO y2 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO y2 (SELECT x, public.fipshash(x::text) FROM gene...                                    HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,CREATE TABLE test_qual_pushdown (     abc text ),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO test_qual_pushdown VALUES ('abc'),('def')",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE test_qual_pushdown,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE t1 CASCADE,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE t1 (a integer),rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE t1 CASCADE,rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 (a integer, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO t1 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO t1 (SELECT x, public.fipshash(x::text) FROM gene...                                    HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"WITH cte1 AS (INSERT INTO t1 VALUES (21, 'Fail') RETURNING *) SELECT * FROM cte1",rowsecurity.sql,SAME,,
postgresql,postgresql,"WITH cte1 AS (INSERT INTO t1 VALUES (20, 'Success') RETURNING *) SELECT * FROM cte1",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t2 (a integer, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO t2 (SELECT * FROM t1),rowsecurity.sql,SAME,,
postgresql,postgresql,EXPLAIN (COSTS OFF) INSERT INTO t2 (SELECT * FROM t1),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE t3 AS SELECT * FROM t1,rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE blog (id integer, author text, post text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE comment (blog_id integer, message text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO blog VALUES     (1, 'alice', 'blog #1'),     (2, 'bob', 'blog #1'),     (3, 'alice', 'blog #2'),     (4, 'alice', 'blog #3'),     (5, 'john', 'blog #1')",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO comment VALUES     (1, 'cool blog'),     (1, 'fun blog'),     (3, 'crazy blog'),     (5, 'what?'),     (4, 'insane!'),     (2, 'who did it?')",rowsecurity.sql,SAME,,
postgresql,postgresql,"DROP TABLE blog, comment",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE copy_t CASCADE,rowsecurity.sql,DIFFERENT,UndefinedTable,"table ""copy_t"" does not exist"
postgresql,postgresql,"CREATE TABLE copy_t (a integer, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO copy_t (SELECT x, public.fipshash(x::text) FROM generate_series(0,10) x)",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(text) does not exist LINE 1: INSERT INTO copy_t (SELECT x, public.fipshash(x::text) FROM ...                                        HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,"CREATE TABLE copy_rel_to (a integer, b text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO copy_rel_to VALUES (1, public.fipshash('1'))",rowsecurity.sql,DIFFERENT,UndefinedFunction,"function public.fipshash(unknown) does not exist LINE 1: INSERT INTO copy_rel_to VALUES (1, public.fipshash('1'))                                             HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,CREATE TABLE copy_rel_to_child () INHERITS (copy_rel_to),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO copy_rel_to_child VALUES (1, 'one'), (2, 'two')",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE copy_t,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE copy_rel_to CASCADE,rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE current_check (currentid int, payload text, rlsuser text)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO current_check VALUES     (1, 'abc', 'regress_rls_bob'),     (2, 'bcd', 'regress_rls_bob'),     (3, 'cde', 'regress_rls_bob'),     (4, 'def', 'regress_rls_bob')",rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE coll_t (c) AS VALUES ('bar'::text),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE tbl1 (c) AS VALUES ('bar'::text),rowsecurity.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE t (c) AS VALUES ('bar'::text),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r2 (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r2 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r2 VALUES (2),rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r1 SELECT a + 1 FROM r2 RETURNING *,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r2,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r1 VALUES (1),rowsecurity.sql,DIFFERENT,InsufficientPrivilege,"new row violates row-level security policy for table ""r1"""
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int PRIMARY KEY),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r2 (a int REFERENCES r1),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r2 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r2 VALUES (10),rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r2,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int PRIMARY KEY),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r2 (a int REFERENCES r1 ON DELETE CASCADE),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r2 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r2,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int PRIMARY KEY),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r2 (a int REFERENCES r1 ON UPDATE CASCADE),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r2 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r2,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO r1 VALUES (10), (20) RETURNING *",rowsecurity.sql,DIFFERENT,InsufficientPrivilege,"new row violates row-level security policy for table ""r1"""
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE r1 (a int PRIMARY KEY),rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r1 VALUES (10),rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO r1 VALUES (10)     ON CONFLICT (a) DO UPDATE SET a = 30 RETURNING *,rowsecurity.sql,DIFFERENT,InsufficientPrivilege,"new row violates row-level security policy for table ""r1"""
postgresql,postgresql,INSERT INTO r1 VALUES (10)     ON CONFLICT (a) DO UPDATE SET a = 30,rowsecurity.sql,DIFFERENT,InsufficientPrivilege,"new row violates row-level security policy for table ""r1"""
postgresql,postgresql,INSERT INTO r1 VALUES (10)     ON CONFLICT ON CONSTRAINT r1_pkey DO UPDATE SET a = 30,rowsecurity.sql,DIFFERENT,InsufficientPrivilege,"new row violates row-level security policy for table ""r1"""
postgresql,postgresql,DROP TABLE r1,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE dep1 (c1 int),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE dep2 (c1 int),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE dob_t1 (c1 int),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE dob_t2 (c1 int) PARTITION BY RANGE (c1),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE ref_tbl (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO ref_tbl VALUES (1),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE rls_tbl (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,INSERT INTO rls_tbl VALUES (10),rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE rls_tbl,rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE ref_tbl,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE rls_tbl (a int),rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO rls_tbl SELECT x/10 FROM generate_series(1, 100) x",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE rls_tbl,rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rls_tbl (a int, b int, c int)",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO rls_tbl SELECT 10, 20, 30",rowsecurity.sql,SAME,,
postgresql,postgresql,"EXPLAIN (VERBOSE, COSTS OFF) INSERT INTO rls_tbl   SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss",rowsecurity.sql,SAME,,
postgresql,postgresql,"INSERT INTO rls_tbl   SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss",rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE rls_tbl,rowsecurity.sql,SAME,,
postgresql,postgresql,create table rls_t (c text),rowsecurity.sql,SAME,,
postgresql,postgresql,insert into rls_t values ('invisible to bob'),rowsecurity.sql,SAME,,
postgresql,postgresql,DROP TABLE rls_t,rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE rls_tbl (c1 int),rowsecurity.sql,SAME,,
postgresql,postgresql,CREATE TABLE rls_tbl_force (c1 int),rowsecurity.sql,SAME,,
postgresql,postgresql,"CREATE TABLE addr_nsp.gentable (     a serial primary key CONSTRAINT a_chk CHECK (a > 0),     b text DEFAULT 'hello' )",object_address.sql,SAME,,
postgresql,postgresql,CREATE TABLE addr_nsp.parttable (     a int PRIMARY KEY ) PARTITION BY RANGE (a),object_address.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test1 (     a int,     b text COLLATE ""en_US"" NOT NULL )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""ja_JP.eucjp"" )",collate.windows.win1252.sql,DIFFERENT,UndefinedObject,"collation ""ja_JP.eucjp"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""ja_JP.eucjp"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int,     b text COLLATE ""foo"" )",collate.windows.win1252.sql,DIFFERENT,UndefinedObject,"collation ""foo"" for encoding ""UTF8"" does not exist LINE 3:     b text COLLATE ""foo"""
postgresql,postgresql,"CREATE TABLE collate_test_fail (     a int COLLATE ""en_US"",     b text )",collate.windows.win1252.sql,DIFFERENT,DatatypeMismatch,"collations are not supported by type integer LINE 2:     a int COLLATE ""en_US"","
postgresql,postgresql,CREATE TABLE collate_test_like (     LIKE collate_test1 ),collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test2 (     a int,     b text COLLATE ""sv_SE"" )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test3 (     a int,     b text COLLATE ""C"" )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'Ã¤bc'), (3, 'bbc'), (4, 'ABC')",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test2 SELECT * FROM collate_test1,collate.windows.win1252.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test3 SELECT * FROM collate_test1,collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test4 (     a int,     b testdomain_sv )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test4 SELECT * FROM collate_test1,collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test5 (     a int,     b testdomain_sv COLLATE ""en_US"" )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,INSERT INTO collate_test5 SELECT * FROM collate_test1,collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_test6 (     a int,     b text COLLATE ""en_US"" )",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"INSERT INTO collate_test6 VALUES (1, 'abc'), (2, 'ABC'), (3, '123'), (4, 'ab1'),                                  (5, 'a1!'), (6, 'a c'), (7, '!.;'), (8, '   '),                                  (9, 'Ã¤bÃ§'), (10, 'ÃBÃ')",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3",collate.windows.win1252.sql,DIFFERENT,IndeterminateCollation,"no collation was derived for column ""b"" with collatable type text HINT:  Use the COLLATE clause to set the collation explicitly."
postgresql,postgresql,"CREATE TABLE collate_dep_test1 (a int, b text COLLATE test0)",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE collate_dep_test4t (a int, b text)",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"DROP TABLE collate_dep_test1, collate_dep_test4t",collate.windows.win1252.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_t (id int NOT NULL PRIMARY KEY, type text NOT NULL, amt numeric NOT NULL)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_t VALUES   (1, 'x', 2),   (2, 'x', 3),   (3, 'y', 5),   (4, 'y', 7),   (5, 'z', 11)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_t VALUES (6, 'z', 13)",matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_t,matview.sql,DIFFERENT,DependentObjectsStillExist,cannot drop table mvtest_t because other objects depend on it DETAIL:  view mvtest_tv depends on table mvtest_t materialized view mvtest_mvschema.mvtest_tvm depends on view mvtest_tv materialized view mvtest_tvmm depends on materialized view mvtest_mvschema.mvtest_tvm view mvtest_tvv depends on view mvtest_tv materialized view mvtest_tvvm depends on view mvtest_tvv view mvtest_tvvmv depends on materialized view mvtest_tvvm materialized view mvtest_bb depends on view mvtest_tvvmv materialized view mvtest_tm depends on table mvtest_t materialized view mvtest_tmm depends on materialized view mvtest_tm HINT:  Use DROP ... CASCADE to drop the dependent objects too.
postgresql,postgresql,DROP TABLE mvtest_t CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_foo(a, b) AS VALUES(1, 10)",matview.sql,SAME,,
postgresql,postgresql,INSERT INTO mvtest_foo SELECT * FROM mvtest_foo,matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_foo CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_foo(a, b, c) AS VALUES(1, 2, 3)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_foo VALUES(2, 3, 4)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_foo VALUES(3, 4, 5)",matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_foo CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_boxes (id serial primary key, b box)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_boxes (b) VALUES   ('(32,32),(31,31)'),   ('(2.0000004,2.0000004),(1,1)'),   ('(1.9999996,1.9999996),(1,1)')",matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_boxes CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_v (i int, j int)",matview.sql,SAME,,
postgresql,postgresql,"INSERT INTO mvtest_v values (1, 2)",matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_v CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_v AS SELECT generate_series(1,10) AS a",matview.sql,SAME,,
postgresql,postgresql,DROP TABLE mvtest_v CASCADE,matview.sql,SAME,,
postgresql,postgresql,"CREATE TABLE mvtest_foo_data AS SELECT i,   i+1 AS tid,   fipshash(random()::text) AS mv,   fipshash(random()::text) AS newdata,   fipshash(random()::text) AS newdata2,   fipshash(random()::text) AS diff   FROM generate_series(1, 10) i",matview.sql,DIFFERENT,UndefinedFunction,"function fipshash(text) does not exist LINE 3:   fipshash(random()::text) AS mv,            HINT:  No function matches the given name and argument types. You might need to add explicit type casts."
postgresql,postgresql,CREATE TABLE POLYGON_TBL(f1 polygon),polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(2.0,0.0),(2.0,4.0),(0.0,0.0)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(3.0,1.0),(3.0,3.0),(1.0,0.0)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(1,2),(3,4),(5,6),(7,8)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(7,8),(5,6),(3,4),(1,2)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(1,2),(7,8),(5,6),(3,-4)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,0.0)')",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,1.0),(0.0,1.0)')",polygon.sql,SAME,,
postgresql,postgresql,INSERT INTO POLYGON_TBL(f1) VALUES ('0.0'),polygon.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type polygon: ""0.0"" LINE 1: INSERT INTO POLYGON_TBL(f1) VALUES ('0.0')"
postgresql,postgresql,INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0 0.0'),polygon.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type polygon: ""(0.0 0.0"" LINE 1: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0 0.0')"
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2)')",polygon.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type polygon: ""(0,1,2)"" LINE 1: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2)')"
postgresql,postgresql,"INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2,3')",polygon.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type polygon: ""(0,1,2,3"" LINE 1: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2,3')"
postgresql,postgresql,INSERT INTO POLYGON_TBL(f1) VALUES ('asdf'),polygon.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type polygon: ""asdf"" LINE 1: INSERT INTO POLYGON_TBL(f1) VALUES ('asdf')"
postgresql,postgresql,"CREATE TABLE quad_poly_tbl (id int, p polygon)",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_poly_tbl 	SELECT (x - 1) * 100 + y, polygon(circle(point(x * 10, y * 10), 1 + (x + y) % 10)) 	FROM generate_series(1, 100) x, 		 generate_series(1, 100) y",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_poly_tbl 	SELECT i, polygon '((200, 300),(210, 310),(230, 290))' 	FROM generate_series(10001, 11000) AS i",polygon.sql,SAME,,
postgresql,postgresql,"INSERT INTO quad_poly_tbl 	VALUES 		(11001, NULL), 		(11002, NULL), 		(11003, NULL)",polygon.sql,SAME,,
postgresql,postgresql,CREATE TABLE parallel_vacuum_table (a int) WITH (autovacuum_enabled = off),vacuum_parallel.sql,SAME,,
postgresql,postgresql,"INSERT INTO parallel_vacuum_table SELECT i from generate_series(1, 10000) i",vacuum_parallel.sql,SAME,,
postgresql,postgresql,"INSERT INTO parallel_vacuum_table SELECT i FROM generate_series(1, 10000) i",vacuum_parallel.sql,SAME,,
postgresql,postgresql,CREATE TABLE PATH_TBL (f1 path),path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)]')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES (' ( ( 1 , 2 ) , ( 3 , 4 ) ) ')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('[ (0,0),(3,0),(4,5),(1,6) ]')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('((1,2) ,(3,4 ))')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('1,2 ,3,4 ')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES (' [1,2,3, 4] ')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('((10,20))')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('[ 11,12,13,14 ]')",path.sql,SAME,,
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('( 11,12,13,14) ')",path.sql,SAME,,
postgresql,postgresql,INSERT INTO PATH_TBL VALUES ('[]'),path.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type path: ""[]"" LINE 1: INSERT INTO PATH_TBL VALUES ('[]')"
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('[(,2),(3,4)]')",path.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type path: ""[(,2),(3,4)]"" LINE 1: INSERT INTO PATH_TBL VALUES ('[(,2),(3,4)]')"
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)')",path.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type path: ""[(1,2),(3,4)"" LINE 1: INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)')"
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('(1,2,3,4')",path.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type path: ""(1,2,3,4"" LINE 1: INSERT INTO PATH_TBL VALUES ('(1,2,3,4')"
postgresql,postgresql,"INSERT INTO PATH_TBL VALUES ('(1,2),(3,4)]')",path.sql,DIFFERENT,InvalidTextRepresentation,"invalid input syntax for type path: ""(1,2),(3,4)]"" LINE 1: INSERT INTO PATH_TBL VALUES ('(1,2),(3,4)]')"
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('      '),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('      ')"
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('xxx'),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('xxx')"
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('3908203590239580293850293850329485'),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('39082035902395802938502938..."
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('-1204982019841029840928340329840934'),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('-1204982019841029840928340..."
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('- 123'),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('- 123')"
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES ('  345     5'),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('  345     5')"
postgresql,postgresql,INSERT INTO INT8_TBL(q1) VALUES (''),int8.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 1: INSERT INTO INT8_TBL(q1) VALUES ('')"
postgresql,postgresql,"CREATE TABLE testpub_tbl1 (id serial primary key, data text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pub_test.testpub_nopk (foo int, bar int)",publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_parted (a int) PARTITION BY LIST (a),publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl2 (id serial primary key, data text)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_foralltables DROP TABLE testpub_tbl2,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub_foralltables"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub_foralltables DROP TABLES IN SCHEMA pub_test,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub_foralltables"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub_fortable DROP TABLES IN SCHEMA pub_test,publication.sql,DIFFERENT,UndefinedObject,"tables from schema ""pub_test"" are not part of the publication"
postgresql,postgresql,ALTER PUBLICATION testpub_forschema DROP TABLE pub_test.testpub_nopk,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub_forschema"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub_forschema DROP TABLE pub_test.testpub_nopk,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub_forschema"" does not exist"
postgresql,postgresql,DROP TABLE testpub_tbl2,publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_tbl3 (a int),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_tbl3a (b text) INHERITS (testpub_tbl3),publication.sql,SAME,,
postgresql,postgresql,"DROP TABLE testpub_tbl3, testpub_tbl3a",publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_parted1 (LIKE testpub_parted),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_parted2 (LIKE testpub_parted),publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_forparted DROP TABLE testpub_parted,publication.sql,SAME,,
postgresql,postgresql,"DROP TABLE testpub_parted1, testpub_parted2",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_rf_tbl1 (a integer, b text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_rf_tbl2 (c text, d integer)",publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_rf_tbl3 (e integer),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_rf_tbl4 (g text),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_rf_tbl5 (a xml),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_rf_schema1.testpub_rf_tbl5 (h integer),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_rf_schema2.testpub_rf_tbl6 (i integer),publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub5 DROP TABLE testpub_rf_tbl2,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_bug (id serial, description text, status rf_bug_status)",publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_bug,publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub5 DROP TABLE testpub_rf_tbl1 WHERE (e < 27),publication.sql,DIFFERENT,SyntaxError,cannot use a WHERE clause when removing a table from a publication
postgresql,postgresql,DROP TABLE testpub_rf_tbl1,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_tbl2,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_tbl3,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_tbl4,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_tbl5,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_schema1.testpub_rf_tbl5,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_rf_schema2.testpub_rf_tbl6,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_nopk(a int, b int, c int, d int)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_pk(a int, b int, c int, d int, PRIMARY KEY(a,b))",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_part_pk (a int PRIMARY KEY, b int) PARTITION by RANGE (a)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_part_pk_1 (b int, a int PRIMARY KEY)",publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_pk,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_nopk,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_part_pk,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl5 (a int PRIMARY KEY, b text, c text, 	d int generated always as (a + length(b)) stored)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_fortable DROP TABLE testpub_tbl5,publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_fortable DROP TABLE testpub_tbl5,publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_tbl5d (a int PRIMARY KEY DEFERRABLE),publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_tbl5d,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl6 (a int, b text, c text)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_fortable DROP TABLE testpub_tbl6,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl7 (a int primary key, b text, c text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8 (a int, b text, c text) PARTITION BY HASH (a)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8_0 PARTITION OF testpub_tbl8 FOR VALUES WITH (modulus 2, remainder 0)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8_1 PARTITION OF testpub_tbl8 FOR VALUES WITH (modulus 2, remainder 1)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_col_list DROP TABLE testpub_tbl8,publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_col_list DROP TABLE testpub_tbl8,publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_col_list DROP TABLE testpub_tbl8,publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_col_list DROP TABLE testpub_tbl8,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_tbl8,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8 (a int, b text, c text) PARTITION BY HASH (a)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8_0 (a int, b text, c text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl8_1 (a int, b text, c text)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_tbl9 DROP TABLE public.testpub_tbl7,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub_tbl9"" does not exist"
postgresql,postgresql,"DROP TABLE testpub_tbl5, testpub_tbl6, testpub_tbl7, testpub_tbl8, testpub_tbl8_1",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE testpub_tbl_both_filters (a int, b int, c int, PRIMARY KEY (a,c))",publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_tbl_both_filters,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_nopk(a int, b int, c int, d int)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_pk(a int, b int, c int, d int, PRIMARY KEY(a,b))",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_part_pk (a int PRIMARY KEY, b int) PARTITION by RANGE (a)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE rf_tbl_abcd_part_pk_1 (b int, a int PRIMARY KEY)",publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_pk,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_nopk,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE rf_tbl_abcd_part_pk,publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE testpub_tbl4(a int),publication.sql,SAME,,
postgresql,postgresql,INSERT INTO testpub_tbl4 values(1),publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_tbl4,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_temptbl,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_unloggedtbl,publication.sql,SAME,,
postgresql,postgresql,"ALTER PUBLICATION testpub_default DROP TABLE testpub_tbl1, pub_test.testpub_nopk",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub_default DROP TABLE pub_test.testpub_nopk,publication.sql,DIFFERENT,UndefinedObject,"relation ""testpub_nopk"" is not part of the publication"
postgresql,postgresql,"CREATE TABLE pub_test.testpub_addpk (id int not null, data int)",publication.sql,SAME,,
postgresql,postgresql,"INSERT INTO pub_test.testpub_addpk VALUES(1, 11)",publication.sql,SAME,,
postgresql,postgresql,DROP TABLE pub_test.testpub_addpk,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_parted,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE testpub_tbl1,publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pub_test1.tbl (id int, data text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pub_test1.tbl1 (id serial primary key, data text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pub_test2.tbl1 (id serial primary key, data text)",publication.sql,SAME,,
postgresql,postgresql,"CREATE TABLE ""CURRENT_SCHEMA"".""CURRENT_SCHEMA""(id int)",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test2,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub1_forschema"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test2,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub1_forschema"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA non_existent_schema,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub1_forschema"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test1,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub1_forschema"" does not exist"
postgresql,postgresql,ALTER PUBLICATION testpub2_forschema DROP TABLES IN SCHEMA pub_test1,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub2_forschema"" does not exist"
postgresql,postgresql,"INSERT INTO pub_test1.tbl VALUES(1, 'test')",publication.sql,SAME,,
postgresql,postgresql,ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test1,publication.sql,DIFFERENT,UndefinedObject,"publication ""testpub1_forschema"" does not exist"
postgresql,postgresql,CREATE TABLE pub_testpart1.parent1 (a int) partition by list (a),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE pub_testpart2.child_parent1 partition of pub_testpart1.parent1 for values in (1),publication.sql,SAME,,
postgresql,postgresql,INSERT INTO pub_testpart2.child_parent1 values(1),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE pub_testpart2.parent2 (a int) partition by list (a),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE pub_testpart1.child_parent2 partition of pub_testpart2.parent2 for values in (1),publication.sql,SAME,,
postgresql,postgresql,INSERT INTO pub_testpart1.child_parent2 values(1),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch1.tbl1 (a int) PARTITION BY RANGE(a),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch2.tbl1_part1 PARTITION OF sch1.tbl1 FOR VALUES FROM (1) to (10),publication.sql,SAME,,
postgresql,postgresql,DROP TABLE sch2.tbl1_part1,publication.sql,SAME,,
postgresql,postgresql,DROP TABLE sch1.tbl1,publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch1.tbl1 (a int) PARTITION BY RANGE(a),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch1.tbl1_part1 PARTITION OF sch1.tbl1 FOR VALUES FROM (1) to (10),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch1.tbl1_part2 PARTITION OF sch1.tbl1 FOR VALUES FROM (10) to (20),publication.sql,SAME,,
postgresql,postgresql,CREATE TABLE sch1.tbl1_part3 (a int) PARTITION BY RANGE(a),publication.sql,SAME,,
postgresql,postgresql,DROP TABLE sch1.tbl1,publication.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (1, '12:13:')",txid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (2, '12:20:13,15,18')",txid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (3, '100001:100009:100005,100007,100008')",txid.sql,SAME,,
postgresql,postgresql,"insert into snapshot_test values (4, '100:150:101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131')",txid.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab (a int, b int, c text, d int) PARTITION BY LIST(c)",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_p1 PARTITION OF pagg_tab FOR VALUES IN ('0000', '0001', '0002', '0003', '0004')",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_p2 PARTITION OF pagg_tab FOR VALUES IN ('0005', '0006', '0007', '0008')",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_p3 PARTITION OF pagg_tab FOR VALUES IN ('0009', '0010', '0011')",partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab SELECT i % 20, i % 30, to_char(i % 12, 'FM0000'), i % 30 FROM generate_series(0, 2999) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab1(x int, y int) PARTITION BY RANGE(x)",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab1_p1 PARTITION OF pagg_tab1 FOR VALUES FROM (0) TO (10),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab1_p2 PARTITION OF pagg_tab1 FOR VALUES FROM (10) TO (20),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab1_p3 PARTITION OF pagg_tab1 FOR VALUES FROM (20) TO (30),partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab2(x int, y int) PARTITION BY RANGE(y)",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab2_p1 PARTITION OF pagg_tab2 FOR VALUES FROM (0) TO (10),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab2_p2 PARTITION OF pagg_tab2 FOR VALUES FROM (10) TO (20),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab2_p3 PARTITION OF pagg_tab2 FOR VALUES FROM (20) TO (30),partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab1 SELECT i % 30, i % 20 FROM generate_series(0, 299, 2) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab2 SELECT i % 20, i % 30 FROM generate_series(0, 299, 3) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_m (a int, b int, c int) PARTITION BY RANGE(a, ((a+b)/2))",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_m_p1 PARTITION OF pagg_tab_m FOR VALUES FROM (0, 0) TO (12, 12)",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_m_p2 PARTITION OF pagg_tab_m FOR VALUES FROM (12, 12) TO (22, 22)",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_m_p3 PARTITION OF pagg_tab_m FOR VALUES FROM (22, 22) TO (30, 30)",partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab_m SELECT i % 30, i % 40, i % 50 FROM generate_series(0, 2999) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_ml (a int, b int, c text) PARTITION BY RANGE(a)",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_ml_p1 PARTITION OF pagg_tab_ml FOR VALUES FROM (0) TO (12),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_ml_p2 PARTITION OF pagg_tab_ml FOR VALUES FROM (12) TO (20) PARTITION BY LIST (c),partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_ml_p2_s1 PARTITION OF pagg_tab_ml_p2 FOR VALUES IN ('0000', '0001', '0002')",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_ml_p2_s2 PARTITION OF pagg_tab_ml_p2 FOR VALUES IN ('0003'),partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_ml_p3(b int, c text, a int) PARTITION BY RANGE (b)",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_ml_p3_s1(c text, a int, b int)",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_ml_p3_s2 PARTITION OF pagg_tab_ml_p3 FOR VALUES FROM (7) TO (10),partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab_ml SELECT i % 30, i % 10, to_char(i % 4, 'FM0000') FROM generate_series(0, 29999) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,"CREATE TABLE pagg_tab_para(x int, y int) PARTITION BY RANGE(x)",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_para_p1 PARTITION OF pagg_tab_para FOR VALUES FROM (0) TO (12),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_para_p2 PARTITION OF pagg_tab_para FOR VALUES FROM (12) TO (22),partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE pagg_tab_para_p3 PARTITION OF pagg_tab_para FOR VALUES FROM (22) TO (30),partition_aggregate.sql,SAME,,
postgresql,postgresql,"INSERT INTO pagg_tab_para SELECT i % 30, i % 20 FROM generate_series(0, 29999) i",partition_aggregate.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_tbl_heap2(f1 int) USING heap2,create_am.sql,DIFFERENT,UndefinedObject,"access method ""heap2"" does not exist"
postgresql,postgresql,INSERT INTO tableam_tbl_heap2 VALUES(1),create_am.sql,DIFFERENT,UndefinedTable,"relation ""tableam_tbl_heap2"" does not exist LINE 1: INSERT INTO tableam_tbl_heap2 VALUES(1)"
postgresql,postgresql,CREATE TABLE tableam_tblas_heap2 USING heap2 AS SELECT * FROM tableam_tbl_heap2,create_am.sql,DIFFERENT,UndefinedTable,"relation ""tableam_tbl_heap2"" does not exist LINE 1: ... tableam_tblas_heap2 USING heap2 AS SELECT * FROM tableam_tb..."
postgresql,postgresql,"CREATE TABLE tableam_parted_heap2 (a text, b int) PARTITION BY list (a) USING heap2",create_am.sql,DIFFERENT,FeatureNotSupported,specifying a table access method is not supported on a partitioned table
postgresql,postgresql,"CREATE TABLE tableam_parted_heap2 (a text, b int) PARTITION BY list (a)",create_am.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_parted_a_heap2 PARTITION OF tableam_parted_heap2 FOR VALUES IN ('a'),create_am.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_parted_b_heap2 PARTITION OF tableam_parted_heap2 FOR VALUES IN ('b'),create_am.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_parted_c_heap2 PARTITION OF tableam_parted_heap2 FOR VALUES IN ('c') USING heap,create_am.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_parted_d_heap2 PARTITION OF tableam_parted_heap2 FOR VALUES IN ('d') USING heap2,create_am.sql,DIFFERENT,UndefinedObject,"access method ""heap2"" does not exist"
postgresql,postgresql,"CREATE TABLE heaptable USING heap AS   SELECT a, repeat(a::text, 100) FROM generate_series(1,9) AS a",create_am.sql,SAME,,
postgresql,postgresql,DROP TABLE heaptable,create_am.sql,SAME,,
postgresql,postgresql,"CREATE TABLE am_partitioned(x INT, y INT)   PARTITION BY hash (x)",create_am.sql,SAME,,
postgresql,postgresql,DROP TABLE am_partitioned,create_am.sql,SAME,,
postgresql,postgresql,CREATE TABLE tableam_tbl_heapx(f1 int),create_am.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,CREATE TABLE tableam_tblas_heapx AS SELECT * FROM tableam_tbl_heapx,create_am.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE tableam_parted_heapx (a text, b int) PARTITION BY list (a)",create_am.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE tableam_parted_1_heapx PARTITION OF tableam_parted_heapx FOR VALUES IN ('a', 'b')",create_am.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE tableam_parted_2_heapx PARTITION OF tableam_parted_heapx FOR VALUES IN ('c', 'd') USING heap",create_am.sql,DIFFERENT,InFailedSqlTransaction,"current transaction is aborted, commands ignored until end of transaction block"
postgresql,postgresql,"CREATE TABLE i_am_a_failure() USING """"",create_am.sql,DIFFERENT,SyntaxError,"zero-length delimited identifier at or near """""""" LINE 1: CREATE TABLE i_am_a_failure() USING """""
postgresql,postgresql,CREATE TABLE i_am_a_failure() USING i_do_not_exist_am,create_am.sql,DIFFERENT,UndefinedObject,"access method ""i_do_not_exist_am"" does not exist"
postgresql,postgresql,"CREATE TABLE i_am_a_failure() USING ""I do not exist AM""",create_am.sql,DIFFERENT,UndefinedObject,"access method ""I do not exist AM"" does not exist"
postgresql,postgresql,"CREATE TABLE i_am_a_failure() USING ""btree""",create_am.sql,DIFFERENT,ObjectNotInPrerequisiteState,"access method ""btree"" is not of type TABLE"
postgresql,postgresql,"CREATE TABLE clean_aborted_self(key int, data text)",mvcc.sql,SAME,,
postgresql,postgresql,"INSERT INTO clean_aborted_self (key, data) VALUES (-1, 'just to allocate metapage')",mvcc.sql,SAME,,
postgresql,postgresql,"SELECT pg_relation_size('clean_aborted_self_key') AS clean_aborted_self_key_before \gset  DO $$ BEGIN     FOR i IN 1..100 LOOP         BEGIN             IF EXISTS(SELECT * FROM clean_aborted_self WHERE key > 0 AND key < 100) THEN 	        RAISE data_corrupted USING MESSAGE = 'these rows should not exist';             END IF;             INSERT INTO clean_aborted_self SELECT g.i, 'rolling back in a sec' FROM generate_series(1, 100) g(i); 	    RAISE reading_sql_data_not_permitted USING MESSAGE = 'round and round again'; 	EXCEPTION WHEN reading_sql_data_not_permitted THEN END;     END LOOP; END;$$",mvcc.sql,DIFFERENT,SyntaxError,"syntax error at or near ""\"" LINE 1: ...an_aborted_self_key') AS clean_aborted_self_key_before \gset"
postgresql,postgresql,"INSERT INTO foo (f2,f3)   VALUES ('test', DEFAULT), ('More', 11), (upper('more'), 7+9)   RETURNING *, f1+f3 AS sum",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO foo SELECT f1+10, f2, f3+99 FROM foo   RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,     EXISTS(SELECT * FROM int4_tbl) AS initplan",returning.sql,DIFFERENT,UndefinedTable,"relation ""int8_tbl"" does not exist LINE 2:   RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subpla..."
postgresql,postgresql,"INSERT INTO foochild VALUES(123,'child',999,-123)",returning.sql,SAME,,
postgresql,postgresql,DROP TABLE foochild,returning.sql,SAME,,
postgresql,postgresql,"CREATE RULE voo_i AS ON INSERT TO voo DO INSTEAD   INSERT INTO foo VALUES(new.*, 57)",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO voo VALUES(11,'zit')",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO voo VALUES(12,'zoo') RETURNING *, f1*2",returning.sql,DIFFERENT,FeatureNotSupported,"cannot perform INSERT RETURNING on relation ""voo"" HINT:  You need an unconditional ON INSERT DO INSTEAD rule with a RETURNING clause."
postgresql,postgresql,"CREATE OR REPLACE RULE voo_i AS ON INSERT TO voo DO INSTEAD   INSERT INTO foo VALUES(new.*, 57) RETURNING *",returning.sql,DIFFERENT,InvalidObjectDefinition,RETURNING list has too many entries
postgresql,postgresql,"CREATE OR REPLACE RULE voo_i AS ON INSERT TO voo DO INSTEAD   INSERT INTO foo VALUES(new.*, 57) RETURNING f1, f2",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO voo VALUES(13,'zit2')",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO voo VALUES(14,'zoo2') RETURNING *",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO joinme VALUES('more', 12345)",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO joinme VALUES('zoo2', 54321)",returning.sql,SAME,,
postgresql,postgresql,"INSERT INTO joinme VALUES('other', 0)",returning.sql,SAME,,
postgresql,postgresql,INSERT INTO foo AS bar DEFAULT VALUES RETURNING *,returning.sql,SAME,,
postgresql,postgresql,INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*,returning.sql,DIFFERENT,UndefinedTable,"invalid reference to FROM-clause entry for table ""foo"" LINE 1: INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*                                                          HINT:  Perhaps you meant to reference the table alias ""bar""."
postgresql,postgresql,INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.*,returning.sql,SAME,,
postgresql,postgresql,INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.f3,returning.sql,SAME,,
postgresql,postgresql,"CREATE TABLE bmscantest (a int, b int, t text)",bitmapops.sql,SAME,,
postgresql,postgresql,"INSERT INTO bmscantest   SELECT (r%53), (r%59), 'foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo'   FROM generate_series(1,70000) r",bitmapops.sql,SAME,,
postgresql,postgresql,DROP TABLE bmscantest,bitmapops.sql,SAME,,
postgresql,postgresql,CREATE TABLE m(id OID),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO m VALUES (NULL::OID),fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE has_volatile AS SELECT * FROM generate_series(1,10) id",fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT 1)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (1), (2)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (3), (4)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (5), (6)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (7), (8)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (9), (10)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (11), (12)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (13), (14)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (15), (16)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (17), (18)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (19), (20)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (21), (22)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (23), (24)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (25), (26)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (27), (28)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE T,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)))",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (1), (2)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (3), (4)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (5), (6)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (7), (8)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (9), (10)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (11), (12)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (13), (14)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (15), (16)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE T,fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE T(pk INT NOT NULL PRIMARY KEY),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO T VALUES (1),fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE T,fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE T (pk INT NOT NULL PRIMARY KEY),fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T SELECT * FROM generate_series(1, 10) a",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T SELECT b, b - 10 FROM generate_series(11, 20) a(b)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T SELECT b, b - 10, (b + 10)::text FROM generate_series(21, 30) a(b)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE T,fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE T(pk INT NOT NULL PRIMARY KEY),fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (1), (2)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (3), (4)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (5), (6)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO T VALUES (7), (8)",fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t1 AS SELECT 1::int AS a , 2::int AS b FROM generate_series(1,20) q",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE T,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,3)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,3)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,3)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,3)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,NULL)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,NULL)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,NULL)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO t (a,b,c) VALUES (1,2,NULL)",fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t,fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE leader (a int PRIMARY KEY, b int)",fast_default.sql,SAME,,
postgresql,postgresql,"CREATE TABLE follower (a int REFERENCES leader ON DELETE CASCADE, b int)",fast_default.sql,SAME,,
postgresql,postgresql,"INSERT INTO leader VALUES (1, 1), (2, 2)",fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE vtype( a integer),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO vtype VALUES (1),fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE vtype2 (a int),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO vtype2 VALUES (1),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO vtype2 VALUES (2),fast_default.sql,SAME,,
postgresql,postgresql,CREATE TABLE t(),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO t DEFAULT VALUES,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE vtype,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE vtype2,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE follower,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE leader,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE t1,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE m,fast_default.sql,SAME,,
postgresql,postgresql,DROP TABLE has_volatile,fast_default.sql,SAME,,
postgresql,postgresql,create table has_fast_default(f1 int),fast_default.sql,SAME,,
postgresql,postgresql,insert into has_fast_default values(1),fast_default.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('a'),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('A'),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('1'),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES (2),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('3'),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES (''),varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('cd'),varchar.sql,DIFFERENT,StringDataRightTruncation,value too long for type character varying(1)
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('c     '),varchar.sql,SAME,,
postgresql,postgresql,DROP TABLE VARCHAR_TBL,varchar.sql,SAME,,
postgresql,postgresql,INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde'),varchar.sql,DIFFERENT,UndefinedTable,"relation ""varchar_tbl"" does not exist LINE 1: INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde')"
postgresql,postgresql,INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf'),point.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf')"
postgresql,postgresql,INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)'),point.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)')"
postgresql,postgresql,"INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 10.0) x')",point.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 10.0) x')"
postgresql,postgresql,"INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0')",point.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0')"
postgresql,postgresql,"INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 1e+500)')",point.sql,DIFFERENT,UndefinedTable,"relation ""point_tbl"" does not exist LINE 1: INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 1e+500)')"
postgresql,postgresql,"INSERT INTO point_gist_tbl SELECT '(0,0)' FROM generate_series(0,1000)",point.sql,SAME,,
postgresql,postgresql,"INSERT INTO point_gist_tbl VALUES ('(0.0000009,0.0000009)')",point.sql,SAME,,
